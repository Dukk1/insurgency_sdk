// Name: ins, Version: 1805

#include "../SDK.h"

/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Functions
//---------------------------------------------------------------------------

void FCharacterFireSupportIncomingPhrase::AfterRead()
{
	READ_PTR_FULL(AssociatedFireSupport, UFireSupportDefinition);
	READ_PTR_FULL(EnemyIncomingEvent, UAkAudioEvent);
	READ_PTR_FULL(FriendlyIncomingEvent, UAkAudioEvent);
}

void FCharacterFireSupportIncomingPhrase::BeforeDelete()
{
	DELE_PTR_FULL(AssociatedFireSupport);
	DELE_PTR_FULL(EnemyIncomingEvent);
	DELE_PTR_FULL(FriendlyIncomingEvent);
}

void FCharacterFireSupportObserverPhrase::AfterRead()
{
	READ_PTR_FULL(AssociatedFireSupport, UFireSupportDefinition);
	READ_PTR_FULL(RequestEvent, UAkAudioEvent);
	READ_PTR_FULL(ThankEvent, UAkAudioEvent);
}

void FCharacterFireSupportObserverPhrase::BeforeDelete()
{
	DELE_PTR_FULL(AssociatedFireSupport);
	DELE_PTR_FULL(RequestEvent);
	DELE_PTR_FULL(ThankEvent);
}

void FCharacterFireSupportOfficerPhrase::AfterRead()
{
	READ_PTR_FULL(AssociatedFireSupport, UFireSupportDefinition);
	READ_PTR_FULL(Event, UAkAudioEvent);
}

void FCharacterFireSupportOfficerPhrase::BeforeDelete()
{
	DELE_PTR_FULL(AssociatedFireSupport);
	DELE_PTR_FULL(Event);
}

void FCharacterPhrase::AfterRead()
{
	READ_PTR_FULL(Event, UAkAudioEvent);
}

void FCharacterPhrase::BeforeDelete()
{
	DELE_PTR_FULL(Event);
}

void FCharacterMutedPhrase::AfterRead()
{
}

void FCharacterMutedPhrase::BeforeDelete()
{
}

void FFirearmAIConfig::AfterRead()
{
}

void FFirearmAIConfig::BeforeDelete()
{
}

void FBotGrenadeCheckResult::AfterRead()
{
}

void FBotGrenadeCheckResult::BeforeDelete()
{
}

void FBloodSplatter::AfterRead()
{
}

void FBloodSplatter::BeforeDelete()
{
}

void FBoneDamageMod::AfterRead()
{
}

void FBoneDamageMod::BeforeDelete()
{
}

void FAIINSNoiseEvent::AfterRead()
{
	READ_PTR_FULL(Instigator, AActor);
}

void FAIINSNoiseEvent::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
}

void FAircraftPayload::AfterRead()
{
	READ_PTR_FULL(PayloadProjectileClass, UClass);
	READ_PTR_FULL(PayloadActorClass, UClass);
	READ_PTR_FULL(AudioEventTrigger, UAkAudioEvent);
}

void FAircraftPayload::BeforeDelete()
{
	DELE_PTR_FULL(PayloadProjectileClass);
	DELE_PTR_FULL(PayloadActorClass);
	DELE_PTR_FULL(AudioEventTrigger);
}

void FScoreboardConfig::AfterRead()
{
}

void FScoreboardConfig::BeforeDelete()
{
}

void FCharacterResponseRequest::AfterRead()
{
	READ_PTR_FULL(AssociatedFireSupport, UFireSupportDefinition);
}

void FCharacterResponseRequest::BeforeDelete()
{
	DELE_PTR_FULL(AssociatedFireSupport);
}

void FServerCustomWelcome::AfterRead()
{
}

void FServerCustomWelcome::BeforeDelete()
{
}

void FClientNetStats::AfterRead()
{
}

void FClientNetStats::BeforeDelete()
{
}

void FAvailablePlaylists::AfterRead()
{
}

void FAvailablePlaylists::BeforeDelete()
{
}

void FBlueprintFindSessionResult::AfterRead()
{
}

void FBlueprintFindSessionResult::BeforeDelete()
{
}

void FFireSupportState::AfterRead()
{
	READ_PTR_FULL(FireSupportDefinition, UFireSupportDefinition);
}

void FFireSupportState::BeforeDelete()
{
	DELE_PTR_FULL(FireSupportDefinition);
}

void FReplicatedTeamSettings::AfterRead()
{
}

void FReplicatedTeamSettings::BeforeDelete()
{
}

void FFireSupportGameModeOverrideDefinition::AfterRead()
{
}

void FFireSupportGameModeOverrideDefinition::BeforeDelete()
{
}

void FPlayerKillNotice::AfterRead()
{
	READ_PTR_FULL(Killer, AINSPlayerState);
	READ_PTR_FULL(Assister, AINSPlayerState);
	READ_PTR_FULL(Victim, AINSPlayerState);
	READ_PTR_FULL(CauserClass, UClass);
	READ_PTR_FULL(WeaponClass, UClass);
	READ_PTR_FULL(DamageTypeClass, UClass);
}

void FPlayerKillNotice::BeforeDelete()
{
	DELE_PTR_FULL(Killer);
	DELE_PTR_FULL(Assister);
	DELE_PTR_FULL(Victim);
	DELE_PTR_FULL(CauserClass);
	DELE_PTR_FULL(WeaponClass);
	DELE_PTR_FULL(DamageTypeClass);
}

void FNetHitReaction::AfterRead()
{
	READ_PTR_FULL(Reaction, USurfaceReaction);
}

void FNetHitReaction::BeforeDelete()
{
	DELE_PTR_FULL(Reaction);
}

void FMenuExternalLight::AfterRead()
{
	READ_PTR_FULL(LightActor, ALight);
}

void FMenuExternalLight::BeforeDelete()
{
	DELE_PTR_FULL(LightActor);
}

void FSoundscapeStateEnvLevel::AfterRead()
{
}

void FSoundscapeStateEnvLevel::BeforeDelete()
{
}

void FSoundscapeStateAuxLevel::AfterRead()
{
}

void FSoundscapeStateAuxLevel::BeforeDelete()
{
}

void FSoundscapeStateRepl::AfterRead()
{
}

void FSoundscapeStateRepl::BeforeDelete()
{
}

void FMeleeConfig::AfterRead()
{
	READ_PTR_FULL(DamageTypeClass, UClass);
	READ_PTR_FULL(SurfaceReaction, USurfaceReaction);
}

void FMeleeConfig::BeforeDelete()
{
	DELE_PTR_FULL(DamageTypeClass);
	DELE_PTR_FULL(SurfaceReaction);
}

void FGameStatsSummary::AfterRead()
{
}

void FGameStatsSummary::BeforeDelete()
{
}

void FPlayerRoundOverData::AfterRead()
{
}

void FPlayerRoundOverData::BeforeDelete()
{
}

void FPlayerAwardedTagline::AfterRead()
{
	READ_PTR_FULL(Tagline, UClass);
}

void FPlayerAwardedTagline::BeforeDelete()
{
	DELE_PTR_FULL(Tagline);
}

void FOtherPlayerAwardedTagline::AfterRead()
{
	FPlayerAwardedTagline::AfterRead();

	READ_PTR_FULL(PlayerState, AINSPlayerState);
}

void FOtherPlayerAwardedTagline::BeforeDelete()
{
	FPlayerAwardedTagline::BeforeDelete();

	DELE_PTR_FULL(PlayerState);
}

void FReloadTimes::AfterRead()
{
}

void FReloadTimes::BeforeDelete()
{
}

void FReloadTimesGroup::AfterRead()
{
}

void FReloadTimesGroup::BeforeDelete()
{
}

void FAttachedModel::AfterRead()
{
}

void FAttachedModel::BeforeDelete()
{
}

void FWeaponAttachedModel::AfterRead()
{
	FAttachedModel::AfterRead();

	READ_PTR_FULL(SpawnedSkeletalComponent, UINSSkeletalMeshComponent);
}

void FWeaponAttachedModel::BeforeDelete()
{
	FAttachedModel::BeforeDelete();

	DELE_PTR_FULL(SpawnedSkeletalComponent);
}

void FWeaponFallbackModel::AfterRead()
{
	FWeaponAttachedModel::AfterRead();

}

void FWeaponFallbackModel::BeforeDelete()
{
	FWeaponAttachedModel::BeforeDelete();

}

void FWeaponTagCondition::AfterRead()
{
}

void FWeaponTagCondition::BeforeDelete()
{
}

void FVehicleAnimationStruct::AfterRead()
{
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(Running, UAnimSequence);
	READ_PTR_FULL(GearShift, UAnimSequence);
	READ_PTR_FULL(WheelTurn, UAnimSequence);
	READ_PTR_FULL(Fire, UAnimSequence);
}

void FVehicleAnimationStruct::BeforeDelete()
{
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(Running);
	DELE_PTR_FULL(GearShift);
	DELE_PTR_FULL(WheelTurn);
	DELE_PTR_FULL(Fire);
}

void FCharacterCollisionPrevention::AfterRead()
{
}

void FCharacterCollisionPrevention::BeforeDelete()
{
}

void FKeyBindingSection::AfterRead()
{
}

void FKeyBindingSection::BeforeDelete()
{
}

void FKeyBindingOption::AfterRead()
{
}

void FKeyBindingOption::BeforeDelete()
{
}

void FActionMapList::AfterRead()
{
}

void FActionMapList::BeforeDelete()
{
}

void FMotdUpdateMessage::AfterRead()
{
}

void FMotdUpdateMessage::BeforeDelete()
{
}

void FMotdData::AfterRead()
{
}

void FMotdData::BeforeDelete()
{
}

void FWeaponSightSequence::AfterRead()
{
	READ_PTR_FULL(SightsDelta, UAnimSequence);
}

void FWeaponSightSequence::BeforeDelete()
{
	DELE_PTR_FULL(SightsDelta);
}

void FWeaponUpgradeModel::AfterRead()
{
	FWeaponAttachedModel::AfterRead();

}

void FWeaponUpgradeModel::BeforeDelete()
{
	FWeaponAttachedModel::BeforeDelete();

}

void FAnimSequenceRandom::AfterRead()
{
}

void FAnimSequenceRandom::BeforeDelete()
{
}

void FFireSelectGroup::AfterRead()
{
	READ_PTR_FULL(FireSelectAutoBurst, UAnimSequence);
	READ_PTR_FULL(FireSelectAutoSemi, UAnimSequence);
	READ_PTR_FULL(FireSelectBurstAuto, UAnimSequence);
	READ_PTR_FULL(FireSelectBurstSemi, UAnimSequence);
	READ_PTR_FULL(FireSelectSemiAuto, UAnimSequence);
	READ_PTR_FULL(FireSelectSemiBurst, UAnimSequence);
}

void FFireSelectGroup::BeforeDelete()
{
	DELE_PTR_FULL(FireSelectAutoBurst);
	DELE_PTR_FULL(FireSelectAutoSemi);
	DELE_PTR_FULL(FireSelectBurstAuto);
	DELE_PTR_FULL(FireSelectBurstSemi);
	DELE_PTR_FULL(FireSelectSemiAuto);
	DELE_PTR_FULL(FireSelectSemiBurst);
}

void FFirearmAnimsGroup::AfterRead()
{
	READ_PTR_FULL(FirePin, UAnimSequence);
	READ_PTR_FULL(FireTrigger, UAnimSequence);
	READ_PTR_FULL(FireBolt, UAnimSequence);
	READ_PTR_FULL(FireBoltLast, UAnimSequence);
	READ_PTR_FULL(Dryfire, UAnimSequence);
	READ_PTR_FULL(DryfireIron, UAnimSequence);
	READ_PTR_FULL(UnderbarrelTransition, UAnimSequence);
	READ_PTR_FULL(DeployedTransition, UAnimMontage);
	READ_PTR_FULL(DeployedIronTransition, UAnimMontage);
	READ_PTR_FULL(SideMountOnOff, UAnimMontage);
	READ_PTR_FULL(StockOpenClose, UAnimMontage);
	READ_PTR_FULL(BipodOpenClose, UAnimMontage);
	READ_PTR_FULL(BayonetPullback, UAnimSequence);
}

void FFirearmAnimsGroup::BeforeDelete()
{
	DELE_PTR_FULL(FirePin);
	DELE_PTR_FULL(FireTrigger);
	DELE_PTR_FULL(FireBolt);
	DELE_PTR_FULL(FireBoltLast);
	DELE_PTR_FULL(Dryfire);
	DELE_PTR_FULL(DryfireIron);
	DELE_PTR_FULL(UnderbarrelTransition);
	DELE_PTR_FULL(DeployedTransition);
	DELE_PTR_FULL(DeployedIronTransition);
	DELE_PTR_FULL(SideMountOnOff);
	DELE_PTR_FULL(StockOpenClose);
	DELE_PTR_FULL(BipodOpenClose);
	DELE_PTR_FULL(BayonetPullback);
}

void FReloadGroup::AfterRead()
{
	READ_PTR_FULL(Reload, UAnimMontage);
	READ_PTR_FULL(ReloadEmpty, UAnimMontage);
	READ_PTR_FULL(ReloadStages, UAnimMontage);
	READ_PTR_FULL(ReloadBoltRelease, UAnimSequence);
}

void FReloadGroup::BeforeDelete()
{
	DELE_PTR_FULL(Reload);
	DELE_PTR_FULL(ReloadEmpty);
	DELE_PTR_FULL(ReloadStages);
	DELE_PTR_FULL(ReloadBoltRelease);
}

void FRandomSequencePair::AfterRead()
{
	READ_PTR_FULL(Sequence, UAnimSequence);
}

void FRandomSequencePair::BeforeDelete()
{
	DELE_PTR_FULL(Sequence);
}

void FBasicLoadoutItem::AfterRead()
{
}

void FBasicLoadoutItem::BeforeDelete()
{
}

void FLoadoutWeapon::AfterRead()
{
	FBasicLoadoutItem::AfterRead();

}

void FLoadoutWeapon::BeforeDelete()
{
	FBasicLoadoutItem::BeforeDelete();

}

void FExplosiveDamageParams::AfterRead()
{
	READ_PTR_FULL(Instigator, AController);
	READ_PTR_FULL(Inflictor, AActor);
	READ_PTR_FULL(Damager, APawn);
	READ_PTR_FULL(DamageType, UClass);
	READ_PTR_FULL(OriginatingWeapon, UClass);
	READ_PTR_FULL(PenetrationSettings, UExplosionPenetrationSettings);
	READ_PTR_FULL(CameraShakeClass, UClass);
}

void FExplosiveDamageParams::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
	DELE_PTR_FULL(Inflictor);
	DELE_PTR_FULL(Damager);
	DELE_PTR_FULL(DamageType);
	DELE_PTR_FULL(OriginatingWeapon);
	DELE_PTR_FULL(PenetrationSettings);
	DELE_PTR_FULL(CameraShakeClass);
}

void FScopeConfiguration::AfterRead()
{
}

void FScopeConfiguration::BeforeDelete()
{
}

void FMuzzleUpgradeWeaponProperties::AfterRead()
{
	READ_PTR_FULL(AkEventFire, UAkAudioEvent);
	READ_PTR_FULL(AkEventFire1P, UAkAudioEvent);
	READ_PTR_FULL(AkEventFire3P, UAkAudioEvent);
	READ_PTR_FULL(AkEventTriggerPull, UAkAudioEvent);
	READ_PTR_FULL(AkEventTriggerPull1P, UAkAudioEvent);
	READ_PTR_FULL(AkEventTriggerPull3P, UAkAudioEvent);
	READ_PTR_FULL(AkEventFireStart, UAkAudioEvent);
	READ_PTR_FULL(AkEventFireStart1P, UAkAudioEvent);
	READ_PTR_FULL(AkEventFireStart3P, UAkAudioEvent);
	READ_PTR_FULL(AkEventFireEnd, UAkAudioEvent);
	READ_PTR_FULL(AkEventFireEnd1P, UAkAudioEvent);
	READ_PTR_FULL(AkEventFireEnd3P, UAkAudioEvent);
}

void FMuzzleUpgradeWeaponProperties::BeforeDelete()
{
	DELE_PTR_FULL(AkEventFire);
	DELE_PTR_FULL(AkEventFire1P);
	DELE_PTR_FULL(AkEventFire3P);
	DELE_PTR_FULL(AkEventTriggerPull);
	DELE_PTR_FULL(AkEventTriggerPull1P);
	DELE_PTR_FULL(AkEventTriggerPull3P);
	DELE_PTR_FULL(AkEventFireStart);
	DELE_PTR_FULL(AkEventFireStart1P);
	DELE_PTR_FULL(AkEventFireStart3P);
	DELE_PTR_FULL(AkEventFireEnd);
	DELE_PTR_FULL(AkEventFireEnd1P);
	DELE_PTR_FULL(AkEventFireEnd3P);
}

void FAnimationAdditivePair::AfterRead()
{
	READ_PTR_FULL(Additive, UAnimSequence);
	READ_PTR_FULL(Base, UAnimSequence);
}

void FAnimationAdditivePair::BeforeDelete()
{
	DELE_PTR_FULL(Additive);
	DELE_PTR_FULL(Base);
}

void FFirstPersonAnims::AfterRead()
{
	READ_PTR_FULL(KitSelect, UAnimSequence);
	READ_PTR_FULL(SightsDelta, UAnimSequence);
	READ_PTR_FULL(PointSightsDelta, UAnimSequence);
	READ_PTR_FULL(UnderbarrelDelta, UAnimSequence);
	READ_PTR_FULL(DeployedDelta, UAnimSequence);
	READ_PTR_FULL(UnderbarrelIdle, UAnimSequence);
	READ_PTR_FULL(StockIdle, UAnimSequence);
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(IdleEmpty, UAnimSequence);
	READ_PTR_FULL(IdleExplicitEmpty, UAnimSequence);
	READ_PTR_FULL(IdleDeployed, UAnimSequence);
	READ_PTR_FULL(Breathing, UAnimSequence);
	READ_PTR_FULL(Movement, UBlendSpace);
	READ_PTR_FULL(MovementIron, UBlendSpace);
	READ_PTR_FULL(Blocked, UAnimSequence);
	READ_PTR_FULL(BlockedIron, UAnimSequence);
	READ_PTR_FULL(Draw, UAnimSequence);
	READ_PTR_FULL(Holster, UAnimSequence);
	READ_PTR_FULL(Down, UAnimSequence);
	READ_PTR_FULL(CommonSprintPose, UAnimSequence);
	READ_PTR_FULL(SprintTransitionIn, UAnimSequence);
	READ_PTR_FULL(SprintTransitionOut, UAnimSequence);
	READ_PTR_FULL(Sprint, UBlendSpace);
	READ_PTR_FULL(SprintHardcoreTransitionIn, UAnimSequence);
	READ_PTR_FULL(SprintHardcoreTransitionOut, UAnimSequence);
	READ_PTR_FULL(SprintHardcore, UBlendSpace);
	READ_PTR_FULL(CommonCrawlPose, UAnimSequence);
	READ_PTR_FULL(Crawl, UBlendSpace);
	READ_PTR_FULL(DeployedCrawl, UBlendSpace);
	READ_PTR_FULL(Swimming, UBlendSpace);
	READ_PTR_FULL(Charge, UAnimSequence);
	READ_PTR_FULL(KickDoor, UAnimSequence);
	READ_PTR_FULL(Door, UAnimSequence);
	READ_PTR_FULL(SlideStart, UAnimSequence);
	READ_PTR_FULL(SlideLoop, UAnimSequence);
	READ_PTR_FULL(SlideEnd, UAnimSequence);
	READ_PTR_FULL(VaultStart, UAnimSequence);
	READ_PTR_FULL(VaultLoop, UAnimSequence);
	READ_PTR_FULL(VaultEnd, UAnimSequence);
	READ_PTR_FULL(JumpStart, UAnimSequence);
	READ_PTR_FULL(JumpIdle, UAnimSequence);
	READ_PTR_FULL(JumpEnd, UAnimSequence);
	READ_PTR_FULL(Leap, UAnimSequence);
	READ_PTR_FULL(ProneTransition, UAnimSequence);
	READ_PTR_FULL(Unequipped, UAnimSequence);
	READ_PTR_FULL(Toss, UAnimSequence);
}

void FFirstPersonAnims::BeforeDelete()
{
	DELE_PTR_FULL(KitSelect);
	DELE_PTR_FULL(SightsDelta);
	DELE_PTR_FULL(PointSightsDelta);
	DELE_PTR_FULL(UnderbarrelDelta);
	DELE_PTR_FULL(DeployedDelta);
	DELE_PTR_FULL(UnderbarrelIdle);
	DELE_PTR_FULL(StockIdle);
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(IdleEmpty);
	DELE_PTR_FULL(IdleExplicitEmpty);
	DELE_PTR_FULL(IdleDeployed);
	DELE_PTR_FULL(Breathing);
	DELE_PTR_FULL(Movement);
	DELE_PTR_FULL(MovementIron);
	DELE_PTR_FULL(Blocked);
	DELE_PTR_FULL(BlockedIron);
	DELE_PTR_FULL(Draw);
	DELE_PTR_FULL(Holster);
	DELE_PTR_FULL(Down);
	DELE_PTR_FULL(CommonSprintPose);
	DELE_PTR_FULL(SprintTransitionIn);
	DELE_PTR_FULL(SprintTransitionOut);
	DELE_PTR_FULL(Sprint);
	DELE_PTR_FULL(SprintHardcoreTransitionIn);
	DELE_PTR_FULL(SprintHardcoreTransitionOut);
	DELE_PTR_FULL(SprintHardcore);
	DELE_PTR_FULL(CommonCrawlPose);
	DELE_PTR_FULL(Crawl);
	DELE_PTR_FULL(DeployedCrawl);
	DELE_PTR_FULL(Swimming);
	DELE_PTR_FULL(Charge);
	DELE_PTR_FULL(KickDoor);
	DELE_PTR_FULL(Door);
	DELE_PTR_FULL(SlideStart);
	DELE_PTR_FULL(SlideLoop);
	DELE_PTR_FULL(SlideEnd);
	DELE_PTR_FULL(VaultStart);
	DELE_PTR_FULL(VaultLoop);
	DELE_PTR_FULL(VaultEnd);
	DELE_PTR_FULL(JumpStart);
	DELE_PTR_FULL(JumpIdle);
	DELE_PTR_FULL(JumpEnd);
	DELE_PTR_FULL(Leap);
	DELE_PTR_FULL(ProneTransition);
	DELE_PTR_FULL(Unequipped);
	DELE_PTR_FULL(Toss);
}

void FMountWeaponConfig::AfterRead()
{
}

void FMountWeaponConfig::BeforeDelete()
{
}

void FMountCompatibleWeaponInfo::AfterRead()
{
}

void FMountCompatibleWeaponInfo::BeforeDelete()
{
}

void FWeaponAnimInstanceProxy::AfterRead()
{
	FAnimInstanceProxy::AfterRead();

}

void FWeaponAnimInstanceProxy::BeforeDelete()
{
	FAnimInstanceProxy::BeforeDelete();

}

void FPlayerVoteIntention::AfterRead()
{
}

void FPlayerVoteIntention::BeforeDelete()
{
}

void FCastVote::AfterRead()
{
}

void FCastVote::BeforeDelete()
{
}

void FTalkerData::AfterRead()
{
	READ_PTR_FULL(RadioComponent, UVoiceComponent);
	READ_PTR_FULL(ProximityComponent, UVoiceComponent);
}

void FTalkerData::BeforeDelete()
{
	DELE_PTR_FULL(RadioComponent);
	DELE_PTR_FULL(ProximityComponent);
}

void FScreenResolution::AfterRead()
{
}

void FScreenResolution::BeforeDelete()
{
}

void FHoveringVehicleTargetMemory::AfterRead()
{
	READ_PTR_FULL(TargetActor, AActor);
}

void FHoveringVehicleTargetMemory::BeforeDelete()
{
	DELE_PTR_FULL(TargetActor);
}

void FHoveringVehicleWeaponBehavior::AfterRead()
{
	READ_PTR_FULL(FirearmClass, UClass);
}

void FHoveringVehicleWeaponBehavior::BeforeDelete()
{
	DELE_PTR_FULL(FirearmClass);
}

void FHelicopterMoveRequest::AfterRead()
{
}

void FHelicopterMoveRequest::BeforeDelete()
{
}

void FSeatAnimationStruct::AfterRead()
{
	READ_PTR_FULL(NormalIdle, UAnimSequence);
	READ_PTR_FULL(NormalAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(VehicleMovementLayer, UAnimSequence);
	READ_PTR_FULL(Duck, UAnimSequence);
	READ_PTR_FULL(DuckIdle, UAnimSequence);
	READ_PTR_FULL(Death, UAnimSequence);
	READ_PTR_FULL(IronIdle, UAnimSequence);
	READ_PTR_FULL(RelaxedIdle, UAnimSequence);
	READ_PTR_FULL(RelaxedAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(MeleeIdle, UAnimSequence);
	READ_PTR_FULL(MeleeAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(WindowIn, UAnimSequence);
	READ_PTR_FULL(WindowOut, UAnimSequence);
	READ_PTR_FULL(WindowIdle, UAnimSequence);
	READ_PTR_FULL(WindowAO, UAnimSequence);
	READ_PTR_FULL(DriverIdle, UAnimSequence);
	READ_PTR_FULL(DriverAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(DriverDuck, UAnimSequence);
	READ_PTR_FULL(DriverDuckIdle, UAnimSequence);
	READ_PTR_FULL(DriverDeath, UAnimSequence);
	READ_PTR_FULL(GearShift, UAnimSequence);
	READ_PTR_FULL(GasPedal, UAnimSequence);
	READ_PTR_FULL(WheelTurn, UAnimSequence);
	READ_PTR_FULL(WheelTurnDucking, UAnimSequence);
	READ_PTR_FULL(WeightShiftHorizontal, UAimOffsetBlendSpace1D);
	READ_PTR_FULL(WeightShiftVertical, UAimOffsetBlendSpace1D);
	READ_PTR_FULL(TurretAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(Fire, UAnimSequence);
}

void FSeatAnimationStruct::BeforeDelete()
{
	DELE_PTR_FULL(NormalIdle);
	DELE_PTR_FULL(NormalAO);
	DELE_PTR_FULL(VehicleMovementLayer);
	DELE_PTR_FULL(Duck);
	DELE_PTR_FULL(DuckIdle);
	DELE_PTR_FULL(Death);
	DELE_PTR_FULL(IronIdle);
	DELE_PTR_FULL(RelaxedIdle);
	DELE_PTR_FULL(RelaxedAO);
	DELE_PTR_FULL(MeleeIdle);
	DELE_PTR_FULL(MeleeAO);
	DELE_PTR_FULL(WindowIn);
	DELE_PTR_FULL(WindowOut);
	DELE_PTR_FULL(WindowIdle);
	DELE_PTR_FULL(WindowAO);
	DELE_PTR_FULL(DriverIdle);
	DELE_PTR_FULL(DriverAO);
	DELE_PTR_FULL(DriverDuck);
	DELE_PTR_FULL(DriverDuckIdle);
	DELE_PTR_FULL(DriverDeath);
	DELE_PTR_FULL(GearShift);
	DELE_PTR_FULL(GasPedal);
	DELE_PTR_FULL(WheelTurn);
	DELE_PTR_FULL(WheelTurnDucking);
	DELE_PTR_FULL(WeightShiftHorizontal);
	DELE_PTR_FULL(WeightShiftVertical);
	DELE_PTR_FULL(TurretAO);
	DELE_PTR_FULL(Fire);
}

void FVehicleIdleSpecialSequence::AfterRead()
{
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(AO, UAimOffsetBlendSpace);
}

void FVehicleIdleSpecialSequence::BeforeDelete()
{
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(AO);
}

void FUsableActor::AfterRead()
{
}

void FUsableActor::BeforeDelete()
{
}

void FTheaterSquadLayout::AfterRead()
{
	READ_PTR_FULL(SquadLayout, USquadLayout);
	READ_PTR_FULL(BotSquadLayout, USquadLayout);
}

void FTheaterSquadLayout::BeforeDelete()
{
	DELE_PTR_FULL(SquadLayout);
	DELE_PTR_FULL(BotSquadLayout);
}

void FTheaterFaction::AfterRead()
{
}

void FTheaterFaction::BeforeDelete()
{
}

void FDecalInfo::AfterRead()
{
}

void FDecalInfo::BeforeDelete()
{
}

void FSurfaceReactionInfo::AfterRead()
{
}

void FSurfaceReactionInfo::BeforeDelete()
{
}

void FWWiseData::AfterRead()
{
}

void FWWiseData::BeforeDelete()
{
}

void FSurfaceReactionData::AfterRead()
{
	READ_PTR_FULL(WorldContextObject, UObject);
	READ_PTR_FULL(HitComponent, UPrimitiveComponent);
	READ_PTR_FULL(HitMaterial, UPhysicalMaterial);
}

void FSurfaceReactionData::BeforeDelete()
{
	DELE_PTR_FULL(WorldContextObject);
	DELE_PTR_FULL(HitComponent);
	DELE_PTR_FULL(HitMaterial);
}

void FSurfaceReactionOutput::AfterRead()
{
}

void FSurfaceReactionOutput::BeforeDelete()
{
}

void FManagedParticleComponent::AfterRead()
{
	READ_PTR_FULL(Component, UParticleSystemComponent);
}

void FManagedParticleComponent::BeforeDelete()
{
	DELE_PTR_FULL(Component);
}

void FPreviewElement::AfterRead()
{
	READ_PTR_FULL(Element, UStructureElement);
}

void FPreviewElement::BeforeDelete()
{
	DELE_PTR_FULL(Element);
}

void FStatisticsScenario::AfterRead()
{
}

void FStatisticsScenario::BeforeDelete()
{
}

void FStatisticsPlayerClass::AfterRead()
{
}

void FStatisticsPlayerClass::BeforeDelete()
{
}

void FStatisticsWeapon::AfterRead()
{
}

void FStatisticsWeapon::BeforeDelete()
{
}

void FStatisticsKillEvent::AfterRead()
{
}

void FStatisticsKillEvent::BeforeDelete()
{
}

void FStatisticsKillEventPlayer::AfterRead()
{
}

void FStatisticsKillEventPlayer::BeforeDelete()
{
}

void FStatisticsObjectiveEvent::AfterRead()
{
}

void FStatisticsObjectiveEvent::BeforeDelete()
{
}

void FStatisticsObjectiveEventPlayer::AfterRead()
{
}

void FStatisticsObjectiveEventPlayer::BeforeDelete()
{
}

void FStatisticsPlayerStatsBase::AfterRead()
{
}

void FStatisticsPlayerStatsBase::BeforeDelete()
{
}

void FStatisticsPlayerStatClass::AfterRead()
{
	FStatisticsPlayerStatsBase::AfterRead();

}

void FStatisticsPlayerStatClass::BeforeDelete()
{
	FStatisticsPlayerStatsBase::BeforeDelete();

}

void FStatisticsWeaponStatsBase::AfterRead()
{
}

void FStatisticsWeaponStatsBase::BeforeDelete()
{
}

void FStatisticsPlayerStatWeapon::AfterRead()
{
	FStatisticsWeaponStatsBase::AfterRead();

}

void FStatisticsPlayerStatWeapon::BeforeDelete()
{
	FStatisticsWeaponStatsBase::BeforeDelete();

}

void FStatisticsPlayerExperienceResult::AfterRead()
{
}

void FStatisticsPlayerExperienceResult::BeforeDelete()
{
}

void FStatisticsRoundSummaryResult::AfterRead()
{
}

void FStatisticsRoundSummaryResult::BeforeDelete()
{
}

void FStationPhrase::AfterRead()
{
	READ_PTR_FULL(Event, UAkAudioEvent);
}

void FStationPhrase::BeforeDelete()
{
	DELE_PTR_FULL(Event);
}

void FStationFireSupportStatusPhraseContainer::AfterRead()
{
	READ_PTR_FULL(AssociatedFireSupport, UFireSupportDefinition);
}

void FStationFireSupportStatusPhraseContainer::BeforeDelete()
{
	DELE_PTR_FULL(AssociatedFireSupport);
}

void FStationFireSupportStatusPhrase::AfterRead()
{
	READ_PTR_FULL(Event, UAkAudioEvent);
}

void FStationFireSupportStatusPhrase::BeforeDelete()
{
	DELE_PTR_FULL(Event);
}

void FEmitterRegister::AfterRead()
{
}

void FEmitterRegister::BeforeDelete()
{
}

void FSmoothTransition::AfterRead()
{
	READ_PTR_FULL(Curve, UCurveFloat);
}

void FSmoothTransition::BeforeDelete()
{
	DELE_PTR_FULL(Curve);
}

void FVaultSmoothTransition::AfterRead()
{
	FSmoothTransition::AfterRead();

	READ_PTR_FULL(VCurve, UCurveVector);
}

void FVaultSmoothTransition::BeforeDelete()
{
	FSmoothTransition::BeforeDelete();

	DELE_PTR_FULL(VCurve);
}

void FCustomGameConfig::AfterRead()
{
	READ_PTR_FULL(DefaultPlayerClassOverride, UPlayerClass);
}

void FCustomGameConfig::BeforeDelete()
{
	DELE_PTR_FULL(DefaultPlayerClassOverride);
}

void FObjectiveInfoMissions::AfterRead()
{
}

void FObjectiveInfoMissions::BeforeDelete()
{
}

void FObjectiveInfo::AfterRead()
{
}

void FObjectiveInfo::BeforeDelete()
{
}

void FObjectiveGroup::AfterRead()
{
}

void FObjectiveGroup::BeforeDelete()
{
}

void FAdditionalScenarioActors::AfterRead()
{
	READ_PTR_FULL(Actor, UClass);
}

void FAdditionalScenarioActors::BeforeDelete()
{
	DELE_PTR_FULL(Actor);
}

void FScenarioSublevel::AfterRead()
{
}

void FScenarioSublevel::BeforeDelete()
{
}

void FPlayerClassAttributes::AfterRead()
{
}

void FPlayerClassAttributes::BeforeDelete()
{
}

void FRulesetGameModeRulesMinimal::AfterRead()
{
	READ_PTR_FULL(OverrideTheaterDefinition, UTheaterDefinition);
	READ_PTR_FULL(AllFactionsSquadLayoutOverride, USquadLayout);
}

void FRulesetGameModeRulesMinimal::BeforeDelete()
{
	DELE_PTR_FULL(OverrideTheaterDefinition);
	DELE_PTR_FULL(AllFactionsSquadLayoutOverride);
}

void FRulesetGameModeRules::AfterRead()
{
	FRulesetGameModeRulesMinimal::AfterRead();

	READ_PTR_FULL(AllFactionsBotSquadLayoutOverride, USquadLayout);
}

void FRulesetGameModeRules::BeforeDelete()
{
	FRulesetGameModeRulesMinimal::BeforeDelete();

	DELE_PTR_FULL(AllFactionsBotSquadLayoutOverride);
}

void FWeaponUpgradeFilterPair::AfterRead()
{
	READ_PTR_FULL(Test, UWeaponUpgradeFilterTest);
}

void FWeaponUpgradeFilterPair::BeforeDelete()
{
	DELE_PTR_FULL(Test);
}

void FWeaponCrateWeaponPool::AfterRead()
{
}

void FWeaponCrateWeaponPool::BeforeDelete()
{
}

void FManagedRagdoll::AfterRead()
{
	READ_PTR_FULL(Ragdoll, ARagdoll);
}

void FManagedRagdoll::BeforeDelete()
{
	DELE_PTR_FULL(Ragdoll);
}

void FLimbGroupInstanceData::AfterRead()
{
}

void FLimbGroupInstanceData::BeforeDelete()
{
}

void FLimbInstanceData::AfterRead()
{
}

void FLimbInstanceData::BeforeDelete()
{
}

void FBodyVelocityData::AfterRead()
{
}

void FBodyVelocityData::BeforeDelete()
{
}

void FRagdollPrePhysicsTick::AfterRead()
{
	FTickFunction::AfterRead();

}

void FRagdollPrePhysicsTick::BeforeDelete()
{
	FTickFunction::BeforeDelete();

}

void FRadialCommand::AfterRead()
{
}

void FRadialCommand::BeforeDelete()
{
}

void FRadialCommandClassOptions::AfterRead()
{
}

void FRadialCommandClassOptions::BeforeDelete()
{
}

void FPropLODInfo::AfterRead()
{
}

void FPropLODInfo::BeforeDelete()
{
}

void FGib::AfterRead()
{
	READ_PTR_FULL(GibMesh, UStaticMesh);
}

void FGib::BeforeDelete()
{
	DELE_PTR_FULL(GibMesh);
}

void FProfaneWord::AfterRead()
{
}

void FProfaneWord::BeforeDelete()
{
}

void FPostMergeTick::AfterRead()
{
	FTickFunction::AfterRead();

}

void FPostMergeTick::BeforeDelete()
{
	FTickFunction::BeforeDelete();

}

void FCharacterAttachedModel::AfterRead()
{
	FAttachedModel::AfterRead();

}

void FCharacterAttachedModel::BeforeDelete()
{
	FAttachedModel::BeforeDelete();

}

void FInventoryTransaction::AfterRead()
{
}

void FInventoryTransaction::BeforeDelete()
{
}

void FMainMenuMusic::AfterRead()
{
}

void FMainMenuMusic::BeforeDelete()
{
}

void FHolidayMainMenuTakeover::AfterRead()
{
}

void FHolidayMainMenuTakeover::BeforeDelete()
{
}

void FLoadingScreenSetup::AfterRead()
{
}

void FLoadingScreenSetup::BeforeDelete()
{
}

void FLoadingScreenHint::AfterRead()
{
	FTableRowBase::AfterRead();

}

void FLoadingScreenHint::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

}

void FLessonInputAction::AfterRead()
{
}

void FLessonInputAction::BeforeDelete()
{
}

void FLessonInputBinding::AfterRead()
{
}

void FLessonInputBinding::BeforeDelete()
{
}

void FSampledLightSource::AfterRead()
{
}

void FSampledLightSource::BeforeDelete()
{
}

void FVirtualLightSource::AfterRead()
{
}

void FVirtualLightSource::BeforeDelete()
{
}

void FSavedPosition::AfterRead()
{
}

void FSavedPosition::BeforeDelete()
{
}

void FAmmoVestExtraAmmo::AfterRead()
{
}

void FAmmoVestExtraAmmo::BeforeDelete()
{
}

void FDefaultScenarios::AfterRead()
{
	READ_PTR_FULL(GameMode, UClass);
}

void FDefaultScenarios::BeforeDelete()
{
	DELE_PTR_FULL(GameMode);
}

void FSurvivalCustomWave::AfterRead()
{
}

void FSurvivalCustomWave::BeforeDelete()
{
}

void FPlayerAllowedEquipment::AfterRead()
{
}

void FPlayerAllowedEquipment::BeforeDelete()
{
}

void FPlayerClassLimit::AfterRead()
{
	READ_PTR_FULL(PlayerClass, UPlayerClass);
}

void FPlayerClassLimit::BeforeDelete()
{
	DELE_PTR_FULL(PlayerClass);
}

void FSurvivalSpecialWave::AfterRead()
{
}

void FSurvivalSpecialWave::BeforeDelete()
{
}

void FSurvivalFinalWave::AfterRead()
{
	READ_PTR_FULL(ExtractionFireSupport, UClass);
}

void FSurvivalFinalWave::BeforeDelete()
{
	DELE_PTR_FULL(ExtractionFireSupport);
}

void FTimedUsableActor::AfterRead()
{
}

void FTimedUsableActor::BeforeDelete()
{
}

void FRichPresence::AfterRead()
{
}

void FRichPresence::BeforeDelete()
{
}

void FPlayerRoundExpSummary::AfterRead()
{
}

void FPlayerRoundExpSummary::BeforeDelete()
{
}

void FPlayerRoundSummary::AfterRead()
{
}

void FPlayerRoundSummary::BeforeDelete()
{
}

void FPlayerStatGroupMinimal::AfterRead()
{
}

void FPlayerStatGroupMinimal::BeforeDelete()
{
}

void FPlayerStatGroup::AfterRead()
{
	FPlayerStatGroupMinimal::AfterRead();

}

void FPlayerStatGroup::BeforeDelete()
{
	FPlayerStatGroupMinimal::BeforeDelete();

}

void FFirearmCategoryStatGroup::AfterRead()
{
}

void FFirearmCategoryStatGroup::BeforeDelete()
{
}

void FUserSettingsPreferences::AfterRead()
{
}

void FUserSettingsPreferences::BeforeDelete()
{
}

void FProfileCharacterCosmeticState::AfterRead()
{
}

void FProfileCharacterCosmeticState::BeforeDelete()
{
}

void FPlayerCosmeticsProfile::AfterRead()
{
}

void FPlayerCosmeticsProfile::BeforeDelete()
{
}

void FReplaySaveItems::AfterRead()
{
}

void FReplaySaveItems::BeforeDelete()
{
}

void FPlayerLastGameSummary::AfterRead()
{
}

void FPlayerLastGameSummary::BeforeDelete()
{
}

void FUncategorizedSaveItems::AfterRead()
{
}

void FUncategorizedSaveItems::BeforeDelete()
{
}

void FPlayerExpBonus::AfterRead()
{
}

void FPlayerExpBonus::BeforeDelete()
{
}

void FSaveGameForPS4::AfterRead()
{
}

void FSaveGameForPS4::BeforeDelete()
{
}

void FVoiceState::AfterRead()
{
}

void FVoiceState::BeforeDelete()
{
}

void FCharacterAnimPose::AfterRead()
{
	READ_PTR_FULL(Relaxed, UAnimSequence);
	READ_PTR_FULL(Normal, UAnimSequence);
	READ_PTR_FULL(Iron, UAnimSequence);
}

void FCharacterAnimPose::BeforeDelete()
{
	DELE_PTR_FULL(Relaxed);
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
}

void FCharacterAnimDrawHolster::AfterRead()
{
	READ_PTR_FULL(Ready, UAnimSequence);
	READ_PTR_FULL(Draw, UAnimSequence);
	READ_PTR_FULL(Holster, UAnimSequence);
	READ_PTR_FULL(Drop, UAnimSequence);
}

void FCharacterAnimDrawHolster::BeforeDelete()
{
	DELE_PTR_FULL(Ready);
	DELE_PTR_FULL(Draw);
	DELE_PTR_FULL(Holster);
	DELE_PTR_FULL(Drop);
}

void FCharacterAnimMelee::AfterRead()
{
	READ_PTR_FULL(NormalStand, UAnimSequence);
	READ_PTR_FULL(NormalCrouch, UAnimSequence);
	READ_PTR_FULL(BayonetStand, UAnimSequence);
	READ_PTR_FULL(BayonetCrouch, UAnimSequence);
	READ_PTR_FULL(BayonetSprint, UAnimSequence);
	READ_PTR_FULL(StockStand, UAnimSequence);
	READ_PTR_FULL(StockCrouch, UAnimSequence);
}

void FCharacterAnimMelee::BeforeDelete()
{
	DELE_PTR_FULL(NormalStand);
	DELE_PTR_FULL(NormalCrouch);
	DELE_PTR_FULL(BayonetStand);
	DELE_PTR_FULL(BayonetCrouch);
	DELE_PTR_FULL(BayonetSprint);
	DELE_PTR_FULL(StockStand);
	DELE_PTR_FULL(StockCrouch);
}

void FCharacterAnimComboPose::AfterRead()
{
	READ_PTR_FULL(North, UAnimSequence);
	READ_PTR_FULL(Alt, UAnimSequence);
	READ_PTR_FULL(Iron, UAnimSequence);
}

void FCharacterAnimComboPose::BeforeDelete()
{
	DELE_PTR_FULL(North);
	DELE_PTR_FULL(Alt);
	DELE_PTR_FULL(Iron);
}

void FCharacterAnimMovePose::AfterRead()
{
	READ_PTR_FULL(StandSprint, UAnimSequence);
	READ_PTR_FULL(Jump, UAnimSequence);
}

void FCharacterAnimMovePose::BeforeDelete()
{
	DELE_PTR_FULL(StandSprint);
	DELE_PTR_FULL(Jump);
}

void FCharacterAnimVehiclePose::AfterRead()
{
	READ_PTR_FULL(TruckBed, UAnimSequence);
	READ_PTR_FULL(Equipped, UAnimSequence);
}

void FCharacterAnimVehiclePose::BeforeDelete()
{
	DELE_PTR_FULL(TruckBed);
	DELE_PTR_FULL(Equipped);
}

void FCharacterAnimEquipable::AfterRead()
{
	READ_PTR_FULL(WeaponComponentLocation, UAnimSequence);
	READ_PTR_FULL(WeaponComponentLocationGL, UAnimSequence);
	READ_PTR_FULL(HandPoseBase, UAnimSequence);
	READ_PTR_FULL(HandPoseProne, UAnimSequence);
	READ_PTR_FULL(HandPoseMelee, UAnimSequence);
	READ_PTR_FULL(HandPoseSlide, UAnimSequence);
	READ_PTR_FULL(HandPoseJump, UAnimSequence);
	READ_PTR_FULL(HandPoseFall, UAnimSequence);
	READ_PTR_FULL(HandPoseUI, UAnimSequence);
	READ_PTR_FULL(HandPoseVehicleDucking, UAnimSequence);
	READ_PTR_FULL(HandPoseCharge, UAnimSequence);
	READ_PTR_FULL(UI, UAnimSequence);
}

void FCharacterAnimEquipable::BeforeDelete()
{
	DELE_PTR_FULL(WeaponComponentLocation);
	DELE_PTR_FULL(WeaponComponentLocationGL);
	DELE_PTR_FULL(HandPoseBase);
	DELE_PTR_FULL(HandPoseProne);
	DELE_PTR_FULL(HandPoseMelee);
	DELE_PTR_FULL(HandPoseSlide);
	DELE_PTR_FULL(HandPoseJump);
	DELE_PTR_FULL(HandPoseFall);
	DELE_PTR_FULL(HandPoseUI);
	DELE_PTR_FULL(HandPoseVehicleDucking);
	DELE_PTR_FULL(HandPoseCharge);
	DELE_PTR_FULL(UI);
}

void FCharacterAnimMisc::AfterRead()
{
	READ_PTR_FULL(Detonate, UAnimSequence);
	READ_PTR_FULL(BinocularEnhance, UAnimSequence);
}

void FCharacterAnimMisc::BeforeDelete()
{
	DELE_PTR_FULL(Detonate);
	DELE_PTR_FULL(BinocularEnhance);
}

void FItemIcons::AfterRead()
{
	READ_PTR_FULL(Icon, UTexture2D);
	READ_PTR_FULL(ContextualIcon, UTexture2D);
}

void FItemIcons::BeforeDelete()
{
	DELE_PTR_FULL(Icon);
	DELE_PTR_FULL(ContextualIcon);
}

void FCharacterAnimIdle::AfterRead()
{
	READ_PTR_FULL(Relaxed, UAnimSequence);
	READ_PTR_FULL(Normal, UAnimSequence);
	READ_PTR_FULL(Iron, UAnimSequence);
	READ_PTR_FULL(IronMovingAdditive, UAnimSequence);
	READ_PTR_FULL(PointShoot, UAnimSequence);
	READ_PTR_FULL(PointShootMovingAdditive, UAnimSequence);
	READ_PTR_FULL(Down, UAnimSequence);
}

void FCharacterAnimIdle::BeforeDelete()
{
	DELE_PTR_FULL(Relaxed);
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
	DELE_PTR_FULL(IronMovingAdditive);
	DELE_PTR_FULL(PointShoot);
	DELE_PTR_FULL(PointShootMovingAdditive);
	DELE_PTR_FULL(Down);
}

void FCharacterAnimMove::AfterRead()
{
	READ_PTR_FULL(BlendSpace, UBlendSpace);
	READ_PTR_FULL(North, UBlendSpace1D);
	READ_PTR_FULL(NorthStart, UAnimSequence);
	READ_PTR_FULL(South, UBlendSpace1D);
	READ_PTR_FULL(SouthStart, UAnimSequence);
	READ_PTR_FULL(East, UBlendSpace1D);
	READ_PTR_FULL(EastStart, UAnimSequence);
	READ_PTR_FULL(West, UBlendSpace1D);
	READ_PTR_FULL(WestStart, UAnimSequence);
	READ_PTR_FULL(StopShuffle, UAnimSequence);
}

void FCharacterAnimMove::BeforeDelete()
{
	DELE_PTR_FULL(BlendSpace);
	DELE_PTR_FULL(North);
	DELE_PTR_FULL(NorthStart);
	DELE_PTR_FULL(South);
	DELE_PTR_FULL(SouthStart);
	DELE_PTR_FULL(East);
	DELE_PTR_FULL(EastStart);
	DELE_PTR_FULL(West);
	DELE_PTR_FULL(WestStart);
	DELE_PTR_FULL(StopShuffle);
}

void FCharacterAnimSprint::AfterRead()
{
	READ_PTR_FULL(Sprint, UBlendSpace1D);
	READ_PTR_FULL(SprintLoop, UBlendSpace);
	READ_PTR_FULL(SprintBayonet, UAnimSequence);
	READ_PTR_FULL(SprintHardcore, UBlendSpace1D);
	READ_PTR_FULL(SprintHardcoreLoop, UBlendSpace);
	READ_PTR_FULL(ChargeStart, UAnimSequence);
	READ_PTR_FULL(ChargeLoop, UAnimSequence);
	READ_PTR_FULL(ChargeEnd, UAnimSequence);
}

void FCharacterAnimSprint::BeforeDelete()
{
	DELE_PTR_FULL(Sprint);
	DELE_PTR_FULL(SprintLoop);
	DELE_PTR_FULL(SprintBayonet);
	DELE_PTR_FULL(SprintHardcore);
	DELE_PTR_FULL(SprintHardcoreLoop);
	DELE_PTR_FULL(ChargeStart);
	DELE_PTR_FULL(ChargeLoop);
	DELE_PTR_FULL(ChargeEnd);
}

void FCharacterAnimLean::AfterRead()
{
	READ_PTR_FULL(LeanLeftRelaxed, UAnimSequence);
	READ_PTR_FULL(LeanLeftNormal, UAnimSequence);
	READ_PTR_FULL(LeanLeftIron, UAnimSequence);
	READ_PTR_FULL(LeanLeftAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(LeanRightRelaxed, UAnimSequence);
	READ_PTR_FULL(LeanRightNormal, UAnimSequence);
	READ_PTR_FULL(LeanRightIron, UAnimSequence);
	READ_PTR_FULL(LeanRightAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(LeanMoving, UAimOffsetBlendSpace1D);
}

void FCharacterAnimLean::BeforeDelete()
{
	DELE_PTR_FULL(LeanLeftRelaxed);
	DELE_PTR_FULL(LeanLeftNormal);
	DELE_PTR_FULL(LeanLeftIron);
	DELE_PTR_FULL(LeanLeftAO);
	DELE_PTR_FULL(LeanRightRelaxed);
	DELE_PTR_FULL(LeanRightNormal);
	DELE_PTR_FULL(LeanRightIron);
	DELE_PTR_FULL(LeanRightAO);
	DELE_PTR_FULL(LeanMoving);
}

void FCharacterAnimAO::AfterRead()
{
	READ_PTR_FULL(Relaxed, UAimOffsetBlendSpace);
	READ_PTR_FULL(Normal, UAimOffsetBlendSpace);
	READ_PTR_FULL(Iron, UAimOffsetBlendSpace);
	READ_PTR_FULL(Moving, UAimOffsetBlendSpace);
}

void FCharacterAnimAO::BeforeDelete()
{
	DELE_PTR_FULL(Relaxed);
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
	DELE_PTR_FULL(Moving);
}

void FCharacterAnimPivot::AfterRead()
{
	READ_PTR_FULL(StepLeft, UAnimSequence);
	READ_PTR_FULL(StepRight, UAnimSequence);
	READ_PTR_FULL(RotatingLeft, UAnimSequence);
	READ_PTR_FULL(RotatingRight, UAnimSequence);
	READ_PTR_FULL(North180, UAnimSequence);
	READ_PTR_FULL(South180, UAnimSequence);
	READ_PTR_FULL(East180, UAnimSequence);
	READ_PTR_FULL(West180, UAnimSequence);
}

void FCharacterAnimPivot::BeforeDelete()
{
	DELE_PTR_FULL(StepLeft);
	DELE_PTR_FULL(StepRight);
	DELE_PTR_FULL(RotatingLeft);
	DELE_PTR_FULL(RotatingRight);
	DELE_PTR_FULL(North180);
	DELE_PTR_FULL(South180);
	DELE_PTR_FULL(East180);
	DELE_PTR_FULL(West180);
}

void FCharacterAnimVault::AfterRead()
{
	READ_PTR_FULL(VaultShortStart, UAnimSequence);
	READ_PTR_FULL(VaultShortLoop, UAnimSequence);
	READ_PTR_FULL(VaultShortRecovery, UAnimSequence);
	READ_PTR_FULL(VaultHigh, UAnimSequence);
}

void FCharacterAnimVault::BeforeDelete()
{
	DELE_PTR_FULL(VaultShortStart);
	DELE_PTR_FULL(VaultShortLoop);
	DELE_PTR_FULL(VaultShortRecovery);
	DELE_PTR_FULL(VaultHigh);
}

void FCharacterAnimDeployed::AfterRead()
{
	READ_PTR_FULL(DeployedNormal, UAnimSequence);
	READ_PTR_FULL(DeployedIron, UAnimSequence);
	READ_PTR_FULL(DeployedPose, UAnimSequence);
	READ_PTR_FULL(DeployedStrafe, UBlendSpace1D);
	READ_PTR_FULL(DeployedAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(DeployedTransitionIn, UAnimSequence);
	READ_PTR_FULL(DeployedTransitionOut, UAnimSequence);
	READ_PTR_FULL(BipodLegsTransitionIn, UAnimSequence);
	READ_PTR_FULL(BipodLegsTransitionOut, UAnimSequence);
}

void FCharacterAnimDeployed::BeforeDelete()
{
	DELE_PTR_FULL(DeployedNormal);
	DELE_PTR_FULL(DeployedIron);
	DELE_PTR_FULL(DeployedPose);
	DELE_PTR_FULL(DeployedStrafe);
	DELE_PTR_FULL(DeployedAO);
	DELE_PTR_FULL(DeployedTransitionIn);
	DELE_PTR_FULL(DeployedTransitionOut);
	DELE_PTR_FULL(BipodLegsTransitionIn);
	DELE_PTR_FULL(BipodLegsTransitionOut);
}

void FCharacterAnimStand::AfterRead()
{
}

void FCharacterAnimStand::BeforeDelete()
{
}

void FCharacterAnimCrouch::AfterRead()
{
}

void FCharacterAnimCrouch::BeforeDelete()
{
}

void FCharacterAnimProne::AfterRead()
{
}

void FCharacterAnimProne::BeforeDelete()
{
}

void FCharacterAnimTransition::AfterRead()
{
	READ_PTR_FULL(StandToCrouch, UAnimSequence);
	READ_PTR_FULL(StandToProne, UAnimSequence);
	READ_PTR_FULL(DiveProne, UAnimSequence);
	READ_PTR_FULL(CrouchToStand, UAnimSequence);
	READ_PTR_FULL(CrouchToProne, UAnimSequence);
	READ_PTR_FULL(ProneToStand, UAnimSequence);
	READ_PTR_FULL(ProneToCrouch, UAnimSequence);
}

void FCharacterAnimTransition::BeforeDelete()
{
	DELE_PTR_FULL(StandToCrouch);
	DELE_PTR_FULL(StandToProne);
	DELE_PTR_FULL(DiveProne);
	DELE_PTR_FULL(CrouchToStand);
	DELE_PTR_FULL(CrouchToProne);
	DELE_PTR_FULL(ProneToStand);
	DELE_PTR_FULL(ProneToCrouch);
}

void FCharacterAnimJump::AfterRead()
{
	READ_PTR_FULL(JumpStart, UAnimSequence);
	READ_PTR_FULL(JumpApex, UAnimSequence);
	READ_PTR_FULL(JumpNearLand, UAnimSequence);
	READ_PTR_FULL(JumpLandRecovery, UAnimSequence);
	READ_PTR_FULL(Falling, UAnimSequence);
	READ_PTR_FULL(NearLand, UAnimSequence);
	READ_PTR_FULL(LandRecovery, UAnimSequence);
}

void FCharacterAnimJump::BeforeDelete()
{
	DELE_PTR_FULL(JumpStart);
	DELE_PTR_FULL(JumpApex);
	DELE_PTR_FULL(JumpNearLand);
	DELE_PTR_FULL(JumpLandRecovery);
	DELE_PTR_FULL(Falling);
	DELE_PTR_FULL(NearLand);
	DELE_PTR_FULL(LandRecovery);
}

void FCharacterAnimLadder::AfterRead()
{
	READ_PTR_FULL(MountBottom, UAnimSequence);
	READ_PTR_FULL(DismountBottom, UAnimSequence);
	READ_PTR_FULL(MountTop, UAnimSequence);
	READ_PTR_FULL(DismountTop, UAnimSequence);
	READ_PTR_FULL(ClimbUp, UAnimSequence);
	READ_PTR_FULL(ClimbDown, UAnimSequence);
	READ_PTR_FULL(SlideTransitionIn, UAnimSequence);
	READ_PTR_FULL(SlideLoop, UAnimSequence);
	READ_PTR_FULL(SlideTransitionOut, UAnimSequence);
}

void FCharacterAnimLadder::BeforeDelete()
{
	DELE_PTR_FULL(MountBottom);
	DELE_PTR_FULL(DismountBottom);
	DELE_PTR_FULL(MountTop);
	DELE_PTR_FULL(DismountTop);
	DELE_PTR_FULL(ClimbUp);
	DELE_PTR_FULL(ClimbDown);
	DELE_PTR_FULL(SlideTransitionIn);
	DELE_PTR_FULL(SlideLoop);
	DELE_PTR_FULL(SlideTransitionOut);
}

void FCharacterAnim::AfterRead()
{
	READ_PTR_FULL(SlideStart, UAnimSequence);
	READ_PTR_FULL(SlideLoop, UAnimSequence);
	READ_PTR_FULL(SlideEnd, UAnimSequence);
	READ_PTR_FULL(SlideEndMoving, UAnimSequence);
	READ_PTR_FULL(SlideAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(EquipGear, UAnimSequence);
	READ_PTR_FULL(UnequipGear, UAnimSequence);
}

void FCharacterAnim::BeforeDelete()
{
	DELE_PTR_FULL(SlideStart);
	DELE_PTR_FULL(SlideLoop);
	DELE_PTR_FULL(SlideEnd);
	DELE_PTR_FULL(SlideEndMoving);
	DELE_PTR_FULL(SlideAO);
	DELE_PTR_FULL(EquipGear);
	DELE_PTR_FULL(UnequipGear);
}

void FThirdPersonPose::AfterRead()
{
	READ_PTR_FULL(Relaxed, UAnimSequence);
	READ_PTR_FULL(Normal, UAnimSequence);
	READ_PTR_FULL(Iron, UAnimSequence);
}

void FThirdPersonPose::BeforeDelete()
{
	DELE_PTR_FULL(Relaxed);
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
}

void FThirdPersonSecondaryMelee::AfterRead()
{
	READ_PTR_FULL(NormalStand, UAnimSequence);
	READ_PTR_FULL(NormalCrouch, UAnimSequence);
	READ_PTR_FULL(BayonetStand, UAnimSequence);
	READ_PTR_FULL(BayonetCrouch, UAnimSequence);
	READ_PTR_FULL(BayonetSprint, UAnimSequence);
	READ_PTR_FULL(StockStand, UAnimSequence);
	READ_PTR_FULL(StockCrouch, UAnimSequence);
}

void FThirdPersonSecondaryMelee::BeforeDelete()
{
	DELE_PTR_FULL(NormalStand);
	DELE_PTR_FULL(NormalCrouch);
	DELE_PTR_FULL(BayonetStand);
	DELE_PTR_FULL(BayonetCrouch);
	DELE_PTR_FULL(BayonetSprint);
	DELE_PTR_FULL(StockStand);
	DELE_PTR_FULL(StockCrouch);
}

void FThirdPersonEquipState::AfterRead()
{
	READ_PTR_FULL(Ready, UAnimSequence);
	READ_PTR_FULL(Draw, UAnimSequence);
	READ_PTR_FULL(Holster, UAnimSequence);
	READ_PTR_FULL(Drop, UAnimSequence);
}

void FThirdPersonEquipState::BeforeDelete()
{
	DELE_PTR_FULL(Ready);
	DELE_PTR_FULL(Draw);
	DELE_PTR_FULL(Holster);
	DELE_PTR_FULL(Drop);
}

void FThirdPersonEquipableCommon::AfterRead()
{
	READ_PTR_FULL(WeaponComponentLocations, UAnimSequence);
	READ_PTR_FULL(HandPoseBase, UAnimSequence);
	READ_PTR_FULL(HandPoseProne, UAnimSequence);
	READ_PTR_FULL(HandPoseSecondaryMelee, UAnimSequence);
	READ_PTR_FULL(HandPoseSliding, UAnimSequence);
	READ_PTR_FULL(HandPoseJump, UAnimSequence);
	READ_PTR_FULL(HandPoseFall, UAnimSequence);
	READ_PTR_FULL(HandPoseUI, UAnimSequence);
	READ_PTR_FULL(HandPoseVehicleDucking, UAnimSequence);
	READ_PTR_FULL(HandPoseCharging, UAnimSequence);
	READ_PTR_FULL(UI, UAnimSequence);
}

void FThirdPersonEquipableCommon::BeforeDelete()
{
	DELE_PTR_FULL(WeaponComponentLocations);
	DELE_PTR_FULL(HandPoseBase);
	DELE_PTR_FULL(HandPoseProne);
	DELE_PTR_FULL(HandPoseSecondaryMelee);
	DELE_PTR_FULL(HandPoseSliding);
	DELE_PTR_FULL(HandPoseJump);
	DELE_PTR_FULL(HandPoseFall);
	DELE_PTR_FULL(HandPoseUI);
	DELE_PTR_FULL(HandPoseVehicleDucking);
	DELE_PTR_FULL(HandPoseCharging);
	DELE_PTR_FULL(UI);
}

void FThirdPersonFirearmFire::AfterRead()
{
}

void FThirdPersonFirearmFire::BeforeDelete()
{
}

void FThirdPersonReload::AfterRead()
{
	READ_PTR_FULL(Normal, UAnimMontage);
	READ_PTR_FULL(NormalEmpty, UAnimMontage);
	READ_PTR_FULL(Speed, UAnimMontage);
	READ_PTR_FULL(SpeedEmpty, UAnimMontage);
	READ_PTR_FULL(Deployed, UAnimMontage);
	READ_PTR_FULL(DeployedEmpty, UAnimMontage);
	READ_PTR_FULL(NormalCommonPose, UAnimSequence);
}

void FThirdPersonReload::BeforeDelete()
{
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(NormalEmpty);
	DELE_PTR_FULL(Speed);
	DELE_PTR_FULL(SpeedEmpty);
	DELE_PTR_FULL(Deployed);
	DELE_PTR_FULL(DeployedEmpty);
	DELE_PTR_FULL(NormalCommonPose);
}

void FThirdPersonFirearmBoltCycle::AfterRead()
{
	READ_PTR_FULL(Normal, UAnimMontage);
	READ_PTR_FULL(Iron, UAnimMontage);
	READ_PTR_FULL(Deployed, UAnimMontage);
	READ_PTR_FULL(DeployedIron, UAnimMontage);
	READ_PTR_FULL(CommonBase, UAnimSequence);
}

void FThirdPersonFirearmBoltCycle::BeforeDelete()
{
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
	DELE_PTR_FULL(Deployed);
	DELE_PTR_FULL(DeployedIron);
	DELE_PTR_FULL(CommonBase);
}

void FThirdPersonAnims::AfterRead()
{
	READ_PTR_FULL(Empty, UAnimSequence);
	READ_PTR_FULL(FireComponentCycle, UAnimSequence);
	READ_PTR_FULL(FirePoseStandNormal, UAnimSequence);
	READ_PTR_FULL(FirePoseCrouchNormal, UAnimSequence);
	READ_PTR_FULL(FirePoseProneNormal, UAnimSequence);
	READ_PTR_FULL(FireSelect, UAnimSequence);
	READ_PTR_FULL(AmmoCheck, UAnimSequence);
}

void FThirdPersonAnims::BeforeDelete()
{
	DELE_PTR_FULL(Empty);
	DELE_PTR_FULL(FireComponentCycle);
	DELE_PTR_FULL(FirePoseStandNormal);
	DELE_PTR_FULL(FirePoseCrouchNormal);
	DELE_PTR_FULL(FirePoseProneNormal);
	DELE_PTR_FULL(FireSelect);
	DELE_PTR_FULL(AmmoCheck);
}

void FFireSupportGameModeOverride::AfterRead()
{
}

void FFireSupportGameModeOverride::BeforeDelete()
{
}

void FRulesetProperty::AfterRead()
{
}

void FRulesetProperty::BeforeDelete()
{
}

void FGameMusicComponent::AfterRead()
{
}

void FGameMusicComponent::BeforeDelete()
{
}

void FModPrimaryAssetDescription::AfterRead()
{
	READ_PTR_FULL(AssetBaseClass, UClass);
}

void FModPrimaryAssetDescription::BeforeDelete()
{
	DELE_PTR_FULL(AssetBaseClass);
}

void FMountedMod::AfterRead()
{
	READ_PTR_FULL(ModData, UModData);
}

void FMountedMod::BeforeDelete()
{
	DELE_PTR_FULL(ModData);
}

void FLoadingScreenMap::AfterRead()
{
}

void FLoadingScreenMap::BeforeDelete()
{
}

void FModPrimaryAssetDirectory::AfterRead()
{
}

void FModPrimaryAssetDirectory::BeforeDelete()
{
}

void FMenuSquadLayoutSection::AfterRead()
{
	READ_PTR_FULL(SquadLayout, USquadLayout);
}

void FMenuSquadLayoutSection::BeforeDelete()
{
	DELE_PTR_FULL(SquadLayout);
}

void FHintInfo::AfterRead()
{
	READ_PTR_FULL(Lesson, UClass);
}

void FHintInfo::BeforeDelete()
{
	DELE_PTR_FULL(Lesson);
}

void FPlayerSoundscapeState::AfterRead()
{
	READ_PTR_FULL(Component, UINSAudioComponent);
}

void FPlayerSoundscapeState::BeforeDelete()
{
	DELE_PTR_FULL(Component);
}

void FPlayerMatchOverData::AfterRead()
{
}

void FPlayerMatchOverData::BeforeDelete()
{
}

void FReplayBrowserInfo::AfterRead()
{
}

void FReplayBrowserInfo::BeforeDelete()
{
}

void FBlueprintReplayEvent::AfterRead()
{
}

void FBlueprintReplayEvent::BeforeDelete()
{
}

void FOnlineInventoryOwnedItem::AfterRead()
{
	READ_PTR_FULL(Item, UClass);
}

void FOnlineInventoryOwnedItem::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FOnlineItemClaimResult::AfterRead()
{
}

void FOnlineItemClaimResult::BeforeDelete()
{
}

void FScoreboardBadge::AfterRead()
{
}

void FScoreboardBadge::BeforeDelete()
{
}

void FSelectedCosmetic::AfterRead()
{
}

void FSelectedCosmetic::BeforeDelete()
{
}

void FOnlineItemClaimResponse::AfterRead()
{
	READ_PTR_FULL(Item, UClass);
}

void FOnlineItemClaimResponse::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FOnlineBundledItem::AfterRead()
{
	READ_PTR_FULL(Item, UClass);
	READ_PTR_FULL(Variation, UClass);
}

void FOnlineBundledItem::BeforeDelete()
{
	DELE_PTR_FULL(Item);
	DELE_PTR_FULL(Variation);
}

void FConsumeItemResponse::AfterRead()
{
}

void FConsumeItemResponse::BeforeDelete()
{
}

void FPartySettings::AfterRead()
{
}

void FPartySettings::BeforeDelete()
{
}

void FINSPartyState::AfterRead()
{
}

void FINSPartyState::BeforeDelete()
{
}

void FINSPartyMember::AfterRead()
{
}

void FINSPartyMember::BeforeDelete()
{
}

void FMaterialSwap::AfterRead()
{
	READ_PTR_FULL(Material, UMaterialInterface);
}

void FMaterialSwap::BeforeDelete()
{
	DELE_PTR_FULL(Material);
}

void FVotableIssue::AfterRead()
{
	READ_PTR_FULL(VoteClass, UClass);
}

void FVotableIssue::BeforeDelete()
{
	DELE_PTR_FULL(VoteClass);
}

void FReplicatedVoteInfo::AfterRead()
{
	READ_PTR_FULL(IssueClass, UClass);
	READ_PTR_FULL(CallerPlayerState, APlayerState);
	READ_PTR_FULL(TargetPlayerState, APlayerState);
}

void FReplicatedVoteInfo::BeforeDelete()
{
	DELE_PTR_FULL(IssueClass);
	DELE_PTR_FULL(CallerPlayerState);
	DELE_PTR_FULL(TargetPlayerState);
}

void FReplicatedVoteChoice::AfterRead()
{
}

void FReplicatedVoteChoice::BeforeDelete()
{
}

void FQueuedVote::AfterRead()
{
	READ_PTR_FULL(VoteClass, UClass);
}

void FQueuedVote::BeforeDelete()
{
	DELE_PTR_FULL(VoteClass);
}

void FStoredInventoryItem::AfterRead()
{
	READ_PTR_FULL(ItemClass, UClass);
}

void FStoredInventoryItem::BeforeDelete()
{
	DELE_PTR_FULL(ItemClass);
}

void FInventorySlot::AfterRead()
{
}

void FInventorySlot::BeforeDelete()
{
}

void FStoredAmmo::AfterRead()
{
	READ_PTR_FULL(AmmoContainer, UClass);
}

void FStoredAmmo::BeforeDelete()
{
	DELE_PTR_FULL(AmmoContainer);
}

void FStoredMagazine::AfterRead()
{
	READ_PTR_FULL(AmmoTypeOverride, UClass);
}

void FStoredMagazine::BeforeDelete()
{
	DELE_PTR_FULL(AmmoTypeOverride);
}

void FCharacterCosmeticAttachedModel::AfterRead()
{
	FAttachedModel::AfterRead();

}

void FCharacterCosmeticAttachedModel::BeforeDelete()
{
	FAttachedModel::BeforeDelete();

}

void FCosmeticMaterialSwap::AfterRead()
{
	READ_PTR_FULL(Material, UMaterialInterface);
}

void FCosmeticMaterialSwap::BeforeDelete()
{
	DELE_PTR_FULL(Material);
}

void FMorphTargetPair::AfterRead()
{
}

void FMorphTargetPair::BeforeDelete()
{
}

void FNetworkedServerSettings::AfterRead()
{
}

void FNetworkedServerSettings::BeforeDelete()
{
}

void FBotGrenadeTarget::AfterRead()
{
}

void FBotGrenadeTarget::BeforeDelete()
{
}

void FMainMenuLoadoutData::AfterRead()
{
	READ_PTR_FULL(MenuSquadLayout, UMenuSquadLayout);
	READ_PTR_FULL(SquadLayout, USquadLayout);
	READ_PTR_FULL(PlayerClass, UPlayerClass);
}

void FMainMenuLoadoutData::BeforeDelete()
{
	DELE_PTR_FULL(MenuSquadLayout);
	DELE_PTR_FULL(SquadLayout);
	DELE_PTR_FULL(PlayerClass);
}

void FNVIDIAHighlightsInfo::AfterRead()
{
}

void FNVIDIAHighlightsInfo::BeforeDelete()
{
}

void FSensitivityModifiers::AfterRead()
{
}

void FSensitivityModifiers::BeforeDelete()
{
}

void FPlayerControlSettings::AfterRead()
{
}

void FPlayerControlSettings::BeforeDelete()
{
}

void FTheaterPreferences::AfterRead()
{
}

void FTheaterPreferences::BeforeDelete()
{
}

void FSavedLoadout::AfterRead()
{
}

void FSavedLoadout::BeforeDelete()
{
}

void FPlayerClassPreferences::AfterRead()
{
}

void FPlayerClassPreferences::BeforeDelete()
{
}

void FCosmeticDefinition::AfterRead()
{
	READ_PTR_FULL(Cosmetic, UClass);
}

void FCosmeticDefinition::BeforeDelete()
{
	DELE_PTR_FULL(Cosmetic);
}

void FUserInterfacePreferences::AfterRead()
{
}

void FUserInterfacePreferences::BeforeDelete()
{
}

void FPlaylistTypeData::AfterRead()
{
}

void FPlaylistTypeData::BeforeDelete()
{
}

void FGameAchievements::AfterRead()
{
}

void FGameAchievements::BeforeDelete()
{
}

void FServerBrowserPreferences::AfterRead()
{
}

void FServerBrowserPreferences::BeforeDelete()
{
}

void FProfileSaveBlock::AfterRead()
{
	READ_PTR_FULL(PlayerLocalProfile, UINSPlayerLocalProfile);
}

void FProfileSaveBlock::BeforeDelete()
{
	DELE_PTR_FULL(PlayerLocalProfile);
}

void FPlayingMusic::AfterRead()
{
}

void FPlayingMusic::BeforeDelete()
{
}

void FMapCycleEntry::AfterRead()
{
}

void FMapCycleEntry::BeforeDelete()
{
}

void FMapVoteOption::AfterRead()
{
	READ_PTR_FULL(ScenarioAsset, UScenarioBase);
}

void FMapVoteOption::BeforeDelete()
{
	DELE_PTR_FULL(ScenarioAsset);
}

void FNemesisStats::AfterRead()
{
}

void FNemesisStats::BeforeDelete()
{
}

void FMapVoteCount::AfterRead()
{
}

void FMapVoteCount::BeforeDelete()
{
}

void FFireSupportRequestResult::AfterRead()
{
	READ_PTR_FULL(AssistingController, AController);
}

void FFireSupportRequestResult::BeforeDelete()
{
	DELE_PTR_FULL(AssistingController);
}

void FAudioAnnouncementCue::AfterRead()
{
	READ_PTR_FULL(Event, UAkAudioEvent);
}

void FAudioAnnouncementCue::BeforeDelete()
{
	DELE_PTR_FULL(Event);
}

void FFireSupportRequest::AfterRead()
{
	READ_PTR_FULL(Definition, UFireSupportDefinition);
	READ_PTR_FULL(OfficerController, AController);
	READ_PTR_FULL(ObserverController, AController);
}

void FFireSupportRequest::BeforeDelete()
{
	DELE_PTR_FULL(Definition);
	DELE_PTR_FULL(OfficerController);
	DELE_PTR_FULL(ObserverController);
}

void FPlayerGameAchievement::AfterRead()
{
}

void FPlayerGameAchievement::BeforeDelete()
{
}

void FStatisticsGameSummary::AfterRead()
{
}

void FStatisticsGameSummary::BeforeDelete()
{
}

void FStatisticsPlayerProfileMeta::AfterRead()
{
}

void FStatisticsPlayerProfileMeta::BeforeDelete()
{
}

void FStatisticsPlayerProfileStatBase::AfterRead()
{
}

void FStatisticsPlayerProfileStatBase::BeforeDelete()
{
}

void FStatisticsPlayerProfileOverallStats::AfterRead()
{
	FStatisticsPlayerProfileStatBase::AfterRead();

}

void FStatisticsPlayerProfileOverallStats::BeforeDelete()
{
	FStatisticsPlayerProfileStatBase::BeforeDelete();

}

void FStatisticsPlayerProfile::AfterRead()
{
}

void FStatisticsPlayerProfile::BeforeDelete()
{
}

void FStatisticsLastGameResult::AfterRead()
{
}

void FStatisticsLastGameResult::BeforeDelete()
{
}

void FPlayerProfileTagline::AfterRead()
{
}

void FPlayerProfileTagline::BeforeDelete()
{
}

void FStatisticsPlayerClassStats::AfterRead()
{
	FStatisticsPlayerProfileStatBase::AfterRead();

}

void FStatisticsPlayerClassStats::BeforeDelete()
{
	FStatisticsPlayerProfileStatBase::BeforeDelete();

}

void FStatisticsPlayerProfileWeaponStatBase::AfterRead()
{
}

void FStatisticsPlayerProfileWeaponStatBase::BeforeDelete()
{
}

void FStatisticsPlayerWeaponStats::AfterRead()
{
	FStatisticsPlayerProfileWeaponStatBase::AfterRead();

}

void FStatisticsPlayerWeaponStats::BeforeDelete()
{
	FStatisticsPlayerProfileWeaponStatBase::BeforeDelete();

}

void FStatisticsPlayerProfileScenarioStats::AfterRead()
{
	FStatisticsPlayerProfileStatBase::AfterRead();

}

void FStatisticsPlayerProfileScenarioStats::BeforeDelete()
{
	FStatisticsPlayerProfileStatBase::BeforeDelete();

}

void FStatisticsPlayerWinRecordItem::AfterRead()
{
}

void FStatisticsPlayerWinRecordItem::BeforeDelete()
{
}

void FStatisticsRoundSummary::AfterRead()
{
}

void FStatisticsRoundSummary::BeforeDelete()
{
}

void FStatisticsPlayerRoundSummary::AfterRead()
{
	FStatisticsPlayerProfileStatBase::AfterRead();

}

void FStatisticsPlayerRoundSummary::BeforeDelete()
{
	FStatisticsPlayerProfileStatBase::BeforeDelete();

}

void FStatisticsTeamRoundSummary::AfterRead()
{
	FStatisticsPlayerProfileStatBase::AfterRead();

}

void FStatisticsTeamRoundSummary::BeforeDelete()
{
	FStatisticsPlayerProfileStatBase::BeforeDelete();

}

void FCompetitiveRating::AfterRead()
{
}

void FCompetitiveRating::BeforeDelete()
{
}

void FSandstormPlayerProfilePage::AfterRead()
{
}

void FSandstormPlayerProfilePage::BeforeDelete()
{
}

void FSandstormPlayerProfile::AfterRead()
{
}

void FSandstormPlayerProfile::BeforeDelete()
{
}

void FMatchHistory::AfterRead()
{
}

void FMatchHistory::BeforeDelete()
{
}

void FMatchHistoryEntry::AfterRead()
{
}

void FMatchHistoryEntry::BeforeDelete()
{
}

void FVoiceChatAvailableDevice::AfterRead()
{
}

void FVoiceChatAvailableDevice::BeforeDelete()
{
}

void FSpectatorSettings::AfterRead()
{
}

void FSpectatorSettings::BeforeDelete()
{
}

void FOverrideSetting::AfterRead()
{
}

void FOverrideSetting::BeforeDelete()
{
}

void FColorScheme::AfterRead()
{
}

void FColorScheme::BeforeDelete()
{
}

void FSoldierKillInfo::AfterRead()
{
	READ_PTR_FULL(KilledSoldier, AINSSoldier);
	READ_PTR_FULL(Killer, AController);
	READ_PTR_FULL(DamageCauser, AActor);
	READ_PTR_FULL(DamageTypeClass, UClass);
}

void FSoldierKillInfo::BeforeDelete()
{
	DELE_PTR_FULL(KilledSoldier);
	DELE_PTR_FULL(Killer);
	DELE_PTR_FULL(DamageCauser);
	DELE_PTR_FULL(DamageTypeClass);
}

void FPlayerWeapon::AfterRead()
{
	FLoadoutWeapon::AfterRead();

}

void FPlayerWeapon::BeforeDelete()
{
	FLoadoutWeapon::BeforeDelete();

}

void FAllowedItemDefinition::AfterRead()
{
}

void FAllowedItemDefinition::BeforeDelete()
{
}

void FOutpostCustomWave::AfterRead()
{
}

void FOutpostCustomWave::BeforeDelete()
{
}

void FOutpostSpecialWave::AfterRead()
{
}

void FOutpostSpecialWave::BeforeDelete()
{
}

void FOutpostFinalWave::AfterRead()
{
}

void FOutpostFinalWave::BeforeDelete()
{
}

void FMatchReservation::AfterRead()
{
}

void FMatchReservation::BeforeDelete()
{
}

void FPlayerGameData::AfterRead()
{
}

void FPlayerGameData::BeforeDelete()
{
}

void FTeamBalanceInfoHost::AfterRead()
{
}

void FTeamBalanceInfoHost::BeforeDelete()
{
}

void FPartyReservationTotalSize::AfterRead()
{
}

void FPartyReservationTotalSize::BeforeDelete()
{
}

void FPlayerBan::AfterRead()
{
}

void FPlayerBan::BeforeDelete()
{
}

void FHardcoreCheckpointLoadout::AfterRead()
{
}

void FHardcoreCheckpointLoadout::BeforeDelete()
{
}

void FLoadoutItemWithTags::AfterRead()
{
	FBasicLoadoutItem::AfterRead();

}

void FLoadoutItemWithTags::BeforeDelete()
{
	FBasicLoadoutItem::BeforeDelete();

}

void FCheckpointCounterAttackDefinition::AfterRead()
{
	READ_PTR_FULL(SquadLayout, USquadLayout);
}

void FCheckpointCounterAttackDefinition::BeforeDelete()
{
	DELE_PTR_FULL(SquadLayout);
}

void FCachedSpawnLocation::AfterRead()
{
}

void FCachedSpawnLocation::BeforeDelete()
{
}

void FScenarioAssetInfo::AfterRead()
{
}

void FScenarioAssetInfo::BeforeDelete()
{
}

void FDeathArea::AfterRead()
{
}

void FDeathArea::BeforeDelete()
{
}

void FCoverSearchParams::AfterRead()
{
}

void FCoverSearchParams::BeforeDelete()
{
}

void FInertialEasingContainer1D::AfterRead()
{
}

void FInertialEasingContainer1D::BeforeDelete()
{
}

void FChildAsset::AfterRead()
{
	READ_PTR_FULL(HintImage, UImage);
	READ_PTR_FULL(ChildWidgetBP, UUserWidget);
}

void FChildAsset::BeforeDelete()
{
	DELE_PTR_FULL(HintImage);
	DELE_PTR_FULL(ChildWidgetBP);
}

void FPathHoverProperties::AfterRead()
{
}

void FPathHoverProperties::BeforeDelete()
{
}

void FGridCell::AfterRead()
{
}

void FGridCell::BeforeDelete()
{
}

void FGridCellRelationshipData::AfterRead()
{
}

void FGridCellRelationshipData::BeforeDelete()
{
}

void FRelationshipIndex::AfterRead()
{
}

void FRelationshipIndex::BeforeDelete()
{
}

void FCellMap::AfterRead()
{
}

void FCellMap::BeforeDelete()
{
}

void FBannerData::AfterRead()
{
}

void FBannerData::BeforeDelete()
{
}

void FFireSupportResponse::AfterRead()
{
	READ_PTR_FULL(ResponseEvent, UAkAudioEvent);
}

void FFireSupportResponse::BeforeDelete()
{
	DELE_PTR_FULL(ResponseEvent);
}

void FAircraftFormation::AfterRead()
{
	READ_PTR_FULL(AircraftClass, UClass);
}

void FAircraftFormation::BeforeDelete()
{
	DELE_PTR_FULL(AircraftClass);
}

void FAnimationReady::AfterRead()
{
	READ_PTR_FULL(Sequence, UAnimSequence);
}

void FAnimationReady::BeforeDelete()
{
	DELE_PTR_FULL(Sequence);
}

void FAnimationStrengthPair::AfterRead()
{
	READ_PTR_FULL(Sequence, UAnimSequence);
}

void FAnimationStrengthPair::BeforeDelete()
{
	DELE_PTR_FULL(Sequence);
}

void FMultiAnimationStrengthPair::AfterRead()
{
}

void FMultiAnimationStrengthPair::BeforeDelete()
{
}

void FAnimStanceGroup::AfterRead()
{
	READ_PTR_FULL(Stand, UAnimSequence);
	READ_PTR_FULL(Crouch, UAnimSequence);
	READ_PTR_FULL(Prone, UAnimSequence);
}

void FAnimStanceGroup::BeforeDelete()
{
	DELE_PTR_FULL(Stand);
	DELE_PTR_FULL(Crouch);
	DELE_PTR_FULL(Prone);
}

void FMeleeAnimsGroup::AfterRead()
{
	READ_PTR_FULL(SlashNorthSouth, UAnimSequence);
	READ_PTR_FULL(SlashSouthNorth, UAnimSequence);
	READ_PTR_FULL(SlashWestEast, UAnimSequence);
	READ_PTR_FULL(SlashEastWest, UAnimSequence);
	READ_PTR_FULL(SlashNorthWestSouthEast, UAnimSequence);
	READ_PTR_FULL(SlashSouthEastNorthWest, UAnimSequence);
	READ_PTR_FULL(SlashNorthEastSouthWest, UAnimSequence);
	READ_PTR_FULL(SlashSouthWestNorthEast, UAnimSequence);
}

void FMeleeAnimsGroup::BeforeDelete()
{
	DELE_PTR_FULL(SlashNorthSouth);
	DELE_PTR_FULL(SlashSouthNorth);
	DELE_PTR_FULL(SlashWestEast);
	DELE_PTR_FULL(SlashEastWest);
	DELE_PTR_FULL(SlashNorthWestSouthEast);
	DELE_PTR_FULL(SlashSouthEastNorthWest);
	DELE_PTR_FULL(SlashNorthEastSouthWest);
	DELE_PTR_FULL(SlashSouthWestNorthEast);
}

void FThirdPersonAttack::AfterRead()
{
}

void FThirdPersonAttack::BeforeDelete()
{
}

void FThirdPersonChamber::AfterRead()
{
	READ_PTR_FULL(Normal, UAnimMontage);
	READ_PTR_FULL(Iron, UAnimMontage);
	READ_PTR_FULL(Deployed, UAnimMontage);
	READ_PTR_FULL(DeployedIron, UAnimMontage);
	READ_PTR_FULL(CommonBase, UAnimSequence);
}

void FThirdPersonChamber::BeforeDelete()
{
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
	DELE_PTR_FULL(Deployed);
	DELE_PTR_FULL(DeployedIron);
	DELE_PTR_FULL(CommonBase);
}

void FThirdPersonDrawHolster::AfterRead()
{
	READ_PTR_FULL(Ready, UAnimSequence);
	READ_PTR_FULL(Draw, UAnimSequence);
	READ_PTR_FULL(Holster, UAnimSequence);
	READ_PTR_FULL(Drop, UAnimSequence);
}

void FThirdPersonDrawHolster::BeforeDelete()
{
	DELE_PTR_FULL(Ready);
	DELE_PTR_FULL(Draw);
	DELE_PTR_FULL(Holster);
	DELE_PTR_FULL(Drop);
}

void FThirdPersonLadder::AfterRead()
{
	READ_PTR_FULL(MountBottom, UAnimSequence);
	READ_PTR_FULL(DismountBottom, UAnimSequence);
	READ_PTR_FULL(MountTop, UAnimSequence);
	READ_PTR_FULL(DismountTop, UAnimSequence);
	READ_PTR_FULL(ClimbUp, UAnimSequence);
	READ_PTR_FULL(ClimbDown, UAnimSequence);
	READ_PTR_FULL(SlideTransitionIn, UAnimSequence);
	READ_PTR_FULL(SlideLoop, UAnimSequence);
	READ_PTR_FULL(SlideTransitionOut, UAnimSequence);
}

void FThirdPersonLadder::BeforeDelete()
{
	DELE_PTR_FULL(MountBottom);
	DELE_PTR_FULL(DismountBottom);
	DELE_PTR_FULL(MountTop);
	DELE_PTR_FULL(DismountTop);
	DELE_PTR_FULL(ClimbUp);
	DELE_PTR_FULL(ClimbDown);
	DELE_PTR_FULL(SlideTransitionIn);
	DELE_PTR_FULL(SlideLoop);
	DELE_PTR_FULL(SlideTransitionOut);
}

void FThirdPersonComboPose::AfterRead()
{
	READ_PTR_FULL(North, UAnimSequence);
	READ_PTR_FULL(Alt, UAnimSequence);
	READ_PTR_FULL(Iron, UAnimSequence);
}

void FThirdPersonComboPose::BeforeDelete()
{
	DELE_PTR_FULL(North);
	DELE_PTR_FULL(Alt);
	DELE_PTR_FULL(Iron);
}

void FThirdPersonMovePose::AfterRead()
{
	READ_PTR_FULL(StandSprint, UAnimSequence);
}

void FThirdPersonMovePose::BeforeDelete()
{
	DELE_PTR_FULL(StandSprint);
}

void FThirdPersonRandom::AfterRead()
{
}

void FThirdPersonRandom::BeforeDelete()
{
}

void FThirdPersonThrowable::AfterRead()
{
	READ_PTR_FULL(OverhandPullback, UAnimSequence);
	READ_PTR_FULL(OverhandThrow, UBlendSpace1D);
	READ_PTR_FULL(OverhandAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(OverhandIdle, UAnimSequence);
	READ_PTR_FULL(UnderhandPullback, UAnimSequence);
	READ_PTR_FULL(UnderhandThrow, UAnimSequence);
	READ_PTR_FULL(UnderhandAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(UnderhandIdle, UAnimSequence);
	READ_PTR_FULL(PlantFloor, UAnimSequence);
	READ_PTR_FULL(PlantWall, UAnimSequence);
}

void FThirdPersonThrowable::BeforeDelete()
{
	DELE_PTR_FULL(OverhandPullback);
	DELE_PTR_FULL(OverhandThrow);
	DELE_PTR_FULL(OverhandAO);
	DELE_PTR_FULL(OverhandIdle);
	DELE_PTR_FULL(UnderhandPullback);
	DELE_PTR_FULL(UnderhandThrow);
	DELE_PTR_FULL(UnderhandAO);
	DELE_PTR_FULL(UnderhandIdle);
	DELE_PTR_FULL(PlantFloor);
	DELE_PTR_FULL(PlantWall);
}

void FThirdPersonIdle::AfterRead()
{
	READ_PTR_FULL(Relaxed, UAnimSequence);
	READ_PTR_FULL(Normal, UAnimSequence);
	READ_PTR_FULL(Iron, UAnimSequence);
	READ_PTR_FULL(Down, UAnimSequence);
}

void FThirdPersonIdle::BeforeDelete()
{
	DELE_PTR_FULL(Relaxed);
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
	DELE_PTR_FULL(Down);
}

void FThirdPersonMove::AfterRead()
{
	READ_PTR_FULL(North, UBlendSpace1D);
	READ_PTR_FULL(NorthStart, UAnimSequence);
	READ_PTR_FULL(South, UBlendSpace1D);
	READ_PTR_FULL(SouthStart, UAnimSequence);
	READ_PTR_FULL(East, UBlendSpace1D);
	READ_PTR_FULL(EastStart, UAnimSequence);
	READ_PTR_FULL(West, UBlendSpace1D);
	READ_PTR_FULL(WestStart, UAnimSequence);
	READ_PTR_FULL(StopShuffle, UAnimSequence);
}

void FThirdPersonMove::BeforeDelete()
{
	DELE_PTR_FULL(North);
	DELE_PTR_FULL(NorthStart);
	DELE_PTR_FULL(South);
	DELE_PTR_FULL(SouthStart);
	DELE_PTR_FULL(East);
	DELE_PTR_FULL(EastStart);
	DELE_PTR_FULL(West);
	DELE_PTR_FULL(WestStart);
	DELE_PTR_FULL(StopShuffle);
}

void FThirdPersonSprint::AfterRead()
{
	READ_PTR_FULL(SprintStart, UAnimSequence);
	READ_PTR_FULL(Sprint, UBlendSpace1D);
	READ_PTR_FULL(SprintBayonet, UAnimMontage);
	READ_PTR_FULL(SprintEnd, UAnimMontage);
	READ_PTR_FULL(ChargeStart, UAnimMontage);
	READ_PTR_FULL(ChargeLoop, UAnimMontage);
	READ_PTR_FULL(ChargeEnd, UAnimSequence);
}

void FThirdPersonSprint::BeforeDelete()
{
	DELE_PTR_FULL(SprintStart);
	DELE_PTR_FULL(Sprint);
	DELE_PTR_FULL(SprintBayonet);
	DELE_PTR_FULL(SprintEnd);
	DELE_PTR_FULL(ChargeStart);
	DELE_PTR_FULL(ChargeLoop);
	DELE_PTR_FULL(ChargeEnd);
}

void FThirdPersonLean::AfterRead()
{
	READ_PTR_FULL(LeanLeftRelaxed, UAnimSequence);
	READ_PTR_FULL(LeanLeftNormal, UAnimSequence);
	READ_PTR_FULL(LeanLeftIron, UAnimSequence);
	READ_PTR_FULL(LeanLeftAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(LeanRightRelaxed, UAnimSequence);
	READ_PTR_FULL(LeanRightNormal, UAnimSequence);
	READ_PTR_FULL(LeanRightIron, UAnimSequence);
	READ_PTR_FULL(LeanRightAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(LeanMoving, UAimOffsetBlendSpace1D);
}

void FThirdPersonLean::BeforeDelete()
{
	DELE_PTR_FULL(LeanLeftRelaxed);
	DELE_PTR_FULL(LeanLeftNormal);
	DELE_PTR_FULL(LeanLeftIron);
	DELE_PTR_FULL(LeanLeftAO);
	DELE_PTR_FULL(LeanRightRelaxed);
	DELE_PTR_FULL(LeanRightNormal);
	DELE_PTR_FULL(LeanRightIron);
	DELE_PTR_FULL(LeanRightAO);
	DELE_PTR_FULL(LeanMoving);
}

void FThirdPersonAO::AfterRead()
{
	READ_PTR_FULL(Relaxed, UAimOffsetBlendSpace);
	READ_PTR_FULL(Normal, UAimOffsetBlendSpace);
	READ_PTR_FULL(Iron, UAimOffsetBlendSpace);
}

void FThirdPersonAO::BeforeDelete()
{
	DELE_PTR_FULL(Relaxed);
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
}

void FThirdPersonPivot::AfterRead()
{
	READ_PTR_FULL(StepLeft, UAnimSequence);
	READ_PTR_FULL(StepRight, UAnimSequence);
	READ_PTR_FULL(RotateLeft, UAnimSequence);
	READ_PTR_FULL(RotateRight, UAnimSequence);
	READ_PTR_FULL(SpinNorth, UAnimSequence);
	READ_PTR_FULL(SpinSouth, UAnimSequence);
	READ_PTR_FULL(SpinEast, UAnimSequence);
	READ_PTR_FULL(SpinWest, UAnimSequence);
}

void FThirdPersonPivot::BeforeDelete()
{
	DELE_PTR_FULL(StepLeft);
	DELE_PTR_FULL(StepRight);
	DELE_PTR_FULL(RotateLeft);
	DELE_PTR_FULL(RotateRight);
	DELE_PTR_FULL(SpinNorth);
	DELE_PTR_FULL(SpinSouth);
	DELE_PTR_FULL(SpinEast);
	DELE_PTR_FULL(SpinWest);
}

void FThirdPersonVault::AfterRead()
{
	READ_PTR_FULL(VaultShortStart, UAnimSequence);
	READ_PTR_FULL(VaultShortLoop, UAnimSequence);
	READ_PTR_FULL(VaultShortRecovery, UAnimSequence);
	READ_PTR_FULL(VaultHigh, UAnimSequence);
}

void FThirdPersonVault::BeforeDelete()
{
	DELE_PTR_FULL(VaultShortStart);
	DELE_PTR_FULL(VaultShortLoop);
	DELE_PTR_FULL(VaultShortRecovery);
	DELE_PTR_FULL(VaultHigh);
}

void FThirdPersonDeployed::AfterRead()
{
	READ_PTR_FULL(DeployedNormal, UAnimSequence);
	READ_PTR_FULL(DeployedIron, UAnimSequence);
	READ_PTR_FULL(DeployedPose, UAnimSequence);
	READ_PTR_FULL(DeployedStrafe, UBlendSpace1D);
	READ_PTR_FULL(DeployedAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(DeployedTransitionIn, UAnimSequence);
	READ_PTR_FULL(DeployedTransitionOut, UAnimSequence);
	READ_PTR_FULL(BipodLegsTransitionIn, UAnimSequence);
	READ_PTR_FULL(BipodLegsTransitionOut, UAnimSequence);
}

void FThirdPersonDeployed::BeforeDelete()
{
	DELE_PTR_FULL(DeployedNormal);
	DELE_PTR_FULL(DeployedIron);
	DELE_PTR_FULL(DeployedPose);
	DELE_PTR_FULL(DeployedStrafe);
	DELE_PTR_FULL(DeployedAO);
	DELE_PTR_FULL(DeployedTransitionIn);
	DELE_PTR_FULL(DeployedTransitionOut);
	DELE_PTR_FULL(BipodLegsTransitionIn);
	DELE_PTR_FULL(BipodLegsTransitionOut);
}

void FThirdPersonStand::AfterRead()
{
}

void FThirdPersonStand::BeforeDelete()
{
}

void FThirdPersonCrouch::AfterRead()
{
}

void FThirdPersonCrouch::BeforeDelete()
{
}

void FThirdPersonProne::AfterRead()
{
}

void FThirdPersonProne::BeforeDelete()
{
}

void FThirdPersonTransition::AfterRead()
{
	READ_PTR_FULL(StandCrouch, UAnimSequence);
	READ_PTR_FULL(StandProne, UAnimSequence);
	READ_PTR_FULL(DiveProne, UAnimSequence);
	READ_PTR_FULL(CrouchStand, UAnimSequence);
	READ_PTR_FULL(CrouchProne, UAnimSequence);
	READ_PTR_FULL(ProneStand, UAnimSequence);
	READ_PTR_FULL(ProneCrouch, UAnimSequence);
}

void FThirdPersonTransition::BeforeDelete()
{
	DELE_PTR_FULL(StandCrouch);
	DELE_PTR_FULL(StandProne);
	DELE_PTR_FULL(DiveProne);
	DELE_PTR_FULL(CrouchStand);
	DELE_PTR_FULL(CrouchProne);
	DELE_PTR_FULL(ProneStand);
	DELE_PTR_FULL(ProneCrouch);
}

void FThirdPersonJump::AfterRead()
{
	READ_PTR_FULL(JumpStart, UAnimSequence);
	READ_PTR_FULL(JumpApex, UAnimSequence);
	READ_PTR_FULL(JumpNearLand, UAnimSequence);
	READ_PTR_FULL(JumpLandRecovery, UAnimSequence);
	READ_PTR_FULL(Falling, UAnimSequence);
	READ_PTR_FULL(NearLand, UAnimSequence);
	READ_PTR_FULL(LandRecovery, UAnimSequence);
}

void FThirdPersonJump::BeforeDelete()
{
	DELE_PTR_FULL(JumpStart);
	DELE_PTR_FULL(JumpApex);
	DELE_PTR_FULL(JumpNearLand);
	DELE_PTR_FULL(JumpLandRecovery);
	DELE_PTR_FULL(Falling);
	DELE_PTR_FULL(NearLand);
	DELE_PTR_FULL(LandRecovery);
}

void FThirdPersonBodyAnims::AfterRead()
{
	READ_PTR_FULL(SlideStart, UAnimSequence);
	READ_PTR_FULL(SlideLoop, UAnimSequence);
	READ_PTR_FULL(SlideEnd, UAnimSequence);
}

void FThirdPersonBodyAnims::BeforeDelete()
{
	DELE_PTR_FULL(SlideStart);
	DELE_PTR_FULL(SlideLoop);
	DELE_PTR_FULL(SlideEnd);
}

void FLimbGroup::AfterRead()
{
}

void FLimbGroup::BeforeDelete()
{
}

void FLimb::AfterRead()
{
	READ_PTR_FULL(CapMesh, UStaticMesh);
	READ_PTR_FULL(UncoveredCapMesh, UStaticMesh);
	READ_PTR_FULL(ReplacementMesh, USkeletalMesh);
	READ_PTR_FULL(ReplacementCapMesh, UStaticMesh);
	READ_PTR_FULL(UncoveredReplacementCapMesh, UStaticMesh);
	READ_PTR_FULL(ReplacementParticleSystem, UParticleSystem);
	READ_PTR_FULL(DismembermentAudioEvent, UAkAudioEvent);
}

void FLimb::BeforeDelete()
{
	DELE_PTR_FULL(CapMesh);
	DELE_PTR_FULL(UncoveredCapMesh);
	DELE_PTR_FULL(ReplacementMesh);
	DELE_PTR_FULL(ReplacementCapMesh);
	DELE_PTR_FULL(UncoveredReplacementCapMesh);
	DELE_PTR_FULL(ReplacementParticleSystem);
	DELE_PTR_FULL(DismembermentAudioEvent);
}

void FDeathSet::AfterRead()
{
}

void FDeathSet::BeforeDelete()
{
}

void FDeathAnimation::AfterRead()
{
	READ_PTR_FULL(Animation, UAnimationAsset);
}

void FDeathAnimation::BeforeDelete()
{
	DELE_PTR_FULL(Animation);
}

void FRagdollEffectLayer::AfterRead()
{
}

void FRagdollEffectLayer::BeforeDelete()
{
}

void FDeathCamera::AfterRead()
{
}

void FDeathCamera::BeforeDelete()
{
}

void FDampingEasingContainer3D::AfterRead()
{
}

void FDampingEasingContainer3D::BeforeDelete()
{
}

void FLoggedDamage::AfterRead()
{
	READ_PTR_FULL(Damager, AActor);
	READ_PTR_FULL(Instigator, AController);
}

void FLoggedDamage::BeforeDelete()
{
	DELE_PTR_FULL(Damager);
	DELE_PTR_FULL(Instigator);
}

void FBulletDamageEvent::AfterRead()
{
	FPointDamageEvent::AfterRead();

	READ_PTR_FULL(WeaponClass, UClass);
	READ_PTR_FULL(AmmoType, UClass);
}

void FBulletDamageEvent::BeforeDelete()
{
	FPointDamageEvent::BeforeDelete();

	DELE_PTR_FULL(WeaponClass);
	DELE_PTR_FULL(AmmoType);
}

void FExplosiveDamageEvent::AfterRead()
{
	FRadialDamageEvent::AfterRead();

	READ_PTR_FULL(WeaponClass, UClass);
}

void FExplosiveDamageEvent::BeforeDelete()
{
	FRadialDamageEvent::BeforeDelete();

	DELE_PTR_FULL(WeaponClass);
}

void FCoverPointOctreeElement::AfterRead()
{
}

void FCoverPointOctreeElement::BeforeDelete()
{
}

void FCosmeticColorGroup::AfterRead()
{
}

void FCosmeticColorGroup::BeforeDelete()
{
}

void FCharacterMorphMacro::AfterRead()
{
}

void FCharacterMorphMacro::BeforeDelete()
{
}

void FPendingCosmeticLoad::AfterRead()
{
}

void FPendingCosmeticLoad::BeforeDelete()
{
}

void FCachePoolData::AfterRead()
{
}

void FCachePoolData::BeforeDelete()
{
}

void FCopyPoseInstanceProxy::AfterRead()
{
	FAnimInstanceProxy::AfterRead();

}

void FCopyPoseInstanceProxy::BeforeDelete()
{
	FAnimInstanceProxy::BeforeDelete();

}

void FActionMapping::AfterRead()
{
}

void FActionMapping::BeforeDelete()
{
}

void FAxisMapping::AfterRead()
{
}

void FAxisMapping::BeforeDelete()
{
}

void FCollectiblePlatformClaim::AfterRead()
{
}

void FCollectiblePlatformClaim::BeforeDelete()
{
}

void FCompetitiveUnlockTier::AfterRead()
{
}

void FCompetitiveUnlockTier::BeforeDelete()
{
}

void FCollectibleBundleItem::AfterRead()
{
}

void FCollectibleBundleItem::BeforeDelete()
{
}

void FChatBoxEntry::AfterRead()
{
}

void FChatBoxEntry::BeforeDelete()
{
}

void FSurfaceReactionPair::AfterRead()
{
	READ_PTR_FULL(FirstPerson, USurfaceReaction);
	READ_PTR_FULL(ThirdPerson, USurfaceReaction);
}

void FSurfaceReactionPair::BeforeDelete()
{
	DELE_PTR_FULL(FirstPerson);
	DELE_PTR_FULL(ThirdPerson);
}

void FCharacterObjectivePhrase::AfterRead()
{
}

void FCharacterObjectivePhrase::BeforeDelete()
{
}

void FCharacterObjectivePhraseDefinition::AfterRead()
{
	READ_PTR_FULL(Event, UAkAudioEvent);
}

void FCharacterObjectivePhraseDefinition::BeforeDelete()
{
	DELE_PTR_FULL(Event);
}

void FCachedDialogueData::AfterRead()
{
}

void FCachedDialogueData::BeforeDelete()
{
}

void FCachedObjectiveDialogueData::AfterRead()
{
}

void FCachedObjectiveDialogueData::BeforeDelete()
{
}

void FGameplayAudioData::AfterRead()
{
}

void FGameplayAudioData::BeforeDelete()
{
}

void FCachedObjectiveEventDialogueData::AfterRead()
{
}

void FCachedObjectiveEventDialogueData::BeforeDelete()
{
}

void FCachedFireSupportDialogueData::AfterRead()
{
	READ_PTR_FULL(AssociatedFireSupport, UFireSupportDefinition);
}

void FCachedFireSupportDialogueData::BeforeDelete()
{
	DELE_PTR_FULL(AssociatedFireSupport);
}

void FMontageWeightPair::AfterRead()
{
	READ_PTR_FULL(Montage, UAnimMontage);
}

void FMontageWeightPair::BeforeDelete()
{
	DELE_PTR_FULL(Montage);
}

void FUISpecialSequence::AfterRead()
{
}

void FUISpecialSequence::BeforeDelete()
{
}

void FCharacterAnimKnifeAttack::AfterRead()
{
}

void FCharacterAnimKnifeAttack::BeforeDelete()
{
}

void FCharacterAnimKnife::AfterRead()
{
}

void FCharacterAnimKnife::BeforeDelete()
{
}

void FCharacterAnimRandom::AfterRead()
{
}

void FCharacterAnimRandom::BeforeDelete()
{
}

void FBulletPenetrationPowerValues::AfterRead()
{
}

void FBulletPenetrationPowerValues::BeforeDelete()
{
}

void FSimulatedBullet::AfterRead()
{
	READ_PTR_FULL(OwningController, AController);
	READ_PTR_FULL(OwningPawn, AINSSoldier);
	READ_PTR_FULL(OwningWeaponClass, UClass);
	READ_PTR_FULL(OwningWeapon, AItemWeapon);
	READ_PTR_FULL(AmmoType, UAmmoTypeBallistic);
	READ_PTR_FULL(TracerParticle, UParticleSystem);
	READ_PTR_FULL(ActiveTracerParticle, UParticleSystemComponent);
	READ_PTR_FULL(ActivePenetrationTracer, UParticleSystemComponent);
}

void FSimulatedBullet::BeforeDelete()
{
	DELE_PTR_FULL(OwningController);
	DELE_PTR_FULL(OwningPawn);
	DELE_PTR_FULL(OwningWeaponClass);
	DELE_PTR_FULL(OwningWeapon);
	DELE_PTR_FULL(AmmoType);
	DELE_PTR_FULL(TracerParticle);
	DELE_PTR_FULL(ActiveTracerParticle);
	DELE_PTR_FULL(ActivePenetrationTracer);
}

void FClientBulletHit::AfterRead()
{
	READ_PTR_FULL(TargetComponent, UPrimitiveComponent);
}

void FClientBulletHit::BeforeDelete()
{
	DELE_PTR_FULL(TargetComponent);
}

void FQueuedClientBulletHit::AfterRead()
{
	READ_PTR_FULL(FromPlayer, AINSSoldier);
}

void FQueuedClientBulletHit::BeforeDelete()
{
	DELE_PTR_FULL(FromPlayer);
}

void FDeferredBulletHit::AfterRead()
{
}

void FDeferredBulletHit::BeforeDelete()
{
}

void FBloodSplatterContext::AfterRead()
{
	READ_PTR_FULL(PhysMaterial, UPhysicalMaterial);
}

void FBloodSplatterContext::BeforeDelete()
{
	DELE_PTR_FULL(PhysMaterial);
}

void FAnimNode_TransformBone::AfterRead()
{
	FAnimNode_SkeletalControlBase::AfterRead();

}

void FAnimNode_TransformBone::BeforeDelete()
{
	FAnimNode_SkeletalControlBase::BeforeDelete();

}

void FExplosiveAnimsGroup::AfterRead()
{
	READ_PTR_FULL(PullPinOverhand, UAnimSequence);
	READ_PTR_FULL(PullPinUnderhand, UAnimSequence);
	READ_PTR_FULL(PullPinOverhandCook, UAnimSequence);
	READ_PTR_FULL(PullPinUnderhandCook, UAnimSequence);
	READ_PTR_FULL(ThrowOverhand, UAnimSequence);
	READ_PTR_FULL(ThrowUnderhand, UAnimSequence);
	READ_PTR_FULL(CookAloneEntry, UAnimSequence);
	READ_PTR_FULL(Plant, UAnimSequence);
	READ_PTR_FULL(RemoteIdle, UAnimSequence);
	READ_PTR_FULL(RemoteDraw, UAnimSequence);
	READ_PTR_FULL(RemoteHolster, UAnimSequence);
	READ_PTR_FULL(RemoteReady, UAnimSequence);
	READ_PTR_FULL(RemoteActivate, UAnimSequence);
}

void FExplosiveAnimsGroup::BeforeDelete()
{
	DELE_PTR_FULL(PullPinOverhand);
	DELE_PTR_FULL(PullPinUnderhand);
	DELE_PTR_FULL(PullPinOverhandCook);
	DELE_PTR_FULL(PullPinUnderhandCook);
	DELE_PTR_FULL(ThrowOverhand);
	DELE_PTR_FULL(ThrowUnderhand);
	DELE_PTR_FULL(CookAloneEntry);
	DELE_PTR_FULL(Plant);
	DELE_PTR_FULL(RemoteIdle);
	DELE_PTR_FULL(RemoteDraw);
	DELE_PTR_FULL(RemoteHolster);
	DELE_PTR_FULL(RemoteReady);
	DELE_PTR_FULL(RemoteActivate);
}

void FCharacterAnimThrowable::AfterRead()
{
	READ_PTR_FULL(OverhandPullback, UAnimSequence);
	READ_PTR_FULL(OverhandThrow, UAnimSequence);
	READ_PTR_FULL(OverhandAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(OverhandHoldAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(OverhandIdle, UAnimSequence);
	READ_PTR_FULL(UnderhandPullback, UAnimSequence);
	READ_PTR_FULL(UnderhandThrow, UAnimSequence);
	READ_PTR_FULL(UnderhandAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(UnderhandHoldAO, UAimOffsetBlendSpace);
	READ_PTR_FULL(UnderhandIdle, UAnimSequence);
	READ_PTR_FULL(PullbackMovingWalk, UAnimSequence);
	READ_PTR_FULL(PullbackMovingRun, UAnimSequence);
	READ_PTR_FULL(PlantFloor, UAnimSequence);
	READ_PTR_FULL(PlantWall, UAnimSequence);
}

void FCharacterAnimThrowable::BeforeDelete()
{
	DELE_PTR_FULL(OverhandPullback);
	DELE_PTR_FULL(OverhandThrow);
	DELE_PTR_FULL(OverhandAO);
	DELE_PTR_FULL(OverhandHoldAO);
	DELE_PTR_FULL(OverhandIdle);
	DELE_PTR_FULL(UnderhandPullback);
	DELE_PTR_FULL(UnderhandThrow);
	DELE_PTR_FULL(UnderhandAO);
	DELE_PTR_FULL(UnderhandHoldAO);
	DELE_PTR_FULL(UnderhandIdle);
	DELE_PTR_FULL(PullbackMovingWalk);
	DELE_PTR_FULL(PullbackMovingRun);
	DELE_PTR_FULL(PlantFloor);
	DELE_PTR_FULL(PlantWall);
}

void FCharacterAnimExplosive::AfterRead()
{
	READ_PTR_FULL(Cooked, UAnimSequence);
}

void FCharacterAnimExplosive::BeforeDelete()
{
	DELE_PTR_FULL(Cooked);
}

void FAkComponentCameraPair::AfterRead()
{
	READ_PTR_FULL(FirstPerson, UAkAudioEvent);
	READ_PTR_FULL(ThirdPerson, UAkAudioEvent);
}

void FAkComponentCameraPair::BeforeDelete()
{
	DELE_PTR_FULL(FirstPerson);
	DELE_PTR_FULL(ThirdPerson);
}

void FGrenadeConfig::AfterRead()
{
	READ_PTR_FULL(ProjectileClass, UClass);
}

void FGrenadeConfig::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileClass);
}

void FCharacterAnimAttack::AfterRead()
{
}

void FCharacterAnimAttack::BeforeDelete()
{
}

void FCharacterAnimReloadType::AfterRead()
{
	READ_PTR_FULL(CommonPose, UAnimSequence);
	READ_PTR_FULL(Half, UAnimMontage);
	READ_PTR_FULL(Empty, UAnimMontage);
}

void FCharacterAnimReloadType::BeforeDelete()
{
	DELE_PTR_FULL(CommonPose);
	DELE_PTR_FULL(Half);
	DELE_PTR_FULL(Empty);
}

void FCharacterAnimReload::AfterRead()
{
}

void FCharacterAnimReload::BeforeDelete()
{
}

void FCharacterAnimChamber::AfterRead()
{
	READ_PTR_FULL(Normal, UAnimMontage);
	READ_PTR_FULL(Iron, UAnimMontage);
	READ_PTR_FULL(Deployed, UAnimMontage);
	READ_PTR_FULL(DeployedIron, UAnimMontage);
	READ_PTR_FULL(CommonBase, UAnimSequence);
}

void FCharacterAnimChamber::BeforeDelete()
{
	DELE_PTR_FULL(Normal);
	DELE_PTR_FULL(Iron);
	DELE_PTR_FULL(Deployed);
	DELE_PTR_FULL(DeployedIron);
	DELE_PTR_FULL(CommonBase);
}

void FCharacterAnimFirearm::AfterRead()
{
	READ_PTR_FULL(HandPoseDeployed, UAnimSequence);
	READ_PTR_FULL(HandPoseUnderbarrel, UAnimSequence);
	READ_PTR_FULL(Empty, UAnimSequence);
	READ_PTR_FULL(BipodLegsDeployed, UAnimSequence);
	READ_PTR_FULL(FireComponentCycle, UAnimSequence);
	READ_PTR_FULL(FirePoseStandNormal, UAnimSequence);
	READ_PTR_FULL(FirePoseCrouchNormal, UAnimSequence);
	READ_PTR_FULL(FirePoseProneNormal, UAnimSequence);
	READ_PTR_FULL(FireSelect, UAnimSequence);
	READ_PTR_FULL(AmmoCheck, UAnimSequence);
}

void FCharacterAnimFirearm::BeforeDelete()
{
	DELE_PTR_FULL(HandPoseDeployed);
	DELE_PTR_FULL(HandPoseUnderbarrel);
	DELE_PTR_FULL(Empty);
	DELE_PTR_FULL(BipodLegsDeployed);
	DELE_PTR_FULL(FireComponentCycle);
	DELE_PTR_FULL(FirePoseStandNormal);
	DELE_PTR_FULL(FirePoseCrouchNormal);
	DELE_PTR_FULL(FirePoseProneNormal);
	DELE_PTR_FULL(FireSelect);
	DELE_PTR_FULL(AmmoCheck);
}

void FCachedFirearmAnimationData::AfterRead()
{
}

void FCachedFirearmAnimationData::BeforeDelete()
{
}

void FFirearmConfig::AfterRead()
{
	READ_PTR_FULL(ProjectileClass, UClass);
}

void FFirearmConfig::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileClass);
}

void FBipodTimesGroup::AfterRead()
{
}

void FBipodTimesGroup::BeforeDelete()
{
}

// Function Insurgency.Widget_Scoreboard_RowHeader.UpdateScoreboardConfig
// ()
// Parameters:
// struct FScoreboardConfig       Config                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_RowHeader::UpdateScoreboardConfig(const struct FScoreboardConfig& Config)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_RowHeader.UpdateScoreboardConfig");

	UWidget_Scoreboard_RowHeader_UpdateScoreboardConfig_Params params;
	params.Config = Config;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_RowHeader.UpdatePlayerCountLabel
// ()
void UWidget_Scoreboard_RowHeader::UpdatePlayerCountLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_RowHeader.UpdatePlayerCountLabel");

	UWidget_Scoreboard_RowHeader_UpdatePlayerCountLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_RowHeader.SetTeam
// ()
// Parameters:
// class ATeamInfo*               NewTeam                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_RowHeader::SetTeam(class ATeamInfo* NewTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_RowHeader.SetTeam");

	UWidget_Scoreboard_RowHeader_SetTeam_Params params;
	params.NewTeam = NewTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_RowHeader.CheckPlayerCount
// ()
void UWidget_Scoreboard_RowHeader::CheckPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_RowHeader.CheckPlayerCount");

	UWidget_Scoreboard_RowHeader_CheckPlayerCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_RowHeader.CheckObjectiveVisibility
// ()
// Parameters:
// bool                           bCanShowObjectives             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESlateVisibility UWidget_Scoreboard_RowHeader::CheckObjectiveVisibility(bool bCanShowObjectives)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_RowHeader.CheckObjectiveVisibility");

	UWidget_Scoreboard_RowHeader_CheckObjectiveVisibility_Params params;
	params.bCanShowObjectives = bCanShowObjectives;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWidget_Scoreboard_RowHeader::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(PlayerCountText, UTextBlock);
	READ_PTR_FULL(ObjSizeBox, USizeBox);
	READ_PTR_FULL(KADSizeBox, USizeBox);
	READ_PTR_FULL(ScrSizeBox, USizeBox);
	READ_PTR_FULL(HeaderInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(Team, ATeamInfo);
	READ_PTR_FULL(CurrentPlayerController, AINSPlayerController);
}

void UWidget_Scoreboard_RowHeader::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(PlayerCountText);
	DELE_PTR_FULL(ObjSizeBox);
	DELE_PTR_FULL(KADSizeBox);
	DELE_PTR_FULL(ScrSizeBox);
	DELE_PTR_FULL(HeaderInvalidationBox);
	DELE_PTR_FULL(Team);
	DELE_PTR_FULL(CurrentPlayerController);
}

// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateScoreboardBadge
// ()
// Parameters:
// int                            NewScoreboardBadge             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdateScoreboardBadge(int NewScoreboardBadge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateScoreboardBadge");

	UWidget_Scoreboard_PlayerRow_UpdateScoreboardBadge_Params params;
	params.NewScoreboardBadge = NewScoreboardBadge;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerState
// ()
// Parameters:
// class AINSPlayerState*         NewPlayerState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerState(class AINSPlayerState* NewPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerState");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerState_Params params;
	params.NewPlayerState = NewPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerScore
// ()
// Parameters:
// struct FPlayerStatGroupMinimal UpdatedScore                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerScore(const struct FPlayerStatGroupMinimal& UpdatedScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerScore");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerScore_Params params;
	params.UpdatedScore = UpdatedScore;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerPing
// ()
// Parameters:
// int                            NewPingMs                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerPing(int NewPingMs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerPing");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerPing_Params params;
	params.NewPingMs = NewPingMs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerName
// ()
// Parameters:
// struct FString                 NewName                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerName(const struct FString& NewName, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerName");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerName_Params params;
	params.NewName = NewName;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerExperience
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NewExperience                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerExperience(class AINSPlayerState* InPlayerState, int NewExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerExperience");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerExperience_Params params;
	params.InPlayerState = InPlayerState;
	params.NewExperience = NewExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerClass
// ()
// Parameters:
// class UPlayerClass*            InPlayerClass                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerClass(class UPlayerClass* InPlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerClass");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerClass_Params params;
	params.InPlayerClass = InPlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerAliveState
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdatePlayerAliveState(class AINSPlayerState* InPlayerState, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePlayerAliveState");

	UWidget_Scoreboard_PlayerRow_UpdatePlayerAliveState_Params params;
	params.InPlayerState = InPlayerState;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePingAndKAD
// ()
void UWidget_Scoreboard_PlayerRow::UpdatePingAndKAD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdatePingAndKAD");

	UWidget_Scoreboard_PlayerRow_UpdatePingAndKAD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateFromPlayerState
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromInit                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdateFromPlayerState(class AINSPlayerState* InPlayerState, bool bFromInit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateFromPlayerState");

	UWidget_Scoreboard_PlayerRow_UpdateFromPlayerState_Params params;
	params.InPlayerState = InPlayerState;
	params.bFromInit = bFromInit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateFactionStripeVisibility
// ()
void UWidget_Scoreboard_PlayerRow::UpdateFactionStripeVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateFactionStripeVisibility");

	UWidget_Scoreboard_PlayerRow_UpdateFactionStripeVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateExtendedColumnVisiblity
// ()
// Parameters:
// bool                           bNewVisibility                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdateExtendedColumnVisiblity(bool bNewVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateExtendedColumnVisiblity");

	UWidget_Scoreboard_PlayerRow_UpdateExtendedColumnVisiblity_Params params;
	params.bNewVisibility = bNewVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateDeveloperStatus
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDeveloperStatus               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdateDeveloperStatus(class AINSPlayerState* InPlayerState, bool bDeveloperStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateDeveloperStatus");

	UWidget_Scoreboard_PlayerRow_UpdateDeveloperStatus_Params params;
	params.InPlayerState = InPlayerState;
	params.bDeveloperStatus = bDeveloperStatus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateBotName
// ()
// Parameters:
// struct FText                   NewName                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::UpdateBotName(const struct FText& NewName, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateBotName");

	UWidget_Scoreboard_PlayerRow_UpdateBotName_Params params;
	params.NewName = NewName;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateBackgroundColor
// ()
void UWidget_Scoreboard_PlayerRow::UpdateBackgroundColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.UpdateBackgroundColor");

	UWidget_Scoreboard_PlayerRow_UpdateBackgroundColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.ToggleMute
// ()
// Parameters:
// bool                           bShouldMute                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::ToggleMute(bool bShouldMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.ToggleMute");

	UWidget_Scoreboard_PlayerRow_ToggleMute_Params params;
	params.bShouldMute = bShouldMute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.SetPlayerState
// ()
void UWidget_Scoreboard_PlayerRow::SetPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.SetPlayerState");

	UWidget_Scoreboard_PlayerRow_SetPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.SetPlayerIsTalking
// ()
// Parameters:
// bool                           InPlayerIsTalking              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::SetPlayerIsTalking(bool InPlayerIsTalking)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.SetPlayerIsTalking");

	UWidget_Scoreboard_PlayerRow_SetPlayerIsTalking_Params params;
	params.InPlayerIsTalking = InPlayerIsTalking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.SetFactionColor
// ()
// Parameters:
// struct FLinearColor            InNewFactionColor              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::SetFactionColor(const struct FLinearColor& InNewFactionColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.SetFactionColor");

	UWidget_Scoreboard_PlayerRow_SetFactionColor_Params params;
	params.InNewFactionColor = InNewFactionColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.RefreshColumnVisibility
// ()
void UWidget_Scoreboard_PlayerRow::RefreshColumnVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.RefreshColumnVisibility");

	UWidget_Scoreboard_PlayerRow_RefreshColumnVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnSetPlayerName
// ()
// Parameters:
// struct FString                 NewPlayerName                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnSetPlayerName(const struct FString& NewPlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnSetPlayerName");

	UWidget_Scoreboard_PlayerRow_OnSetPlayerName_Params params;
	params.NewPlayerName = NewPlayerName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerUpdateScoreboardBadge
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NewScoreboardBadge             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnPlayerUpdateScoreboardBadge(class AINSPlayerState* Player, int NewScoreboardBadge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerUpdateScoreboardBadge");

	UWidget_Scoreboard_PlayerRow_OnPlayerUpdateScoreboardBadge_Params params;
	params.Player = Player;
	params.NewScoreboardBadge = NewScoreboardBadge;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerStateEndPlay
// ()
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EEndPlayReason>    InEndPlayReason                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnPlayerStateEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> InEndPlayReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerStateEndPlay");

	UWidget_Scoreboard_PlayerRow_OnPlayerStateEndPlay_Params params;
	params.InActor = InActor;
	params.InEndPlayReason = InEndPlayReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerSpawned
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnPlayerSpawned(class AINSSoldier* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerSpawned");

	UWidget_Scoreboard_PlayerRow_OnPlayerSpawned_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerIsMutedChanged
// ()
// Parameters:
// bool                           bNewIsPlayingState             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnPlayerIsMutedChanged(bool bNewIsPlayingState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerIsMutedChanged");

	UWidget_Scoreboard_PlayerRow_OnPlayerIsMutedChanged_Params params;
	params.bNewIsPlayingState = bNewIsPlayingState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerDeath
// ()
void UWidget_Scoreboard_PlayerRow::OnPlayerDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerDeath");

	UWidget_Scoreboard_PlayerRow_OnPlayerDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerClassChanged
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnPlayerClassChanged(class AINSSoldier* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnPlayerClassChanged");

	UWidget_Scoreboard_PlayerRow_OnPlayerClassChanged_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.OnIsPlayingStateChanged
// ()
// Parameters:
// bool                           bNewIsPlayingState             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::OnIsPlayingStateChanged(bool bNewIsPlayingState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.OnIsPlayingStateChanged");

	UWidget_Scoreboard_PlayerRow_OnIsPlayingStateChanged_Params params;
	params.bNewIsPlayingState = bNewIsPlayingState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.InitFromPlayerState
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::InitFromPlayerState(class AINSPlayerState* InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.InitFromPlayerState");

	UWidget_Scoreboard_PlayerRow_InitFromPlayerState_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_PlayerRow.GetPlayerState
// ()
// Parameters:
// class AINSPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSPlayerState* UWidget_Scoreboard_PlayerRow::GetPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.GetPlayerState");

	UWidget_Scoreboard_PlayerRow_GetPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Widget_Scoreboard_PlayerRow.DoSetDefaultsToPlayerBadge
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_PlayerRow::DoSetDefaultsToPlayerBadge(class AINSPlayerState* InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_PlayerRow.DoSetDefaultsToPlayerBadge");

	UWidget_Scoreboard_PlayerRow_DoSetDefaultsToPlayerBadge_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWidget_Scoreboard_PlayerRow::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(ScoreText, UTextBlock);
	READ_PTR_FULL(TxtKDR, UTextBlock);
	READ_PTR_FULL(ObjectiveText, UTextBlock);
	READ_PTR_FULL(PingText, UTextBlock);
	READ_PTR_FULL(PlayerName, UTextBlock);
	READ_PTR_FULL(PlayerBadgeBox, UScaleBox);
	READ_PTR_FULL(PlayerBadgeImage, UImage);
	READ_PTR_FULL(ClassImageBox, UScaleBox);
	READ_PTR_FULL(ClassImage, UImage);
	READ_PTR_FULL(ScoreHiddenImage, UImage);
	READ_PTR_FULL(KDRHiddenImage, UImage);
	READ_PTR_FULL(MuteButtonImage, UImage);
	READ_PTR_FULL(FactionStripe, UImage);
	READ_PTR_FULL(BG, UImage);
	READ_PTR_FULL(MuteButton, UButton);
	READ_PTR_FULL(KDR_WidgetSwitcher, UWidgetSwitcher);
	READ_PTR_FULL(Score_WidgetSwitcher, UWidgetSwitcher);
	READ_PTR_FULL(RowInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(BGInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(PlayerBadgeTexture, UTexture2D);
	READ_PTR_FULL(CurrentPlayerController, AINSBasePlayerController);
	READ_PTR_FULL(IconVoiceOff, UTexture2D);
	READ_PTR_FULL(IconVoiceOn, UTexture2D);
	READ_PTR_FULL(IconVoiceActive, UTexture2D);
}

void UWidget_Scoreboard_PlayerRow::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(ScoreText);
	DELE_PTR_FULL(TxtKDR);
	DELE_PTR_FULL(ObjectiveText);
	DELE_PTR_FULL(PingText);
	DELE_PTR_FULL(PlayerName);
	DELE_PTR_FULL(PlayerBadgeBox);
	DELE_PTR_FULL(PlayerBadgeImage);
	DELE_PTR_FULL(ClassImageBox);
	DELE_PTR_FULL(ClassImage);
	DELE_PTR_FULL(ScoreHiddenImage);
	DELE_PTR_FULL(KDRHiddenImage);
	DELE_PTR_FULL(MuteButtonImage);
	DELE_PTR_FULL(FactionStripe);
	DELE_PTR_FULL(BG);
	DELE_PTR_FULL(MuteButton);
	DELE_PTR_FULL(KDR_WidgetSwitcher);
	DELE_PTR_FULL(Score_WidgetSwitcher);
	DELE_PTR_FULL(RowInvalidationBox);
	DELE_PTR_FULL(BGInvalidationBox);
	DELE_PTR_FULL(PlayerBadgeTexture);
	DELE_PTR_FULL(CurrentPlayerController);
	DELE_PTR_FULL(IconVoiceOff);
	DELE_PTR_FULL(IconVoiceOn);
	DELE_PTR_FULL(IconVoiceActive);
}

// Function Insurgency.VoiceStatus.OnTalkingPlayersChanged
// ()
// Parameters:
// TArray<class APlayerState*>    InTalkingPlayers               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoiceStatus::OnTalkingPlayersChanged(TArray<class APlayerState*> InTalkingPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoiceStatus.OnTalkingPlayersChanged");

	UVoiceStatus_OnTalkingPlayersChanged_Params params;
	params.InTalkingPlayers = InTalkingPlayers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VoiceStatus.OnRemoteVoiceChatStateChanged
// ()
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ChannelName                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerState*         DetectedPlayerState            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSpeaking                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNonPositional                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoiceStatus::OnRemoteVoiceChatStateChanged(const struct FString& PlayerName, const struct FString& ChannelName, class AINSPlayerState* DetectedPlayerState, bool bSpeaking, bool bNonPositional)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoiceStatus.OnRemoteVoiceChatStateChanged");

	UVoiceStatus_OnRemoteVoiceChatStateChanged_Params params;
	params.PlayerName = PlayerName;
	params.ChannelName = ChannelName;
	params.DetectedPlayerState = DetectedPlayerState;
	params.bSpeaking = bSpeaking;
	params.bNonPositional = bNonPositional;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VoiceStatus.OnPlayerTalkingStateChanged
// ()
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsTalking                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoiceStatus::OnPlayerTalkingStateChanged(class APlayerState* PlayerState, bool bIsTalking)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoiceStatus.OnPlayerTalkingStateChanged");

	UVoiceStatus_OnPlayerTalkingStateChanged_Params params;
	params.PlayerState = PlayerState;
	params.bIsTalking = bIsTalking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVoiceStatus::AfterRead()
{
	UUserWidget::AfterRead();

}

void UVoiceStatus::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.Widget_Scoreboard_Column.UpdateTeam
// ()
// Parameters:
// class ATeamInfo*               InTeamInfo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::UpdateTeam(class ATeamInfo* InTeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.UpdateTeam");

	UWidget_Scoreboard_Column_UpdateTeam_Params params;
	params.InTeamInfo = InTeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.UpdateSelectButtonOnConsole
// ()
// Parameters:
// bool                           bIsRowSelectable               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::UpdateSelectButtonOnConsole(bool bIsRowSelectable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.UpdateSelectButtonOnConsole");

	UWidget_Scoreboard_Column_UpdateSelectButtonOnConsole_Params params;
	params.bIsRowSelectable = bIsRowSelectable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.UpdateScoreboardConfig
// ()
// Parameters:
// struct FScoreboardConfig       Config                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::UpdateScoreboardConfig(const struct FScoreboardConfig& Config)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.UpdateScoreboardConfig");

	UWidget_Scoreboard_Column_UpdateScoreboardConfig_Params params;
	params.Config = Config;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.UpdatePlayerRows
// ()
void UWidget_Scoreboard_Column::UpdatePlayerRows()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.UpdatePlayerRows");

	UWidget_Scoreboard_Column_UpdatePlayerRows_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.UpdateColumnValues
// ()
void UWidget_Scoreboard_Column::UpdateColumnValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.UpdateColumnValues");

	UWidget_Scoreboard_Column_UpdateColumnValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.ToggleMuteAll
// ()
void UWidget_Scoreboard_Column::ToggleMuteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.ToggleMuteAll");

	UWidget_Scoreboard_Column_ToggleMuteAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.SetTeamRole
// ()
// Parameters:
// struct FText                   InTeamRole                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::SetTeamRole(const struct FText& InTeamRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.SetTeamRole");

	UWidget_Scoreboard_Column_SetTeamRole_Params params;
	params.InTeamRole = InTeamRole;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.SetTeamName
// ()
// Parameters:
// struct FText                   InTeamName                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::SetTeamName(const struct FText& InTeamName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.SetTeamName");

	UWidget_Scoreboard_Column_SetTeamName_Params params;
	params.InTeamName = InTeamName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.SetFactionColor
// ()
// Parameters:
// struct FLinearColor            InFactionColor                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::SetFactionColor(const struct FLinearColor& InFactionColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.SetFactionColor");

	UWidget_Scoreboard_Column_SetFactionColor_Params params;
	params.InFactionColor = InFactionColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.PeriodicTick
// ()
void UWidget_Scoreboard_Column::PeriodicTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.PeriodicTick");

	UWidget_Scoreboard_Column_PeriodicTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.OpenMenuForPlayer
// ()
// Parameters:
// class AINSPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::OpenMenuForPlayer(class AINSPlayerState* InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.OpenMenuForPlayer");

	UWidget_Scoreboard_Column_OpenMenuForPlayer_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.OnScoreboardShown
// ()
// Parameters:
// bool                           bShown                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::OnScoreboardShown(bool bShown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.OnScoreboardShown");

	UWidget_Scoreboard_Column_OnScoreboardShown_Params params;
	params.bShown = bShown;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.OnPlayerControllerEndPlay
// ()
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EEndPlayReason>    InEndPlayReason                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::OnPlayerControllerEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> InEndPlayReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.OnPlayerControllerEndPlay");

	UWidget_Scoreboard_Column_OnPlayerControllerEndPlay_Params params;
	params.InActor = InActor;
	params.InEndPlayReason = InEndPlayReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.HideActiveMenu
// ()
void UWidget_Scoreboard_Column::HideActiveMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.HideActiveMenu");

	UWidget_Scoreboard_Column_HideActiveMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.GetPlayerCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UWidget_Scoreboard_Column::GetPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.GetPlayerCount");

	UWidget_Scoreboard_Column_GetPlayerCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Widget_Scoreboard_Column.GetBottomPlayerWidget
// ()
// Parameters:
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWidget* UWidget_Scoreboard_Column::GetBottomPlayerWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.GetBottomPlayerWidget");

	UWidget_Scoreboard_Column_GetBottomPlayerWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Widget_Scoreboard_Column.DoSetTacticalMapToPlayerWidget
// ()
// Parameters:
// class UWidget*                 InPlayerWidget                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard_Column::DoSetTacticalMapToPlayerWidget(class UWidget* InPlayerWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.DoSetTacticalMapToPlayerWidget");

	UWidget_Scoreboard_Column_DoSetTacticalMapToPlayerWidget_Params params;
	params.InPlayerWidget = InPlayerWidget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard_Column.DoCreatePlayerRowWidget
// ()
// Parameters:
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWidget* UWidget_Scoreboard_Column::DoCreatePlayerRowWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard_Column.DoCreatePlayerRowWidget");

	UWidget_Scoreboard_Column_DoCreatePlayerRowWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWidget_Scoreboard_Column::AfterRead()
{
	UVoiceStatus::AfterRead();

	READ_PTR_FULL(CurrentPlayerController, AINSBasePlayerController);
	READ_PTR_FULL(ActiveMenuWidget, UUserWidget);
	READ_PTR_FULL(ParentScoreboard, UWidget_Scoreboard);
	READ_PTR_FULL(PlayerList, UVerticalBox);
	READ_PTR_FULL(BP_Widget_Scoreboard_RowHeader, UWidget_Scoreboard_RowHeader);
	READ_PTR_FULL(FactionBanner, UImage);
	READ_PTR_FULL(TeamScore, UTextBlock);
	READ_PTR_FULL(TeamWons, UTextBlock);
	READ_PTR_FULL(TeamPoints, UTextBlock);
	READ_PTR_FULL(TopColor, UImage);
	READ_PTR_FULL(TeamNameText, UTextBlock);
	READ_PTR_FULL(TeamRoleText, UTextBlock);
	READ_PTR_FULL(TeamWinsBox, UVerticalBox);
	READ_PTR_FULL(TeamScoreBox, UVerticalBox);
	READ_PTR_FULL(TeamPointsBox, UVerticalBox);
	READ_PTR_FULL(TextPointsLabel, UTextBlock);
	READ_PTR_FULL(ColumnInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(Team, ATeamInfo);
	READ_PTR_FULL(FactionBannerDynamicMaterial, UMaterialInstanceDynamic);
}

void UWidget_Scoreboard_Column::BeforeDelete()
{
	UVoiceStatus::BeforeDelete();

	DELE_PTR_FULL(CurrentPlayerController);
	DELE_PTR_FULL(ActiveMenuWidget);
	DELE_PTR_FULL(ParentScoreboard);
	DELE_PTR_FULL(PlayerList);
	DELE_PTR_FULL(BP_Widget_Scoreboard_RowHeader);
	DELE_PTR_FULL(FactionBanner);
	DELE_PTR_FULL(TeamScore);
	DELE_PTR_FULL(TeamWons);
	DELE_PTR_FULL(TeamPoints);
	DELE_PTR_FULL(TopColor);
	DELE_PTR_FULL(TeamNameText);
	DELE_PTR_FULL(TeamRoleText);
	DELE_PTR_FULL(TeamWinsBox);
	DELE_PTR_FULL(TeamScoreBox);
	DELE_PTR_FULL(TeamPointsBox);
	DELE_PTR_FULL(TextPointsLabel);
	DELE_PTR_FULL(ColumnInvalidationBox);
	DELE_PTR_FULL(Team);
	DELE_PTR_FULL(FactionBannerDynamicMaterial);
}

// Function Insurgency.ScoreboardBase.OnScoreboardShown
// ()
void UScoreboardBase::OnScoreboardShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBase.OnScoreboardShown");

	UScoreboardBase_OnScoreboardShown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ScoreboardBase.OnScoreboardHidden
// ()
void UScoreboardBase::OnScoreboardHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBase.OnScoreboardHidden");

	UScoreboardBase_OnScoreboardHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UScoreboardBase::AfterRead()
{
	UUserWidget::AfterRead();

}

void UScoreboardBase::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.Widget_Scoreboard.PeriodicTick
// ()
void UWidget_Scoreboard::PeriodicTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.PeriodicTick");

	UWidget_Scoreboard_PeriodicTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.OnTeamChanged
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard::OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.OnTeamChanged");

	UWidget_Scoreboard_OnTeamChanged_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.OnRefreshObjectives
// ()
void UWidget_Scoreboard::OnRefreshObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.OnRefreshObjectives");

	UWidget_Scoreboard_OnRefreshObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.OnRefreshMutators
// ()
void UWidget_Scoreboard::OnRefreshMutators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.OnRefreshMutators");

	UWidget_Scoreboard_OnRefreshMutators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.OnRefreshFactions
// ()
void UWidget_Scoreboard::OnRefreshFactions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.OnRefreshFactions");

	UWidget_Scoreboard_OnRefreshFactions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.OnPlayerControllerEndPlay
// ()
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EEndPlayReason>    InEndPlayReason                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard::OnPlayerControllerEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> InEndPlayReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.OnPlayerControllerEndPlay");

	UWidget_Scoreboard_OnPlayerControllerEndPlay_Params params;
	params.InActor = InActor;
	params.InEndPlayReason = InEndPlayReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.GetFormatText
// ()
// Parameters:
// bool                           bFirstElement                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UWidget_Scoreboard::GetFormatText(bool bFirstElement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.GetFormatText");

	UWidget_Scoreboard_GetFormatText_Params params;
	params.bFirstElement = bFirstElement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Widget_Scoreboard.DoUpdateGameState
// ()
// Parameters:
// class AINSGameState*           GameState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidget_Scoreboard::DoUpdateGameState(class AINSGameState* GameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.DoUpdateGameState");

	UWidget_Scoreboard_DoUpdateGameState_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.DoUpdateGameModeText
// ()
void UWidget_Scoreboard::DoUpdateGameModeText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.DoUpdateGameModeText");

	UWidget_Scoreboard_DoUpdateGameModeText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.DoBindTacticalMapPawnHowerStatusChanged
// ()
void UWidget_Scoreboard::DoBindTacticalMapPawnHowerStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.DoBindTacticalMapPawnHowerStatusChanged");

	UWidget_Scoreboard_DoBindTacticalMapPawnHowerStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Widget_Scoreboard.AssignTeams
// ()
void UWidget_Scoreboard::AssignTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Widget_Scoreboard.AssignTeams");

	UWidget_Scoreboard_AssignTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWidget_Scoreboard::AfterRead()
{
	UScoreboardBase::AfterRead();

	READ_PTR_FULL(CurrentPlayerController, AINSBasePlayerController);
	READ_PTR_FULL(ObjectiveBriefing, UObjectiveBriefing);
	READ_PTR_FULL(TeamLeft, UWidget_Scoreboard_Column);
	READ_PTR_FULL(TeamRight, UWidget_Scoreboard_Column);
	READ_PTR_FULL(TextMapName, UTextBlock);
	READ_PTR_FULL(LeftTeamFooter, USizeBox);
	READ_PTR_FULL(RightTeamFooter, USizeBox);
	READ_PTR_FULL(SpectatorList, UTextBlock);
	READ_PTR_FULL(SpectatorBox, UVerticalBox);
	READ_PTR_FULL(TitleInvalidationBox, USaberInvalidationBox);
}

void UWidget_Scoreboard::BeforeDelete()
{
	UScoreboardBase::BeforeDelete();

	DELE_PTR_FULL(CurrentPlayerController);
	DELE_PTR_FULL(ObjectiveBriefing);
	DELE_PTR_FULL(TeamLeft);
	DELE_PTR_FULL(TeamRight);
	DELE_PTR_FULL(TextMapName);
	DELE_PTR_FULL(LeftTeamFooter);
	DELE_PTR_FULL(RightTeamFooter);
	DELE_PTR_FULL(SpectatorList);
	DELE_PTR_FULL(SpectatorBox);
	DELE_PTR_FULL(TitleInvalidationBox);
}

// Function Insurgency.WidgetNavigationStatics.SetUniformGridPanelNavigation
// ()
// Parameters:
// class UUniformGridPanel*       Grid                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWidgetNavigationStatics::SetUniformGridPanelNavigation(class UUniformGridPanel* Grid)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WidgetNavigationStatics.SetUniformGridPanelNavigation");

	UWidgetNavigationStatics_SetUniformGridPanelNavigation_Params params;
	params.Grid = Grid;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WidgetNavigationStatics.GetUniformGridWidgetMap
// ()
// Parameters:
// class UUniformGridPanel*       Grid                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct FIntPoint, class UWidget*> OutGridWidgetMap               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UWidgetNavigationStatics::GetUniformGridWidgetMap(class UUniformGridPanel* Grid, TMap<struct FIntPoint, class UWidget*>* OutGridWidgetMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WidgetNavigationStatics.GetUniformGridWidgetMap");

	UWidgetNavigationStatics_GetUniformGridWidgetMap_Params params;
	params.Grid = Grid;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutGridWidgetMap != nullptr)
		*OutGridWidgetMap = params.OutGridWidgetMap;

}


void UWidgetNavigationStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWidgetNavigationStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UWheelParticleSystemComponent::AfterRead()
{
	UParticleSystemComponent::AfterRead();

}

void UWheelParticleSystemComponent::BeforeDelete()
{
	UParticleSystemComponent::BeforeDelete();

}

// Function Insurgency.WelcomeMenuWidget.PerformLogin
// ()
// Parameters:
// int                            UserIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWelcomeMenuWidget::PerformLogin(int UserIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WelcomeMenuWidget.PerformLogin");

	UWelcomeMenuWidget_PerformLogin_Params params;
	params.UserIndex = UserIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WelcomeMenuWidget.CanFadeLegalText
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWelcomeMenuWidget::CanFadeLegalText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WelcomeMenuWidget.CanFadeLegalText");

	UWelcomeMenuWidget_CanFadeLegalText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWelcomeMenuWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UWelcomeMenuWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.WebImageWidget.SetLocalImage
// ()
// Parameters:
// struct FString                 Path                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWebImageWidget::SetLocalImage(const struct FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WebImageWidget.SetLocalImage");

	UWebImageWidget_SetLocalImage_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WebImageWidget.SetImageUrl
// ()
// Parameters:
// struct FString                 NewUrl                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWebImageWidget::SetImageUrl(const struct FString& NewUrl)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WebImageWidget.SetImageUrl");

	UWebImageWidget_SetImageUrl_Params params;
	params.NewUrl = NewUrl;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WebImageWidget.SetImageFromTexturePath
// ()
void UWebImageWidget::SetImageFromTexturePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WebImageWidget.SetImageFromTexturePath");

	UWebImageWidget_SetImageFromTexturePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WebImageWidget.SetImageFromTexture
// ()
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWebImageWidget::SetImageFromTexture(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WebImageWidget.SetImageFromTexture");

	UWebImageWidget_SetImageFromTexture_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWebImageWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(WebImage, UImage);
	READ_PTR_FULL(StaticTexture, UTexture2D);
	READ_PTR_FULL(ImageTexture, UTexture2DDynamic);
}

void UWebImageWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(WebImage);
	DELE_PTR_FULL(StaticTexture);
	DELE_PTR_FULL(ImageTexture);
}

void UWebImageDecorator::AfterRead()
{
	URichTextBlockDecorator::AfterRead();

	READ_PTR_FULL(WidgetClass, UClass);
}

void UWebImageDecorator::BeforeDelete()
{
	URichTextBlockDecorator::BeforeDelete();

	DELE_PTR_FULL(WidgetClass);
}

// Function Insurgency.WeaponUpgradeComponent.PlaySoundEventPair
// ()
// Parameters:
// struct FAkComponentCameraPair  AudioEvent                     (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UWeaponUpgradeComponent::PlaySoundEventPair(struct FAkComponentCameraPair* AudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.PlaySoundEventPair");

	UWeaponUpgradeComponent_PlaySoundEventPair_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AudioEvent != nullptr)
		*AudioEvent = params.AudioEvent;

}


// Function Insurgency.WeaponUpgradeComponent.PlaySoundEventFromView
// ()
// Parameters:
// class UAkAudioEvent*           FirstPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*           ThirdPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponUpgradeComponent::PlaySoundEventFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.PlaySoundEventFromView");

	UWeaponUpgradeComponent_PlaySoundEventFromView_Params params;
	params.FirstPersonEvent = FirstPersonEvent;
	params.ThirdPersonEvent = ThirdPersonEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponUpgradeComponent.PlaySoundEvent
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplySpeedOfSound             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponUpgradeComponent::PlaySoundEvent(class UAkAudioEvent* Event, bool bApplySpeedOfSound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.PlaySoundEvent");

	UWeaponUpgradeComponent_PlaySoundEvent_Params params;
	params.Event = Event;
	params.bApplySpeedOfSound = bApplySpeedOfSound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.WeaponUpgradeComponent.OnUpgradeStateChangedDelegate__DelegateSignature
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponUpgradeComponent::OnUpgradeStateChangedDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.WeaponUpgradeComponent.OnUpgradeStateChangedDelegate__DelegateSignature");

	UWeaponUpgradeComponent_OnUpgradeStateChangedDelegate__DelegateSignature_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponUpgradeComponent.OnUpgradeStateChanged
// ()
void UWeaponUpgradeComponent::OnUpgradeStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.OnUpgradeStateChanged");

	UWeaponUpgradeComponent_OnUpgradeStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponUpgradeComponent.IsToggled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponUpgradeComponent::IsToggled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.IsToggled");

	UWeaponUpgradeComponent_IsToggled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponUpgradeComponent.IsOwnerLocallyControlled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponUpgradeComponent::IsOwnerLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.IsOwnerLocallyControlled");

	UWeaponUpgradeComponent_IsOwnerLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponUpgradeComponent.GetOwningSoldier
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* UWeaponUpgradeComponent::GetOwningSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.GetOwningSoldier");

	UWeaponUpgradeComponent_GetOwningSoldier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponUpgradeComponent.GetActiveOwningWeaponOrAttached
// ()
// Parameters:
// bool                           bReturnOwnerIfInactive         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemWeapon* UWeaponUpgradeComponent::GetActiveOwningWeaponOrAttached(bool bReturnOwnerIfInactive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.GetActiveOwningWeaponOrAttached");

	UWeaponUpgradeComponent_GetActiveOwningWeaponOrAttached_Params params;
	params.bReturnOwnerIfInactive = bReturnOwnerIfInactive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponUpgradeComponent.ConflictsWith
// ()
// Parameters:
// class UWeaponUpgradeComponent* Other                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponUpgradeComponent::ConflictsWith(class UWeaponUpgradeComponent* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.ConflictsWith");

	UWeaponUpgradeComponent_ConflictsWith_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponUpgradeComponent.CanShowCosmeticEffects
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponUpgradeComponent::CanShowCosmeticEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.CanShowCosmeticEffects");

	UWeaponUpgradeComponent_CanShowCosmeticEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponUpgradeComponent.BlueprintOnUpgradeRemoved
// ()
void UWeaponUpgradeComponent::BlueprintOnUpgradeRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.BlueprintOnUpgradeRemoved");

	UWeaponUpgradeComponent_BlueprintOnUpgradeRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponUpgradeComponent.BlueprintOnUpgradeInstalled
// ()
void UWeaponUpgradeComponent::BlueprintOnUpgradeInstalled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.BlueprintOnUpgradeInstalled");

	UWeaponUpgradeComponent_BlueprintOnUpgradeInstalled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponUpgradeComponent.BlueprintOnUpgradeInit
// ()
void UWeaponUpgradeComponent::BlueprintOnUpgradeInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponUpgradeComponent.BlueprintOnUpgradeInit");

	UWeaponUpgradeComponent_BlueprintOnUpgradeInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponUpgradeComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OwningWeapon, AItemWeapon);
	READ_PTR_FULL(ContextualHintImage, UTexture2D);
}

void UWeaponUpgradeComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OwningWeapon);
	DELE_PTR_FULL(ContextualHintImage);
}

// Function Insurgency.WeaponVisualUpgradeComponent.OnSpawnedThirdPersonMesh
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SpawnedMesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckAllLoaded                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponVisualUpgradeComponent::OnSpawnedThirdPersonMesh(class UINSSkeletalMeshComponent* SpawnedMesh, bool bCheckAllLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponVisualUpgradeComponent.OnSpawnedThirdPersonMesh");

	UWeaponVisualUpgradeComponent_OnSpawnedThirdPersonMesh_Params params;
	params.SpawnedMesh = SpawnedMesh;
	params.bCheckAllLoaded = bCheckAllLoaded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponVisualUpgradeComponent.OnSpawnedFirstPersonMesh
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SpawnedMesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckAllLoaded                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponVisualUpgradeComponent::OnSpawnedFirstPersonMesh(class UINSSkeletalMeshComponent* SpawnedMesh, bool bCheckAllLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponVisualUpgradeComponent.OnSpawnedFirstPersonMesh");

	UWeaponVisualUpgradeComponent_OnSpawnedFirstPersonMesh_Params params;
	params.SpawnedMesh = SpawnedMesh;
	params.bCheckAllLoaded = bCheckAllLoaded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponVisualUpgradeComponent.AreAllThirdPersonMeshesLoaded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponVisualUpgradeComponent::AreAllThirdPersonMeshesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponVisualUpgradeComponent.AreAllThirdPersonMeshesLoaded");

	UWeaponVisualUpgradeComponent_AreAllThirdPersonMeshesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponVisualUpgradeComponent.AreAllFirstPersonMeshesLoaded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponVisualUpgradeComponent::AreAllFirstPersonMeshesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponVisualUpgradeComponent.AreAllFirstPersonMeshesLoaded");

	UWeaponVisualUpgradeComponent_AreAllFirstPersonMeshesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWeaponVisualUpgradeComponent::AfterRead()
{
	UWeaponUpgradeComponent::AfterRead();

	READ_PTR_FULL(PrimaryModel1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(PrimaryModel3P, UINSSkeletalMeshComponent);
}

void UWeaponVisualUpgradeComponent::BeforeDelete()
{
	UWeaponUpgradeComponent::BeforeDelete();

	DELE_PTR_FULL(PrimaryModel1P);
	DELE_PTR_FULL(PrimaryModel3P);
}

void UWeaponHandlingUpgradeComponent::AfterRead()
{
	UWeaponVisualUpgradeComponent::AfterRead();

}

void UWeaponHandlingUpgradeComponent::BeforeDelete()
{
	UWeaponVisualUpgradeComponent::BeforeDelete();

}

void UWeaponTrainingComponent::AfterRead()
{
	UWeaponHandlingUpgradeComponent::AfterRead();

}

void UWeaponTrainingComponent::BeforeDelete()
{
	UWeaponHandlingUpgradeComponent::BeforeDelete();

}

// Function Insurgency.WeaponStatics.TraceSuppression
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 StartLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 EndLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Increment                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESuppressionContext            Context                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::TraceSuppression(class UObject* WorldContextObject, class AINSSoldier* Owner, const struct FVector& StartLocation, const struct FVector& EndLocation, float Radius, float Increment, ESuppressionContext Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.TraceSuppression");

	UWeaponStatics_TraceSuppression_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Owner = Owner;
	params.StartLocation = StartLocation;
	params.EndLocation = EndLocation;
	params.Radius = Radius;
	params.Increment = Increment;
	params.Context = Context;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponStatics.TestMeleeSwingIgnoreActors
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMeleeConfig            MeleeConfig                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class UPrimitiveComponent*> InIgnoreComponents             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPrimitiveComponent*> InOutHitComponents             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplyDamage                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponStatics::TestMeleeSwingIgnoreActors(class UObject* WorldContextObject, class APawn* Instigator, const struct FVector& Origin, const struct FRotator& Rotation, const struct FMeleeConfig& MeleeConfig, struct FHitResult* OutHitResult, TArray<class UPrimitiveComponent*> InIgnoreComponents, TArray<class UPrimitiveComponent*>* InOutHitComponents, bool bApplyDamage, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.TestMeleeSwingIgnoreActors");

	UWeaponStatics_TestMeleeSwingIgnoreActors_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Instigator = Instigator;
	params.Origin = Origin;
	params.Rotation = Rotation;
	params.MeleeConfig = MeleeConfig;
	params.InIgnoreComponents = InIgnoreComponents;
	params.bApplyDamage = bApplyDamage;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;
	if (InOutHitComponents != nullptr)
		*InOutHitComponents = params.InOutHitComponents;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.TestMeleeSwing
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMeleeConfig            MeleeConfig                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bApplyDamage                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponStatics::TestMeleeSwing(class UObject* WorldContextObject, class APawn* Instigator, const struct FVector& Origin, const struct FRotator& Rotation, const struct FMeleeConfig& MeleeConfig, struct FHitResult* OutHitResult, bool bApplyDamage, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.TestMeleeSwing");

	UWeaponStatics_TestMeleeSwing_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Instigator = Instigator;
	params.Origin = Origin;
	params.Rotation = Rotation;
	params.MeleeConfig = MeleeConfig;
	params.bApplyDamage = bApplyDamage;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.SuppressPlayersInRadius
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Epicenter                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESuppressionContext            Context                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerAmount                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterAmount                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AController*>     IgnoredControllers             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::SuppressPlayersInRadius(class UObject* WorldContextObject, const struct FVector& Epicenter, float HoldTime, ESuppressionContext Context, float InnerRadius, float OuterRadius, float InnerAmount, float OuterAmount, TArray<class AController*> IgnoredControllers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SuppressPlayersInRadius");

	UWeaponStatics_SuppressPlayersInRadius_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Epicenter = Epicenter;
	params.HoldTime = HoldTime;
	params.Context = Context;
	params.InnerRadius = InnerRadius;
	params.OuterRadius = OuterRadius;
	params.InnerAmount = InnerAmount;
	params.OuterAmount = OuterAmount;
	params.IgnoredControllers = IgnoredControllers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponStatics.SpawnSingleProjectileAtTransform
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ProjectileClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform              SpawnTransform                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDeferSpawn                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AProjectileBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AProjectileBase* UWeaponStatics::SpawnSingleProjectileAtTransform(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FTransform& SpawnTransform, class AItemWeapon* Weapon, bool bDeferSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SpawnSingleProjectileAtTransform");

	UWeaponStatics_SpawnSingleProjectileAtTransform_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ProjectileClass = ProjectileClass;
	params.Instigator = Instigator;
	params.SpawnTransform = SpawnTransform;
	params.Weapon = Weapon;
	params.bDeferSpawn = bDeferSpawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.SpawnSingleProjectile
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ProjectileClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 SpawnLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDeferSpawn                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AProjectileBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AProjectileBase* UWeaponStatics::SpawnSingleProjectile(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FVector& SpawnLocation, const struct FVector& Direction, class AItemWeapon* Weapon, bool bDeferSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SpawnSingleProjectile");

	UWeaponStatics_SpawnSingleProjectile_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ProjectileClass = ProjectileClass;
	params.Instigator = Instigator;
	params.SpawnLocation = SpawnLocation;
	params.Direction = Direction;
	params.Weapon = Weapon;
	params.bDeferSpawn = bDeferSpawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.SpawnProjectiles
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ProjectileClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 SpawnLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AProjectileBase*> SpawnedProjectiles             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ProjectileSpread               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SpreadSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::SpawnProjectiles(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FVector& SpawnLocation, const struct FVector& Direction, TArray<class AProjectileBase*>* SpawnedProjectiles, float ProjectileSpread, int Count, int SpreadSeed, class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SpawnProjectiles");

	UWeaponStatics_SpawnProjectiles_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ProjectileClass = ProjectileClass;
	params.Instigator = Instigator;
	params.SpawnLocation = SpawnLocation;
	params.Direction = Direction;
	params.ProjectileSpread = ProjectileSpread;
	params.Count = Count;
	params.SpreadSeed = SpreadSeed;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SpawnedProjectiles != nullptr)
		*SpawnedProjectiles = params.SpawnedProjectiles;

}


// Function Insurgency.WeaponStatics.SpawnMountedWeapon
// ()
// Parameters:
// class UClass*                  Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OwnerActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   LinkedSeat                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemFirearm*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemFirearm* UWeaponStatics::SpawnMountedWeapon(class UClass* Weapon, class AActor* OwnerActor, class USceneComponent* AttachComponent, const struct FName& SocketName, class UVehicleSeatComponent* LinkedSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SpawnMountedWeapon");

	UWeaponStatics_SpawnMountedWeapon_Params params;
	params.Weapon = Weapon;
	params.OwnerActor = OwnerActor;
	params.AttachComponent = AttachComponent;
	params.SocketName = SocketName;
	params.LinkedSeat = LinkedSeat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.SpawnFireSupport
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFireSupportDefinition*  Definition                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Assister                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRespectTeamRules              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFireSupportBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AFireSupportBase* UWeaponStatics::SpawnFireSupport(class UObject* WorldContextObject, class UFireSupportDefinition* Definition, const struct FVector& Location, unsigned char TeamId, class AController* Instigator, class AController* Assister, bool bRespectTeamRules)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SpawnFireSupport");

	UWeaponStatics_SpawnFireSupport_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Definition = Definition;
	params.Location = Location;
	params.TeamId = TeamId;
	params.Instigator = Instigator;
	params.Assister = Assister;
	params.bRespectTeamRules = bRespectTeamRules;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.SetupMountedWeapon
// ()
// Parameters:
// class AItemFirearm*            MountedWeapon                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OwnerActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   LinkedSeat                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::SetupMountedWeapon(class AItemFirearm* MountedWeapon, class AActor* OwnerActor, class USceneComponent* AttachComponent, const struct FName& SocketName, class UVehicleSeatComponent* LinkedSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.SetupMountedWeapon");

	UWeaponStatics_SetupMountedWeapon_Params params;
	params.MountedWeapon = MountedWeapon;
	params.OwnerActor = OwnerActor;
	params.AttachComponent = AttachComponent;
	params.SocketName = SocketName;
	params.LinkedSeat = LinkedSeat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponStatics.PlayShellShock
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Epicenter                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerDuration                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterDuration                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AController*>     IgnoredControllers             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::PlayShellShock(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, TArray<class AController*> IgnoredControllers, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.PlayShellShock");

	UWeaponStatics_PlayShellShock_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Epicenter = Epicenter;
	params.InnerRadius = InnerRadius;
	params.OuterRadius = OuterRadius;
	params.InnerDuration = InnerDuration;
	params.OuterDuration = OuterDuration;
	params.IgnoredControllers = IgnoredControllers;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponStatics.PlayExplosiveSurfaceReactionWithHit
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Projectile                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USurfaceReaction*        InSurfaceReaction              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSurfaceReactionOutput  OutOutput                      (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FString                 WeaponSwitch                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::PlayExplosiveSurfaceReactionWithHit(class UObject* WorldContextObject, class AActor* Projectile, class USurfaceReaction* InSurfaceReaction, const struct FHitResult& HitResult, struct FSurfaceReactionOutput* OutOutput, const struct FString& WeaponSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.PlayExplosiveSurfaceReactionWithHit");

	UWeaponStatics_PlayExplosiveSurfaceReactionWithHit_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Projectile = Projectile;
	params.InSurfaceReaction = InSurfaceReaction;
	params.HitResult = HitResult;
	params.WeaponSwitch = WeaponSwitch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOutput != nullptr)
		*OutOutput = params.OutOutput;

}


// Function Insurgency.WeaponStatics.PlayExplosiveSurfaceReaction
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Projectile                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USurfaceReaction*        InSurfaceReaction              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSurfaceReactionOutput  OutOutput                      (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FString                 WeaponSwitch                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::PlayExplosiveSurfaceReaction(class UObject* WorldContextObject, class AActor* Projectile, class USurfaceReaction* InSurfaceReaction, const struct FVector& HitLocation, struct FSurfaceReactionOutput* OutOutput, const struct FString& WeaponSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.PlayExplosiveSurfaceReaction");

	UWeaponStatics_PlayExplosiveSurfaceReaction_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Projectile = Projectile;
	params.InSurfaceReaction = InSurfaceReaction;
	params.HitLocation = HitLocation;
	params.WeaponSwitch = WeaponSwitch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOutput != nullptr)
		*OutOutput = params.OutOutput;

}


// Function Insurgency.WeaponStatics.IsAReloadingState
// ()
// Parameters:
// EFirearmState                  TestState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponStatics::IsAReloadingState(EFirearmState TestState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.IsAReloadingState");

	UWeaponStatics_IsAReloadingState_Params params;
	params.TestState = TestState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetValidFireSupportForTeam
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRespectTeamRules              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFireSupportDefinition*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UFireSupportDefinition*> UWeaponStatics::GetValidFireSupportForTeam(class UObject* WorldContextObject, unsigned char TeamId, bool bRespectTeamRules)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetValidFireSupportForTeam");

	UWeaponStatics_GetValidFireSupportForTeam_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;
	params.bRespectTeamRules = bRespectTeamRules;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetSwingYawMultiplierForDirection
// ()
// Parameters:
// EMeleeSwingDirection           Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UWeaponStatics::GetSwingYawMultiplierForDirection(EMeleeSwingDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetSwingYawMultiplierForDirection");

	UWeaponStatics_GetSwingYawMultiplierForDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetSwingPitchMultiplierForDirection
// ()
// Parameters:
// EMeleeSwingDirection           Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UWeaponStatics::GetSwingPitchMultiplierForDirection(EMeleeSwingDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetSwingPitchMultiplierForDirection");

	UWeaponStatics_GetSwingPitchMultiplierForDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetReloadGroupFromMap
// ()
// Parameters:
// class UClass*                  Ammo                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class UClass*, struct FReloadGroup> Map                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bOutFound                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FReloadGroup            ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FReloadGroup UWeaponStatics::GetReloadGroupFromMap(class UClass* Ammo, TMap<class UClass*, struct FReloadGroup>* Map, bool* bOutFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetReloadGroupFromMap");

	UWeaponStatics_GetReloadGroupFromMap_Params params;
	params.Ammo = Ammo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Map != nullptr)
		*Map = params.Map;
	if (bOutFound != nullptr)
		*bOutFound = params.bOutFound;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetExplosiveDamageModifier
// ()
// Parameters:
// class UPrimitiveComponent*     VictimComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExplosiveDamageParams  ExplosiveParameters            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UWeaponStatics::GetExplosiveDamageModifier(class UPrimitiveComponent* VictimComp, const struct FExplosiveDamageParams& ExplosiveParameters, struct FHitResult* OutHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetExplosiveDamageModifier");

	UWeaponStatics_GetExplosiveDamageModifier_Params params;
	params.VictimComp = VictimComp;
	params.ExplosiveParameters = ExplosiveParameters;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetBulletManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABulletManager*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ABulletManager* UWeaponStatics::GetBulletManager(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetBulletManager");

	UWeaponStatics_GetBulletManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetAnimSequenceRandomFromMap
// ()
// Parameters:
// class UClass*                  Ammo                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class UClass*, struct FAnimSequenceRandom> Map                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bOutFound                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAnimSequenceRandom     ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FAnimSequenceRandom UWeaponStatics::GetAnimSequenceRandomFromMap(class UClass* Ammo, TMap<class UClass*, struct FAnimSequenceRandom>* Map, bool* bOutFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAnimSequenceRandomFromMap");

	UWeaponStatics_GetAnimSequenceRandomFromMap_Params params;
	params.Ammo = Ammo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Map != nullptr)
		*Map = params.Map;
	if (bOutFound != nullptr)
		*bOutFound = params.bOutFound;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetAnimSequenceFromMap
// ()
// Parameters:
// class UClass*                  Ammo                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class UClass*, class UAnimSequence*> Map                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bOutFound                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimSequence* UWeaponStatics::GetAnimSequenceFromMap(class UClass* Ammo, TMap<class UClass*, class UAnimSequence*>* Map, bool* bOutFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAnimSequenceFromMap");

	UWeaponStatics_GetAnimSequenceFromMap_Params params;
	params.Ammo = Ammo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Map != nullptr)
		*Map = params.Map;
	if (bOutFound != nullptr)
		*bOutFound = params.bOutFound;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetAnimMontageFromMap
// ()
// Parameters:
// class UClass*                  Ammo                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class UClass*, class UAnimMontage*> Map                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bOutFound                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimMontage* UWeaponStatics::GetAnimMontageFromMap(class UClass* Ammo, TMap<class UClass*, class UAnimMontage*>* Map, bool* bOutFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAnimMontageFromMap");

	UWeaponStatics_GetAnimMontageFromMap_Params params;
	params.Ammo = Ammo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Map != nullptr)
		*Map = params.Map;
	if (bOutFound != nullptr)
		*bOutFound = params.bOutFound;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.GetAllWeaponUpgradeClassesForWeapon
// ()
// Parameters:
// class UClass*                  Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutUpgradeClasses              (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSorted                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::GetAllWeaponUpgradeClassesForWeapon(class UClass* Weapon, TArray<class UClass*>* OutUpgradeClasses, bool bSorted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAllWeaponUpgradeClassesForWeapon");

	UWeaponStatics_GetAllWeaponUpgradeClassesForWeapon_Params params;
	params.Weapon = Weapon;
	params.bSorted = bSorted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUpgradeClasses != nullptr)
		*OutUpgradeClasses = params.OutUpgradeClasses;

}


// Function Insurgency.WeaponStatics.GetAllWeaponUpgradeClasses
// ()
// Parameters:
// TArray<class UClass*>          OutUpgradeClasses              (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSorted                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::GetAllWeaponUpgradeClasses(TArray<class UClass*>* OutUpgradeClasses, bool bSorted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAllWeaponUpgradeClasses");

	UWeaponStatics_GetAllWeaponUpgradeClasses_Params params;
	params.bSorted = bSorted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUpgradeClasses != nullptr)
		*OutUpgradeClasses = params.OutUpgradeClasses;

}


// Function Insurgency.WeaponStatics.GetAllWeaponClasses
// ()
// Parameters:
// TArray<class UClass*>          OutItemClasses                 (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSorted                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::GetAllWeaponClasses(TArray<class UClass*>* OutItemClasses, bool bSorted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAllWeaponClasses");

	UWeaponStatics_GetAllWeaponClasses_Params params;
	params.bSorted = bSorted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutItemClasses != nullptr)
		*OutItemClasses = params.OutItemClasses;

}


// Function Insurgency.WeaponStatics.GetAllEquipableClasses
// ()
// Parameters:
// TArray<class UClass*>          OutItemClasses                 (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSorted                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::GetAllEquipableClasses(TArray<class UClass*>* OutItemClasses, bool bSorted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.GetAllEquipableClasses");

	UWeaponStatics_GetAllEquipableClasses_Params params;
	params.bSorted = bSorted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutItemClasses != nullptr)
		*OutItemClasses = params.OutItemClasses;

}


// Function Insurgency.WeaponStatics.FireBullets
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSimulatedBullet        BulletInfo                     (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          ProjectileSpread               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SpreadSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::FireBullets(class UObject* WorldContextObject, struct FSimulatedBullet* BulletInfo, float ProjectileSpread, int Count, int SpreadSeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.FireBullets");

	UWeaponStatics_FireBullets_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ProjectileSpread = ProjectileSpread;
	params.Count = Count;
	params.SpreadSeed = SpreadSeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (BulletInfo != nullptr)
		*BulletInfo = params.BulletInfo;

}


// Function Insurgency.WeaponStatics.DoMeleeSwingIgnoreActors
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMeleeConfig            MeleeConfig                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                          SwingPercent                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              OutHitResults                  (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class UPrimitiveComponent*> InIgnoreComponents             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPrimitiveComponent*> InOutHitComponents             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplyDamage                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamagerCauser                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponStatics::DoMeleeSwingIgnoreActors(class UObject* WorldContextObject, class AINSSoldier* Instigator, const struct FMeleeConfig& MeleeConfig, float SwingPercent, struct FHitResult* OutHitResults, TArray<class UPrimitiveComponent*> InIgnoreComponents, TArray<class UPrimitiveComponent*>* InOutHitComponents, bool bApplyDamage, class AActor* DamagerCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.DoMeleeSwingIgnoreActors");

	UWeaponStatics_DoMeleeSwingIgnoreActors_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Instigator = Instigator;
	params.MeleeConfig = MeleeConfig;
	params.SwingPercent = SwingPercent;
	params.InIgnoreComponents = InIgnoreComponents;
	params.bApplyDamage = bApplyDamage;
	params.DamagerCauser = DamagerCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResults != nullptr)
		*OutHitResults = params.OutHitResults;
	if (InOutHitComponents != nullptr)
		*InOutHitComponents = params.InOutHitComponents;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.DoMeleeSwing
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMeleeConfig            MeleeConfig                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                          SwingPercent                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              OutHitResults                  (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bApplyDamage                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamagerCauser                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponStatics::DoMeleeSwing(class UObject* WorldContextObject, class AINSSoldier* Instigator, const struct FMeleeConfig& MeleeConfig, float SwingPercent, struct FHitResult* OutHitResults, bool bApplyDamage, class AActor* DamagerCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.DoMeleeSwing");

	UWeaponStatics_DoMeleeSwing_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Instigator = Instigator;
	params.MeleeConfig = MeleeConfig;
	params.SwingPercent = SwingPercent;
	params.bApplyDamage = bApplyDamage;
	params.DamagerCauser = DamagerCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResults != nullptr)
		*OutHitResults = params.OutHitResults;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.DoExplosiveDamage
// ()
// Parameters:
// struct FExplosiveDamageParams  Parameters                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponStatics::DoExplosiveDamage(const struct FExplosiveDamageParams& Parameters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.DoExplosiveDamage");

	UWeaponStatics_DoExplosiveDamage_Params params;
	params.Parameters = Parameters;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponStatics.DeafenPlayersInRadius
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Epicenter                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerDuration                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterDuration                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AController*>     IgnoredControllers             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponStatics::DeafenPlayersInRadius(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, TArray<class AController*> IgnoredControllers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStatics.DeafenPlayersInRadius");

	UWeaponStatics_DeafenPlayersInRadius_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Epicenter = Epicenter;
	params.InnerRadius = InnerRadius;
	params.OuterRadius = OuterRadius;
	params.InnerDuration = InnerDuration;
	params.OuterDuration = OuterDuration;
	params.IgnoredControllers = IgnoredControllers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWeaponStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.WeaponSkinComponent.OnWeaponModelAttached
// ()
// Parameters:
// struct FWeaponAttachedModel    Model                          (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  WeaponParentMesh               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSkinComponent::OnWeaponModelAttached(struct FWeaponAttachedModel* Model, class USkeletalMeshComponent* WeaponParentMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSkinComponent.OnWeaponModelAttached");

	UWeaponSkinComponent_OnWeaponModelAttached_Params params;
	params.WeaponParentMesh = WeaponParentMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Model != nullptr)
		*Model = params.Model;

}


// Function Insurgency.WeaponSkinComponent.OnUpgrade3PMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWeaponVisualUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSkinComponent::OnUpgrade3PMeshLoaded(class UINSSkeletalMeshComponent* MeshComponent, class UWeaponVisualUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSkinComponent.OnUpgrade3PMeshLoaded");

	UWeaponSkinComponent_OnUpgrade3PMeshLoaded_Params params;
	params.MeshComponent = MeshComponent;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSkinComponent.OnUpgrade1PMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWeaponVisualUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSkinComponent::OnUpgrade1PMeshLoaded(class UINSSkeletalMeshComponent* MeshComponent, class UWeaponVisualUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSkinComponent.OnUpgrade1PMeshLoaded");

	UWeaponSkinComponent_OnUpgrade1PMeshLoaded_Params params;
	params.MeshComponent = MeshComponent;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSkinComponent.OnOtherComponentChanged
// ()
// Parameters:
// class UWeaponUpgradeComponent* OtherUpgrade                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSkinComponent::OnOtherComponentChanged(class UWeaponUpgradeComponent* OtherUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSkinComponent.OnOtherComponentChanged");

	UWeaponSkinComponent_OnOtherComponentChanged_Params params;
	params.OtherUpgrade = OtherUpgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSkinComponent.OnAttachMesh3PToPawn
// ()
// Parameters:
// class UINSSkeletalMeshComponent* MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSkinComponent::OnAttachMesh3PToPawn(class UINSSkeletalMeshComponent* MeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSkinComponent.OnAttachMesh3PToPawn");

	UWeaponSkinComponent_OnAttachMesh3PToPawn_Params params;
	params.MeshComponent = MeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSkinComponent.OnAttachMesh1PToPawn
// ()
// Parameters:
// class UINSSkeletalMeshComponent* MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSkinComponent::OnAttachMesh1PToPawn(class UINSSkeletalMeshComponent* MeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSkinComponent.OnAttachMesh1PToPawn");

	UWeaponSkinComponent_OnAttachMesh1PToPawn_Params params;
	params.MeshComponent = MeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponSkinComponent::AfterRead()
{
	UWeaponVisualUpgradeComponent::AfterRead();

}

void UWeaponSkinComponent::BeforeDelete()
{
	UWeaponVisualUpgradeComponent::BeforeDelete();

}

// Function Insurgency.WeaponSelection_Gamepad.UpdateWeaponCache
// ()
void UWeaponSelection_Gamepad::UpdateWeaponCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSelection_Gamepad.UpdateWeaponCache");

	UWeaponSelection_Gamepad_UpdateWeaponCache_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSelection_Gamepad.OnSoldierInventoryItemAddedOrRemoved
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemBase*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSelection_Gamepad::OnSoldierInventoryItemAddedOrRemoved(class AINSSoldier* Soldier, class AItemBase* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSelection_Gamepad.OnSoldierInventoryItemAddedOrRemoved");

	UWeaponSelection_Gamepad_OnSoldierInventoryItemAddedOrRemoved_Params params;
	params.Soldier = Soldier;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSelection_Gamepad.OnInventoryMenuVisible
// ()
// Parameters:
// bool                           bNewInventorySelectActive      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUsingGamepad                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponSelection_Gamepad::OnInventoryMenuVisible(bool bNewInventorySelectActive, bool bUsingGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSelection_Gamepad.OnInventoryMenuVisible");

	UWeaponSelection_Gamepad_OnInventoryMenuVisible_Params params;
	params.bNewInventorySelectActive = bNewInventorySelectActive;
	params.bUsingGamepad = bUsingGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSelection_Gamepad.OnInventoryChanged
// ()
void UWeaponSelection_Gamepad::OnInventoryChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSelection_Gamepad.OnInventoryChanged");

	UWeaponSelection_Gamepad_OnInventoryChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSelection_Gamepad.OnControllerRemovePawn
// ()
void UWeaponSelection_Gamepad::OnControllerRemovePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSelection_Gamepad.OnControllerRemovePawn");

	UWeaponSelection_Gamepad_OnControllerRemovePawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponSelection_Gamepad.OnControllerNewPawn
// ()
void UWeaponSelection_Gamepad::OnControllerNewPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponSelection_Gamepad.OnControllerNewPawn");

	UWeaponSelection_Gamepad_OnControllerNewPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponSelection_Gamepad::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(CurrentPlayerController, AINSPlayerController);
	READ_PTR_FULL(FirstItemInSlot, AItemEquipable);
	READ_PTR_FULL(PreviousItem, AItemEquipable);
	READ_PTR_FULL(LastSelectedItem, AItemEquipable);
	READ_PTR_FULL(ExplosivesContainer, UVerticalBox);
	READ_PTR_FULL(MiscContainer, UHorizontalBox);
	READ_PTR_FULL(PrimaryContainer, UVerticalBox);
	READ_PTR_FULL(SecondaryContainer, UHorizontalBox);
	READ_PTR_FULL(OptionClassInstance, UClass);
}

void UWeaponSelection_Gamepad::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(CurrentPlayerController);
	DELE_PTR_FULL(FirstItemInSlot);
	DELE_PTR_FULL(PreviousItem);
	DELE_PTR_FULL(LastSelectedItem);
	DELE_PTR_FULL(ExplosivesContainer);
	DELE_PTR_FULL(MiscContainer);
	DELE_PTR_FULL(PrimaryContainer);
	DELE_PTR_FULL(SecondaryContainer);
	DELE_PTR_FULL(OptionClassInstance);
}

void UWeaponSelectionOption_Gamepad::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(Item, AItemEquipable);
	READ_PTR_FULL(ImageBackground, UImage);
	READ_PTR_FULL(ImageWeaponIcon, UImage);
}

void UWeaponSelectionOption_Gamepad::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(Item);
	DELE_PTR_FULL(ImageBackground);
	DELE_PTR_FULL(ImageWeaponIcon);
}

// Function Insurgency.WeaponOpticComponent.ServerCycleOptic
// ()
void UWeaponOpticComponent::ServerCycleOptic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.ServerCycleOptic");

	UWeaponOpticComponent_ServerCycleOptic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponOpticComponent.OnRep_CurrentOptic
// ()
// Parameters:
// int                            PreviousOptic                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponOpticComponent::OnRep_CurrentOptic(int PreviousOptic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.OnRep_CurrentOptic");

	UWeaponOpticComponent_OnRep_CurrentOptic_Params params;
	params.PreviousOptic = PreviousOptic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.WeaponOpticComponent.OnCycleOpticDelegate__DelegateSignature
// ()
// Parameters:
// int                            LatchedMode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            DesiredMode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponOpticComponent::OnCycleOpticDelegate__DelegateSignature(int LatchedMode, int DesiredMode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.WeaponOpticComponent.OnCycleOpticDelegate__DelegateSignature");

	UWeaponOpticComponent_OnCycleOpticDelegate__DelegateSignature_Params params;
	params.LatchedMode = LatchedMode;
	params.DesiredMode = DesiredMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponOpticComponent.IsHybridOptic
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponOpticComponent::IsHybridOptic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.IsHybridOptic");

	UWeaponOpticComponent_IsHybridOptic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.IsCyclingOptic
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponOpticComponent::IsCyclingOptic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.IsCyclingOptic");

	UWeaponOpticComponent_IsCyclingOptic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.GetZoomLevelClassification
// ()
// Parameters:
// EOpticZoomLevel                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EOpticZoomLevel UWeaponOpticComponent::GetZoomLevelClassification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.GetZoomLevelClassification");

	UWeaponOpticComponent_GetZoomLevelClassification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.GetNumberOpticModes
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UWeaponOpticComponent::GetNumberOpticModes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.GetNumberOpticModes");

	UWeaponOpticComponent_GetNumberOpticModes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.GetDefaultZoomLevelClassification
// ()
// Parameters:
// EOpticZoomLevel                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EOpticZoomLevel UWeaponOpticComponent::GetDefaultZoomLevelClassification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.GetDefaultZoomLevelClassification");

	UWeaponOpticComponent_GetDefaultZoomLevelClassification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.GetADSMultiplier
// ()
// Parameters:
// bool                           bAimingDownSights              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UWeaponOpticComponent::GetADSMultiplier(bool bAimingDownSights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.GetADSMultiplier");

	UWeaponOpticComponent_GetADSMultiplier_Params params;
	params.bAimingDownSights = bAimingDownSights;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.FinishOpticTransition
// ()
void UWeaponOpticComponent::FinishOpticTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.FinishOpticTransition");

	UWeaponOpticComponent_FinishOpticTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponOpticComponent.BlueprintOnCycleOptic
// ()
// Parameters:
// int                            LatchedMode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponOpticComponent::BlueprintOnCycleOptic(int LatchedMode, int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.BlueprintOnCycleOptic");

	UWeaponOpticComponent_BlueprintOnCycleOptic_Params params;
	params.LatchedMode = LatchedMode;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponOpticComponent.BeginOpticTransition
// ()
void UWeaponOpticComponent::BeginOpticTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.BeginOpticTransition");

	UWeaponOpticComponent_BeginOpticTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponOpticComponent.AllowPointShooting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponOpticComponent::AllowPointShooting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.AllowPointShooting");

	UWeaponOpticComponent_AllowPointShooting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponOpticComponent.AllowAimDownSights
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponOpticComponent::AllowAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponOpticComponent.AllowAimDownSights");

	UWeaponOpticComponent_AllowAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWeaponOpticComponent::AfterRead()
{
	UWeaponVisualUpgradeComponent::AfterRead();

	READ_PTR_FULL(OpticADSMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(OpticHipfireMaterial, UMaterialInstanceDynamic);
}

void UWeaponOpticComponent::BeforeDelete()
{
	UWeaponVisualUpgradeComponent::BeforeDelete();

	DELE_PTR_FULL(OpticADSMaterial);
	DELE_PTR_FULL(OpticHipfireMaterial);
}

void UWeaponScopeComponent::AfterRead()
{
	UWeaponOpticComponent::AfterRead();

	READ_PTR_FULL(ScopeReflectiveMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(ScopeReticleMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(BodyMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(PostProcessMaterial, UMaterialInterface);
}

void UWeaponScopeComponent::BeforeDelete()
{
	UWeaponOpticComponent::BeforeDelete();

	DELE_PTR_FULL(ScopeReflectiveMaterial);
	DELE_PTR_FULL(ScopeReticleMaterial);
	DELE_PTR_FULL(BodyMaterial);
	DELE_PTR_FULL(PostProcessMaterial);
}

void UWeaponForegripComponent::AfterRead()
{
	UWeaponHandlingUpgradeComponent::AfterRead();

}

void UWeaponForegripComponent::BeforeDelete()
{
	UWeaponHandlingUpgradeComponent::BeforeDelete();

}

// Function Insurgency.WeaponPointShootGripComponent.WantsPointShoot
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponPointShootGripComponent::WantsPointShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponPointShootGripComponent.WantsPointShoot");

	UWeaponPointShootGripComponent_WantsPointShoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponPointShootGripComponent.SetWantsPointShoot
// ()
// Parameters:
// bool                           bNewWantsPointShoot            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponPointShootGripComponent::SetWantsPointShoot(bool bNewWantsPointShoot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponPointShootGripComponent.SetWantsPointShoot");

	UWeaponPointShootGripComponent_SetWantsPointShoot_Params params;
	params.bNewWantsPointShoot = bNewWantsPointShoot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponPointShootGripComponent.ServerSetWantsPointShoot
// ()
// Parameters:
// bool                           bNewWantsPointShoot            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponPointShootGripComponent::ServerSetWantsPointShoot(bool bNewWantsPointShoot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponPointShootGripComponent.ServerSetWantsPointShoot");

	UWeaponPointShootGripComponent_ServerSetWantsPointShoot_Params params;
	params.bNewWantsPointShoot = bNewWantsPointShoot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponPointShootGripComponent.OnRep_bWantsPointShoot
// ()
void UWeaponPointShootGripComponent::OnRep_bWantsPointShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponPointShootGripComponent.OnRep_bWantsPointShoot");

	UWeaponPointShootGripComponent_OnRep_bWantsPointShoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponPointShootGripComponent::AfterRead()
{
	UWeaponForegripComponent::AfterRead();

	READ_PTR_FULL(AudioEventToPointShoot, UAkAudioEvent);
	READ_PTR_FULL(AudioEventToADS, UAkAudioEvent);
}

void UWeaponPointShootGripComponent::BeforeDelete()
{
	UWeaponForegripComponent::BeforeDelete();

	DELE_PTR_FULL(AudioEventToPointShoot);
	DELE_PTR_FULL(AudioEventToADS);
}

// Function Insurgency.WeaponMountComponent.OnRep_MountedWeapons
// ()
void UWeaponMountComponent::OnRep_MountedWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponMountComponent.OnRep_MountedWeapons");

	UWeaponMountComponent_OnRep_MountedWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponMountComponent.AttachWeapons
// ()
void UWeaponMountComponent::AttachWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponMountComponent.AttachWeapons");

	UWeaponMountComponent_AttachWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponMountComponent::AfterRead()
{
	UWeaponVisualUpgradeComponent::AfterRead();

}

void UWeaponMountComponent::BeforeDelete()
{
	UWeaponVisualUpgradeComponent::BeforeDelete();

}

// Function Insurgency.WeaponModelViewer.UpdateWeaponModel
// ()
// Parameters:
// struct FStoredInventoryItem    Item                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UWeaponModelViewer::UpdateWeaponModel(const struct FStoredInventoryItem& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.UpdateWeaponModel");

	UWeaponModelViewer_UpdateWeaponModel_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.UpdateItemModels
// ()
void UWeaponModelViewer::UpdateItemModels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.UpdateItemModels");

	UWeaponModelViewer_UpdateItemModels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.TimedSetCameras
// ()
void UWeaponModelViewer::TimedSetCameras()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.TimedSetCameras");

	UWeaponModelViewer_TimedSetCameras_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.SpawnWeaponModel
// ()
// Parameters:
// struct FStoredInventoryItem    Item                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           FirstPerson                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemBase*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemBase* UWeaponModelViewer::SpawnWeaponModel(const struct FStoredInventoryItem& Item, bool FirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.SpawnWeaponModel");

	UWeaponModelViewer_SpawnWeaponModel_Params params;
	params.Item = Item;
	params.FirstPerson = FirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponModelViewer.SetWeaponModel
// ()
// Parameters:
// struct FStoredInventoryItem    Item                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           FirstPerson                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ForceRefresh                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::SetWeaponModel(const struct FStoredInventoryItem& Item, bool FirstPerson, bool ForceRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.SetWeaponModel");

	UWeaponModelViewer_SetWeaponModel_Params params;
	params.Item = Item;
	params.FirstPerson = FirstPerson;
	params.ForceRefresh = ForceRefresh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.SetUpgradeCustomDepth
// ()
// Parameters:
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           RenderCustomDepth              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::SetUpgradeCustomDepth(EWeaponUpgradeSlot UpgradeSlot, bool RenderCustomDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.SetUpgradeCustomDepth");

	UWeaponModelViewer_SetUpgradeCustomDepth_Params params;
	params.UpgradeSlot = UpgradeSlot;
	params.RenderCustomDepth = RenderCustomDepth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.SetSoldierModel
// ()
void UWeaponModelViewer::SetSoldierModel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.SetSoldierModel");

	UWeaponModelViewer_SetSoldierModel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.SetCameras
// ()
void UWeaponModelViewer::SetCameras()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.SetCameras");

	UWeaponModelViewer_SetCameras_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.ResetCamera
// ()
void UWeaponModelViewer::ResetCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.ResetCamera");

	UWeaponModelViewer_ResetCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.OutlineUpgradeInSlot
// ()
// Parameters:
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::OutlineUpgradeInSlot(EWeaponUpgradeSlot UpgradeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.OutlineUpgradeInSlot");

	UWeaponModelViewer_OutlineUpgradeInSlot_Params params;
	params.UpgradeSlot = UpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.OnTeamChanged
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.OnTeamChanged");

	UWeaponModelViewer_OnTeamChanged_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.OnSoldierMeshSet
// ()
// Parameters:
// class UINSSkeletalMeshComponent* NewMesh                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::OnSoldierMeshSet(class UINSSkeletalMeshComponent* NewMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.OnSoldierMeshSet");

	UWeaponModelViewer_OnSoldierMeshSet_Params params;
	params.NewMesh = NewMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.OnPlayerClassChanged
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::OnPlayerClassChanged(class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.OnPlayerClassChanged");

	UWeaponModelViewer_OnPlayerClassChanged_Params params;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.OnInventoryChanged
// ()
void UWeaponModelViewer::OnInventoryChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.OnInventoryChanged");

	UWeaponModelViewer_OnInventoryChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.OnFirstPersonWeaponMeshSet
// ()
// Parameters:
// class UINSSkeletalMeshComponent* NewMesh                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponModelViewer::OnFirstPersonWeaponMeshSet(class UINSSkeletalMeshComponent* NewMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.OnFirstPersonWeaponMeshSet");

	UWeaponModelViewer_OnFirstPersonWeaponMeshSet_Params params;
	params.NewMesh = NewMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.HandleUpdateModelsTimer
// ()
void UWeaponModelViewer::HandleUpdateModelsTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.HandleUpdateModelsTimer");

	UWeaponModelViewer_HandleUpdateModelsTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.GetWorldPositionOfUpgrade
// ()
// Parameters:
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UWeaponModelViewer::GetWorldPositionOfUpgrade(EWeaponUpgradeSlot UpgradeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.GetWorldPositionOfUpgrade");

	UWeaponModelViewer_GetWorldPositionOfUpgrade_Params params;
	params.UpgradeSlot = UpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponModelViewer.DestroyModels
// ()
void UWeaponModelViewer::DestroyModels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.DestroyModels");

	UWeaponModelViewer_DestroyModels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.DestroyModel1P
// ()
void UWeaponModelViewer::DestroyModel1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.DestroyModel1P");

	UWeaponModelViewer_DestroyModel1P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.DestroyGearModels
// ()
void UWeaponModelViewer::DestroyGearModels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.DestroyGearModels");

	UWeaponModelViewer_DestroyGearModels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponModelViewer.AttachWeaponModel
// ()
void UWeaponModelViewer::AttachWeaponModel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponModelViewer.AttachWeaponModel");

	UWeaponModelViewer_AttachWeaponModel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponModelViewer::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(WeaponModel1P, AItemBase);
	READ_PTR_FULL(WeaponModel3P, AItemBase);
	READ_PTR_FULL(SoldierModel, AProfileCharacter);
	READ_PTR_FULL(WeaponCameraActor, AUICameraActor);
	READ_PTR_FULL(SoldierCameraActor, AUICameraActor);
	READ_PTR_FULL(WeaponAnimClass, UClass);
	READ_PTR_FULL(SoldierAnimClass, UClass);
	READ_PTR_FULL(WeaponMesh1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(WeaponMesh3P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(GhostMesh, USkeletalMesh);
}

void UWeaponModelViewer::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(WeaponModel1P);
	DELE_PTR_FULL(WeaponModel3P);
	DELE_PTR_FULL(SoldierModel);
	DELE_PTR_FULL(WeaponCameraActor);
	DELE_PTR_FULL(SoldierCameraActor);
	DELE_PTR_FULL(WeaponAnimClass);
	DELE_PTR_FULL(SoldierAnimClass);
	DELE_PTR_FULL(WeaponMesh1P);
	DELE_PTR_FULL(WeaponMesh3P);
	DELE_PTR_FULL(GhostMesh);
}

void UWeaponMagazineUpgradeComponent::AfterRead()
{
	UWeaponUpgradeComponent::AfterRead();

	READ_PTR_FULL(ReplacementAmmoContainer, UClass);
}

void UWeaponMagazineUpgradeComponent::BeforeDelete()
{
	UWeaponUpgradeComponent::BeforeDelete();

	DELE_PTR_FULL(ReplacementAmmoContainer);
}

// Function Insurgency.WeaponStockComponent.Server_Toggle
// ()
void UWeaponStockComponent::Server_Toggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponStockComponent.Server_Toggle");

	UWeaponStockComponent_Server_Toggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponStockComponent::AfterRead()
{
	UWeaponHandlingUpgradeComponent::AfterRead();

}

void UWeaponStockComponent::BeforeDelete()
{
	UWeaponHandlingUpgradeComponent::BeforeDelete();

}

// Function Insurgency.WeaponFoldingStockComponent.Server_ToggleFold
// ()
void UWeaponFoldingStockComponent::Server_ToggleFold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponFoldingStockComponent.Server_ToggleFold");

	UWeaponFoldingStockComponent_Server_ToggleFold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponFoldingStockComponent::AfterRead()
{
	UWeaponStockComponent::AfterRead();

}

void UWeaponFoldingStockComponent::BeforeDelete()
{
	UWeaponStockComponent::BeforeDelete();

}

void UWeaponBoltUpgradeComponent::AfterRead()
{
	UWeaponHandlingUpgradeComponent::AfterRead();

}

void UWeaponBoltUpgradeComponent::BeforeDelete()
{
	UWeaponHandlingUpgradeComponent::BeforeDelete();

}

// Function Insurgency.WeaponBipodComponent.TryBipodDeploy
// ()
void UWeaponBipodComponent::TryBipodDeploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.TryBipodDeploy");

	UWeaponBipodComponent_TryBipodDeploy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.ToggleBipodLegsState
// ()
void UWeaponBipodComponent::ToggleBipodLegsState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.ToggleBipodLegsState");

	UWeaponBipodComponent_ToggleBipodLegsState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.ShouldTryAutoBipod
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::ShouldTryAutoBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.ShouldTryAutoBipod");

	UWeaponBipodComponent_ShouldTryAutoBipod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.SetBipodLegsState
// ()
// Parameters:
// EBipodState                    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponBipodComponent::SetBipodLegsState(EBipodState NewState, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.SetBipodLegsState");

	UWeaponBipodComponent_SetBipodLegsState_Params params;
	params.NewState = NewState;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.Server_SetBipodLegsState
// ()
// Parameters:
// EBipodState                    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponBipodComponent::Server_SetBipodLegsState(EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.Server_SetBipodLegsState");

	UWeaponBipodComponent_Server_SetBipodLegsState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.Server_SetBipodDeployedState
// ()
// Parameters:
// EBipodState                    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponBipodComponent::Server_SetBipodDeployedState(EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.Server_SetBipodDeployedState");

	UWeaponBipodComponent_Server_SetBipodDeployedState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.OnRep_BipodLegsState
// ()
void UWeaponBipodComponent::OnRep_BipodLegsState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.OnRep_BipodLegsState");

	UWeaponBipodComponent_OnRep_BipodLegsState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.OnRep_BipodDeployedState
// ()
void UWeaponBipodComponent::OnRep_BipodDeployedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.OnRep_BipodDeployedState");

	UWeaponBipodComponent_OnRep_BipodDeployedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.IsManualDeployment
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::IsManualDeployment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.IsManualDeployment");

	UWeaponBipodComponent_IsManualDeployment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.IsDeployedOrDeploying
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::IsDeployedOrDeploying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.IsDeployedOrDeploying");

	UWeaponBipodComponent_IsDeployedOrDeploying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.IsDeployed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::IsDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.IsDeployed");

	UWeaponBipodComponent_IsDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.InBipodTransition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::InBipodTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.InBipodTransition");

	UWeaponBipodComponent_InBipodTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.GetBipodViewTransitionFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UWeaponBipodComponent::GetBipodViewTransitionFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.GetBipodViewTransitionFrac");

	UWeaponBipodComponent_GetBipodViewTransitionFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.GetBipodToggleElapsedTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UWeaponBipodComponent::GetBipodToggleElapsedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.GetBipodToggleElapsedTime");

	UWeaponBipodComponent_GetBipodToggleElapsedTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.GetBipodLegsState
// ()
// Parameters:
// EBipodState                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EBipodState UWeaponBipodComponent::GetBipodLegsState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.GetBipodLegsState");

	UWeaponBipodComponent_GetBipodLegsState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.GetBipodDeployedState
// ()
// Parameters:
// EBipodState                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EBipodState UWeaponBipodComponent::GetBipodDeployedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.GetBipodDeployedState");

	UWeaponBipodComponent_GetBipodDeployedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.CanToggleLegState
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::CanToggleLegState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.CanToggleLegState");

	UWeaponBipodComponent_CanToggleLegState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.CanDeploy
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::CanDeploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.CanDeploy");

	UWeaponBipodComponent_CanDeploy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.WeaponBipodComponent.BipodStateChanged__DelegateSignature
// ()
// Parameters:
// EBipodState                    OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBipodState                    NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponBipodComponent::BipodStateChanged__DelegateSignature(EBipodState OldState, EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.WeaponBipodComponent.BipodStateChanged__DelegateSignature");

	UWeaponBipodComponent_BipodStateChanged__DelegateSignature_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponBipodComponent.AreBipodLegsInTransition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::AreBipodLegsInTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.AreBipodLegsInTransition");

	UWeaponBipodComponent_AreBipodLegsInTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponBipodComponent.AreBipodLegsDown
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponBipodComponent::AreBipodLegsDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponBipodComponent.AreBipodLegsDown");

	UWeaponBipodComponent_AreBipodLegsDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWeaponBipodComponent::AfterRead()
{
	UWeaponForegripComponent::AfterRead();

}

void UWeaponBipodComponent::BeforeDelete()
{
	UWeaponForegripComponent::BeforeDelete();

}

void UWeaponMuzzleComponent::AfterRead()
{
	UWeaponHandlingUpgradeComponent::AfterRead();

}

void UWeaponMuzzleComponent::BeforeDelete()
{
	UWeaponHandlingUpgradeComponent::BeforeDelete();

}

void UWeaponBayonetComponent::AfterRead()
{
	UWeaponMuzzleComponent::AfterRead();

}

void UWeaponBayonetComponent::BeforeDelete()
{
	UWeaponMuzzleComponent::BeforeDelete();

}

// Function Insurgency.EquipableAnimInstance.SetEquipable
// ()
// Parameters:
// class AItemEquipable*          Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::SetEquipable(class AItemEquipable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.SetEquipable");

	UEquipableAnimInstance_SetEquipable_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnUpgradeRemoved
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnUpgradeRemoved(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnUpgradeRemoved");

	UEquipableAnimInstance_OnUpgradeRemoved_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnUpgradeMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWeaponVisualUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnUpgradeMeshLoaded(class UINSSkeletalMeshComponent* Mesh, class UWeaponVisualUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnUpgradeMeshLoaded");

	UEquipableAnimInstance_OnUpgradeMeshLoaded_Params params;
	params.Mesh = Mesh;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnUpgradeInstalled
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnUpgradeInstalled(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnUpgradeInstalled");

	UEquipableAnimInstance_OnUpgradeInstalled_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnRevolverChambersUpdated
// ()
void UEquipableAnimInstance::OnRevolverChambersUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnRevolverChambersUpdated");

	UEquipableAnimInstance_OnRevolverChambersUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnRevolverActiveChamberUpdated
// ()
void UEquipableAnimInstance::OnRevolverActiveChamberUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnRevolverActiveChamberUpdated");

	UEquipableAnimInstance_OnRevolverActiveChamberUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnReloadInterrupt
// ()
void UEquipableAnimInstance::OnReloadInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnReloadInterrupt");

	UEquipableAnimInstance_OnReloadInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnReload
// ()
// Parameters:
// bool                           bDryReload                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSingleReload                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RateMultiplier                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnReload(bool bDryReload, bool bSingleReload, float RateMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnReload");

	UEquipableAnimInstance_OnReload_Params params;
	params.bDryReload = bDryReload;
	params.bSingleReload = bSingleReload;
	params.RateMultiplier = RateMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnPlayerClassAttributesUpdated
// ()
// Parameters:
// class AINSSoldier*             UpdatedSoldier                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnPlayerClassAttributesUpdated(class AINSSoldier* UpdatedSoldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnPlayerClassAttributesUpdated");

	UEquipableAnimInstance_OnPlayerClassAttributesUpdated_Params params;
	params.UpdatedSoldier = UpdatedSoldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnMeshLoaded(class UINSSkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnMeshLoaded");

	UEquipableAnimInstance_OnMeshLoaded_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnMeleeWeaponHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnMeleeWeaponHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnMeleeWeaponHit");

	UEquipableAnimInstance_OnMeleeWeaponHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnMeleeWeaponAttack
// ()
// Parameters:
// struct FMeleeConfig            SelectedAttack                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnMeleeWeaponAttack(const struct FMeleeConfig& SelectedAttack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnMeleeWeaponAttack");

	UEquipableAnimInstance_OnMeleeWeaponAttack_Params params;
	params.SelectedAttack = SelectedAttack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnItemUnequip
// ()
// Parameters:
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          SwitchingTo                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnItemUnequip(bool bInstant, class AItemEquipable* SwitchingTo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnItemUnequip");

	UEquipableAnimInstance_OnItemUnequip_Params params;
	params.bInstant = bInstant;
	params.SwitchingTo = SwitchingTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnItemEquip
// ()
// Parameters:
// bool                           bInstant                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          SwitchingFrom                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWantsFirstEquip               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnItemEquip(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnItemEquip");

	UEquipableAnimInstance_OnItemEquip_Params params;
	params.bInstant = bInstant;
	params.SwitchingFrom = SwitchingFrom;
	params.bWantsFirstEquip = bWantsFirstEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnGrenadeThrowModeChanged
// ()
// Parameters:
// EGrenadeThrowMode              OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnGrenadeThrowModeChanged(EGrenadeThrowMode OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnGrenadeThrowModeChanged");

	UEquipableAnimInstance_OnGrenadeThrowModeChanged_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnGrenadeStateChanged
// ()
// Parameters:
// EGrenadeState                  OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnGrenadeStateChanged(EGrenadeState OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnGrenadeStateChanged");

	UEquipableAnimInstance_OnGrenadeStateChanged_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnGrenadeStartCook
// ()
// Parameters:
// EGrenadeThrowMode              NewThrowMode                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnGrenadeStartCook(EGrenadeThrowMode NewThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnGrenadeStartCook");

	UEquipableAnimInstance_OnGrenadeStartCook_Params params;
	params.NewThrowMode = NewThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnGenericMeleeAttack
// ()
// Parameters:
// bool                           bBash                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnGenericMeleeAttack(bool bBash)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnGenericMeleeAttack");

	UEquipableAnimInstance_OnGenericMeleeAttack_Params params;
	params.bBash = bBash;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnGearInteracted
// ()
// Parameters:
// class AItemInteractableGear*   GearItem                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipableState                NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnGearInteracted(class AItemInteractableGear* GearItem, EEquipableState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnGearInteracted");

	UEquipableAnimInstance_OnGearInteracted_Params params;
	params.GearItem = GearItem;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnFirearmStopFire
// ()
void UEquipableAnimInstance::OnFirearmStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnFirearmStopFire");

	UEquipableAnimInstance_OnFirearmStopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnFirearmStartFire
// ()
void UEquipableAnimInstance::OnFirearmStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnFirearmStartFire");

	UEquipableAnimInstance_OnFirearmStartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnFirearmFired
// ()
// Parameters:
// struct FVector                 FireOrigin                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 FireDirection                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnFirearmFired(const struct FVector& FireOrigin, const struct FVector& FireDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnFirearmFired");

	UEquipableAnimInstance_OnFirearmFired_Params params;
	params.FireOrigin = FireOrigin;
	params.FireDirection = FireDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnFirearmDryFire
// ()
void UEquipableAnimInstance::OnFirearmDryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnFirearmDryFire");

	UEquipableAnimInstance_OnFirearmDryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnFastReload
// ()
// Parameters:
// bool                           bDryReload                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RateMultiplier                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnFastReload(bool bDryReload, float RateMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnFastReload");

	UEquipableAnimInstance_OnFastReload_Params params;
	params.bDryReload = bDryReload;
	params.RateMultiplier = RateMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnEndViewTarget
// ()
void UEquipableAnimInstance::OnEndViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnEndViewTarget");

	UEquipableAnimInstance_OnEndViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnCycleFiremode
// ()
// Parameters:
// EFirearmFiremode               OldFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               NewFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnCycleFiremode");

	UEquipableAnimInstance_OnCycleFiremode_Params params;
	params.OldFiremode = OldFiremode;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnBoltCycle
// ()
void UEquipableAnimInstance::OnBoltCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnBoltCycle");

	UEquipableAnimInstance_OnBoltCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnBipodLegsStateChanged
// ()
// Parameters:
// EBipodState                    OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBipodState                    NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnBipodLegsStateChanged(EBipodState OldState, EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnBipodLegsStateChanged");

	UEquipableAnimInstance_OnBipodLegsStateChanged_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnBipodDeployedStateChanged
// ()
// Parameters:
// EBipodState                    OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBipodState                    NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnBipodDeployedStateChanged(EBipodState OldState, EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnBipodDeployedStateChanged");

	UEquipableAnimInstance_OnBipodDeployedStateChanged_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnBecomeViewTarget
// ()
void UEquipableAnimInstance::OnBecomeViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnBecomeViewTarget");

	UEquipableAnimInstance_OnBecomeViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnAmmoCheck
// ()
void UEquipableAnimInstance::OnAmmoCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnAmmoCheck");

	UEquipableAnimInstance_OnAmmoCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.OnAllUpgradeMeshesLoaded
// ()
// Parameters:
// class UWeaponVisualUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::OnAllUpgradeMeshesLoaded(class UWeaponVisualUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.OnAllUpgradeMeshesLoaded");

	UEquipableAnimInstance_OnAllUpgradeMeshesLoaded_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.CanFireEvents
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UEquipableAnimInstance::CanFireEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.CanFireEvents");

	UEquipableAnimInstance_CanFireEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeStateChanged
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnUpgradeStateChanged(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeStateChanged");

	UEquipableAnimInstance_BlueprintOnUpgradeStateChanged_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeRemoved
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnUpgradeRemoved(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeRemoved");

	UEquipableAnimInstance_BlueprintOnUpgradeRemoved_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWeaponVisualUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnUpgradeMeshLoaded(class UINSSkeletalMeshComponent* Mesh, class UWeaponVisualUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeMeshLoaded");

	UEquipableAnimInstance_BlueprintOnUpgradeMeshLoaded_Params params;
	params.Mesh = Mesh;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeInstalled
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnUpgradeInstalled(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnUpgradeInstalled");

	UEquipableAnimInstance_BlueprintOnUpgradeInstalled_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnRevolverChambersUpdated
// ()
void UEquipableAnimInstance::BlueprintOnRevolverChambersUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnRevolverChambersUpdated");

	UEquipableAnimInstance_BlueprintOnRevolverChambersUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnRevolverActiveChamberUpdated
// ()
void UEquipableAnimInstance::BlueprintOnRevolverActiveChamberUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnRevolverActiveChamberUpdated");

	UEquipableAnimInstance_BlueprintOnRevolverActiveChamberUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnReloadInterrupt
// ()
void UEquipableAnimInstance::BlueprintOnReloadInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnReloadInterrupt");

	UEquipableAnimInstance_BlueprintOnReloadInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnReload
// ()
// Parameters:
// bool                           bDryReload                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSingleReload                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RateMultiplier                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnReload(bool bDryReload, bool bSingleReload, float RateMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnReload");

	UEquipableAnimInstance_BlueprintOnReload_Params params;
	params.bDryReload = bDryReload;
	params.bSingleReload = bSingleReload;
	params.RateMultiplier = RateMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnPlayerClassAttributesUpdated
// ()
void UEquipableAnimInstance::BlueprintOnPlayerClassAttributesUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnPlayerClassAttributesUpdated");

	UEquipableAnimInstance_BlueprintOnPlayerClassAttributesUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnMeshLoaded
// ()
void UEquipableAnimInstance::BlueprintOnMeshLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnMeshLoaded");

	UEquipableAnimInstance_BlueprintOnMeshLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnMeleeWeaponHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnMeleeWeaponHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnMeleeWeaponHit");

	UEquipableAnimInstance_BlueprintOnMeleeWeaponHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnMeleeWeaponAttack
// ()
// Parameters:
// struct FMeleeConfig            SelectedAttack                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnMeleeWeaponAttack(const struct FMeleeConfig& SelectedAttack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnMeleeWeaponAttack");

	UEquipableAnimInstance_BlueprintOnMeleeWeaponAttack_Params params;
	params.SelectedAttack = SelectedAttack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnItemUnequip
// ()
// Parameters:
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          SwitchingTo                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnItemUnequip(bool bInstant, class AItemEquipable* SwitchingTo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnItemUnequip");

	UEquipableAnimInstance_BlueprintOnItemUnequip_Params params;
	params.bInstant = bInstant;
	params.SwitchingTo = SwitchingTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnItemEquip
// ()
// Parameters:
// bool                           bInstant                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          SwitchingFrom                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWantsFirstEquip               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnItemEquip(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnItemEquip");

	UEquipableAnimInstance_BlueprintOnItemEquip_Params params;
	params.bInstant = bInstant;
	params.SwitchingFrom = SwitchingFrom;
	params.bWantsFirstEquip = bWantsFirstEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnGrenadeThrowModeChanged
// ()
// Parameters:
// EGrenadeThrowMode              OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnGrenadeThrowModeChanged(EGrenadeThrowMode OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnGrenadeThrowModeChanged");

	UEquipableAnimInstance_BlueprintOnGrenadeThrowModeChanged_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnGrenadeStateChanged
// ()
// Parameters:
// EGrenadeState                  OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnGrenadeStateChanged(EGrenadeState OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnGrenadeStateChanged");

	UEquipableAnimInstance_BlueprintOnGrenadeStateChanged_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnGrenadeStartCook
// ()
// Parameters:
// EGrenadeThrowMode              NewThrowMode                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnGrenadeStartCook(EGrenadeThrowMode NewThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnGrenadeStartCook");

	UEquipableAnimInstance_BlueprintOnGrenadeStartCook_Params params;
	params.NewThrowMode = NewThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnGenericMeleeAttack
// ()
// Parameters:
// bool                           bBash                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnGenericMeleeAttack(bool bBash)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnGenericMeleeAttack");

	UEquipableAnimInstance_BlueprintOnGenericMeleeAttack_Params params;
	params.bBash = bBash;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnGearInteracted
// ()
// Parameters:
// class AItemInteractableGear*   GearItem                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipableState                NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnGearInteracted(class AItemInteractableGear* GearItem, EEquipableState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnGearInteracted");

	UEquipableAnimInstance_BlueprintOnGearInteracted_Params params;
	params.GearItem = GearItem;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmStopFire
// ()
void UEquipableAnimInstance::BlueprintOnFirearmStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmStopFire");

	UEquipableAnimInstance_BlueprintOnFirearmStopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmStartFire
// ()
void UEquipableAnimInstance::BlueprintOnFirearmStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmStartFire");

	UEquipableAnimInstance_BlueprintOnFirearmStartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmFired
// ()
// Parameters:
// struct FVector                 FireOrigin                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 FireDirection                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnFirearmFired(const struct FVector& FireOrigin, const struct FVector& FireDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmFired");

	UEquipableAnimInstance_BlueprintOnFirearmFired_Params params;
	params.FireOrigin = FireOrigin;
	params.FireDirection = FireDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmDryFire
// ()
void UEquipableAnimInstance::BlueprintOnFirearmDryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnFirearmDryFire");

	UEquipableAnimInstance_BlueprintOnFirearmDryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnFastReload
// ()
// Parameters:
// bool                           bDryReload                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RateMultiplier                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnFastReload(bool bDryReload, float RateMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnFastReload");

	UEquipableAnimInstance_BlueprintOnFastReload_Params params;
	params.bDryReload = bDryReload;
	params.RateMultiplier = RateMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnEndViewTarget
// ()
void UEquipableAnimInstance::BlueprintOnEndViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnEndViewTarget");

	UEquipableAnimInstance_BlueprintOnEndViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnCycleFiremode
// ()
// Parameters:
// EFirearmFiremode               OldFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               NewFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnCycleFiremode");

	UEquipableAnimInstance_BlueprintOnCycleFiremode_Params params;
	params.OldFiremode = OldFiremode;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnBoltCycle
// ()
void UEquipableAnimInstance::BlueprintOnBoltCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnBoltCycle");

	UEquipableAnimInstance_BlueprintOnBoltCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnBipodLegsStateChanged
// ()
// Parameters:
// EBipodState                    OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBipodState                    NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnBipodLegsStateChanged(EBipodState OldState, EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnBipodLegsStateChanged");

	UEquipableAnimInstance_BlueprintOnBipodLegsStateChanged_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnBipodDeployedStateChanged
// ()
// Parameters:
// EBipodState                    OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBipodState                    NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnBipodDeployedStateChanged(EBipodState OldState, EBipodState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnBipodDeployedStateChanged");

	UEquipableAnimInstance_BlueprintOnBipodDeployedStateChanged_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnBecomeViewTarget
// ()
void UEquipableAnimInstance::BlueprintOnBecomeViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnBecomeViewTarget");

	UEquipableAnimInstance_BlueprintOnBecomeViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnAmmoCheck
// ()
void UEquipableAnimInstance::BlueprintOnAmmoCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnAmmoCheck");

	UEquipableAnimInstance_BlueprintOnAmmoCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.EquipableAnimInstance.BlueprintOnAllUpgradeMeshesLoaded
// ()
// Parameters:
// class UWeaponVisualUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UEquipableAnimInstance::BlueprintOnAllUpgradeMeshesLoaded(class UWeaponVisualUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EquipableAnimInstance.BlueprintOnAllUpgradeMeshesLoaded");

	UEquipableAnimInstance_BlueprintOnAllUpgradeMeshesLoaded_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEquipableAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(Soldier, AINSSoldier);
	READ_PTR_FULL(PreviousEquipable, AItemEquipable);
	READ_PTR_FULL(Equipable, AItemEquipable);
	READ_PTR_FULL(Weapon, AItemWeapon);
	READ_PTR_FULL(AimableWeapon, AItemAimableWeapon);
	READ_PTR_FULL(Firearm, AItemFirearm);
	READ_PTR_FULL(Revolver, AItemRevolver);
	READ_PTR_FULL(Grenade, AItemGrenade);
	READ_PTR_FULL(RemoteExplosive, AItemRemoteExplosive);
	READ_PTR_FULL(Knife, AItemMeleeWeapon);
}

void UEquipableAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(Soldier);
	DELE_PTR_FULL(PreviousEquipable);
	DELE_PTR_FULL(Equipable);
	DELE_PTR_FULL(Weapon);
	DELE_PTR_FULL(AimableWeapon);
	DELE_PTR_FULL(Firearm);
	DELE_PTR_FULL(Revolver);
	DELE_PTR_FULL(Grenade);
	DELE_PTR_FULL(RemoteExplosive);
	DELE_PTR_FULL(Knife);
}

void UFirstPersonAnimInstance::AfterRead()
{
	UEquipableAnimInstance::AfterRead();

}

void UFirstPersonAnimInstance::BeforeDelete()
{
	UEquipableAnimInstance::BeforeDelete();

}

void UWeaponAnimInstance::AfterRead()
{
	UFirstPersonAnimInstance::AfterRead();

	READ_PTR_FULL(SpecialIdleMontageReference, UAnimMontage);
	READ_PTR_FULL(GenericMeleeMontageReference, UAnimMontage);
	READ_PTR_FULL(CurrentInteractionMontage, UAnimMontage);
	READ_PTR_FULL(ActiveReloadMontage, UAnimMontage);
	READ_PTR_FULL(ActiveReloadStagesMontage, UAnimMontage);
	READ_PTR_FULL(RechamberReference, UAnimMontage);
	READ_PTR_FULL(CurrentFiremodeMontage1, UAnimMontage);
	READ_PTR_FULL(ReadyMontageReference, UAnimMontage);
	READ_PTR_FULL(DrawChamberMontageReference, UAnimMontage);
	READ_PTR_FULL(DeploySequenceMontageReference, UAnimMontage);
	READ_PTR_FULL(BipodLegMontageReference, UAnimMontage);
	READ_PTR_FULL(LightAttachment, UWeaponLightComponent);
	READ_PTR_FULL(AmmoDeltaAnim, UAnimSequence);
	READ_PTR_FULL(ProneViewModelCurve, UCurveFloat);
	READ_PTR_FULL(BayonetPullbackAnim, UAnimSequence);
	READ_PTR_FULL(SoldierMovement, USoldierMovementComponent);
}

void UWeaponAnimInstance::BeforeDelete()
{
	UFirstPersonAnimInstance::BeforeDelete();

	DELE_PTR_FULL(SpecialIdleMontageReference);
	DELE_PTR_FULL(GenericMeleeMontageReference);
	DELE_PTR_FULL(CurrentInteractionMontage);
	DELE_PTR_FULL(ActiveReloadMontage);
	DELE_PTR_FULL(ActiveReloadStagesMontage);
	DELE_PTR_FULL(RechamberReference);
	DELE_PTR_FULL(CurrentFiremodeMontage1);
	DELE_PTR_FULL(ReadyMontageReference);
	DELE_PTR_FULL(DrawChamberMontageReference);
	DELE_PTR_FULL(DeploySequenceMontageReference);
	DELE_PTR_FULL(BipodLegMontageReference);
	DELE_PTR_FULL(LightAttachment);
	DELE_PTR_FULL(AmmoDeltaAnim);
	DELE_PTR_FULL(ProneViewModelCurve);
	DELE_PTR_FULL(BayonetPullbackAnim);
	DELE_PTR_FULL(SoldierMovement);
}

void UWeaponAmmoUpgradeComponent::AfterRead()
{
	UWeaponUpgradeComponent::AfterRead();

}

void UWeaponAmmoUpgradeComponent::BeforeDelete()
{
	UWeaponUpgradeComponent::BeforeDelete();

}

void UVoteStartedEnemyTeamMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UVoteStartedEnemyTeamMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

// Function Insurgency.VoteIssue.UpdateVotingFigures
// ()
// Parameters:
// TArray<struct FReplicatedVoteChoice> InOutVoteChoiceArray           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoteIssue::UpdateVotingFigures(TArray<struct FReplicatedVoteChoice>* InOutVoteChoiceArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.UpdateVotingFigures");

	UVoteIssue_UpdateVotingFigures_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutVoteChoiceArray != nullptr)
		*InOutVoteChoiceArray = params.InOutVoteChoiceArray;

}


// Function Insurgency.VoteIssue.RegisterVoteIntent
// ()
// Parameters:
// class APlayerState*            FromPlayer                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Option                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*            TargetPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECallVoteResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECallVoteResult UVoteIssue::RegisterVoteIntent(class APlayerState* FromPlayer, const struct FString& Option, class APlayerState* TargetPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.RegisterVoteIntent");

	UVoteIssue_RegisterVoteIntent_Params params;
	params.FromPlayer = FromPlayer;
	params.Option = Option;
	params.TargetPlayer = TargetPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.OnVoteSuccess
// ()
void UVoteIssue::OnVoteSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.OnVoteSuccess");

	UVoteIssue_OnVoteSuccess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VoteIssue.OnVoteStarted
// ()
// Parameters:
// struct FString                 Option                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*            TargetPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoteIssue::OnVoteStarted(const struct FString& Option, class APlayerState* TargetPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.OnVoteStarted");

	UVoteIssue_OnVoteStarted_Params params;
	params.Option = Option;
	params.TargetPlayer = TargetPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VoteIssue.OnVoteReset
// ()
void UVoteIssue::OnVoteReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.OnVoteReset");

	UVoteIssue_OnVoteReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VoteIssue.OnPlayerVote
// ()
// Parameters:
// class APlayerState*            VotingPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ChoiceIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVoteIssue::OnPlayerVote(class APlayerState* VotingPlayer, int ChoiceIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.OnPlayerVote");

	UVoteIssue_OnPlayerVote_Params params;
	params.VotingPlayer = VotingPlayer;
	params.ChoiceIndex = ChoiceIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.IsVoteTooSoon
// ()
// Parameters:
// float                          CheckTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVoteIssue::IsVoteTooSoon(float CheckTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.IsVoteTooSoon");

	UVoteIssue_IsVoteTooSoon_Params params;
	params.CheckTime = CheckTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.IsVoterServerAdmin
// ()
// Parameters:
// class APlayerState*            Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVoteIssue::IsVoterServerAdmin(class APlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.IsVoterServerAdmin");

	UVoteIssue_IsVoterServerAdmin_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.HasMajorityVoted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVoteIssue::HasMajorityVoted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.HasMajorityVoted");

	UVoteIssue_HasMajorityVoted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetYesNoVotes
// ()
// Parameters:
// int                            OutYesVotes                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutNoVotes                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoteIssue::GetYesNoVotes(int* OutYesVotes, int* OutNoVotes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetYesNoVotes");

	UVoteIssue_GetYesNoVotes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutYesVotes != nullptr)
		*OutYesVotes = params.OutYesVotes;
	if (OutNoVotes != nullptr)
		*OutNoVotes = params.OutNoVotes;

}


// Function Insurgency.VoteIssue.GetVotingComponent
// ()
// Parameters:
// class UPlayerVotingComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerVotingComponent* UVoteIssue::GetVotingComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetVotingComponent");

	UVoteIssue_GetVotingComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetVotesRequiredToStart
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UVoteIssue::GetVotesRequiredToStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetVotesRequiredToStart");

	UVoteIssue_GetVotesRequiredToStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetVoteResultState
// ()
// Parameters:
// EVoteState                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EVoteState UVoteIssue::GetVoteResultState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetVoteResultState");

	UVoteIssue_GetVoteResultState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetVoteChoices
// ()
// Parameters:
// TArray<struct FReplicatedVoteChoice> OutVoteChoices                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoteIssue::GetVoteChoices(TArray<struct FReplicatedVoteChoice>* OutVoteChoices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetVoteChoices");

	UVoteIssue_GetVoteChoices_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutVoteChoices != nullptr)
		*OutVoteChoices = params.OutVoteChoices;

}


// Function Insurgency.VoteIssue.GetOuterGameSession
// ()
// Parameters:
// class AGameSession*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AGameSession* UVoteIssue::GetOuterGameSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetOuterGameSession");

	UVoteIssue_GetOuterGameSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetOuterGameMode
// ()
// Parameters:
// class AGameModeBase*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AGameModeBase* UVoteIssue::GetOuterGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetOuterGameMode");

	UVoteIssue_GetOuterGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetMajorityCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UVoteIssue::GetMajorityCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetMajorityCount");

	UVoteIssue_GetMajorityCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssue.GetCustomVoteChoices
// ()
// Parameters:
// TArray<struct FReplicatedVoteChoice> OutVoteChoices                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVoteIssue::GetCustomVoteChoices(TArray<struct FReplicatedVoteChoice>* OutVoteChoices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.GetCustomVoteChoices");

	UVoteIssue_GetCustomVoteChoices_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutVoteChoices != nullptr)
		*OutVoteChoices = params.OutVoteChoices;

}


// Function Insurgency.VoteIssue.CountVoteIntentions
// ()
// Parameters:
// struct FString                 Option                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*            TargetPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UVoteIssue::CountVoteIntentions(const struct FString& Option, class APlayerState* TargetPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssue.CountVoteIntentions");

	UVoteIssue_CountVoteIntentions_Params params;
	params.Option = Option;
	params.TargetPlayer = TargetPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVoteIssue::AfterRead()
{
	UObject::AfterRead();

}

void UVoteIssue::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.VoteIssuePlayer.GetTargetPlayerController
// ()
// Parameters:
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APlayerController* UVoteIssuePlayer::GetTargetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssuePlayer.GetTargetPlayerController");

	UVoteIssuePlayer_GetTargetPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVoteIssuePlayer::AfterRead()
{
	UVoteIssue::AfterRead();

}

void UVoteIssuePlayer::BeforeDelete()
{
	UVoteIssue::BeforeDelete();

}

// Function Insurgency.VoteIssueKick.GetKickReason
// ()
// Parameters:
// bool                           bBanning                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UVoteIssueKick::GetKickReason(bool bBanning)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssueKick.GetKickReason");

	UVoteIssueKick_GetKickReason_Params params;
	params.bBanning = bBanning;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VoteIssueKick.GetBanDuration
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UVoteIssueKick::GetBanDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VoteIssueKick.GetBanDuration");

	UVoteIssueKick_GetBanDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVoteIssueKick::AfterRead()
{
	UVoteIssuePlayer::AfterRead();

}

void UVoteIssueKick::BeforeDelete()
{
	UVoteIssuePlayer::BeforeDelete();

}

void UVoteIntentMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UVoteIntentMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

void UVoteCastResultMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UVoteCastResultMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

void UVoteCallResultMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UVoteCallResultMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

void UVoiceRouting::AfterRead()
{
	UObject::AfterRead();

}

void UVoiceRouting::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UVoiceComponent::AfterRead()
{
	UAkAudioInputComponent::AfterRead();

}

void UVoiceComponent::BeforeDelete()
{
	UAkAudioInputComponent::BeforeDelete();

}

void UVivoxSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UVivoxSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void AVisibilityBlockerVolume::AfterRead()
{
	AVolume::AfterRead();

}

void AVisibilityBlockerVolume::BeforeDelete()
{
	AVolume::BeforeDelete();

}

// Function Insurgency.OptionsMenu.SavePlayerSettings
// ()
void UOptionsMenu::SavePlayerSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.SavePlayerSettings");

	UOptionsMenu_SavePlayerSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.ResetToDefaults
// ()
void UOptionsMenu::ResetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.ResetToDefaults");

	UOptionsMenu_ResetToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.RefreshSettings
// ()
void UOptionsMenu::RefreshSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.RefreshSettings");

	UOptionsMenu_RefreshSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.MarkSettingsDirty
// ()
void UOptionsMenu::MarkSettingsDirty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.MarkSettingsDirty");

	UOptionsMenu_MarkSettingsDirty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.GetUserSettings
// ()
// Parameters:
// class UINSGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSGameUserSettings* UOptionsMenu::GetUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.GetUserSettings");

	UOptionsMenu_GetUserSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OptionsMenu.GetLocalProfile
// ()
// Parameters:
// class UINSPlayerLocalProfile*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSPlayerLocalProfile* UOptionsMenu::GetLocalProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.GetLocalProfile");

	UOptionsMenu_GetLocalProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OptionsMenu.BlueprintResetToDefaults
// ()
void UOptionsMenu::BlueprintResetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.BlueprintResetToDefaults");

	UOptionsMenu_BlueprintResetToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.BlueprintRefreshSettings
// ()
void UOptionsMenu::BlueprintRefreshSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.BlueprintRefreshSettings");

	UOptionsMenu_BlueprintRefreshSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.BlueprintApplyChanges
// ()
void UOptionsMenu::BlueprintApplyChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.BlueprintApplyChanges");

	UOptionsMenu_BlueprintApplyChanges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OptionsMenu.ApplyChanges
// ()
void UOptionsMenu::ApplyChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OptionsMenu.ApplyChanges");

	UOptionsMenu_ApplyChanges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOptionsMenu::AfterRead()
{
	UUserWidget::AfterRead();

}

void UOptionsMenu::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.VideoMenu.PopulateMenu
// ()
void UVideoMenu::PopulateMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VideoMenu.PopulateMenu");

	UVideoMenu_PopulateMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVideoMenu::AfterRead()
{
	UOptionsMenu::AfterRead();

}

void UVideoMenu::BeforeDelete()
{
	UOptionsMenu::BeforeDelete();

}

// Function Insurgency.VehiclePartComponent.SetHealthFrac
// ()
// Parameters:
// float                          HealthFrac                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehiclePartComponent::SetHealthFrac(float HealthFrac)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehiclePartComponent.SetHealthFrac");

	UVehiclePartComponent_SetHealthFrac_Params params;
	params.HealthFrac = HealthFrac;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehiclePartComponent.OnTakeDamage
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehiclePartComponent::OnTakeDamage(float Damage, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehiclePartComponent.OnTakeDamage");

	UVehiclePartComponent_OnTakeDamage_Params params;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehiclePartComponent.OnRep_Health
// ()
void UVehiclePartComponent::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehiclePartComponent.OnRep_Health");

	UVehiclePartComponent_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehiclePartComponent.OnRep_Destroyed
// ()
void UVehiclePartComponent::OnRep_Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehiclePartComponent.OnRep_Destroyed");

	UVehiclePartComponent_OnRep_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehiclePartComponent.OnDestroyed
// ()
void UVehiclePartComponent::OnDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehiclePartComponent.OnDestroyed");

	UVehiclePartComponent_OnDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehiclePartComponent.IsDestroyed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVehiclePartComponent::IsDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehiclePartComponent.IsDestroyed");

	UVehiclePartComponent_IsDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVehiclePartComponent::AfterRead()
{
	UBoxComponent::AfterRead();

}

void UVehiclePartComponent::BeforeDelete()
{
	UBoxComponent::BeforeDelete();

}

void UVehicleWindowPart::AfterRead()
{
	UVehiclePartComponent::AfterRead();

	READ_PTR_FULL(DestroyedWindowMesh, UStaticMesh);
}

void UVehicleWindowPart::BeforeDelete()
{
	UVehiclePartComponent::BeforeDelete();

	DELE_PTR_FULL(DestroyedWindowMesh);
}

void UVehicleWheelPart::AfterRead()
{
	UVehiclePartComponent::AfterRead();

}

void UVehicleWheelPart::BeforeDelete()
{
	UVehiclePartComponent::BeforeDelete();

}

void UVehicleDestructablePart::AfterRead()
{
	UVehiclePartComponent::AfterRead();

}

void UVehicleDestructablePart::BeforeDelete()
{
	UVehiclePartComponent::BeforeDelete();

}

void UVehicleWeakPointPart::AfterRead()
{
	UVehicleDestructablePart::AfterRead();

	READ_PTR_FULL(LinkedEngine, UVehicleEnginePart);
	READ_PTR_FULL(InstigatorController, AController);
}

void UVehicleWeakPointPart::BeforeDelete()
{
	UVehicleDestructablePart::BeforeDelete();

	DELE_PTR_FULL(LinkedEngine);
	DELE_PTR_FULL(InstigatorController);
}

// Function Insurgency.VehicleSeatComponent.SetTurretComponents
// ()
// Parameters:
// class USceneComponent*         NewPitchComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*         NewYawComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::SetTurretComponents(class USceneComponent* NewPitchComponent, class USceneComponent* NewYawComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.SetTurretComponents");

	UVehicleSeatComponent_SetTurretComponents_Params params;
	params.NewPitchComponent = NewPitchComponent;
	params.NewYawComponent = NewYawComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.SetLocked
// ()
// Parameters:
// bool                           bNewLocked                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::SetLocked(bool bNewLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.SetLocked");

	UVehicleSeatComponent_SetLocked_Params params;
	params.bNewLocked = bNewLocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.SetCharacterAttachmentMesh
// ()
// Parameters:
// class UMeshComponent*          AttachmentMesh                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::SetCharacterAttachmentMesh(class UMeshComponent* AttachmentMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.SetCharacterAttachmentMesh");

	UVehicleSeatComponent_SetCharacterAttachmentMesh_Params params;
	params.AttachmentMesh = AttachmentMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.PlaySeatAudio
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::PlaySeatAudio(class UAkAudioEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.PlaySeatAudio");

	UVehicleSeatComponent_PlaySeatAudio_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.OnRep_MountedWeapon
// ()
void UVehicleSeatComponent::OnRep_MountedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.OnRep_MountedWeapon");

	UVehicleSeatComponent_OnRep_MountedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.OnExited
// ()
// Parameters:
// class APawn*                   ExitedPawn                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVehicleSeatComponent::OnExited(class APawn* ExitedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.OnExited");

	UVehicleSeatComponent_OnExited_Params params;
	params.ExitedPawn = ExitedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.OnEntered
// ()
// Parameters:
// class APawn*                   EnteredPawn                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVehicleSeatComponent::OnEntered(class APawn* EnteredPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.OnEntered");

	UVehicleSeatComponent_OnEntered_Params params;
	params.EnteredPawn = EnteredPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.OnAction
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVehicleSeatComponent::OnAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.OnAction");

	UVehicleSeatComponent_OnAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.Multicast_OnSoldierLeaned
// ()
void UVehicleSeatComponent::Multicast_OnSoldierLeaned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.Multicast_OnSoldierLeaned");

	UVehicleSeatComponent_Multicast_OnSoldierLeaned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.GetVehicle
// ()
// Parameters:
// class AVehicleBase*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AVehicleBase* UVehicleSeatComponent::GetVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.GetVehicle");

	UVehicleSeatComponent_GetVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.GetTurretRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator UVehicleSeatComponent::GetTurretRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.GetTurretRotation");

	UVehicleSeatComponent_GetTurretRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.GetSeatedCharacter
// ()
// Parameters:
// class AINSCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSCharacter* UVehicleSeatComponent::GetSeatedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.GetSeatedCharacter");

	UVehicleSeatComponent_GetSeatedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.GetRelativeTurretRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator UVehicleSeatComponent::GetRelativeTurretRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.GetRelativeTurretRotation");

	UVehicleSeatComponent_GetRelativeTurretRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.GetMountedWeapon
// ()
// Parameters:
// class AItemFirearm*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemFirearm* UVehicleSeatComponent::GetMountedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.GetMountedWeapon");

	UVehicleSeatComponent_GetMountedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.GetDesiredTurretRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator UVehicleSeatComponent::GetDesiredTurretRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.GetDesiredTurretRotation");

	UVehicleSeatComponent_GetDesiredTurretRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.Fire
// ()
// Parameters:
// bool                           TriggerDown                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::Fire(bool TriggerDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.Fire");

	UVehicleSeatComponent_Fire_Params params;
	params.TriggerDown = TriggerDown;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.EnterSeat
// ()
// Parameters:
// class AINSCharacter*           Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::EnterSeat(class AINSCharacter* Pawn, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.EnterSeat");

	UVehicleSeatComponent_EnterSeat_Params params;
	params.Pawn = Pawn;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.EjectSeat
// ()
// Parameters:
// class AINSCharacter*           PreviousPawn                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UVehicleSeatComponent::EjectSeat(class AINSCharacter* PreviousPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.EjectSeat");

	UVehicleSeatComponent_EjectSeat_Params params;
	params.PreviousPawn = PreviousPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleSeatComponent.CanTurretAimAtLocation
// ()
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVehicleSeatComponent::CanTurretAimAtLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.CanTurretAimAtLocation");

	UVehicleSeatComponent_CanTurretAimAtLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleSeatComponent.CanEnterSeat
// ()
// Parameters:
// class AINSCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UVehicleSeatComponent::CanEnterSeat(class AINSCharacter* Character, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleSeatComponent.CanEnterSeat");

	UVehicleSeatComponent_CanEnterSeat_Params params;
	params.Character = Character;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVehicleSeatComponent::AfterRead()
{
	UBoxComponent::AfterRead();

	READ_PTR_FULL(DuckCameraOffset, UCurveVector);
	READ_PTR_FULL(SeatedCharacter, AINSCharacter);
	READ_PTR_FULL(YawComponent, USceneComponent);
	READ_PTR_FULL(PitchComponent, USceneComponent);
	READ_PTR_FULL(ExitComponent, UVehicleExitComponent);
	READ_PTR_FULL(SeatAudio, UINSAudioComponent);
	READ_PTR_FULL(SeatEnterAudio, UAkAudioEvent);
	READ_PTR_FULL(SeatExitAudio, UAkAudioEvent);
	READ_PTR_FULL(WindowShatterAudio, UAkAudioEvent);
	READ_PTR_FULL(BotClass, UClass);
	READ_PTR_FULL(SpawnedBot, AINSCharacter);
	READ_PTR_FULL(WindowAimLocation, USceneComponent);
	READ_PTR_FULL(CharacterAttachmentMesh, UMeshComponent);
}

void UVehicleSeatComponent::BeforeDelete()
{
	UBoxComponent::BeforeDelete();

	DELE_PTR_FULL(DuckCameraOffset);
	DELE_PTR_FULL(SeatedCharacter);
	DELE_PTR_FULL(YawComponent);
	DELE_PTR_FULL(PitchComponent);
	DELE_PTR_FULL(ExitComponent);
	DELE_PTR_FULL(SeatAudio);
	DELE_PTR_FULL(SeatEnterAudio);
	DELE_PTR_FULL(SeatExitAudio);
	DELE_PTR_FULL(WindowShatterAudio);
	DELE_PTR_FULL(BotClass);
	DELE_PTR_FULL(SpawnedBot);
	DELE_PTR_FULL(WindowAimLocation);
	DELE_PTR_FULL(CharacterAttachmentMesh);
}

void UVehiclePathFollowingComponent::AfterRead()
{
	UPathFollowingComponent::AfterRead();

}

void UVehiclePathFollowingComponent::BeforeDelete()
{
	UPathFollowingComponent::BeforeDelete();

}

void AVehicleNavTarget::AfterRead()
{
	ATargetPoint::AfterRead();

}

void AVehicleNavTarget::BeforeDelete()
{
	ATargetPoint::BeforeDelete();

}

void UVehicleNavModifierComponent::AfterRead()
{
	UNavModifierComponent::AfterRead();

}

void UVehicleNavModifierComponent::BeforeDelete()
{
	UNavModifierComponent::BeforeDelete();

}

void UVehicleLightPart::AfterRead()
{
	UVehiclePartComponent::AfterRead();

}

void UVehicleLightPart::BeforeDelete()
{
	UVehiclePartComponent::BeforeDelete();

}

// Function Insurgency.VehicleInterface.Explode
// ()
void UVehicleInterface::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleInterface.Explode");

	UVehicleInterface_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVehicleInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVehicleInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.VehicleExitComponent.GetSeatExitLocation
// ()
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UVehicleExitComponent::GetSeatExitLocation(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleExitComponent.GetSeatExitLocation");

	UVehicleExitComponent_GetSeatExitLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;

}


void UVehicleExitComponent::AfterRead()
{
	UArrowComponent::AfterRead();

}

void UVehicleExitComponent::BeforeDelete()
{
	UArrowComponent::BeforeDelete();

}

void UVehicleEmergencyExitComponent::AfterRead()
{
	UVehicleExitComponent::AfterRead();

}

void UVehicleEmergencyExitComponent::BeforeDelete()
{
	UVehicleExitComponent::BeforeDelete();

}

// Function Insurgency.VehicleEnginePart.BroadcastEngineBlowUp
// ()
void UVehicleEnginePart::BroadcastEngineBlowUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleEnginePart.BroadcastEngineBlowUp");

	UVehicleEnginePart_BroadcastEngineBlowUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVehicleEnginePart::AfterRead()
{
	UVehicleDestructablePart::AfterRead();

	READ_PTR_FULL(ExplosionCameraShake, UClass);
	READ_PTR_FULL(AkEventExplosion, UAkAudioEvent);
	READ_PTR_FULL(EngineExplodeDamageTypeClass, UClass);
}

void UVehicleEnginePart::BeforeDelete()
{
	UVehicleDestructablePart::BeforeDelete();

	DELE_PTR_FULL(ExplosionCameraShake);
	DELE_PTR_FULL(AkEventExplosion);
	DELE_PTR_FULL(EngineExplodeDamageTypeClass);
}

// Function Insurgency.VehicleHoveringBase.TraceEnvironment
// ()
void AVehicleHoveringBase::TraceEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.TraceEnvironment");

	AVehicleHoveringBase_TraceEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.ToggleNoDamage
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::ToggleNoDamage(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.ToggleNoDamage");

	AVehicleHoveringBase_ToggleNoDamage_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.ToggleAI
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::ToggleAI(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.ToggleAI");

	AVehicleHoveringBase_ToggleAI_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.StartFalling
// ()
// Parameters:
// bool                           bSpin                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::StartFalling(bool bSpin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.StartFalling");

	AVehicleHoveringBase_StartFalling_Params params;
	params.bSpin = bSpin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.SetOpenDoor
// ()
// Parameters:
// bool                           bNewOpenDoor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::SetOpenDoor(bool bNewOpenDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.SetOpenDoor");

	AVehicleHoveringBase_SetOpenDoor_Params params;
	params.bNewOpenDoor = bNewOpenDoor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.SetCinematicMode
// ()
// Parameters:
// bool                           bNewSetting                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::SetCinematicMode(bool bNewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.SetCinematicMode");

	AVehicleHoveringBase_SetCinematicMode_Params params;
	params.bNewSetting = bNewSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.SeePawn
// ()
// Parameters:
// class APawn*                   OtherPawn                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::SeePawn(class APawn* OtherPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.SeePawn");

	AVehicleHoveringBase_SeePawn_Params params;
	params.OtherPawn = OtherPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.PlayDestroyedResponses
// ()
void AVehicleHoveringBase::PlayDestroyedResponses()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.PlayDestroyedResponses");

	AVehicleHoveringBase_PlayDestroyedResponses_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnSeatEjected
// ()
// Parameters:
// class AINSCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::OnSeatEjected(class AINSCharacter* Character, class UVehicleSeatComponent* Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnSeatEjected");

	AVehicleHoveringBase_OnSeatEjected_Params params;
	params.Character = Character;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnRep_Detonating
// ()
void AVehicleHoveringBase::OnRep_Detonating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnRep_Detonating");

	AVehicleHoveringBase_OnRep_Detonating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnRep_DamageState
// ()
void AVehicleHoveringBase::OnRep_DamageState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnRep_DamageState");

	AVehicleHoveringBase_OnRep_DamageState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnRep_CinematicMode
// ()
void AVehicleHoveringBase::OnRep_CinematicMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnRep_CinematicMode");

	AVehicleHoveringBase_OnRep_CinematicMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnImpact
// ()
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnImpact");

	AVehicleHoveringBase_OnImpact_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnFinishedDodge
// ()
void AVehicleHoveringBase::OnFinishedDodge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnFinishedDodge");

	AVehicleHoveringBase_OnFinishedDodge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.OnExplode
// ()
void AVehicleHoveringBase::OnExplode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.OnExplode");

	AVehicleHoveringBase_OnExplode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.IsDodging
// ()
// Parameters:
// bool                           bRecently                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleHoveringBase::IsDodging(bool bRecently)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.IsDodging");

	AVehicleHoveringBase_IsDodging_Params params;
	params.bRecently = bRecently;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleHoveringBase.HearNoise
// ()
// Parameters:
// class APawn*                   OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::HearNoise(class APawn* OtherActor, const struct FVector& Location, float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.HearNoise");

	AVehicleHoveringBase_HearNoise_Params params;
	params.OtherActor = OtherActor;
	params.Location = Location;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.GetDamageState
// ()
// Parameters:
// EHoverVehicleDamageState       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EHoverVehicleDamageState AVehicleHoveringBase::GetDamageState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.GetDamageState");

	AVehicleHoveringBase_GetDamageState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleHoveringBase.Explode
// ()
void AVehicleHoveringBase::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.Explode");

	AVehicleHoveringBase_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.DelayedDestroy
// ()
void AVehicleHoveringBase::DelayedDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.DelayedDestroy");

	AVehicleHoveringBase_DelayedDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleHoveringBase.BeginDetonate
// ()
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleHoveringBase::BeginDetonate(float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleHoveringBase.BeginDetonate");

	AVehicleHoveringBase_BeginDetonate_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVehicleHoveringBase::AfterRead()
{
	APawn::AfterRead();

	READ_PTR_FULL(MovementComponent, UHelicopterMovementComponent);
	READ_PTR_FULL(AssociatedFireSupport, AFireSupportBase);
	READ_PTR_FULL(DustEmitter, UParticleSystemComponent);
	READ_PTR_FULL(DustEmitterSystem, UParticleSystem);
	READ_PTR_FULL(ExplodeEmitterSystem, UParticleSystem);
	READ_PTR_FULL(AkComponentRotorSound, UINSAudioComponent);
	READ_PTR_FULL(AkEventRotorLoop, UAkAudioEvent);
	READ_PTR_FULL(AkEventRotorLoopStop, UAkAudioEvent);
	READ_PTR_FULL(AkComponentTurbineSound, UINSAudioComponent);
	READ_PTR_FULL(AkEventTurbineLoop, UAkAudioEvent);
	READ_PTR_FULL(AkComponentEngineSound, UINSAudioComponent);
	READ_PTR_FULL(AkEventEngineLoop, UAkAudioEvent);
	READ_PTR_FULL(AkEventEngineStop, UAkAudioEvent);
	READ_PTR_FULL(AkEventSpinning, UAkAudioEvent);
	READ_PTR_FULL(AkEventExplode, UAkAudioEvent);
	READ_PTR_FULL(AkComponentIndoorPresenceSound, UINSAudioComponent);
	READ_PTR_FULL(AkEventIndoorPresenceLoop, UAkAudioEvent);
	READ_PTR_FULL(AkEventIndoorPresenceStop, UAkAudioEvent);
	READ_PTR_FULL(ExplosionDamageTypeClass, UClass);
	READ_PTR_FULL(ExplosionProtectile, UClass);
	READ_PTR_FULL(RootPhysicsComponent, UStaticMeshComponent);
	READ_PTR_FULL(VisibleMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(DestroyedMesh, USkeletalMesh);
	READ_PTR_FULL(BehaviorTree, UBehaviorTree);
	READ_PTR_FULL(AkEventPreDetonate, UAkAudioEvent);
	READ_PTR_FULL(PawnSensing, UINSPawnSensingComponent);
}

void AVehicleHoveringBase::BeforeDelete()
{
	APawn::BeforeDelete();

	DELE_PTR_FULL(MovementComponent);
	DELE_PTR_FULL(AssociatedFireSupport);
	DELE_PTR_FULL(DustEmitter);
	DELE_PTR_FULL(DustEmitterSystem);
	DELE_PTR_FULL(ExplodeEmitterSystem);
	DELE_PTR_FULL(AkComponentRotorSound);
	DELE_PTR_FULL(AkEventRotorLoop);
	DELE_PTR_FULL(AkEventRotorLoopStop);
	DELE_PTR_FULL(AkComponentTurbineSound);
	DELE_PTR_FULL(AkEventTurbineLoop);
	DELE_PTR_FULL(AkComponentEngineSound);
	DELE_PTR_FULL(AkEventEngineLoop);
	DELE_PTR_FULL(AkEventEngineStop);
	DELE_PTR_FULL(AkEventSpinning);
	DELE_PTR_FULL(AkEventExplode);
	DELE_PTR_FULL(AkComponentIndoorPresenceSound);
	DELE_PTR_FULL(AkEventIndoorPresenceLoop);
	DELE_PTR_FULL(AkEventIndoorPresenceStop);
	DELE_PTR_FULL(ExplosionDamageTypeClass);
	DELE_PTR_FULL(ExplosionProtectile);
	DELE_PTR_FULL(RootPhysicsComponent);
	DELE_PTR_FULL(VisibleMeshComponent);
	DELE_PTR_FULL(DestroyedMesh);
	DELE_PTR_FULL(BehaviorTree);
	DELE_PTR_FULL(AkEventPreDetonate);
	DELE_PTR_FULL(PawnSensing);
}

// Function Insurgency.VehicleDrone.GetDiveTarget
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* AVehicleDrone::GetDiveTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleDrone.GetDiveTarget");

	AVehicleDrone_GetDiveTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AVehicleDrone::AfterRead()
{
	AVehicleHoveringBase::AfterRead();

}

void AVehicleDrone::BeforeDelete()
{
	AVehicleHoveringBase::BeforeDelete();

}

// Function Insurgency.VehicleBase.ToggleHeadlights
// ()
void AVehicleBase::ToggleHeadlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.ToggleHeadlights");

	AVehicleBase_ToggleHeadlights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.ToggleEngineStatus
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::ToggleEngineStatus(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.ToggleEngineStatus");

	AVehicleBase_ToggleEngineStatus_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.ShouldEmergancyBreak
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::ShouldEmergancyBreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.ShouldEmergancyBreak");

	AVehicleBase_ShouldEmergancyBreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.ServerSetAcceleratorInput
// ()
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::ServerSetAcceleratorInput(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.ServerSetAcceleratorInput");

	AVehicleBase_ServerSetAcceleratorInput_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnRep_TeamId
// ()
void AVehicleBase::OnRep_TeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnRep_TeamId");

	AVehicleBase_OnRep_TeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnRep_Locked
// ()
void AVehicleBase::OnRep_Locked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnRep_Locked");

	AVehicleBase_OnRep_Locked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnRep_InsertionVehicle
// ()
void AVehicleBase::OnRep_InsertionVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnRep_InsertionVehicle");

	AVehicleBase_OnRep_InsertionVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnRep_HornHeld
// ()
void AVehicleBase::OnRep_HornHeld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnRep_HornHeld");

	AVehicleBase_OnRep_HornHeld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnRep_EngineRunning
// ()
void AVehicleBase::OnRep_EngineRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnRep_EngineRunning");

	AVehicleBase_OnRep_EngineRunning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnRep_Braking
// ()
void AVehicleBase::OnRep_Braking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnRep_Braking");

	AVehicleBase_OnRep_Braking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnKillBoxOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AVehicleBase::OnKillBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnKillBoxOverlap");

	AVehicleBase_OnKillBoxOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnImpact
// ()
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AVehicleBase::OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnImpact");

	AVehicleBase_OnImpact_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnHeadlightToggled
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::OnHeadlightToggled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnHeadlightToggled");

	AVehicleBase_OnHeadlightToggled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.VehicleBase.OnGearChangeDelegate__DelegateSignature
// ()
void AVehicleBase::OnGearChangeDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.VehicleBase.OnGearChangeDelegate__DelegateSignature");

	AVehicleBase_OnGearChangeDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnDestroyedMeshLoaded
// ()
void AVehicleBase::OnDestroyedMeshLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnDestroyedMeshLoaded");

	AVehicleBase_OnDestroyedMeshLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnDamage
// ()
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::OnDamage(class AController* Killer, class AActor* DamageCauser, float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnDamage");

	AVehicleBase_OnDamage_Params params;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnBrakelightToggled
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::OnBrakelightToggled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnBrakelightToggled");

	AVehicleBase_OnBrakelightToggled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnAcceleratorStarted
// ()
void AVehicleBase::OnAcceleratorStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnAcceleratorStarted");

	AVehicleBase_OnAcceleratorStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnAcceleratorReleased
// ()
void AVehicleBase::OnAcceleratorReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnAcceleratorReleased");

	AVehicleBase_OnAcceleratorReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.OnAcceleratorContinue
// ()
void AVehicleBase::OnAcceleratorContinue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.OnAcceleratorContinue");

	AVehicleBase_OnAcceleratorContinue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.IsVehicleUpsideDown
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsVehicleUpsideDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsVehicleUpsideDown");

	AVehicleBase_IsVehicleUpsideDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsVehicleOnSide
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsVehicleOnSide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsVehicleOnSide");

	AVehicleBase_IsVehicleOnSide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsVehicleDestroyed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsVehicleDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsVehicleDestroyed");

	AVehicleBase_IsVehicleDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsPotentiallyAbandoned
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsPotentiallyAbandoned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsPotentiallyAbandoned");

	AVehicleBase_IsPotentiallyAbandoned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsPawnSeated
// ()
// Parameters:
// class APawn*                   PassengerPawn                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsPawnSeated(class APawn* PassengerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsPawnSeated");

	AVehicleBase_IsPawnSeated_Params params;
	params.PassengerPawn = PassengerPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsEngineRunning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsEngineRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsEngineRunning");

	AVehicleBase_IsEngineRunning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsEngineEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsEngineEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsEngineEnabled");

	AVehicleBase_IsEngineEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.IsBurning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::IsBurning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.IsBurning");

	AVehicleBase_IsBurning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetVehicleRPM
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AVehicleBase::GetVehicleRPM()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetVehicleRPM");

	AVehicleBase_GetVehicleRPM_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetVehicleOrientation
// ()
// Parameters:
// EVehicleOrientation            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EVehicleOrientation AVehicleBase::GetVehicleOrientation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetVehicleOrientation");

	AVehicleBase_GetVehicleOrientation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetSteeringProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AVehicleBase::GetSteeringProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetSteeringProgress");

	AVehicleBase_GetSteeringProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetSteeringAngles
// ()
// Parameters:
// float                          MinAngle                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxAngle                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          CurrentAngle                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::GetSteeringAngles(float* MinAngle, float* MaxAngle, float* CurrentAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetSteeringAngles");

	AVehicleBase_GetSteeringAngles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MinAngle != nullptr)
		*MinAngle = params.MinAngle;
	if (MaxAngle != nullptr)
		*MaxAngle = params.MaxAngle;
	if (CurrentAngle != nullptr)
		*CurrentAngle = params.CurrentAngle;

}


// Function Insurgency.VehicleBase.GetSeatComponents
// ()
// Parameters:
// TArray<class UVehicleSeatComponent*> OutSeatComponents              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AVehicleBase::GetSeatComponents(TArray<class UVehicleSeatComponent*>* OutSeatComponents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetSeatComponents");

	AVehicleBase_GetSeatComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSeatComponents != nullptr)
		*OutSeatComponents = params.OutSeatComponents;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetPassengers
// ()
// Parameters:
// TArray<class AINSCharacter*>   OutPassengers                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::GetPassengers(TArray<class AINSCharacter*>* OutPassengers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetPassengers");

	AVehicleBase_GetPassengers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPassengers != nullptr)
		*OutPassengers = params.OutPassengers;

}


// Function Insurgency.VehicleBase.GetPassengerCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AVehicleBase::GetPassengerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetPassengerCount");

	AVehicleBase_GetPassengerCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetOccupiedSeats
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AVehicleBase::GetOccupiedSeats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetOccupiedSeats");

	AVehicleBase_GetOccupiedSeats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetEmptySeats
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AVehicleBase::GetEmptySeats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetEmptySeats");

	AVehicleBase_GetEmptySeats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.GetChasisStrainValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AVehicleBase::GetChasisStrainValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.GetChasisStrainValue");

	AVehicleBase_GetChasisStrainValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.ForceStop
// ()
// Parameters:
// bool                           bDisableEngine                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AVehicleBase::ForceStop(bool bDisableEngine)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.ForceStop");

	AVehicleBase_ForceStop_Params params;
	params.bDisableEngine = bDisableEngine;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.FindSeatByNumber
// ()
// Parameters:
// int8_t                         SeatNumber                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVehicleSeatComponent* AVehicleBase::FindSeatByNumber(int8_t SeatNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.FindSeatByNumber");

	AVehicleBase_FindSeatByNumber_Params params;
	params.SeatNumber = SeatNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.FindNextSeat
// ()
// Parameters:
// class AController*             PassengerController            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVehicleSeatComponent* AVehicleBase::FindNextSeat(class AController* PassengerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.FindNextSeat");

	AVehicleBase_FindNextSeat_Params params;
	params.PassengerController = PassengerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.FindBestSeat
// ()
// Parameters:
// class AINSCharacter*           Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESeatSearchPriorityType        PriorityType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVehicleSeatComponent* AVehicleBase::FindBestSeat(class AINSCharacter* Pawn, ESeatSearchPriorityType PriorityType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.FindBestSeat");

	AVehicleBase_FindBestSeat_Params params;
	params.Pawn = Pawn;
	params.PriorityType = PriorityType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.VehicleBase.CheckAbandoned
// ()
void AVehicleBase::CheckAbandoned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.CheckAbandoned");

	AVehicleBase_CheckAbandoned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.VehicleBase.BlueprintOnGearChanged
// ()
void AVehicleBase::BlueprintOnGearChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.VehicleBase.BlueprintOnGearChanged");

	AVehicleBase_BlueprintOnGearChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVehicleBase::AfterRead()
{
	AWheeledVehicle::AfterRead();

	READ_PTR_FULL(DriverCharacter, AINSCharacter);
	READ_PTR_FULL(CameraComponent, UCameraComponent);
	READ_PTR_FULL(SpringArmComponent, USpringArmComponent);
	READ_PTR_FULL(VehicleKillBoxComponent, UBoxComponent);
	READ_PTR_FULL(VehicleKillBoxComponentBehind, UBoxComponent);
	READ_PTR_FULL(VehicleFireBox, UBoxComponent);
	READ_PTR_FULL(WindowBustOpenParticle, UParticleSystem);
	READ_PTR_FULL(DespawnHideParticle, UParticleSystem);
	READ_PTR_FULL(AkEventCrash, UAkAudioEvent);
	READ_PTR_FULL(AkEventExhaustStart, UAkAudioEvent);
	READ_PTR_FULL(AkEventExhaustStop, UAkAudioEvent);
	READ_PTR_FULL(AkEventIgnitionStart, UAkAudioEvent);
	READ_PTR_FULL(AkEventIgnitionStop, UAkAudioEvent);
	READ_PTR_FULL(AkEventGearChange, UAkAudioEvent);
	READ_PTR_FULL(AkEventAcceleratorStart, UAkAudioEvent);
	READ_PTR_FULL(AkEventAcceleratorRelease, UAkAudioEvent);
	READ_PTR_FULL(AkEventAcceleratorContinue, UAkAudioEvent);
	READ_PTR_FULL(AkEventSuspensionBounce, UAkAudioEvent);
	READ_PTR_FULL(AkEventWheelRollStart, UAkAudioEvent);
	READ_PTR_FULL(AkEvenHornStart, UAkAudioEvent);
	READ_PTR_FULL(AkEvenHornStop, UAkAudioEvent);
	READ_PTR_FULL(AkEventWheelRollStop, UAkAudioEvent);
	READ_PTR_FULL(AkEventEmergencyBrake, UAkAudioEvent);
	READ_PTR_FULL(AkEventBrakeOn, UAkAudioEvent);
	READ_PTR_FULL(AkEventBrakeOff, UAkAudioEvent);
	READ_PTR_FULL(AkEventModularFire, UAkAudioEvent);
	READ_PTR_FULL(AkComponentExhaustSounds, UINSAudioComponent);
	READ_PTR_FULL(AkComponentEngineSounds, UINSAudioComponent);
	READ_PTR_FULL(AkComponentTyreSounds, UINSAudioComponent);
	READ_PTR_FULL(AkComponentSuspensionSounds, UINSAudioComponent);
	READ_PTR_FULL(AkComponentHornSounds, UINSAudioComponent);
	READ_PTR_FULL(AkEventExplosionDepsawn, UAkAudioEvent);
	READ_PTR_FULL(CurrentPhysicalSurface, UPhysicalMaterial);
	READ_PTR_FULL(RightHeadLightPart, UVehicleLightPart);
	READ_PTR_FULL(LeftHeadLightPart, UVehicleLightPart);
	READ_PTR_FULL(RightBackLightPart, UVehicleLightPart);
	READ_PTR_FULL(LeftBackLightPart, UVehicleLightPart);
	READ_PTR_FULL(RightBreakLightPart, UVehicleLightPart);
	READ_PTR_FULL(LeftBreakLightPart, UVehicleLightPart);
	READ_PTR_FULL(EnginePart, UVehicleEnginePart);
	READ_PTR_FULL(VisualMeshComponent, UINSSkeletalMeshComponent);
	READ_PTR_FULL(EngineParticleEffect, UParticleSystemComponent);
	READ_PTR_FULL(VehicleBlowUpParticleEffect, UParticleSystemComponent);
	READ_PTR_FULL(LeaveUIImage, UTexture2D);
	READ_PTR_FULL(DriverUIImage, UTexture2D);
	READ_PTR_FULL(PassengerUIImage, UTexture2D);
	READ_PTR_FULL(TurretUIImage, UTexture2D);
}

void AVehicleBase::BeforeDelete()
{
	AWheeledVehicle::BeforeDelete();

	DELE_PTR_FULL(DriverCharacter);
	DELE_PTR_FULL(CameraComponent);
	DELE_PTR_FULL(SpringArmComponent);
	DELE_PTR_FULL(VehicleKillBoxComponent);
	DELE_PTR_FULL(VehicleKillBoxComponentBehind);
	DELE_PTR_FULL(VehicleFireBox);
	DELE_PTR_FULL(WindowBustOpenParticle);
	DELE_PTR_FULL(DespawnHideParticle);
	DELE_PTR_FULL(AkEventCrash);
	DELE_PTR_FULL(AkEventExhaustStart);
	DELE_PTR_FULL(AkEventExhaustStop);
	DELE_PTR_FULL(AkEventIgnitionStart);
	DELE_PTR_FULL(AkEventIgnitionStop);
	DELE_PTR_FULL(AkEventGearChange);
	DELE_PTR_FULL(AkEventAcceleratorStart);
	DELE_PTR_FULL(AkEventAcceleratorRelease);
	DELE_PTR_FULL(AkEventAcceleratorContinue);
	DELE_PTR_FULL(AkEventSuspensionBounce);
	DELE_PTR_FULL(AkEventWheelRollStart);
	DELE_PTR_FULL(AkEvenHornStart);
	DELE_PTR_FULL(AkEvenHornStop);
	DELE_PTR_FULL(AkEventWheelRollStop);
	DELE_PTR_FULL(AkEventEmergencyBrake);
	DELE_PTR_FULL(AkEventBrakeOn);
	DELE_PTR_FULL(AkEventBrakeOff);
	DELE_PTR_FULL(AkEventModularFire);
	DELE_PTR_FULL(AkComponentExhaustSounds);
	DELE_PTR_FULL(AkComponentEngineSounds);
	DELE_PTR_FULL(AkComponentTyreSounds);
	DELE_PTR_FULL(AkComponentSuspensionSounds);
	DELE_PTR_FULL(AkComponentHornSounds);
	DELE_PTR_FULL(AkEventExplosionDepsawn);
	DELE_PTR_FULL(CurrentPhysicalSurface);
	DELE_PTR_FULL(RightHeadLightPart);
	DELE_PTR_FULL(LeftHeadLightPart);
	DELE_PTR_FULL(RightBackLightPart);
	DELE_PTR_FULL(LeftBackLightPart);
	DELE_PTR_FULL(RightBreakLightPart);
	DELE_PTR_FULL(LeftBreakLightPart);
	DELE_PTR_FULL(EnginePart);
	DELE_PTR_FULL(VisualMeshComponent);
	DELE_PTR_FULL(EngineParticleEffect);
	DELE_PTR_FULL(VehicleBlowUpParticleEffect);
	DELE_PTR_FULL(LeaveUIImage);
	DELE_PTR_FULL(DriverUIImage);
	DELE_PTR_FULL(PassengerUIImage);
	DELE_PTR_FULL(TurretUIImage);
}

void UUsableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UUsableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// DelegateFunction Insurgency.UsableComponent.OnUseDelegate__DelegateSignature
// ()
// Parameters:
// class APawn*                   User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UUsableComponent::OnUseDelegate__DelegateSignature(class APawn* User, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.UsableComponent.OnUseDelegate__DelegateSignature");

	UUsableComponent_OnUseDelegate__DelegateSignature_Params params;
	params.User = User;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.UsableComponent.GetUseMessage
// ()
// Parameters:
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UUsableComponent::GetUseMessage(class AINSPlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.UsableComponent.GetUseMessage");

	UUsableComponent_GetUseMessage_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UUsableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UUsableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void AUICameraActor::AfterRead()
{
	ACameraActor::AfterRead();

}

void AUICameraActor::BeforeDelete()
{
	ACameraActor::BeforeDelete();

}

// Function Insurgency.TutorialLevelScriptActor.SetTutorialProgress
// ()
// Parameters:
// ETutorialStage                 Stage                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATutorialLevelScriptActor::SetTutorialProgress(ETutorialStage Stage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLevelScriptActor.SetTutorialProgress");

	ATutorialLevelScriptActor_SetTutorialProgress_Params params;
	params.Stage = Stage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATutorialLevelScriptActor::AfterRead()
{
	ALevelScriptActor::AfterRead();

}

void ATutorialLevelScriptActor::BeforeDelete()
{
	ALevelScriptActor::BeforeDelete();

}

void UTutorialList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTutorialList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.TutorialLesson.ShowLessonAfterDelay
// ()
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPlayVideo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceShow                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTutorialLesson::ShowLessonAfterDelay(float Delay, float Duration, bool bPlayVideo, bool bForceShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.ShowLessonAfterDelay");

	UTutorialLesson_ShowLessonAfterDelay_Params params;
	params.Delay = Delay;
	params.Duration = Duration;
	params.bPlayVideo = bPlayVideo;
	params.bForceShow = bForceShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TutorialLesson.ShowLesson
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPlayVideo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceShow                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTutorialLesson::ShowLesson(float Duration, bool bPlayVideo, bool bForceShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.ShowLesson");

	UTutorialLesson_ShowLesson_Params params;
	params.Duration = Duration;
	params.bPlayVideo = bPlayVideo;
	params.bForceShow = bForceShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TutorialLesson.ShouldShowLesson
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTutorialLesson::ShouldShowLesson()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.ShouldShowLesson");

	UTutorialLesson_ShouldShowLesson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TutorialLesson.ShouldBindEventDelegates
// ()
// Parameters:
// bool                           bForceBindDelegates            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTutorialLesson::ShouldBindEventDelegates(bool bForceBindDelegates)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.ShouldBindEventDelegates");

	UTutorialLesson_ShouldBindEventDelegates_Params params;
	params.bForceBindDelegates = bForceBindDelegates;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TutorialLesson.IsAnotherHintInProgress
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTutorialLesson::IsAnotherHintInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.IsAnotherHintInProgress");

	UTutorialLesson_IsAnotherHintInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TutorialLesson.HideLesson
// ()
void UTutorialLesson::HideLesson()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.HideLesson");

	UTutorialLesson_HideLesson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TutorialLesson.HasValidPlayer
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTutorialLesson::HasValidPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.HasValidPlayer");

	UTutorialLesson_HasValidPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TutorialLesson.GetAssociatedPlayerState
// ()
// Parameters:
// class AINSPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSPlayerState* UTutorialLesson::GetAssociatedPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.GetAssociatedPlayerState");

	UTutorialLesson_GetAssociatedPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TutorialLesson.GetAssociatedPlayerController
// ()
// Parameters:
// class AINSBasePlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSBasePlayerController* UTutorialLesson::GetAssociatedPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.GetAssociatedPlayerController");

	UTutorialLesson_GetAssociatedPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TutorialLesson.CompleteLesson
// ()
void UTutorialLesson::CompleteLesson()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.CompleteLesson");

	UTutorialLesson_CompleteLesson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TutorialLesson.BlueprintOnInitialized
// ()
// Parameters:
// class AINSBasePlayerController* NewOwningPlayerController      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerState*         NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTutorialLesson::BlueprintOnInitialized(class AINSBasePlayerController* NewOwningPlayerController, class AINSPlayerState* NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TutorialLesson.BlueprintOnInitialized");

	UTutorialLesson_BlueprintOnInitialized_Params params;
	params.NewOwningPlayerController = NewOwningPlayerController;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTutorialLesson::AfterRead()
{
	UPrimaryDataAsset::AfterRead();

}

void UTutorialLesson::BeforeDelete()
{
	UPrimaryDataAsset::BeforeDelete();

}

// Function Insurgency.ThirdPersonAnimInstance.UpdateWeightShift
// ()
void UThirdPersonAnimInstance::UpdateWeightShift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateWeightShift");

	UThirdPersonAnimInstance_UpdateWeightShift_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateTransforms
// ()
void UThirdPersonAnimInstance::UpdateTransforms()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateTransforms");

	UThirdPersonAnimInstance_UpdateTransforms_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateMovementWeightShift
// ()
void UThirdPersonAnimInstance::UpdateMovementWeightShift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateMovementWeightShift");

	UThirdPersonAnimInstance_UpdateMovementWeightShift_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateInterpNorthRoll
// ()
void UThirdPersonAnimInstance::UpdateInterpNorthRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateInterpNorthRoll");

	UThirdPersonAnimInstance_UpdateInterpNorthRoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateIKHandTargetMounted
// ()
void UThirdPersonAnimInstance::UpdateIKHandTargetMounted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateIKHandTargetMounted");

	UThirdPersonAnimInstance_UpdateIKHandTargetMounted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateIKCurves
// ()
void UThirdPersonAnimInstance::UpdateIKCurves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateIKCurves");

	UThirdPersonAnimInstance_UpdateIKCurves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateHandIK
// ()
void UThirdPersonAnimInstance::UpdateHandIK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateHandIK");

	UThirdPersonAnimInstance_UpdateHandIK_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateDeployedAlpha
// ()
void UThirdPersonAnimInstance::UpdateDeployedAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateDeployedAlpha");

	UThirdPersonAnimInstance_UpdateDeployedAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.UpdateActiveLeftHandPose
// ()
void UThirdPersonAnimInstance::UpdateActiveLeftHandPose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.UpdateActiveLeftHandPose");

	UThirdPersonAnimInstance_UpdateActiveLeftHandPose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.IKCurveAlpha
// ()
// Parameters:
// float                          Interp                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInterpolate                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCondition                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSubtract                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   CurveName                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutInterp                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UThirdPersonAnimInstance::IKCurveAlpha(float Interp, bool bInterpolate, bool bCondition, bool bSubtract, const struct FName& CurveName, float* OutInterp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.IKCurveAlpha");

	UThirdPersonAnimInstance_IKCurveAlpha_Params params;
	params.Interp = Interp;
	params.bInterpolate = bInterpolate;
	params.bCondition = bCondition;
	params.bSubtract = bSubtract;
	params.CurveName = CurveName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutInterp != nullptr)
		*OutInterp = params.OutInterp;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.DeltaRotatorAxis
// ()
// Parameters:
// float                          A                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UThirdPersonAnimInstance::DeltaRotatorAxis(float A, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.DeltaRotatorAxis");

	UThirdPersonAnimInstance_DeltaRotatorAxis_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.CalcVariableInterp
// ()
// Parameters:
// float                          Current                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UThirdPersonAnimInstance::CalcVariableInterp(float Current, float Target, float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.CalcVariableInterp");

	UThirdPersonAnimInstance_CalcVariableInterp_Params params;
	params.Current = Current;
	params.Target = Target;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.CalcRotatorInterp
// ()
// Parameters:
// struct FRotator                Current                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                Target                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator UThirdPersonAnimInstance::CalcRotatorInterp(const struct FRotator& Current, const struct FRotator& Target, float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.CalcRotatorInterp");

	UThirdPersonAnimInstance_CalcRotatorInterp_Params params;
	params.Current = Current;
	params.Target = Target;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.CalcRelativeTransform
// ()
// Parameters:
// struct FTransform              Child                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform              Parent                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FTransform UThirdPersonAnimInstance::CalcRelativeTransform(const struct FTransform& Child, const struct FTransform& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.CalcRelativeTransform");

	UThirdPersonAnimInstance_CalcRelativeTransform_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.CalcGroinAngle
// ()
void UThirdPersonAnimInstance::CalcGroinAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.CalcGroinAngle");

	UThirdPersonAnimInstance_CalcGroinAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ThirdPersonAnimInstance.CalcGenericFloatAlpha
// ()
// Parameters:
// float                          Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AlphaInput                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bConstant                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutAlpha                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UThirdPersonAnimInstance::CalcGenericFloatAlpha(float Target, float AlphaInput, float Speed, bool bConstant, float* OutAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.CalcGenericFloatAlpha");

	UThirdPersonAnimInstance_CalcGenericFloatAlpha_Params params;
	params.Target = Target;
	params.AlphaInput = AlphaInput;
	params.Speed = Speed;
	params.bConstant = bConstant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAlpha != nullptr)
		*OutAlpha = params.OutAlpha;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.CalcGenericAlpha
// ()
// Parameters:
// bool                           bDifferentDegrade              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTarget                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AlphaInput                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SpeedDegrade                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOverrideCondition             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OverrideValue                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bConstant                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutAlpha                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UThirdPersonAnimInstance::CalcGenericAlpha(bool bDifferentDegrade, bool bTarget, float AlphaInput, float Speed, float SpeedDegrade, bool bOverrideCondition, float OverrideValue, bool bConstant, float* OutAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.CalcGenericAlpha");

	UThirdPersonAnimInstance_CalcGenericAlpha_Params params;
	params.bDifferentDegrade = bDifferentDegrade;
	params.bTarget = bTarget;
	params.AlphaInput = AlphaInput;
	params.Speed = Speed;
	params.SpeedDegrade = SpeedDegrade;
	params.bOverrideCondition = bOverrideCondition;
	params.OverrideValue = OverrideValue;
	params.bConstant = bConstant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAlpha != nullptr)
		*OutAlpha = params.OutAlpha;


	return params.ReturnValue;
}


// Function Insurgency.ThirdPersonAnimInstance.BlueprintOnCharacterReset
// ()
void UThirdPersonAnimInstance::BlueprintOnCharacterReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThirdPersonAnimInstance.BlueprintOnCharacterReset");

	UThirdPersonAnimInstance_BlueprintOnCharacterReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UThirdPersonAnimInstance::AfterRead()
{
	UEquipableAnimInstance::AfterRead();

	READ_PTR_FULL(HandPoseUnderbarrel, UAnimSequence);
	READ_PTR_FULL(ActiveLeftHandPose, UAnimSequence);
	READ_PTR_FULL(HorizontalOffsetCurve, UCurveFloat);
	READ_PTR_FULL(SoldierMovement, USoldierMovementComponent);
}

void UThirdPersonAnimInstance::BeforeDelete()
{
	UEquipableAnimInstance::BeforeDelete();

	DELE_PTR_FULL(HandPoseUnderbarrel);
	DELE_PTR_FULL(ActiveLeftHandPose);
	DELE_PTR_FULL(HorizontalOffsetCurve);
	DELE_PTR_FULL(SoldierMovement);
}

void UTheaterDefinition::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTheaterDefinition::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.TempHUD.TextWithShadow_Clipped
// ()
// Parameters:
// float                          PosX                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosY                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Text                           (Parm, NativeAccessSpecifierPublic)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            TextColor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATempHUD::TextWithShadow_Clipped(float PosX, float PosY, const struct FText& Text, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TempHUD.TextWithShadow_Clipped");

	ATempHUD_TextWithShadow_Clipped_Params params;
	params.PosX = PosX;
	params.PosY = PosY;
	params.Text = Text;
	params.Font = Font;
	params.TextColor = TextColor;
	params.Scale = Scale;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATempHUD::AfterRead()
{
	AHUD::AfterRead();

}

void ATempHUD::BeforeDelete()
{
	AHUD::BeforeDelete();

}

// Function Insurgency.TeamStatics.IsDedicatedSpectator
// ()
// Parameters:
// class AINSBasePlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTeamStatics::IsDedicatedSpectator(class AINSBasePlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.IsDedicatedSpectator");

	UTeamStatics_IsDedicatedSpectator_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.IsClassRestricted
// ()
// Parameters:
// struct FPlayerClassLimit       ClassLimit                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTeamStatics::IsClassRestricted(const struct FPlayerClassLimit& ClassLimit, int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.IsClassRestricted");

	UTeamStatics_IsClassRestricted_Params params;
	params.ClassLimit = ClassLimit;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetTeamRoleText
// ()
// Parameters:
// ETeamRole                      TeamRole                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutRoleText                    (Parm, OutParm, NativeAccessSpecifierPublic)
void UTeamStatics::GetTeamRoleText(ETeamRole TeamRole, struct FText* OutRoleText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetTeamRoleText");

	UTeamStatics_GetTeamRoleText_Params params;
	params.TeamRole = TeamRole;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutRoleText != nullptr)
		*OutRoleText = params.OutRoleText;

}


// Function Insurgency.TeamStatics.GetTeamRelationship
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamRelationship              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ETeamRelationship UTeamStatics::GetTeamRelationship(class AActor* Actor, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetTeamRelationship");

	UTeamStatics_GetTeamRelationship_Params params;
	params.Actor = Actor;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetTeamInfo
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* UTeamStatics::GetTeamInfo(class UObject* WorldContextObject, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetTeamInfo");

	UTeamStatics_GetTeamInfo_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetRoundOverCaption
// ()
// Parameters:
// class AINSBasePlayerController* For                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UTeamStatics::GetRoundOverCaption(class AINSBasePlayerController* For, unsigned char WinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetRoundOverCaption");

	UTeamStatics_GetRoundOverCaption_Params params;
	params.For = For;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetPlayerColor
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerState*         RelativePlayer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UTeamStatics::GetPlayerColor(class AINSPlayerState* PlayerState, class AINSPlayerState* RelativePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetPlayerColor");

	UTeamStatics_GetPlayerColor_Params params;
	params.PlayerState = PlayerState;
	params.RelativePlayer = RelativePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetNextClassToUnlock
// ()
// Parameters:
// TArray<struct FPlayerClassLimit> ClassSlots                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerClass* UTeamStatics::GetNextClassToUnlock(TArray<struct FPlayerClassLimit> ClassSlots, int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetNextClassToUnlock");

	UTeamStatics_GetNextClassToUnlock_Params params;
	params.ClassSlots = ClassSlots;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetFormattedPlayerName
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UTeamStatics::GetFormattedPlayerName(class AINSPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetFormattedPlayerName");

	UTeamStatics_GetFormattedPlayerName_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetFormattedFactionName
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UTeamStatics::GetFormattedFactionName(class UObject* WorldContextObject, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetFormattedFactionName");

	UTeamStatics_GetFormattedFactionName_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetFactionDefinitionForTeam
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFactionDefinition*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UFactionDefinition* UTeamStatics::GetFactionDefinitionForTeam(class UObject* WorldContextObject, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetFactionDefinitionForTeam");

	UTeamStatics_GetFactionDefinitionForTeam_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetFactionColor
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerState*         RelativePlayer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UTeamStatics::GetFactionColor(class UObject* WorldContextObject, unsigned char TeamId, class AINSPlayerState* RelativePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetFactionColor");

	UTeamStatics_GetFactionColor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;
	params.RelativePlayer = RelativePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetEnemyTeam
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* UTeamStatics::GetEnemyTeam(class UObject* WorldContextObject, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetEnemyTeam");

	UTeamStatics_GetEnemyTeam_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetDefaultTeamVictoryDescription
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERoundConclusion               RoundConclusion                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UTeamStatics::GetDefaultTeamVictoryDescription(class UObject* WorldContextObject, unsigned char TeamId, ERoundConclusion RoundConclusion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetDefaultTeamVictoryDescription");

	UTeamStatics_GetDefaultTeamVictoryDescription_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TeamId = TeamId;
	params.RoundConclusion = RoundConclusion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetClassLimitForTeamSize
// ()
// Parameters:
// struct FPlayerClassLimit       ClassLimit                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            TeamSize                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UTeamStatics::GetClassLimitForTeamSize(const struct FPlayerClassLimit& ClassLimit, int TeamSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetClassLimitForTeamSize");

	UTeamStatics_GetClassLimitForTeamSize_Params params;
	params.ClassLimit = ClassLimit;
	params.TeamSize = TeamSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetClassLimitForTeamId
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayerClassLimit       ClassLimit                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UTeamStatics::GetClassLimitForTeamId(class UObject* WorldContextObject, const struct FPlayerClassLimit& ClassLimit, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetClassLimitForTeamId");

	UTeamStatics_GetClassLimitForTeamId_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ClassLimit = ClassLimit;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetClassLimitForTeam
// ()
// Parameters:
// struct FPlayerClassLimit       ClassLimit                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UTeamStatics::GetClassLimitForTeam(const struct FPlayerClassLimit& ClassLimit, class ATeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetClassLimitForTeam");

	UTeamStatics_GetClassLimitForTeam_Params params;
	params.ClassLimit = ClassLimit;
	params.Team = Team;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamStatics.GetActorTeamRelationship
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamRelationship              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ETeamRelationship UTeamStatics::GetActorTeamRelationship(class AActor* Actor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamStatics.GetActorTeamRelationship");

	UTeamStatics_GetActorTeamRelationship_Params params;
	params.Actor = Actor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTeamStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UTeamStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UTeamInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTeamInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.TeamInfo.UpdateQueuedRadioEvents
// ()
void ATeamInfo::UpdateQueuedRadioEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.UpdateQueuedRadioEvents");

	ATeamInfo_UpdateQueuedRadioEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.SetFireSupportDisabled
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDisabled                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::SetFireSupportDisabled(class UFireSupportDefinition* FireSupportDefinition, bool bDisabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.SetFireSupportDisabled");

	ATeamInfo_SetFireSupportDisabled_Params params;
	params.FireSupportDefinition = FireSupportDefinition;
	params.bDisabled = bDisabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.ResetPointsScore
// ()
void ATeamInfo::ResetPointsScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.ResetPointsScore");

	ATeamInfo_ResetPointsScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.ResetFireSupportTimers
// ()
void ATeamInfo::ResetFireSupportTimers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.ResetFireSupportTimers");

	ATeamInfo_ResetFireSupportTimers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.RemoveInvalidPlayerEntries
// ()
void ATeamInfo::RemoveInvalidPlayerEntries()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.RemoveInvalidPlayerEntries");

	ATeamInfo_RemoveInvalidPlayerEntries_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.RemoveEmptyPlayerEntries
// ()
void ATeamInfo::RemoveEmptyPlayerEntries()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.RemoveEmptyPlayerEntries");

	ATeamInfo_RemoveEmptyPlayerEntries_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.ReadyPlayerCount
// ()
// Parameters:
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::ReadyPlayerCount(bool bExcludeBots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.ReadyPlayerCount");

	ATeamInfo_ReadyPlayerCount_Params params;
	params.bExcludeBots = bExcludeBots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.PlayerCountInClass
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::PlayerCountInClass(class UPlayerClass* PlayerClass, bool bExcludeBots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.PlayerCountInClass");

	ATeamInfo_PlayerCountInClass_Params params;
	params.PlayerClass = PlayerClass;
	params.bExcludeBots = bExcludeBots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.PlayerCountByClass
// ()
// Parameters:
// TMap<class UPlayerClass*, int> OutMappedCount                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::PlayerCountByClass(TMap<class UPlayerClass*, int>* OutMappedCount, bool bExcludeBots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.PlayerCountByClass");

	ATeamInfo_PlayerCountByClass_Params params;
	params.bExcludeBots = bExcludeBots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMappedCount != nullptr)
		*OutMappedCount = params.OutMappedCount;

}


// Function Insurgency.TeamInfo.PlayerCount
// ()
// Parameters:
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::PlayerCount(bool bExcludeBots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.PlayerCount");

	ATeamInfo_PlayerCount_Params params;
	params.bExcludeBots = bExcludeBots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.TeamInfo.OnWaveShouldBlinkDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bBlink                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::OnWaveShouldBlinkDelegate__DelegateSignature(bool bBlink)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.TeamInfo.OnWaveShouldBlinkDelegate__DelegateSignature");

	ATeamInfo_OnWaveShouldBlinkDelegate__DelegateSignature_Params params;
	params.bBlink = bBlink;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.TeamInfo.OnReplicatedTeamSettingsUpdatedDelegate__DelegateSignature
// ()
// Parameters:
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FReplicatedTeamSettings NewSettings                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void ATeamInfo::OnReplicatedTeamSettingsUpdatedDelegate__DelegateSignature(class ATeamInfo* Team, const struct FReplicatedTeamSettings& NewSettings)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.TeamInfo.OnReplicatedTeamSettingsUpdatedDelegate__DelegateSignature");

	ATeamInfo_OnReplicatedTeamSettingsUpdatedDelegate__DelegateSignature_Params params;
	params.Team = Team;
	params.NewSettings = NewSettings;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.OnRep_TeamSettings
// ()
void ATeamInfo::OnRep_TeamSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.OnRep_TeamSettings");

	ATeamInfo_OnRep_TeamSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.OnRep_TeamId
// ()
void ATeamInfo::OnRep_TeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.OnRep_TeamId");

	ATeamInfo_OnRep_TeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.OnRep_LastOneStanding
// ()
void ATeamInfo::OnRep_LastOneStanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.OnRep_LastOneStanding");

	ATeamInfo_OnRep_LastOneStanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.OnRep_Faction
// ()
void ATeamInfo::OnRep_Faction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.OnRep_Faction");

	ATeamInfo_OnRep_Faction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.TeamInfo.OnReinforcedDelegate__DelegateSignature
// ()
// Parameters:
// int                            PlayersSpawned                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::OnReinforcedDelegate__DelegateSignature(int PlayersSpawned)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.TeamInfo.OnReinforcedDelegate__DelegateSignature");

	ATeamInfo_OnReinforcedDelegate__DelegateSignature_Params params;
	params.PlayersSpawned = PlayersSpawned;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.LockFireSupport
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::LockFireSupport(class UFireSupportDefinition* FireSupportDefinition, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.LockFireSupport");

	ATeamInfo_LockFireSupport_Params params;
	params.FireSupportDefinition = FireSupportDefinition;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.IsWavePending
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::IsWavePending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IsWavePending");

	ATeamInfo_IsWavePending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.IsVotingEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::IsVotingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IsVotingEnabled");

	ATeamInfo_IsVotingEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.IsPlayerOnTeam
// ()
// Parameters:
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::IsPlayerOnTeam(class AController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IsPlayerOnTeam");

	ATeamInfo_IsPlayerOnTeam_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.IsFireSupportOnCooldown
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::IsFireSupportOnCooldown(class UFireSupportDefinition* FireSupportDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IsFireSupportOnCooldown");

	ATeamInfo_IsFireSupportOnCooldown_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.IsFireSupportDisabled
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::IsFireSupportDisabled(class UFireSupportDefinition* FireSupportDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IsFireSupportDisabled");

	ATeamInfo_IsFireSupportDisabled_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.IncrementScore
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EScoreType                     ScoreType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::IncrementScore(int Amount, EScoreType ScoreType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IncrementScore");

	ATeamInfo_IncrementScore_Params params;
	params.Amount = Amount;
	params.ScoreType = ScoreType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.IncrementPointsScore
// ()
// Parameters:
// int                            Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::IncrementPointsScore(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IncrementPointsScore");

	ATeamInfo_IncrementPointsScore_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.IncrementFireSupportUse
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::IncrementFireSupportUse(class UFireSupportDefinition* FireSupportDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.IncrementFireSupportUse");

	ATeamInfo_IncrementFireSupportUse_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.HumanCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::HumanCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.HumanCount");

	ATeamInfo_HumanCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.HasLastOneStanding
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::HasLastOneStanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.HasLastOneStanding");

	ATeamInfo_HasLastOneStanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.HasEnabledSpawnZones
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::HasEnabledSpawnZones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.HasEnabledSpawnZones");

	ATeamInfo_HasEnabledSpawnZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetWaveTimeRemaining
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ATeamInfo::GetWaveTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetWaveTimeRemaining");

	ATeamInfo_GetWaveTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetTimeUntilNextFireSupportRatio
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ATeamInfo::GetTimeUntilNextFireSupportRatio(class UFireSupportDefinition* FireSupportDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetTimeUntilNextFireSupportRatio");

	ATeamInfo_GetTimeUntilNextFireSupportRatio_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetTimeUntilNextFireSupport
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ATeamInfo::GetTimeUntilNextFireSupport(class UFireSupportDefinition* FireSupportDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetTimeUntilNextFireSupport");

	ATeamInfo_GetTimeUntilNextFireSupport_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetSpectatorTargets
// ()
// Parameters:
// TArray<class AINSPlayerState*> OutTargets                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::GetSpectatorTargets(TArray<class AINSPlayerState*>* OutTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetSpectatorTargets");

	ATeamInfo_GetSpectatorTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTargets != nullptr)
		*OutTargets = params.OutTargets;

}


// Function Insurgency.TeamInfo.GetSortedPlayerList
// ()
// Parameters:
// TArray<class AINSPlayerState*> OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::GetSortedPlayerList(TArray<class AINSPlayerState*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetSortedPlayerList");

	ATeamInfo_GetSortedPlayerList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.TeamInfo.GetRemainingFireSupportUses
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::GetRemainingFireSupportUses(class UFireSupportDefinition* FireSupportDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetRemainingFireSupportUses");

	ATeamInfo_GetRemainingFireSupportUses_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetPercentageTeamAlive
// ()
// Parameters:
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ATeamInfo::GetPercentageTeamAlive(bool bExcludeBots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetPercentageTeamAlive");

	ATeamInfo_GetPercentageTeamAlive_Params params;
	params.bExcludeBots = bExcludeBots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetFireSupportGameModeOverrideParams
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportDefinition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFireSupportGameModeOverrideDefinition Params                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::GetFireSupportGameModeOverrideParams(class UFireSupportDefinition* FireSupportDefinition, struct FFireSupportGameModeOverrideDefinition* Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetFireSupportGameModeOverrideParams");

	ATeamInfo_GetFireSupportGameModeOverrideParams_Params params;
	params.FireSupportDefinition = FireSupportDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Params != nullptr)
		*Params = params.Params;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetFactionName
// ()
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FText ATeamInfo::GetFactionName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetFactionName");

	ATeamInfo_GetFactionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.GetFactionColor
// ()
// Parameters:
// class AINSPlayerState*         RelativePlayer                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ATeamInfo::GetFactionColor(class AINSPlayerState* RelativePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.GetFactionColor");

	ATeamInfo_GetFactionColor_Params params;
	params.RelativePlayer = RelativePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.DisableAllSpawnZones
// ()
void ATeamInfo::DisableAllSpawnZones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.DisableAllSpawnZones");

	ATeamInfo_DisableAllSpawnZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.DeadPlayerCount
// ()
// Parameters:
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeNotReady               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::DeadPlayerCount(bool bExcludeBots, bool bIncludeNotReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.DeadPlayerCount");

	ATeamInfo_DeadPlayerCount_Params params;
	params.bExcludeBots = bExcludeBots;
	params.bIncludeNotReady = bIncludeNotReady;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.CanPlayerJoinTeam
// ()
// Parameters:
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ATeamInfo::CanPlayerJoinTeam(class AController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.CanPlayerJoinTeam");

	ATeamInfo_CanPlayerJoinTeam_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.BroadcastTextMessage
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::BroadcastTextMessage(const struct FText& Message, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.BroadcastTextMessage");

	ATeamInfo_BroadcastTextMessage_Params params;
	params.Message = Message;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.BotCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::BotCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.BotCount");

	ATeamInfo_BotCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.BlueprintGetFactionName
// ()
// Parameters:
// struct FText                   OutFactionName                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void ATeamInfo::BlueprintGetFactionName(struct FText* OutFactionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.BlueprintGetFactionName");

	ATeamInfo_BlueprintGetFactionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutFactionName != nullptr)
		*OutFactionName = params.OutFactionName;

}


// Function Insurgency.TeamInfo.AwardTaglineToTeamWithFloatContext
// ()
// Parameters:
// class UClass*                  TaglineClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ContextValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRequireAlive                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAsPercentage                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::AwardTaglineToTeamWithFloatContext(class UClass* TaglineClass, float ContextValue, bool bRequireAlive, bool bAsPercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.AwardTaglineToTeamWithFloatContext");

	ATeamInfo_AwardTaglineToTeamWithFloatContext_Params params;
	params.TaglineClass = TaglineClass;
	params.ContextValue = ContextValue;
	params.bRequireAlive = bRequireAlive;
	params.bAsPercentage = bAsPercentage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.AwardTaglineToTeamWithContext
// ()
// Parameters:
// class UClass*                  TaglineClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ContextValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRequireAlive                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::AwardTaglineToTeamWithContext(class UClass* TaglineClass, int ContextValue, bool bRequireAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.AwardTaglineToTeamWithContext");

	ATeamInfo_AwardTaglineToTeamWithContext_Params params;
	params.TaglineClass = TaglineClass;
	params.ContextValue = ContextValue;
	params.bRequireAlive = bRequireAlive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.AwardTaglineToTeam
// ()
// Parameters:
// class UClass*                  TaglineClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRequireAlive                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::AwardTaglineToTeam(class UClass* TaglineClass, bool bRequireAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.AwardTaglineToTeam");

	ATeamInfo_AwardTaglineToTeam_Params params;
	params.TaglineClass = TaglineClass;
	params.bRequireAlive = bRequireAlive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.AlivePlayerCount
// ()
// Parameters:
// bool                           bExcludeBots                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ATeamInfo::AlivePlayerCount(bool bExcludeBots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.AlivePlayerCount");

	ATeamInfo_AlivePlayerCount_Params params;
	params.bExcludeBots = bExcludeBots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TeamInfo.AddCompassMarkerOnActor
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECompassMarkerType             MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerController*    IgnorePlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::AddCompassMarkerOnActor(class AActor* Actor, ECompassMarkerType MarkerType, class AINSPlayerController* IgnorePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.AddCompassMarkerOnActor");

	ATeamInfo_AddCompassMarkerOnActor_Params params;
	params.Actor = Actor;
	params.MarkerType = MarkerType;
	params.IgnorePlayer = IgnorePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TeamInfo.AddCompassMarker
// ()
// Parameters:
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECompassMarkerType             MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerController*    IgnorePlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ATeamInfo::AddCompassMarker(const struct FVector& WorldLocation, ECompassMarkerType MarkerType, class AINSPlayerController* IgnorePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TeamInfo.AddCompassMarker");

	ATeamInfo_AddCompassMarker_Params params;
	params.WorldLocation = WorldLocation;
	params.MarkerType = MarkerType;
	params.IgnorePlayer = IgnorePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATeamInfo::AfterRead()
{
	AInfo::AfterRead();

	READ_PTR_FULL(Faction, UFactionDefinition);
	READ_PTR_FULL(ActiveSquadLayout, USquadLayout);
	READ_PTR_FULL(ReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(CurrentPlayingEvent, UQueuedRadioEvent);
	READ_PTR_FULL(TeamVotingComponent, UPlayerVotingComponent);
}

void ATeamInfo::BeforeDelete()
{
	AInfo::BeforeDelete();

	DELE_PTR_FULL(Faction);
	DELE_PTR_FULL(ActiveSquadLayout);
	DELE_PTR_FULL(ReinforcementSystem);
	DELE_PTR_FULL(CurrentPlayingEvent);
	DELE_PTR_FULL(TeamVotingComponent);
}

void UQueuedRadioEvent::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Event, UAkAudioEvent);
}

void UQueuedRadioEvent::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Event);
}

// Function Insurgency.Tagline.EvaluateTaglineThresholdInt
// ()
// Parameters:
// int                            Value                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Threshold                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETaglineEvaluation             Method                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTagline::EvaluateTaglineThresholdInt(int Value, int Threshold, ETaglineEvaluation Method)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.EvaluateTaglineThresholdInt");

	UTagline_EvaluateTaglineThresholdInt_Params params;
	params.Value = Value;
	params.Threshold = Threshold;
	params.Method = Method;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Tagline.CheckPlayerEligibility
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTagline::CheckPlayerEligibility(class AINSPlayerState* Player, unsigned char WinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.CheckPlayerEligibility");

	UTagline_CheckPlayerEligibility_Params params;
	params.Player = Player;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Tagline.BlueprintOnRoundReset
// ()
void UTagline::BlueprintOnRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.BlueprintOnRoundReset");

	UTagline_BlueprintOnRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Tagline.BlueprintOnCheckRoundEndAward
// ()
// Parameters:
// class AINSGameState*           InGameState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  LastWinningTeam                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTagline::BlueprintOnCheckRoundEndAward(class AINSGameState* InGameState, unsigned char LastWinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.BlueprintOnCheckRoundEndAward");

	UTagline_BlueprintOnCheckRoundEndAward_Params params;
	params.InGameState = InGameState;
	params.LastWinningTeam = LastWinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Tagline.BlueprintInit
// ()
// Parameters:
// class AINSGameMode*            GameMode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTagline::BlueprintInit(class AINSGameMode* GameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.BlueprintInit");

	UTagline_BlueprintInit_Params params;
	params.GameMode = GameMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Tagline.AwardTaglineWithFloatContext
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ContextValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAsPercentage                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTagline::AwardTaglineWithFloatContext(class AINSPlayerState* Player, float ContextValue, bool bAsPercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.AwardTaglineWithFloatContext");

	UTagline_AwardTaglineWithFloatContext_Params params;
	params.Player = Player;
	params.ContextValue = ContextValue;
	params.bAsPercentage = bAsPercentage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Tagline.AwardTaglineWithContext
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ContextValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTagline::AwardTaglineWithContext(class AINSPlayerState* Player, int ContextValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.AwardTaglineWithContext");

	UTagline_AwardTaglineWithContext_Params params;
	params.Player = Player;
	params.ContextValue = ContextValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Tagline.AwardTagline
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTagline::AwardTagline(class AINSPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Tagline.AwardTagline");

	UTagline_AwardTagline_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTagline::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(OuterGameMode, AINSGameMode);
}

void UTagline::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(OuterGameMode);
}

// Function Insurgency.TaglineStatRequirement.GetPlayerValueInt
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UTaglineStatRequirement::GetPlayerValueInt(class AINSPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TaglineStatRequirement.GetPlayerValueInt");

	UTaglineStatRequirement_GetPlayerValueInt_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TaglineStatRequirement.EvaluatePlayerGetValue
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Threshold                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutValue                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTaglineStatRequirement::EvaluatePlayerGetValue(class AINSPlayerState* Player, int Threshold, int* OutValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TaglineStatRequirement.EvaluatePlayerGetValue");

	UTaglineStatRequirement_EvaluatePlayerGetValue_Params params;
	params.Player = Player;
	params.Threshold = Threshold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutValue != nullptr)
		*OutValue = params.OutValue;


	return params.ReturnValue;
}


// Function Insurgency.TaglineStatRequirement.EvaluatePlayer
// ()
// Parameters:
// class AINSPlayerState*         Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Threshold                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTaglineStatRequirement::EvaluatePlayer(class AINSPlayerState* Player, int Threshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TaglineStatRequirement.EvaluatePlayer");

	UTaglineStatRequirement_EvaluatePlayer_Params params;
	params.Player = Player;
	params.Threshold = Threshold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTaglineStatRequirement::AfterRead()
{
	UTagline::AfterRead();

}

void UTaglineStatRequirement::BeforeDelete()
{
	UTagline::BeforeDelete();

}

void UTaglineStatHighest::AfterRead()
{
	UTaglineStatRequirement::AfterRead();

}

void UTaglineStatHighest::BeforeDelete()
{
	UTaglineStatRequirement::BeforeDelete();

}

// Function Insurgency.TacticalMapWidget.ScaleWorldSizeToMapSize
// ()
// Parameters:
// struct FVector2D               InSize                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               OutSize                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::ScaleWorldSizeToMapSize(const struct FVector2D& InSize, struct FVector2D* OutSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.ScaleWorldSizeToMapSize");

	UTacticalMapWidget_ScaleWorldSizeToMapSize_Params params;
	params.InSize = InSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSize != nullptr)
		*OutSize = params.OutSize;

}


// Function Insurgency.TacticalMapWidget.RefreshObjectives
// ()
void UTacticalMapWidget::RefreshObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.RefreshObjectives");

	UTacticalMapWidget_RefreshObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.OnVehicleWidgetCreated
// ()
// Parameters:
// class AVehicleBase*            Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::OnVehicleWidgetCreated(class AVehicleBase* Vehicle, class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.OnVehicleWidgetCreated");

	UTacticalMapWidget_OnVehicleWidgetCreated_Params params;
	params.Vehicle = Vehicle;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.OnTeamChanged
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.OnTeamChanged");

	UTacticalMapWidget_OnTeamChanged_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.OnSupplyCrateWidgetCreated
// ()
// Parameters:
// class ASupplyCrate*            Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::OnSupplyCrateWidgetCreated(class ASupplyCrate* Vehicle, class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.OnSupplyCrateWidgetCreated");

	UTacticalMapWidget_OnSupplyCrateWidgetCreated_Params params;
	params.Vehicle = Vehicle;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.OnSpawnZoneWidgetCreated
// ()
// Parameters:
// class ASpawnZone*              SpawnZone                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::OnSpawnZoneWidgetCreated(class ASpawnZone* SpawnZone, class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.OnSpawnZoneWidgetCreated");

	UTacticalMapWidget_OnSpawnZoneWidgetCreated_Params params;
	params.SpawnZone = SpawnZone;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.OnObjectiveWidgetCreated
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::OnObjectiveWidgetCreated(class AObjectiveBase* Objective, class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.OnObjectiveWidgetCreated");

	UTacticalMapWidget_OnObjectiveWidgetCreated_Params params;
	params.Objective = Objective;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.OnLightingScenarioChanged
// ()
void UTacticalMapWidget::OnLightingScenarioChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.OnLightingScenarioChanged");

	UTacticalMapWidget_OnLightingScenarioChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.TacticalMapWidget.HasWidgetForActor
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UTacticalMapWidget::HasWidgetForActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.HasWidgetForActor");

	UTacticalMapWidget_HasWidgetForActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TacticalMapWidget.GetWidgetForActor
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMapActorWidget*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UMapActorWidget* UTacticalMapWidget::GetWidgetForActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.GetWidgetForActor");

	UTacticalMapWidget_GetWidgetForActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TacticalMapWidget.GetMapRotation
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UTacticalMapWidget::GetMapRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.GetMapRotation");

	UTacticalMapWidget_GetMapRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TacticalMapWidget.GetMapBounds
// ()
// Parameters:
// struct FBox                    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FBox UTacticalMapWidget::GetMapBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.GetMapBounds");

	UTacticalMapWidget_GetMapBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TacticalMapWidget.GetCanvasPositionFromWorldLocation
// ()
// Parameters:
// struct FGeometry               MyGeometry                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bClampToFit                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               OutCanvasPosition              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::GetCanvasPositionFromWorldLocation(const struct FGeometry& MyGeometry, const struct FVector& WorldLocation, bool bClampToFit, struct FVector2D* OutCanvasPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.GetCanvasPositionFromWorldLocation");

	UTacticalMapWidget_GetCanvasPositionFromWorldLocation_Params params;
	params.MyGeometry = MyGeometry;
	params.WorldLocation = WorldLocation;
	params.bClampToFit = bClampToFit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCanvasPosition != nullptr)
		*OutCanvasPosition = params.OutCanvasPosition;

}


// Function Insurgency.TacticalMapWidget.CreateMapIcon
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                WorldRotation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UMapIconWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UMapIconWidget* UTacticalMapWidget::CreateMapIcon(class UClass* WidgetClass, const struct FVector& WorldLocation, const struct FRotator& WorldRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.CreateMapIcon");

	UTacticalMapWidget_CreateMapIcon_Params params;
	params.WidgetClass = WidgetClass;
	params.WorldLocation = WorldLocation;
	params.WorldRotation = WorldRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TacticalMapWidget.CreateMapActorWidget
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  ForActor                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMapActorWidget*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UMapActorWidget* UTacticalMapWidget::CreateMapActorWidget(class UClass* WidgetClass, class AActor* ForActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.CreateMapActorWidget");

	UTacticalMapWidget_CreateMapActorWidget_Params params;
	params.WidgetClass = WidgetClass;
	params.ForActor = ForActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.TacticalMapWidget.AddMapActorWidget
// ()
// Parameters:
// class UMapActorWidget*         NewWidget                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTacticalMapWidget::AddMapActorWidget(class UMapActorWidget* NewWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalMapWidget.AddMapActorWidget");

	UTacticalMapWidget_AddMapActorWidget_Params params;
	params.NewWidget = NewWidget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTacticalMapWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(PlayerIconWidget, UClass);
	READ_PTR_FULL(ObjectiveIconWidget, UClass);
	READ_PTR_FULL(ObjectiveDestructibleIconWidget, UClass);
	READ_PTR_FULL(SpawnIconWidget, UClass);
	READ_PTR_FULL(RestrictedAreaWidget, UClass);
	READ_PTR_FULL(SupplyCrateIconWidget, UClass);
	READ_PTR_FULL(VehicleIconWidget, UClass);
	READ_PTR_FULL(ItemPickupWidget, UClass);
	READ_PTR_FULL(PointOfInterestWidget, UClass);
	READ_PTR_FULL(MapFallbackTexture, UTexture2D);
	READ_PTR_FULL(BackgroundMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(WidgetPanel, UCanvasPanel);
	READ_PTR_FULL(BackgroundLayerPanel, UCanvasPanel);
	READ_PTR_FULL(MapBackground, UImage);
}

void UTacticalMapWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(PlayerIconWidget);
	DELE_PTR_FULL(ObjectiveIconWidget);
	DELE_PTR_FULL(ObjectiveDestructibleIconWidget);
	DELE_PTR_FULL(SpawnIconWidget);
	DELE_PTR_FULL(RestrictedAreaWidget);
	DELE_PTR_FULL(SupplyCrateIconWidget);
	DELE_PTR_FULL(VehicleIconWidget);
	DELE_PTR_FULL(ItemPickupWidget);
	DELE_PTR_FULL(PointOfInterestWidget);
	DELE_PTR_FULL(MapFallbackTexture);
	DELE_PTR_FULL(BackgroundMaterialInstance);
	DELE_PTR_FULL(WidgetPanel);
	DELE_PTR_FULL(BackgroundLayerPanel);
	DELE_PTR_FULL(MapBackground);
}

void ATacticalGridTestingPawn::AfterRead()
{
	ACharacter::AfterRead();

}

void ATacticalGridTestingPawn::BeforeDelete()
{
	ACharacter::BeforeDelete();

}

void UTacticalGridRenderingComponent::AfterRead()
{
	UPrimitiveComponent::AfterRead();

}

void UTacticalGridRenderingComponent::BeforeDelete()
{
	UPrimitiveComponent::BeforeDelete();

}

// Function Insurgency.TacticalGrid.GenerateData
// ()
void ATacticalGrid::GenerateData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TacticalGrid.GenerateData");

	ATacticalGrid_GenerateData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATacticalGrid::AfterRead()
{
	AActor::AfterRead();

}

void ATacticalGrid::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UGameModeScenarioData::AfterRead()
{
	UObject::AfterRead();

}

void UGameModeScenarioData::BeforeDelete()
{
	UObject::BeforeDelete();

}

void USurvivalScenarioData::AfterRead()
{
	UGameModeScenarioData::AfterRead();

}

void USurvivalScenarioData::BeforeDelete()
{
	UGameModeScenarioData::BeforeDelete();

}

// Function Insurgency.SurvivalRouteConfig.LogRouteInfo
// ()
void ASurvivalRouteConfig::LogRouteInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SurvivalRouteConfig.LogRouteInfo");

	ASurvivalRouteConfig_LogRouteInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASurvivalRouteConfig::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(InitialSpawn, ASpawnZone);
}

void ASurvivalRouteConfig::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(InitialSpawn);
}

// Function Insurgency.ObjectiveBase.SetSpawnsEnabled
// ()
// Parameters:
// bool                           bNewActiveState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AObjectiveBase::SetSpawnsEnabled(bool bNewActiveState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetSpawnsEnabled");

	AObjectiveBase_SetSpawnsEnabled_Params params;
	params.bNewActiveState = bNewActiveState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.SetOwningTeam
// ()
// Parameters:
// unsigned char                  NewOwner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::SetOwningTeam(unsigned char NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetOwningTeam");

	AObjectiveBase_SetOwningTeam_Params params;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.SetObjectiveVisibleOnHUD
// ()
// Parameters:
// bool                           bNewVisibility                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::SetObjectiveVisibleOnHUD(bool bNewVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetObjectiveVisibleOnHUD");

	AObjectiveBase_SetObjectiveVisibleOnHUD_Params params;
	params.bNewVisibility = bNewVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.SetObjectiveIsBeingCounterAttacked
// ()
// Parameters:
// bool                           bNewCounterAttackState         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::SetObjectiveIsBeingCounterAttacked(bool bNewCounterAttackState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetObjectiveIsBeingCounterAttacked");

	AObjectiveBase_SetObjectiveIsBeingCounterAttacked_Params params;
	params.bNewCounterAttackState = bNewCounterAttackState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.SetObjectiveActive
// ()
// Parameters:
// bool                           bNewActiveState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::SetObjectiveActive(bool bNewActiveState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetObjectiveActive");

	AObjectiveBase_SetObjectiveActive_Params params;
	params.bNewActiveState = bNewActiveState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.SetNeutralOwningTeam
// ()
void AObjectiveBase::SetNeutralOwningTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetNeutralOwningTeam");

	AObjectiveBase_SetNeutralOwningTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.SetLockedForTeam
// ()
// Parameters:
// unsigned char                  InTeamId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           Blocked                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::SetLockedForTeam(unsigned char InTeamId, bool Blocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetLockedForTeam");

	AObjectiveBase_SetLockedForTeam_Params params;
	params.InTeamId = InTeamId;
	params.Blocked = Blocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.SetCapturingTeam
// ()
// Parameters:
// unsigned char                  NewCapturingTeam               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::SetCapturingTeam(unsigned char NewCapturingTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.SetCapturingTeam");

	AObjectiveBase_SetCapturingTeam_Params params;
	params.NewCapturingTeam = NewCapturingTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.ResetCapturingTeam
// ()
void AObjectiveBase::ResetCapturingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.ResetCapturingTeam");

	AObjectiveBase_ResetCapturingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnRep_OwningTeamId
// ()
void AObjectiveBase::OnRep_OwningTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnRep_OwningTeamId");

	AObjectiveBase_OnRep_OwningTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnRep_ObjectiveId
// ()
void AObjectiveBase::OnRep_ObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnRep_ObjectiveId");

	AObjectiveBase_OnRep_ObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnRep_LockedTeams
// ()
void AObjectiveBase::OnRep_LockedTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnRep_LockedTeams");

	AObjectiveBase_OnRep_LockedTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnRep_CapturingTeamId
// ()
void AObjectiveBase::OnRep_CapturingTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnRep_CapturingTeamId");

	AObjectiveBase_OnRep_CapturingTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnRep_bIsBeingCounterAttack
// ()
void AObjectiveBase::OnRep_bIsBeingCounterAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnRep_bIsBeingCounterAttack");

	AObjectiveBase_OnRep_bIsBeingCounterAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnRep_bActive
// ()
void AObjectiveBase::OnRep_bActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnRep_bActive");

	AObjectiveBase_OnRep_bActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnOwningTeamChanged
// ()
// Parameters:
// unsigned char                  PreviousOwner                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::OnOwningTeamChanged(unsigned char PreviousOwner, unsigned char NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnOwningTeamChanged");

	AObjectiveBase_OnOwningTeamChanged_Params params;
	params.PreviousOwner = PreviousOwner;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ObjectiveBase.OnObjectiveLockedTeamsChangedDelegate__DelegateSignature
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewLockedTeamsBitMask          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::OnObjectiveLockedTeamsChangedDelegate__DelegateSignature(class AObjectiveBase* Objective, unsigned char NewLockedTeamsBitMask)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ObjectiveBase.OnObjectiveLockedTeamsChangedDelegate__DelegateSignature");

	AObjectiveBase_OnObjectiveLockedTeamsChangedDelegate__DelegateSignature_Params params;
	params.Objective = Objective;
	params.NewLockedTeamsBitMask = NewLockedTeamsBitMask;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ObjectiveBase.OnObjectiveIsBeingCounterattackedDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bNewCounterAttackState         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::OnObjectiveIsBeingCounterattackedDelegate__DelegateSignature(bool bNewCounterAttackState, class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ObjectiveBase.OnObjectiveIsBeingCounterattackedDelegate__DelegateSignature");

	AObjectiveBase_OnObjectiveIsBeingCounterattackedDelegate__DelegateSignature_Params params;
	params.bNewCounterAttackState = bNewCounterAttackState;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnObjectiveInitialized
// ()
void AObjectiveBase::OnObjectiveInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnObjectiveInitialized");

	AObjectiveBase_OnObjectiveInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ObjectiveBase.OnObjectiveChangeOwnerDelegate__DelegateSignature
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::OnObjectiveChangeOwnerDelegate__DelegateSignature(class AObjectiveBase* Objective, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ObjectiveBase.OnObjectiveChangeOwnerDelegate__DelegateSignature");

	AObjectiveBase_OnObjectiveChangeOwnerDelegate__DelegateSignature_Params params;
	params.Objective = Objective;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ObjectiveBase.OnObjectiveActiveDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bNewActiveState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::OnObjectiveActiveDelegate__DelegateSignature(bool bNewActiveState, class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ObjectiveBase.OnObjectiveActiveDelegate__DelegateSignature");

	AObjectiveBase_OnObjectiveActiveDelegate__DelegateSignature_Params params;
	params.bNewActiveState = bNewActiveState;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.OnCapturingTeamChanged
// ()
// Parameters:
// unsigned char                  NewCapturingTeam               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::OnCapturingTeamChanged(unsigned char NewCapturingTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.OnCapturingTeamChanged");

	AObjectiveBase_OnCapturingTeamChanged_Params params;
	params.NewCapturingTeam = NewCapturingTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.IsOwningTeamValid
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsOwningTeamValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsOwningTeamValid");

	AObjectiveBase_IsOwningTeamValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsOwnedAndSafe
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsOwnedAndSafe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsOwnedAndSafe");

	AObjectiveBase_IsOwnedAndSafe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsObjectiveActiveInRound
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsObjectiveActiveInRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsObjectiveActiveInRound");

	AObjectiveBase_IsObjectiveActiveInRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsObjectiveActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsObjectiveActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsObjectiveActive");

	AObjectiveBase_IsObjectiveActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsObjective
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsObjective");

	AObjectiveBase_IsObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsNeutralObjective
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsNeutralObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsNeutralObjective");

	AObjectiveBase_IsNeutralObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsLockedForTeam
// ()
// Parameters:
// unsigned char                  CheckTeamId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsLockedForTeam(unsigned char CheckTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsLockedForTeam");

	AObjectiveBase_IsLockedForTeam_Params params;
	params.CheckTeamId = CheckTeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsLockedForAnyTeam
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsLockedForAnyTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsLockedForAnyTeam");

	AObjectiveBase_IsLockedForAnyTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsCapturingTeamValid
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsCapturingTeamValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsCapturingTeamValid");

	AObjectiveBase_IsCapturingTeamValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.IsActiveObjectiveForSoldier
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::IsActiveObjectiveForSoldier(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.IsActiveObjectiveForSoldier");

	AObjectiveBase_IsActiveObjectiveForSoldier_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.InitializeObjective
// ()
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveBase::InitializeObjective(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.InitializeObjective");

	AObjectiveBase_InitializeObjective_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBase.GetRandomBotCaptureLocation
// ()
// Parameters:
// class UCoverComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoverComponent* AObjectiveBase::GetRandomBotCaptureLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.GetRandomBotCaptureLocation");

	AObjectiveBase_GetRandomBotCaptureLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.GetObjectiveLetter
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText AObjectiveBase::GetObjectiveLetter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.GetObjectiveLetter");

	AObjectiveBase_GetObjectiveLetter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.GetDescriptionForActiveObjective
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText AObjectiveBase::GetDescriptionForActiveObjective(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.GetDescriptionForActiveObjective");

	AObjectiveBase_GetDescriptionForActiveObjective_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.GetCaptureProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AObjectiveBase::GetCaptureProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.GetCaptureProgress");

	AObjectiveBase_GetCaptureProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.GetAllBotCaptureLocations
// ()
// Parameters:
// TArray<class UCoverComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UCoverComponent*> AObjectiveBase::GetAllBotCaptureLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.GetAllBotCaptureLocations");

	AObjectiveBase_GetAllBotCaptureLocations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.GetActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveBase::GetActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.GetActive");

	AObjectiveBase_GetActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBase.ClearLockedTeams
// ()
void AObjectiveBase::ClearLockedTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBase.ClearLockedTeams");

	AObjectiveBase_ClearLockedTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AObjectiveBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(OwningTeam, ATeamInfo);
	READ_PTR_FULL(CapturingTeam, ATeamInfo);
	READ_PTR_FULL(BoxCollision, UBoxComponent);
}

void AObjectiveBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(OwningTeam);
	DELE_PTR_FULL(CapturingTeam);
	DELE_PTR_FULL(BoxCollision);
}

// Function Insurgency.ObjectiveCapturable.TeamCanCapture
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveCapturable::TeamCanCapture(unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.TeamCanCapture");

	AObjectiveCapturable_TeamCanCapture_Params params;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveCapturable.StartCapture
// ()
// Parameters:
// unsigned char                  NewCapturingTeamId             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::StartCapture(unsigned char NewCapturingTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.StartCapture");

	AObjectiveCapturable_StartCapture_Params params;
	params.NewCapturingTeamId = NewCapturingTeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveCapturable.OnRep_CaptureState
// ()
void AObjectiveCapturable::OnRep_CaptureState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.OnRep_CaptureState");

	AObjectiveCapturable_OnRep_CaptureState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveCapturable.OnRep_BlockingObjectiveId
// ()
void AObjectiveCapturable::OnRep_BlockingObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.OnRep_BlockingObjectiveId");

	AObjectiveCapturable_OnRep_BlockingObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveCapturable.OnBeginObjectiveOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AObjectiveCapturable::OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.OnBeginObjectiveOverlap");

	AObjectiveCapturable_OnBeginObjectiveOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveCapturable.IsSoldierTouchingZone
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACaptureZone*            IgnoreZone                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveCapturable::IsSoldierTouchingZone(class AINSSoldier* Soldier, class ACaptureZone* IgnoreZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.IsSoldierTouchingZone");

	AObjectiveCapturable_IsSoldierTouchingZone_Params params;
	params.Soldier = Soldier;
	params.IgnoreZone = IgnoreZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveCapturable.IsPlayerRequirementMet
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveCapturable::IsPlayerRequirementMet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.IsPlayerRequirementMet");

	AObjectiveCapturable_IsPlayerRequirementMet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveCapturable.GetPlayerStatesInCaptureAreaOwningTeam
// ()
// Parameters:
// TArray<class AINSPlayerState*> OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::GetPlayerStatesInCaptureAreaOwningTeam(TArray<class AINSPlayerState*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.GetPlayerStatesInCaptureAreaOwningTeam");

	AObjectiveCapturable_GetPlayerStatesInCaptureAreaOwningTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.ObjectiveCapturable.GetPlayerStatesInCaptureAreaCapturingTeam
// ()
// Parameters:
// TArray<class AINSPlayerState*> OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::GetPlayerStatesInCaptureAreaCapturingTeam(TArray<class AINSPlayerState*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.GetPlayerStatesInCaptureAreaCapturingTeam");

	AObjectiveCapturable_GetPlayerStatesInCaptureAreaCapturingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.ObjectiveCapturable.GetPlayerStatesInCaptureArea
// ()
// Parameters:
// TArray<class AINSPlayerState*> OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::GetPlayerStatesInCaptureArea(TArray<class AINSPlayerState*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.GetPlayerStatesInCaptureArea");

	AObjectiveCapturable_GetPlayerStatesInCaptureArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.ObjectiveCapturable.GetPlayersInCaptureAreaOwningTeam
// ()
// Parameters:
// TArray<class AINSSoldier*>     OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::GetPlayersInCaptureAreaOwningTeam(TArray<class AINSSoldier*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.GetPlayersInCaptureAreaOwningTeam");

	AObjectiveCapturable_GetPlayersInCaptureAreaOwningTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.ObjectiveCapturable.GetPlayersInCaptureAreaCapturingTeam
// ()
// Parameters:
// TArray<class AINSSoldier*>     OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::GetPlayersInCaptureAreaCapturingTeam(TArray<class AINSSoldier*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.GetPlayersInCaptureAreaCapturingTeam");

	AObjectiveCapturable_GetPlayersInCaptureAreaCapturingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.ObjectiveCapturable.GetPlayersInCaptureArea
// ()
// Parameters:
// TArray<class AINSSoldier*>     OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::GetPlayersInCaptureArea(TArray<class AINSSoldier*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.GetPlayersInCaptureArea");

	AObjectiveCapturable_GetPlayersInCaptureArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.ObjectiveCapturable.EndCapture
// ()
void AObjectiveCapturable::EndCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.EndCapture");

	AObjectiveCapturable_EndCapture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveCapturable.BreakCapture
// ()
// Parameters:
// bool                           bTriggerEvents                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveCapturable::BreakCapture(bool bTriggerEvents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturable.BreakCapture");

	AObjectiveCapturable_BreakCapture_Params params;
	params.bTriggerEvents = bTriggerEvents;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AObjectiveCapturable::AfterRead()
{
	AObjectiveBase::AfterRead();

	READ_PTR_FULL(CaptureZone, ACaptureZone);
}

void AObjectiveCapturable::BeforeDelete()
{
	AObjectiveBase::BeforeDelete();

	DELE_PTR_FULL(CaptureZone);
}

void ASurvivalObjective::AfterRead()
{
	AObjectiveCapturable::AfterRead();

}

void ASurvivalObjective::BeforeDelete()
{
	AObjectiveCapturable::BeforeDelete();

}

// Function Insurgency.SurvivalHUD.GetINSUserSettings
// ()
// Parameters:
// class UINSGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSGameUserSettings* USurvivalHUD::GetINSUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SurvivalHUD.GetINSUserSettings");

	USurvivalHUD_GetINSUserSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USurvivalHUD::AfterRead()
{
	UUserWidget::AfterRead();

}

void USurvivalHUD::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.SurfaceReactionManager.OnPooledParticleSystemFinished
// ()
// Parameters:
// class UParticleSystemComponent* FinishedComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASurfaceReactionManager::OnPooledParticleSystemFinished(class UParticleSystemComponent* FinishedComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SurfaceReactionManager.OnPooledParticleSystemFinished");

	ASurfaceReactionManager_OnPooledParticleSystemFinished_Params params;
	params.FinishedComponent = FinishedComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASurfaceReactionManager::AfterRead()
{
	AActor::AfterRead();

}

void ASurfaceReactionManager::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Insurgency.SurfaceReaction.PlaySurfaceReactions
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPhysicalSurface>  SurfaceType                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 HitDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   HitBoneName                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicalMaterial*       HitMaterial                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EDecalTransformMask> DecalTransformMask             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USurfaceReaction::PlaySurfaceReactions(class UObject* WorldContextObject, TEnumAsByte<EPhysicalSurface> SurfaceType, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& HitDirection, class UPrimitiveComponent* HitComponent, const struct FName& HitBoneName, class UPhysicalMaterial* HitMaterial, TEnumAsByte<EDecalTransformMask> DecalTransformMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SurfaceReaction.PlaySurfaceReactions");

	USurfaceReaction_PlaySurfaceReactions_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SurfaceType = SurfaceType;
	params.Location = Location;
	params.Rotation = Rotation;
	params.HitDirection = HitDirection;
	params.HitComponent = HitComponent;
	params.HitBoneName = HitBoneName;
	params.HitMaterial = HitMaterial;
	params.DecalTransformMask = DecalTransformMask;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SurfaceReaction.PlaySurfaceHitReactions
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TEnumAsByte<EDecalTransformMask> DecalTransformMask             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USurfaceReaction::PlaySurfaceHitReactions(class UObject* WorldContextObject, const struct FHitResult& HitInfo, TEnumAsByte<EDecalTransformMask> DecalTransformMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SurfaceReaction.PlaySurfaceHitReactions");

	USurfaceReaction_PlaySurfaceHitReactions_Params params;
	params.WorldContextObject = WorldContextObject;
	params.HitInfo = HitInfo;
	params.DecalTransformMask = DecalTransformMask;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USurfaceReaction::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(SurfaceSwitchAkEvent, UAkAudioEvent);
}

void USurfaceReaction::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(SurfaceSwitchAkEvent);
}

void USupplyGainMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void USupplyGainMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

// Function Insurgency.PropBreakable.SetupMeshCollision
// ()
// Parameters:
// class UStaticMeshComponent*    InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void APropBreakable::SetupMeshCollision(class UStaticMeshComponent* InMeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.SetupMeshCollision");

	APropBreakable_SetupMeshCollision_Params params;
	params.InMeshComponent = InMeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.SetBrokenMaterials
// ()
// Parameters:
// class UStaticMeshComponent*    AffectedComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void APropBreakable::SetBrokenMaterials(class UStaticMeshComponent* AffectedComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.SetBrokenMaterials");

	APropBreakable_SetBrokenMaterials_Params params;
	params.AffectedComponent = AffectedComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.ResetBreakable
// ()
void APropBreakable::ResetBreakable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.ResetBreakable");

	APropBreakable_ResetBreakable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.RemoveChildDecals
// ()
void APropBreakable::RemoveChildDecals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.RemoveChildDecals");

	APropBreakable_RemoveChildDecals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.OnReset
// ()
void APropBreakable::OnReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.OnReset");

	APropBreakable_OnReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.OnRep_Health
// ()
void APropBreakable::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.OnRep_Health");

	APropBreakable_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.OnRep_bBrokenAuthority
// ()
void APropBreakable::OnRep_bBrokenAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.OnRep_bBrokenAuthority");

	APropBreakable_OnRep_bBrokenAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.MulticastBreak
// ()
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void APropBreakable::MulticastBreak(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.MulticastBreak");

	APropBreakable_MulticastBreak_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.IsBroken
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool APropBreakable::IsBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.IsBroken");

	APropBreakable_IsBroken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PropBreakable.InflictBreakDamage
// ()
// Parameters:
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void APropBreakable::InflictBreakDamage(class AController* EventInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.InflictBreakDamage");

	APropBreakable_InflictBreakDamage_Params params;
	params.EventInstigator = EventInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.ConvertToGib
// ()
// Parameters:
// class APropGib*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APropGib* APropBreakable::ConvertToGib()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.ConvertToGib");

	APropBreakable_ConvertToGib_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PropBreakable.ChangeMesh
// ()
void APropBreakable::ChangeMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.ChangeMesh");

	APropBreakable_ChangeMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.CanBreakThrough
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool APropBreakable::CanBreakThrough()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.CanBreakThrough");

	APropBreakable_CanBreakThrough_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PropBreakable.Break
// ()
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void APropBreakable::Break(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.Break");

	APropBreakable_Break_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.BlueprintOnHealthChanged
// ()
void APropBreakable::BlueprintOnHealthChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.BlueprintOnHealthChanged");

	APropBreakable_BlueprintOnHealthChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PropBreakable.BlueprintOnBreak
// ()
void APropBreakable::BlueprintOnBreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropBreakable.BlueprintOnBreak");

	APropBreakable_BlueprintOnBreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APropBreakable::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMesh);
	READ_PTR_FULL(MeshBroken, UStaticMesh);
	READ_PTR_FULL(BreakDamageTypeClass, UClass);
	READ_PTR_FULL(BreakDamageCameraShakeClass, UClass);
	READ_PTR_FULL(BreakParticle, UParticleSystem);
	READ_PTR_FULL(BreakParticleComponent, UParticleSystemComponent);
	READ_PTR_FULL(BreakSound, UAkAudioEvent);
	READ_PTR_FULL(HealthyLoopEventStart, UAkAudioEvent);
	READ_PTR_FULL(HealthyLoopEventEnd, UAkAudioEvent);
	READ_PTR_FULL(BrokenLoopEventStart, UAkAudioEvent);
	READ_PTR_FULL(BrokenLoopEventEnd, UAkAudioEvent);
	READ_PTR_FULL(LoopingAudioComponent, UINSAudioComponent);
	READ_PTR_FULL(GibBreakParticle, UParticleSystem);
	READ_PTR_FULL(PhysicsPropSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
}

void APropBreakable::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(MeshBroken);
	DELE_PTR_FULL(BreakDamageTypeClass);
	DELE_PTR_FULL(BreakDamageCameraShakeClass);
	DELE_PTR_FULL(BreakParticle);
	DELE_PTR_FULL(BreakParticleComponent);
	DELE_PTR_FULL(BreakSound);
	DELE_PTR_FULL(HealthyLoopEventStart);
	DELE_PTR_FULL(HealthyLoopEventEnd);
	DELE_PTR_FULL(BrokenLoopEventStart);
	DELE_PTR_FULL(BrokenLoopEventEnd);
	DELE_PTR_FULL(LoopingAudioComponent);
	DELE_PTR_FULL(GibBreakParticle);
	DELE_PTR_FULL(PhysicsPropSurfaceReaction);
	DELE_PTR_FULL(MeshComponent);
}

// Function Insurgency.SupplyCrate.ShowShowPointOfInterest
// ()
// Parameters:
// class AINSSoldier*             ForPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASupplyCrate::ShowShowPointOfInterest(class AINSSoldier* ForPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.ShowShowPointOfInterest");

	ASupplyCrate_ShowShowPointOfInterest_Params params;
	params.ForPlayer = ForPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SupplyCrate.SetMeshLidAnimation
// ()
// Parameters:
// struct FRotator                NewTargetRotation              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void ASupplyCrate::SetMeshLidAnimation(const struct FRotator& NewTargetRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.SetMeshLidAnimation");

	ASupplyCrate_SetMeshLidAnimation_Params params;
	params.NewTargetRotation = NewTargetRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.PerformResupplyForPlayer
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASupplyCrate::PerformResupplyForPlayer(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.PerformResupplyForPlayer");

	ASupplyCrate_PerformResupplyForPlayer_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OpenSupplyCrate
// ()
void ASupplyCrate::OpenSupplyCrate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OpenSupplyCrate");

	ASupplyCrate_OpenSupplyCrate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OnSpawnZoneToggled
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASupplyCrate::OnSpawnZoneToggled(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OnSpawnZoneToggled");

	ASupplyCrate_OnSpawnZoneToggled_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OnRep_UsesLeft
// ()
void ASupplyCrate::OnRep_UsesLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OnRep_UsesLeft");

	ASupplyCrate_OnRep_UsesLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OnRep_PlayersWhoHaveResupplied
// ()
void ASupplyCrate::OnRep_PlayersWhoHaveResupplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OnRep_PlayersWhoHaveResupplied");

	ASupplyCrate_OnRep_PlayersWhoHaveResupplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OnRep_LinkedSpawnZoneActive
// ()
void ASupplyCrate::OnRep_LinkedSpawnZoneActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OnRep_LinkedSpawnZoneActive");

	ASupplyCrate_OnRep_LinkedSpawnZoneActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OnRep_IsActive
// ()
void ASupplyCrate::OnRep_IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OnRep_IsActive");

	ASupplyCrate_OnRep_IsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.OnObjectiveActive
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASupplyCrate::OnObjectiveActive(bool bNewState, class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.OnObjectiveActive");

	ASupplyCrate_OnObjectiveActive_Params params;
	params.bNewState = bNewState;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.CloseSupplyCrate
// ()
void ASupplyCrate::CloseSupplyCrate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.CloseSupplyCrate");

	ASupplyCrate_CloseSupplyCrate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SupplyCrate.BlueprintOnUsesLeftUpdated
// ()
void ASupplyCrate::BlueprintOnUsesLeftUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SupplyCrate.BlueprintOnUsesLeftUpdated");

	ASupplyCrate_BlueprintOnUsesLeftUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASupplyCrate::AfterRead()
{
	APropBreakable::AfterRead();

	READ_PTR_FULL(LoadoutIcon, UTexture2D);
	READ_PTR_FULL(ResupplyIcon, UTexture2D);
	READ_PTR_FULL(LinkedSpawnZone, ASpawnZone);
	READ_PTR_FULL(LinkedObjective, AObjectiveBase);
	READ_PTR_FULL(MeshLidComponent, UStaticMeshComponent);
	READ_PTR_FULL(PointOfInterestComponent, UPointOfInterestActorComponent);
	READ_PTR_FULL(CrateIcon, UTexture2D);
}

void ASupplyCrate::BeforeDelete()
{
	APropBreakable::BeforeDelete();

	DELE_PTR_FULL(LoadoutIcon);
	DELE_PTR_FULL(ResupplyIcon);
	DELE_PTR_FULL(LinkedSpawnZone);
	DELE_PTR_FULL(LinkedObjective);
	DELE_PTR_FULL(MeshLidComponent);
	DELE_PTR_FULL(PointOfInterestComponent);
	DELE_PTR_FULL(CrateIcon);
}

void UStructureElement::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMesh);
}

void UStructureElement::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Mesh);
}

void UStructureCollection::AfterRead()
{
	UObject::AfterRead();

}

void UStructureCollection::BeforeDelete()
{
	UObject::BeforeDelete();

}

void AStructure::AfterRead()
{
	AActor::AfterRead();

}

void AStructure::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UStatisticsRound::AfterRead()
{
	UObject::AfterRead();

}

void UStatisticsRound::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.StatisticsProfile.SetWeaponStatsSortState
// ()
// Parameters:
// EeWeaponStatsSortState         NewFilterState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::SetWeaponStatsSortState(EeWeaponStatsSortState NewFilterState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.SetWeaponStatsSortState");

	UStatisticsProfile_SetWeaponStatsSortState_Params params;
	params.NewFilterState = NewFilterState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.StatisticsProfile.Reset
// ()
void UStatisticsProfile::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.Reset");

	UStatisticsProfile_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.StatisticsProfile.ParseProfileFromJsonString
// ()
// Parameters:
// struct FString                 profileJson                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::ParseProfileFromJsonString(struct FString* profileJson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.ParseProfileFromJsonString");

	UStatisticsProfile_ParseProfileFromJsonString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (profileJson != nullptr)
		*profileJson = params.profileJson;

}


// Function Insurgency.StatisticsProfile.GetWinRecord
// ()
// Parameters:
// TArray<struct FStatisticsPlayerWinRecordItem> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FStatisticsPlayerWinRecordItem> UStatisticsProfile::GetWinRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetWinRecord");

	UStatisticsProfile_GetWinRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetWinPercentForMode
// ()
// Parameters:
// struct FString                 ModeName                       (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::GetWinPercentForMode(struct FString* ModeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetWinPercentForMode");

	UStatisticsProfile_GetWinPercentForMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ModeName != nullptr)
		*ModeName = params.ModeName;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetWinPercentForMap
// ()
// Parameters:
// struct FString                 MapName                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::GetWinPercentForMap(struct FString* MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetWinPercentForMap");

	UStatisticsProfile_GetWinPercentForMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MapName != nullptr)
		*MapName = params.MapName;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetWeaponStats
// ()
// Parameters:
// TArray<struct FStatisticsPlayerWeaponStats> inArray                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::GetWeaponStats(TArray<struct FStatisticsPlayerWeaponStats>* inArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetWeaponStats");

	UStatisticsProfile_GetWeaponStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (inArray != nullptr)
		*inArray = params.inArray;

}


// Function Insurgency.StatisticsProfile.GetTimePlayedForMode
// ()
// Parameters:
// struct FString                 ModeName                       (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::GetTimePlayedForMode(struct FString* ModeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetTimePlayedForMode");

	UStatisticsProfile_GetTimePlayedForMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ModeName != nullptr)
		*ModeName = params.ModeName;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetTimePlayedForMap
// ()
// Parameters:
// struct FString                 MapName                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::GetTimePlayedForMap(struct FString* MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetTimePlayedForMap");

	UStatisticsProfile_GetTimePlayedForMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MapName != nullptr)
		*MapName = params.MapName;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetStatsForWeapons
// ()
// Parameters:
// TArray<struct FString>         WeaponNames                    (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByGameType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByMode                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByMap                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct FString, struct FStatisticsPlayerWeaponStats> ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
TMap<struct FString, struct FStatisticsPlayerWeaponStats> UStatisticsProfile::GetStatsForWeapons(TArray<struct FString>* WeaponNames, bool bFilterByGameType, bool bFilterByMode, bool bFilterByMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetStatsForWeapons");

	UStatisticsProfile_GetStatsForWeapons_Params params;
	params.bFilterByGameType = bFilterByGameType;
	params.bFilterByMode = bFilterByMode;
	params.bFilterByMap = bFilterByMap;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (WeaponNames != nullptr)
		*WeaponNames = params.WeaponNames;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetScore
// ()
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetScore");

	UStatisticsProfile_GetScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetScenarioStatsSummary
// ()
// Parameters:
// bool                           bFilterMap                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterMode                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterGameType                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStatisticsPlayerProfileScenarioStats ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FStatisticsPlayerProfileScenarioStats UStatisticsProfile::GetScenarioStatsSummary(bool bFilterMap, bool bFilterMode, bool bFilterGameType, bool bFilterTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetScenarioStatsSummary");

	UStatisticsProfile_GetScenarioStatsSummary_Params params;
	params.bFilterMap = bFilterMap;
	params.bFilterMode = bFilterMode;
	params.bFilterGameType = bFilterGameType;
	params.bFilterTeam = bFilterTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankTierForRank
// ()
// Parameters:
// int                            PlayerLevel                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankTierForRank(int PlayerLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankTierForRank");

	UStatisticsProfile_GetRankTierForRank_Params params;
	params.PlayerLevel = PlayerLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankTierForExp
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankTierForExp(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankTierForExp");

	UStatisticsProfile_GetRankTierForExp_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankProgressPercent
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UStatisticsProfile::GetRankProgressPercent(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankProgressPercent");

	UStatisticsProfile_GetRankProgressPercent_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankPrestigeForExp
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankPrestigeForExp(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankPrestigeForExp");

	UStatisticsProfile_GetRankPrestigeForExp_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankLevelThresholdForTier
// ()
// Parameters:
// int                            RankTier                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankLevelThresholdForTier(int RankTier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankLevelThresholdForTier");

	UStatisticsProfile_GetRankLevelThresholdForTier_Params params;
	params.RankTier = RankTier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankLevelThreshold
// ()
// Parameters:
// int                            RankLevel                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankLevelThreshold(int RankLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankLevelThreshold");

	UStatisticsProfile_GetRankLevelThreshold_Params params;
	params.RankLevel = RankLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankLevelForRank
// ()
// Parameters:
// int                            PlayerRank                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankLevelForRank(int PlayerRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankLevelForRank");

	UStatisticsProfile_GetRankLevelForRank_Params params;
	params.PlayerRank = PlayerRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankLevelForExp
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankLevelForExp(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankLevelForExp");

	UStatisticsProfile_GetRankLevelForExp_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetRankExperienceThreshold
// ()
// Parameters:
// int                            PlayerRank                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetRankExperienceThreshold(int PlayerRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetRankExperienceThreshold");

	UStatisticsProfile_GetRankExperienceThreshold_Params params;
	params.PlayerRank = PlayerRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetPlayerClassStats
// ()
// Parameters:
// TArray<struct FStatisticsPlayerClassStats> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FStatisticsPlayerClassStats> UStatisticsProfile::GetPlayerClassStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetPlayerClassStats");

	UStatisticsProfile_GetPlayerClassStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetNextRankProgressPercent
// ()
// Parameters:
// int                            PlayerCurrentExperience        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NextPlayerRank                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UStatisticsProfile::GetNextRankProgressPercent(int PlayerCurrentExperience, int NextPlayerRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetNextRankProgressPercent");

	UStatisticsProfile_GetNextRankProgressPercent_Params params;
	params.PlayerCurrentExperience = PlayerCurrentExperience;
	params.NextPlayerRank = NextPlayerRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetNextRankExperienceThreshold
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetNextRankExperienceThreshold(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetNextRankExperienceThreshold");

	UStatisticsProfile_GetNextRankExperienceThreshold_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetMostUsedWeaponForGameTypeAndTeam
// ()
// Parameters:
// struct FText                   GameType                       (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            GameTeam                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PercentKillsOfTotal            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::GetMostUsedWeaponForGameTypeAndTeam(struct FText* GameType, int GameTeam, float* PercentKillsOfTotal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetMostUsedWeaponForGameTypeAndTeam");

	UStatisticsProfile_GetMostUsedWeaponForGameTypeAndTeam_Params params;
	params.GameTeam = GameTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (GameType != nullptr)
		*GameType = params.GameType;
	if (PercentKillsOfTotal != nullptr)
		*PercentKillsOfTotal = params.PercentKillsOfTotal;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetMostUsedClassForGameTypeAndTeam
// ()
// Parameters:
// struct FText                   GameType                       (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            GameTeam                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PercentTimeOfTotal             (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::GetMostUsedClassForGameTypeAndTeam(struct FText* GameType, int GameTeam, float* PercentTimeOfTotal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetMostUsedClassForGameTypeAndTeam");

	UStatisticsProfile_GetMostUsedClassForGameTypeAndTeam_Params params;
	params.GameTeam = GameTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (GameType != nullptr)
		*GameType = params.GameType;
	if (PercentTimeOfTotal != nullptr)
		*PercentTimeOfTotal = params.PercentTimeOfTotal;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetKills
// ()
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetKills");

	UStatisticsProfile_GetKills_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetExperience
// ()
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetExperience()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetExperience");

	UStatisticsProfile_GetExperience_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetDeaths
// ()
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetDeaths");

	UStatisticsProfile_GetDeaths_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetCurrentRankExperienceThreshold
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetCurrentRankExperienceThreshold(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetCurrentRankExperienceThreshold");

	UStatisticsProfile_GetCurrentRankExperienceThreshold_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetCurrentRank
// ()
// Parameters:
// int                            PlayerExperience               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetCurrentRank(int PlayerExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetCurrentRank");

	UStatisticsProfile_GetCurrentRank_Params params;
	params.PlayerExperience = PlayerExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetBalance
// ()
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UStatisticsProfile::GetBalance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetBalance");

	UStatisticsProfile_GetBalance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.GetAvailableModesForWeaponStats
// ()
// Parameters:
// TArray<struct FString>         inArray                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByMap                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByGameType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::GetAvailableModesForWeaponStats(TArray<struct FString>* inArray, bool bFilterByMap, bool bFilterByGameType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetAvailableModesForWeaponStats");

	UStatisticsProfile_GetAvailableModesForWeaponStats_Params params;
	params.bFilterByMap = bFilterByMap;
	params.bFilterByGameType = bFilterByGameType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (inArray != nullptr)
		*inArray = params.inArray;

}


// Function Insurgency.StatisticsProfile.GetAvailableModesForScenarioStats
// ()
// Parameters:
// TArray<struct FString>         inArray                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByTeam                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByGameType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByMap                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::GetAvailableModesForScenarioStats(TArray<struct FString>* inArray, bool bFilterByTeam, bool bFilterByGameType, bool bFilterByMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetAvailableModesForScenarioStats");

	UStatisticsProfile_GetAvailableModesForScenarioStats_Params params;
	params.bFilterByTeam = bFilterByTeam;
	params.bFilterByGameType = bFilterByGameType;
	params.bFilterByMap = bFilterByMap;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (inArray != nullptr)
		*inArray = params.inArray;

}


// Function Insurgency.StatisticsProfile.GetAvailableMapsForWeaponStats
// ()
// Parameters:
// TArray<struct FString>         inArray                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByGameType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::GetAvailableMapsForWeaponStats(TArray<struct FString>* inArray, bool bFilterByGameType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetAvailableMapsForWeaponStats");

	UStatisticsProfile_GetAvailableMapsForWeaponStats_Params params;
	params.bFilterByGameType = bFilterByGameType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (inArray != nullptr)
		*inArray = params.inArray;

}


// Function Insurgency.StatisticsProfile.GetAvailableMapsForScenarioStats
// ()
// Parameters:
// TArray<struct FString>         inArray                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByTeam                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByGameType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFilterByMode                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::GetAvailableMapsForScenarioStats(TArray<struct FString>* inArray, bool bFilterByTeam, bool bFilterByGameType, bool bFilterByMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetAvailableMapsForScenarioStats");

	UStatisticsProfile_GetAvailableMapsForScenarioStats_Params params;
	params.bFilterByTeam = bFilterByTeam;
	params.bFilterByGameType = bFilterByGameType;
	params.bFilterByMode = bFilterByMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (inArray != nullptr)
		*inArray = params.inArray;

}


// Function Insurgency.StatisticsProfile.GetAvailableGameTypesForWeaponStats
// ()
// Parameters:
// TArray<struct FString>         inArray                        (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsProfile::GetAvailableGameTypesForWeaponStats(TArray<struct FString>* inArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.GetAvailableGameTypesForWeaponStats");

	UStatisticsProfile_GetAvailableGameTypesForWeaponStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (inArray != nullptr)
		*inArray = params.inArray;

}


// Function Insurgency.StatisticsProfile.DescribeWinRatio
// ()
// Parameters:
// int                            Wins                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Games                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::DescribeWinRatio(int Wins, int Games)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.DescribeWinRatio");

	UStatisticsProfile_DescribeWinRatio_Params params;
	params.Wins = Wins;
	params.Games = Games;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.DescribeTimePlayedAsHoursMinutes
// ()
// Parameters:
// int                            TimePlayed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::DescribeTimePlayedAsHoursMinutes(int TimePlayed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.DescribeTimePlayedAsHoursMinutes");

	UStatisticsProfile_DescribeTimePlayedAsHoursMinutes_Params params;
	params.TimePlayed = TimePlayed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.DescribeTimePlayed
// ()
// Parameters:
// int                            TimePlayed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::DescribeTimePlayed(int TimePlayed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.DescribeTimePlayed");

	UStatisticsProfile_DescribeTimePlayed_Params params;
	params.TimePlayed = TimePlayed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.StatisticsProfile.DescribeKillDeathRatio
// ()
// Parameters:
// int                            Kills                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Deaths                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UStatisticsProfile::DescribeKillDeathRatio(int Kills, int Deaths)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsProfile.DescribeKillDeathRatio");

	UStatisticsProfile_DescribeKillDeathRatio_Params params;
	params.Kills = Kills;
	params.Deaths = Deaths;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UStatisticsProfile::AfterRead()
{
	UObject::AfterRead();

}

void UStatisticsProfile::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UStatisticsPlayer::AfterRead()
{
	UObject::AfterRead();

}

void UStatisticsPlayer::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.StatisticsManager.VehicleDestroyedEvent
// ()
// Parameters:
// class AController*             KillerPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AController*>     AssisterPlayers                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsManager::VehicleDestroyedEvent(class AController* KillerPlayer, TArray<class AController*> AssisterPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsManager.VehicleDestroyedEvent");

	UStatisticsManager_VehicleDestroyedEvent_Params params;
	params.KillerPlayer = KillerPlayer;
	params.AssisterPlayers = AssisterPlayers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.StatisticsManager.ObjectiveEvent
// ()
// Parameters:
// int                            ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Capturers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsManager::ObjectiveEvent(int ObjectiveId, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsManager.ObjectiveEvent");

	UStatisticsManager_ObjectiveEvent_Params params;
	params.ObjectiveId = ObjectiveId;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Capturers = Capturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.StatisticsManager.ObjectiveDestroyedEvent
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Capturers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsManager::ObjectiveDestroyedEvent(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsManager.ObjectiveDestroyedEvent");

	UStatisticsManager_ObjectiveDestroyedEvent_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Capturers = Capturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.StatisticsManager.ObjectiveCapturedEvent
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Capturers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UStatisticsManager::ObjectiveCapturedEvent(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.StatisticsManager.ObjectiveCapturedEvent");

	UStatisticsManager_ObjectiveCapturedEvent_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Capturers = Capturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStatisticsManager::AfterRead()
{
	UObject::AfterRead();

}

void UStatisticsManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UStationDialogueDictionary::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStationDialogueDictionary::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.SandstormAchievement.BlueprintInit
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USandstormAchievement::BlueprintInit(class AINSPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SandstormAchievement.BlueprintInit");

	USandstormAchievement_BlueprintInit_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USandstormAchievement::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(LocalPlayerState, AINSPlayerState);
}

void USandstormAchievement::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(LocalPlayerState);
}

void UStatAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UStatAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.SquadLayout.HasPlayerClassInLayout
// ()
// Parameters:
// class UPlayerClass*            InPlayerClass                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USquadLayout::HasPlayerClassInLayout(class UPlayerClass* InPlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SquadLayout.HasPlayerClassInLayout");

	USquadLayout_HasPlayerClassInLayout_Params params;
	params.InPlayerClass = InPlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USquadLayout::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(CustomBotSkillConfig, UBotSkillConfig);
}

void USquadLayout::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(CustomBotSkillConfig);
}

// Function Insurgency.SpawnZoneTriggeredActorInterface.OnSpawnZoneEnabled
// ()
// Parameters:
// class ASpawnZone*              InSpawnZone                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USpawnZoneTriggeredActorInterface::OnSpawnZoneEnabled(class ASpawnZone* InSpawnZone, bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnZoneTriggeredActorInterface.OnSpawnZoneEnabled");

	USpawnZoneTriggeredActorInterface_OnSpawnZoneEnabled_Params params;
	params.InSpawnZone = InSpawnZone;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USpawnZoneTriggeredActorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USpawnZoneTriggeredActorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.SpawnZone.SetTeamId
// ()
// Parameters:
// unsigned char                  NewTeamId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnZone::SetTeamId(unsigned char NewTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnZone.SetTeamId");

	ASpawnZone_SetTeamId_Params params;
	params.NewTeamId = NewTeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnZone.SetEnabled
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnZone::SetEnabled(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnZone.SetEnabled");

	ASpawnZone_SetEnabled_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.SpawnZone.OnSpawnZoneToggledDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnZone::OnSpawnZoneToggledDelegate__DelegateSignature(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.SpawnZone.OnSpawnZoneToggledDelegate__DelegateSignature");

	ASpawnZone_OnSpawnZoneToggledDelegate__DelegateSignature_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnZone.OnRep_Enabled
// ()
void ASpawnZone::OnRep_Enabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnZone.OnRep_Enabled");

	ASpawnZone_OnRep_Enabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnZone.AssociateRestrictedArea
// ()
// Parameters:
// class ARestrictedArea*         Area                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnZone::AssociateRestrictedArea(class ARestrictedArea* Area)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnZone.AssociateRestrictedArea");

	ASpawnZone_AssociateRestrictedArea_Params params;
	params.Area = Area;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnZone.AssociatePlayerStart
// ()
// Parameters:
// class AINSPlayerStart*         PlayerStart                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnZone::AssociatePlayerStart(class AINSPlayerStart* PlayerStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnZone.AssociatePlayerStart");

	ASpawnZone_AssociatePlayerStart_Params params;
	params.PlayerStart = PlayerStart;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASpawnZone::AfterRead()
{
	APhysicsVolume::AfterRead();

}

void ASpawnZone::BeforeDelete()
{
	APhysicsVolume::BeforeDelete();

}

void ASpawnZoneCounterAttack::AfterRead()
{
	ASpawnZone::AfterRead();

}

void ASpawnZoneCounterAttack::BeforeDelete()
{
	ASpawnZone::BeforeDelete();

}

// Function Insurgency.SpawnerBase.SpawnPawns
// ()
void ASpawnerBase::SpawnPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.SpawnPawns");

	ASpawnerBase_SpawnPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.SetTeamId
// ()
// Parameters:
// unsigned char                  NewTeamId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnerBase::SetTeamId(unsigned char NewTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.SetTeamId");

	ASpawnerBase_SetTeamId_Params params;
	params.NewTeamId = NewTeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.ResetKilledPawns
// ()
void ASpawnerBase::ResetKilledPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.ResetKilledPawns");

	ASpawnerBase_ResetKilledPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.OnTeamReinforced
// ()
// Parameters:
// int                            PlayersSpawned                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnerBase::OnTeamReinforced(int PlayersSpawned)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.OnTeamReinforced");

	ASpawnerBase_OnTeamReinforced_Params params;
	params.PlayersSpawned = PlayersSpawned;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.OnSpawnedControllerPossessed
// ()
// Parameters:
// class APawn*                   NeWPawn                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnerBase::OnSpawnedControllerPossessed(class APawn* NeWPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.OnSpawnedControllerPossessed");

	ASpawnerBase_OnSpawnedControllerPossessed_Params params;
	params.NeWPawn = NeWPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.OnLinkedSpawnZoneToggled
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnerBase::OnLinkedSpawnZoneToggled(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.OnLinkedSpawnZoneToggled");

	ASpawnerBase_OnLinkedSpawnZoneToggled_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.IsUnderSpawnQuota
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASpawnerBase::IsUnderSpawnQuota()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.IsUnderSpawnQuota");

	ASpawnerBase_IsUnderSpawnQuota_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SpawnerBase.IsSpawnRestricted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASpawnerBase::IsSpawnRestricted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.IsSpawnRestricted");

	ASpawnerBase_IsSpawnRestricted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SpawnerBase.GetSpawnedPawns
// ()
// Parameters:
// TArray<class APawn*>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class APawn*> ASpawnerBase::GetSpawnedPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.GetSpawnedPawns");

	ASpawnerBase_GetSpawnedPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SpawnerBase.GetNumKilledPawns
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASpawnerBase::GetNumKilledPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.GetNumKilledPawns");

	ASpawnerBase_GetNumKilledPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SpawnerBase.GetExistingPawnCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASpawnerBase::GetExistingPawnCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.GetExistingPawnCount");

	ASpawnerBase_GetExistingPawnCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SpawnerBase.GameStateAllowsSpawning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASpawnerBase::GameStateAllowsSpawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.GameStateAllowsSpawning");

	ASpawnerBase_GameStateAllowsSpawning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SpawnerBase.DeferredSpawnPawns
// ()
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASpawnerBase::DeferredSpawnPawns(float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.DeferredSpawnPawns");

	ASpawnerBase_DeferredSpawnPawns_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.CleanupSpawnedPawns
// ()
void ASpawnerBase::CleanupSpawnedPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.CleanupSpawnedPawns");

	ASpawnerBase_CleanupSpawnedPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.CheckPawnAbandonment
// ()
void ASpawnerBase::CheckPawnAbandonment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.CheckPawnAbandonment");

	ASpawnerBase_CheckPawnAbandonment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SpawnerBase.CanSpawnPawns
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASpawnerBase::CanSpawnPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerBase.CanSpawnPawns");

	ASpawnerBase_CanSpawnPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASpawnerBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(LinkedSpawnZone, ASpawnZone);
	READ_PTR_FULL(CustomBotSkillConfig, UBotSkillConfig);
	READ_PTR_FULL(SpawnerPawnClass, UClass);
}

void ASpawnerBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(LinkedSpawnZone);
	DELE_PTR_FULL(CustomBotSkillConfig);
	DELE_PTR_FULL(SpawnerPawnClass);
}

// Function Insurgency.SpawnerVehicle.IsSpawnObstructed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASpawnerVehicle::IsSpawnObstructed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SpawnerVehicle.IsSpawnObstructed");

	ASpawnerVehicle_IsSpawnObstructed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASpawnerVehicle::AfterRead()
{
	ASpawnerBase::AfterRead();

	READ_PTR_FULL(PassengerPawnClass, UClass);
	READ_PTR_FULL(PassengerAIClass, UClass);
	READ_PTR_FULL(InsertionTargetPoint, AActor);
}

void ASpawnerVehicle::BeforeDelete()
{
	ASpawnerBase::BeforeDelete();

	DELE_PTR_FULL(PassengerPawnClass);
	DELE_PTR_FULL(PassengerAIClass);
	DELE_PTR_FULL(InsertionTargetPoint);
}

void ASpawnerSquad::AfterRead()
{
	ASpawnerBase::AfterRead();

	READ_PTR_FULL(PreviewSkeletalMesh, USkeletalMesh);
}

void ASpawnerSquad::BeforeDelete()
{
	ASpawnerBase::BeforeDelete();

	DELE_PTR_FULL(PreviewSkeletalMesh);
}

// Function Insurgency.SoundscapeTriggerDoor.OnTransitionSphereEndOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASoundscapeTriggerDoor::OnTransitionSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeTriggerDoor.OnTransitionSphereEndOverlap");

	ASoundscapeTriggerDoor_OnTransitionSphereEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeTriggerDoor.OnTransitionSphereBeginOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASoundscapeTriggerDoor::OnTransitionSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeTriggerDoor.OnTransitionSphereBeginOverlap");

	ASoundscapeTriggerDoor_OnTransitionSphereBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeTriggerDoor.OnSoundscapeTriggerEndOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASoundscapeTriggerDoor::OnSoundscapeTriggerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeTriggerDoor.OnSoundscapeTriggerEndOverlap");

	ASoundscapeTriggerDoor_OnSoundscapeTriggerEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASoundscapeTriggerDoor::AfterRead()
{
	ATriggerBox::AfterRead();

	READ_PTR_FULL(SoundscapeFront, USoundscapeDefinition);
	READ_PTR_FULL(SoundscapeBack, USoundscapeDefinition);
	READ_PTR_FULL(TransitionCapsule, UCapsuleComponent);
	READ_PTR_FULL(LineOfSightLocation, USceneComponent);
}

void ASoundscapeTriggerDoor::BeforeDelete()
{
	ATriggerBox::BeforeDelete();

	DELE_PTR_FULL(SoundscapeFront);
	DELE_PTR_FULL(SoundscapeBack);
	DELE_PTR_FULL(TransitionCapsule);
	DELE_PTR_FULL(LineOfSightLocation);
}

void USoundscapeState::AfterRead()
{
	UObject::AfterRead();

}

void USoundscapeState::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.SoundscapeOutdoorVolume.OnEndOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASoundscapeOutdoorVolume::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeOutdoorVolume.OnEndOverlap");

	ASoundscapeOutdoorVolume_OnEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeOutdoorVolume.OnBeginOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASoundscapeOutdoorVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeOutdoorVolume.OnBeginOverlap");

	ASoundscapeOutdoorVolume_OnBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASoundscapeOutdoorVolume::AfterRead()
{
	AVolume::AfterRead();

	READ_PTR_FULL(Definition, USoundscapeDefinition);
}

void ASoundscapeOutdoorVolume::BeforeDelete()
{
	AVolume::BeforeDelete();

	DELE_PTR_FULL(Definition);
}

void ASoundscapeEmitter::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SoundscapeComponent, UINSAudioComponent);
}

void ASoundscapeEmitter::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SoundscapeComponent);
}

void USoundscapeDefinition::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(EntryEvent, UAkAudioEvent);
}

void USoundscapeDefinition::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(EntryEvent);
}

// DelegateFunction Insurgency.SoundscapeComponent.SoundscapeUpdate__DelegateSignature
// ()
// Parameters:
// struct FSoundscapeStateRepl    State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void USoundscapeComponent::SoundscapeUpdate__DelegateSignature(const struct FSoundscapeStateRepl& State)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.SoundscapeComponent.SoundscapeUpdate__DelegateSignature");

	USoundscapeComponent_SoundscapeUpdate__DelegateSignature_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeComponent.OnRep_ReplicatedState
// ()
void USoundscapeComponent::OnRep_ReplicatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeComponent.OnRep_ReplicatedState");

	USoundscapeComponent_OnRep_ReplicatedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeComponent.OnRep_BaseIndoorDefinition
// ()
void USoundscapeComponent::OnRep_BaseIndoorDefinition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeComponent.OnRep_BaseIndoorDefinition");

	USoundscapeComponent_OnRep_BaseIndoorDefinition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeComponent.OnEndTouchingTransitionSphere
// ()
// Parameters:
// class ASoundscapeTriggerDoor*  TriggerActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoundscapeComponent::OnEndTouchingTransitionSphere(class ASoundscapeTriggerDoor* TriggerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeComponent.OnEndTouchingTransitionSphere");

	USoundscapeComponent_OnEndTouchingTransitionSphere_Params params;
	params.TriggerActor = TriggerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeComponent.OnEndTouchingOutdoorVolume
// ()
// Parameters:
// class ASoundscapeOutdoorVolume* TriggerActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoundscapeComponent::OnEndTouchingOutdoorVolume(class ASoundscapeOutdoorVolume* TriggerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeComponent.OnEndTouchingOutdoorVolume");

	USoundscapeComponent_OnEndTouchingOutdoorVolume_Params params;
	params.TriggerActor = TriggerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeComponent.OnBeginTouchingTransitionSphere
// ()
// Parameters:
// class ASoundscapeTriggerDoor*  TriggerActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoundscapeComponent::OnBeginTouchingTransitionSphere(class ASoundscapeTriggerDoor* TriggerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeComponent.OnBeginTouchingTransitionSphere");

	USoundscapeComponent_OnBeginTouchingTransitionSphere_Params params;
	params.TriggerActor = TriggerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoundscapeComponent.OnBeginTouchingOutdoorVolume
// ()
// Parameters:
// class ASoundscapeOutdoorVolume* TriggerActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoundscapeComponent::OnBeginTouchingOutdoorVolume(class ASoundscapeOutdoorVolume* TriggerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoundscapeComponent.OnBeginTouchingOutdoorVolume");

	USoundscapeComponent_OnBeginTouchingOutdoorVolume_Params params;
	params.TriggerActor = TriggerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USoundscapeComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(BaseIndoorDefinition, USoundscapeDefinition);
	READ_PTR_FULL(OutdoorSoundscape, USoundscapeDefinition);
	READ_PTR_FULL(OutdoorFallbackSoundscape, USoundscapeDefinition);
	READ_PTR_FULL(ClosestTransitionSphere, ASoundscapeTriggerDoor);
}

void USoundscapeComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(BaseIndoorDefinition);
	DELE_PTR_FULL(OutdoorSoundscape);
	DELE_PTR_FULL(OutdoorFallbackSoundscape);
	DELE_PTR_FULL(ClosestTransitionSphere);
}

void USoldierPathFollowingComponent::AfterRead()
{
	UPathFollowingComponent::AfterRead();

	READ_PTR_FULL(SoldierMoveComp, USoldierMovementComponent);
}

void USoldierPathFollowingComponent::BeforeDelete()
{
	UPathFollowingComponent::BeforeDelete();

	DELE_PTR_FULL(SoldierMoveComp);
}

// Function Insurgency.SoldierMovementComponent.Server_ToggleLadderADS
// ()
// Parameters:
// ELadderState                   ViewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoldierMovementComponent::Server_ToggleLadderADS(ELadderState ViewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_ToggleLadderADS");

	USoldierMovementComponent_Server_ToggleLadderADS_Params params;
	params.ViewState = ViewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_StopVaulting
// ()
void USoldierMovementComponent::Server_StopVaulting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_StopVaulting");

	USoldierMovementComponent_Server_StopVaulting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_PerformVaultAction
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVaultAction                   VaultAction                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InVaultTraceImpactPoint        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoldierMovementComponent::Server_PerformVaultAction(const struct FVector& Location, EVaultAction VaultAction, const struct FVector& InVaultTraceImpactPoint, float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_PerformVaultAction");

	USoldierMovementComponent_Server_PerformVaultAction_Params params;
	params.Location = Location;
	params.VaultAction = VaultAction;
	params.InVaultTraceImpactPoint = InVaultTraceImpactPoint;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_LeapFromLadder
// ()
void USoldierMovementComponent::Server_LeapFromLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_LeapFromLadder");

	USoldierMovementComponent_Server_LeapFromLadder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_ExitLadder
// ()
// Parameters:
// ELadderState                   ExitState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoldierMovementComponent::Server_ExitLadder(ELadderState ExitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_ExitLadder");

	USoldierMovementComponent_Server_ExitLadder_Params params;
	params.ExitState = ExitState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_EnterLadder
// ()
// Parameters:
// ELadderState                   ExitState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALadder*                 Ladder                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoldierMovementComponent::Server_EnterLadder(ELadderState ExitState, class ALadder* Ladder)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_EnterLadder");

	USoldierMovementComponent_Server_EnterLadder_Params params;
	params.ExitState = ExitState;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_EndCharge
// ()
void USoldierMovementComponent::Server_EndCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_EndCharge");

	USoldierMovementComponent_Server_EndCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_Charge
// ()
void USoldierMovementComponent::Server_Charge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_Charge");

	USoldierMovementComponent_Server_Charge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Server_CancelVault
// ()
void USoldierMovementComponent::Server_CancelVault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Server_CancelVault");

	USoldierMovementComponent_Server_CancelVault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.Multicast_HandleChargeRecoil
// ()
void USoldierMovementComponent::Multicast_HandleChargeRecoil()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.Multicast_HandleChargeRecoil");

	USoldierMovementComponent_Multicast_HandleChargeRecoil_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.IsVaultActionClimbAction
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USoldierMovementComponent::IsVaultActionClimbAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.IsVaultActionClimbAction");

	USoldierMovementComponent_IsVaultActionClimbAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.IsCurrentlyVaulting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USoldierMovementComponent::IsCurrentlyVaulting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.IsCurrentlyVaulting");

	USoldierMovementComponent_IsCurrentlyVaulting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.InChargeMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USoldierMovementComponent::InChargeMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.InChargeMode");

	USoldierMovementComponent_InChargeMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.HasSprintEnoughForFullSprint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USoldierMovementComponent::HasSprintEnoughForFullSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.HasSprintEnoughForFullSprint");

	USoldierMovementComponent_HasSprintEnoughForFullSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetWalkingMaxSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetWalkingMaxSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetWalkingMaxSpeed");

	USoldierMovementComponent_GetWalkingMaxSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetTimeSinceLastCharge
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetTimeSinceLastCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetTimeSinceLastCharge");

	USoldierMovementComponent_GetTimeSinceLastCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetStance
// ()
// Parameters:
// ESoldierStance                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESoldierStance USoldierMovementComponent::GetStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetStance");

	USoldierMovementComponent_GetStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMovementSpeedScaling
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMovementSpeedScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMovementSpeedScaling");

	USoldierMovementComponent_GetMovementSpeedScaling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxWalkingSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxWalkingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxWalkingSpeed");

	USoldierMovementComponent_GetMaxWalkingSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxSprintSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxSprintSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxSprintSpeed");

	USoldierMovementComponent_GetMaxSprintSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxSpeedForStance
// ()
// Parameters:
// ESoldierStance                 Stance                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxSpeedForStance(ESoldierStance Stance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxSpeedForStance");

	USoldierMovementComponent_GetMaxSpeedForStance_Params params;
	params.Stance = Stance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxSpeedForCurrentStance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxSpeedForCurrentStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxSpeedForCurrentStance");

	USoldierMovementComponent_GetMaxSpeedForCurrentStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxSlideSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxSlideSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxSlideSpeed");

	USoldierMovementComponent_GetMaxSlideSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxRunSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxRunSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxRunSpeed");

	USoldierMovementComponent_GetMaxRunSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetMaxProneSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetMaxProneSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetMaxProneSpeed");

	USoldierMovementComponent_GetMaxProneSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.GetHeightForStance
// ()
// Parameters:
// ESoldierStance                 Stance                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USoldierMovementComponent::GetHeightForStance(ESoldierStance Stance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.GetHeightForStance");

	USoldierMovementComponent_GetHeightForStance_Params params;
	params.Stance = Stance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.ClientExitLadder
// ()
// Parameters:
// ELadderState                   ExitState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USoldierMovementComponent::ClientExitLadder(ELadderState ExitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.ClientExitLadder");

	USoldierMovementComponent_ClientExitLadder_Params params;
	params.ExitState = ExitState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SoldierMovementComponent.CanPerformVaultAction
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USoldierMovementComponent::CanPerformVaultAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.CanPerformVaultAction");

	USoldierMovementComponent_CanPerformVaultAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SoldierMovementComponent.AllowVaulting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USoldierMovementComponent::AllowVaulting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SoldierMovementComponent.AllowVaulting");

	USoldierMovementComponent_AllowVaulting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USoldierMovementComponent::AfterRead()
{
	UCharacterMovementComponent::AfterRead();

	READ_PTR_FULL(AttachedLadder, ALadder);
	READ_PTR_FULL(KneeToWaistVaultVelocity, UCurveVector);
	READ_PTR_FULL(KneeToWaistClimbVelocity, UCurveVector);
	READ_PTR_FULL(WaistToChestVaultVelocity, UCurveVector);
	READ_PTR_FULL(WaistToChestClimbVelocity, UCurveVector);
	READ_PTR_FULL(CurrentVaultCurve, UCurveVector);
	READ_PTR_FULL(SoldierOwner, AINSSoldier);
}

void USoldierMovementComponent::BeforeDelete()
{
	UCharacterMovementComponent::BeforeDelete();

	DELE_PTR_FULL(AttachedLadder);
	DELE_PTR_FULL(KneeToWaistVaultVelocity);
	DELE_PTR_FULL(KneeToWaistClimbVelocity);
	DELE_PTR_FULL(WaistToChestVaultVelocity);
	DELE_PTR_FULL(WaistToChestClimbVelocity);
	DELE_PTR_FULL(CurrentVaultCurve);
	DELE_PTR_FULL(SoldierOwner);
}

// Function Insurgency.SmartActor.ShouldFinish
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASmartActor::ShouldFinish(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.ShouldFinish");

	ASmartActor_ShouldFinish_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SmartActor.SetEnabled
// ()
// Parameters:
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASmartActor::SetEnabled(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.SetEnabled");

	ASmartActor_SetEnabled_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SmartActor.OnUpdate
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASmartActor::OnUpdate(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.OnUpdate");

	ASmartActor_OnUpdate_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SmartActor.OnStart
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASmartActor::OnStart(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.OnStart");

	ASmartActor_OnStart_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SmartActor.OnFinish
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASmartActor::OnFinish(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.OnFinish");

	ASmartActor_OnFinish_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SmartActor.HasVisibleEnemyAndWithinRadiusToSmartActor
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASmartActor::HasVisibleEnemyAndWithinRadiusToSmartActor(class AINSAISoldierController* Me, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.HasVisibleEnemyAndWithinRadiusToSmartActor");

	ASmartActor_HasVisibleEnemyAndWithinRadiusToSmartActor_Params params;
	params.Me = Me;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SmartActor.CanInteract
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASmartActor::CanInteract(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SmartActor.CanInteract");

	ASmartActor_CanInteract_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASmartActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(InteractingBot, AINSAISoldierController);
}

void ASmartActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(InteractingBot);
}

void USharedCosmeticState::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(HeadCosmetic, UClass);
	READ_PTR_FULL(HeadFacialReferencePose, UAnimSequence);
	READ_PTR_FULL(EyeMaterial, UMaterialInstance);
	READ_PTR_FULL(TorsoCosmetic, UClass);
	READ_PTR_FULL(FeetCosmetic, UClass);
	READ_PTR_FULL(HandCosmetic, UClass);
	READ_PTR_FULL(CamoTexture, UTexture);
	READ_PTR_FULL(TattooLeftTexture1P, UTexture);
	READ_PTR_FULL(TattooLeftTexture3P, UTexture);
	READ_PTR_FULL(TattooRightTexture1P, UTexture);
	READ_PTR_FULL(TattooRightTexture3P, UTexture);
}

void USharedCosmeticState::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(HeadCosmetic);
	DELE_PTR_FULL(HeadFacialReferencePose);
	DELE_PTR_FULL(EyeMaterial);
	DELE_PTR_FULL(TorsoCosmetic);
	DELE_PTR_FULL(FeetCosmetic);
	DELE_PTR_FULL(HandCosmetic);
	DELE_PTR_FULL(CamoTexture);
	DELE_PTR_FULL(TattooLeftTexture1P);
	DELE_PTR_FULL(TattooLeftTexture3P);
	DELE_PTR_FULL(TattooRightTexture1P);
	DELE_PTR_FULL(TattooRightTexture3P);
}

void UServerListEntry::AfterRead()
{
	UObject::AfterRead();

}

void UServerListEntry::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.ScoreboardBadgeSettings.IsValidBadgeIndex
// ()
// Parameters:
// int                            BadgeIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UScoreboardBadgeSettings::IsValidBadgeIndex(int BadgeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBadgeSettings.IsValidBadgeIndex");

	UScoreboardBadgeSettings_IsValidBadgeIndex_Params params;
	params.BadgeIndex = BadgeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ScoreboardBadgeSettings.GetScoreboardBadgeSettings
// ()
// Parameters:
// class UScoreboardBadgeSettings* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UScoreboardBadgeSettings* UScoreboardBadgeSettings::GetScoreboardBadgeSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBadgeSettings.GetScoreboardBadgeSettings");

	UScoreboardBadgeSettings_GetScoreboardBadgeSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ScoreboardBadgeSettings.GetScoreboardBadgeImage
// ()
// Parameters:
// int                            BadgeIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UScoreboardBadgeSettings::GetScoreboardBadgeImage(int BadgeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBadgeSettings.GetScoreboardBadgeImage");

	UScoreboardBadgeSettings_GetScoreboardBadgeImage_Params params;
	params.BadgeIndex = BadgeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ScoreboardBadgeSettings.GetItemIdFromBadgeIndex
// ()
// Parameters:
// int                            BadgeIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UScoreboardBadgeSettings::GetItemIdFromBadgeIndex(int BadgeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBadgeSettings.GetItemIdFromBadgeIndex");

	UScoreboardBadgeSettings_GetItemIdFromBadgeIndex_Params params;
	params.BadgeIndex = BadgeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ScoreboardBadgeSettings.GetBadgeIndexByItemId
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UScoreboardBadgeSettings::GetBadgeIndexByItemId(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ScoreboardBadgeSettings.GetBadgeIndexByItemId");

	UScoreboardBadgeSettings_GetBadgeIndexByItemId_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UScoreboardBadgeSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UScoreboardBadgeSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UScenarioBase::AfterRead()
{
	UPrimaryDataAsset::AfterRead();

	READ_PTR_FULL(GameMode, UClass);
	READ_PTR_FULL(ScenarioImage, UTexture2D);
	READ_PTR_FULL(DefaultTheater, UTheaterDefinition);
	READ_PTR_FULL(GameModeData, UGameModeScenarioData);
}

void UScenarioBase::BeforeDelete()
{
	UPrimaryDataAsset::BeforeDelete();

	DELE_PTR_FULL(GameMode);
	DELE_PTR_FULL(ScenarioImage);
	DELE_PTR_FULL(DefaultTheater);
	DELE_PTR_FULL(GameModeData);
}

void UScenarioMultiplayer::AfterRead()
{
	UScenarioBase::AfterRead();

}

void UScenarioMultiplayer::BeforeDelete()
{
	UScenarioBase::BeforeDelete();

}

void UScenarioMission::AfterRead()
{
	UScenarioBase::AfterRead();

}

void UScenarioMission::BeforeDelete()
{
	UScenarioBase::BeforeDelete();

}

void AScenarioLevelFactory::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USphereComponent);
}

void AScenarioLevelFactory::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
}

void USandstormStatsCollectionComponent::AfterRead()
{
	UGameStatsCollectionComponent::AfterRead();

}

void USandstormStatsCollectionComponent::BeforeDelete()
{
	UGameStatsCollectionComponent::BeforeDelete();

}

// Function Insurgency.SandstormGauntletSmokeBuild.OnHealthSnapshot
// ()
void USandstormGauntletSmokeBuild::OnHealthSnapshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SandstormGauntletSmokeBuild.OnHealthSnapshot");

	USandstormGauntletSmokeBuild_OnHealthSnapshot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USandstormGauntletSmokeBuild::AfterRead()
{
	UGauntletTestController::AfterRead();

}

void USandstormGauntletSmokeBuild::BeforeDelete()
{
	UGauntletTestController::BeforeDelete();

}

// Function Insurgency.SandstormGauntletLevelFlythrough.OnHealthSnapshot
// ()
void USandstormGauntletLevelFlythrough::OnHealthSnapshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SandstormGauntletLevelFlythrough.OnHealthSnapshot");

	USandstormGauntletLevelFlythrough_OnHealthSnapshot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SandstormGauntletLevelFlythrough.OnBenchmarkStart
// ()
void USandstormGauntletLevelFlythrough::OnBenchmarkStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SandstormGauntletLevelFlythrough.OnBenchmarkStart");

	USandstormGauntletLevelFlythrough_OnBenchmarkStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.SandstormGauntletLevelFlythrough.OnBenchmarkFinished
// ()
void USandstormGauntletLevelFlythrough::OnBenchmarkFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SandstormGauntletLevelFlythrough.OnBenchmarkFinished");

	USandstormGauntletLevelFlythrough_OnBenchmarkFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USandstormGauntletLevelFlythrough::AfterRead()
{
	UGauntletTestController::AfterRead();

}

void USandstormGauntletLevelFlythrough::BeforeDelete()
{
	UGauntletTestController::BeforeDelete();

}

void USandstormGauntletGeneratePakOrder::AfterRead()
{
	UGauntletTestController::AfterRead();

}

void USandstormGauntletGeneratePakOrder::BeforeDelete()
{
	UGauntletTestController::BeforeDelete();

}

void USandstormGauntletBotGameplay::AfterRead()
{
	UGauntletTestController::AfterRead();

}

void USandstormGauntletBotGameplay::BeforeDelete()
{
	UGauntletTestController::BeforeDelete();

}

void USandstormGauntletBootTest::AfterRead()
{
	UGauntletTestControllerBootTest::AfterRead();

}

void USandstormGauntletBootTest::BeforeDelete()
{
	UGauntletTestControllerBootTest::BeforeDelete();

}

void USandstormGauntletBenchmarkReplay::AfterRead()
{
	UGauntletTestController::AfterRead();

}

void USandstormGauntletBenchmarkReplay::BeforeDelete()
{
	UGauntletTestController::BeforeDelete();

}

// Function Insurgency.GameModeAchievement.OnMatchEnd
// ()
// Parameters:
// unsigned char                  WinningFaction                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  GameMode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameModeAchievement::OnMatchEnd(unsigned char WinningFaction, class UClass* GameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameModeAchievement.OnMatchEnd");

	UGameModeAchievement_OnMatchEnd_Params params;
	params.WinningFaction = WinningFaction;
	params.GameMode = GameMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGameModeAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UGameModeAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

void UWetFeet::AfterRead()
{
	UGameModeAchievement::AfterRead();

}

void UWetFeet::BeforeDelete()
{
	UGameModeAchievement::BeforeDelete();

}

void UCheckpointVictory::AfterRead()
{
	UGameModeAchievement::AfterRead();

}

void UCheckpointVictory::BeforeDelete()
{
	UGameModeAchievement::BeforeDelete();

}

void UPushVictory::AfterRead()
{
	UGameModeAchievement::AfterRead();

}

void UPushVictory::BeforeDelete()
{
	UGameModeAchievement::BeforeDelete();

}

void UFirefightVictory::AfterRead()
{
	UGameModeAchievement::AfterRead();

}

void UFirefightVictory::BeforeDelete()
{
	UGameModeAchievement::BeforeDelete();

}

void USkirmishVictory::AfterRead()
{
	UGameModeAchievement::AfterRead();

}

void USkirmishVictory::BeforeDelete()
{
	UGameModeAchievement::BeforeDelete();

}

void UCTBVictory::AfterRead()
{
	UGameModeAchievement::AfterRead();

}

void UCTBVictory::BeforeDelete()
{
	UGameModeAchievement::BeforeDelete();

}

// Function Insurgency.ThereForYou.OnRequestSupport
// ()
// Parameters:
// class AINSPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UThereForYou::OnRequestSupport(class AINSPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ThereForYou.OnRequestSupport");

	UThereForYou_OnRequestSupport_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UThereForYou::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UThereForYou::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.PlayToWin.OnRecievedObjectiveCaptured
// ()
// Parameters:
// class AINSPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayToWin::OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayToWin.OnRecievedObjectiveCaptured");

	UPlayToWin_OnRecievedObjectiveCaptured_Params params;
	params.PC = PC;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayToWin::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UPlayToWin::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.MVPAchievement.OnRoundOver
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningFaction                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FOtherPlayerAwardedTagline> Taglines                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMVPAchievement::OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MVPAchievement.OnRoundOver");

	UMVPAchievement_OnRoundOver_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningFaction = WinningFaction;
	params.Taglines = Taglines;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMVPAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UMVPAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.DesignatedDriverAchievement.OnDesignatedDriver
// ()
// Parameters:
// class AINSBasePlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDesignatedDriverAchievement::OnDesignatedDriver(class AINSBasePlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DesignatedDriverAchievement.OnDesignatedDriver");

	UDesignatedDriverAchievement_OnDesignatedDriver_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDesignatedDriverAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UDesignatedDriverAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.TakeTheWheelAchievement.OnSeatTakenOver
// ()
// Parameters:
// class AINSCharacter*           OldCharacter                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTakeTheWheelAchievement::OnSeatTakenOver(class AINSCharacter* OldCharacter, class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TakeTheWheelAchievement.OnSeatTakenOver");

	UTakeTheWheelAchievement_OnSeatTakenOver_Params params;
	params.OldCharacter = OldCharacter;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTakeTheWheelAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UTakeTheWheelAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.SemperParatus.OnDamagedBlocked
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USemperParatus::OnDamagedBlocked(float Damage, class UClass* DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SemperParatus.OnDamagedBlocked");

	USemperParatus_OnDamagedBlocked_Params params;
	params.Damage = Damage;
	params.DamageTypeClass = DamageTypeClass;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USemperParatus::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void USemperParatus::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.SABERUtilsWidget.IsShippingBuild
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::IsShippingBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.IsShippingBuild");

	USABERUtilsWidget_IsShippingBuild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetUtilsWidgetInstance
// ()
// Parameters:
// class USABERUtilsWidget*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USABERUtilsWidget* USABERUtilsWidget::GetUtilsWidgetInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetUtilsWidgetInstance");

	USABERUtilsWidget_GetUtilsWidgetInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableVideoSettingsForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableVideoSettingsForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableVideoSettingsForConsoles");

	USABERUtilsWidget_GetDisableVideoSettingsForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableTextChatForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableTextChatForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableTextChatForConsoles");

	USABERUtilsWidget_GetDisableTextChatForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableSubmitFeedbackForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableSubmitFeedbackForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableSubmitFeedbackForConsoles");

	USABERUtilsWidget_GetDisableSubmitFeedbackForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableReplaysForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableReplaysForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableReplaysForConsoles");

	USABERUtilsWidget_GetDisableReplaysForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableProfanityFilterSettingForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableProfanityFilterSettingForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableProfanityFilterSettingForConsoles");

	USABERUtilsWidget_GetDisableProfanityFilterSettingForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisablePostMatchStatsForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisablePostMatchStatsForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisablePostMatchStatsForConsoles");

	USABERUtilsWidget_GetDisablePostMatchStatsForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisablePlayerStatisticsForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisablePlayerStatisticsForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisablePlayerStatisticsForConsoles");

	USABERUtilsWidget_GetDisablePlayerStatisticsForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisablePlayerCounterForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisablePlayerCounterForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisablePlayerCounterForConsoles");

	USABERUtilsWidget_GetDisablePlayerCounterForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisablePartyButtonForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisablePartyButtonForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisablePartyButtonForConsoles");

	USABERUtilsWidget_GetDisablePartyButtonForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableNewsWidgetsForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableNewsWidgetsForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableNewsWidgetsForConsoles");

	USABERUtilsWidget_GetDisableNewsWidgetsForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableInventoryForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableInventoryForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableInventoryForConsoles");

	USABERUtilsWidget_GetDisableInventoryForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableDLCContentForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableDLCContentForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableDLCContentForConsoles");

	USABERUtilsWidget_GetDisableDLCContentForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableCompetitiveModeForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableCompetitiveModeForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableCompetitiveModeForConsoles");

	USABERUtilsWidget_GetDisableCompetitiveModeForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.GetDisableBindsSettingSectionForConsoles
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USABERUtilsWidget::GetDisableBindsSettingSectionForConsoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.GetDisableBindsSettingSectionForConsoles");

	USABERUtilsWidget_GetDisableBindsSettingSectionForConsoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.SABERUtilsWidget.Get
// ()
// Parameters:
// class USABERUtilsWidget*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USABERUtilsWidget* USABERUtilsWidget::Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidget.Get");

	USABERUtilsWidget_Get_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USABERUtilsWidget::AfterRead()
{
	UObject::AfterRead();

}

void USABERUtilsWidget::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.SABERUtilsWidgetWorldSubsystem.GetUtilsWidgetWorldSubsystem
// ()
// Parameters:
// class USABERUtilsWidget*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USABERUtilsWidget* USABERUtilsWidgetWorldSubsystem::GetUtilsWidgetWorldSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.SABERUtilsWidgetWorldSubsystem.GetUtilsWidgetWorldSubsystem");

	USABERUtilsWidgetWorldSubsystem_GetUtilsWidgetWorldSubsystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USABERUtilsWidgetWorldSubsystem::AfterRead()
{
	UWorldSubsystem::AfterRead();

	READ_PTR_FULL(UtilsWidgetInstance, USABERUtilsWidget);
}

void USABERUtilsWidgetWorldSubsystem::BeforeDelete()
{
	UWorldSubsystem::BeforeDelete();

	DELE_PTR_FULL(UtilsWidgetInstance);
}

void URuleset::AfterRead()
{
	UObject::AfterRead();

}

void URuleset::BeforeDelete()
{
	UObject::BeforeDelete();

}

void URoundResetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URoundResetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URoundResetComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URoundResetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void URichTextTeamColorDecorator::AfterRead()
{
	URichTextBlockDecorator::AfterRead();

}

void URichTextTeamColorDecorator::BeforeDelete()
{
	URichTextBlockDecorator::BeforeDelete();

}

void ARestrictedFireSupportVolume::AfterRead()
{
	AVolume::AfterRead();

}

void ARestrictedFireSupportVolume::BeforeDelete()
{
	AVolume::BeforeDelete();

}

// Function Insurgency.RestrictedArea.ShouldBeRestricted
// ()
// Parameters:
// class AINSSoldier*             TargetSoldier                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ARestrictedArea::ShouldBeRestricted(class AINSSoldier* TargetSoldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RestrictedArea.ShouldBeRestricted");

	ARestrictedArea_ShouldBeRestricted_Params params;
	params.TargetSoldier = TargetSoldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.RestrictedArea.SetEnabled
// ()
// Parameters:
// bool                           bState                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARestrictedArea::SetEnabled(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RestrictedArea.SetEnabled");

	ARestrictedArea_SetEnabled_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RestrictedArea.OnEndAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARestrictedArea::OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RestrictedArea.OnEndAreaOverlap");

	ARestrictedArea_OnEndAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RestrictedArea.OnBeginAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ARestrictedArea::OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RestrictedArea.OnBeginAreaOverlap");

	ARestrictedArea_OnBeginAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RestrictedArea.IsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ARestrictedArea::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RestrictedArea.IsEnabled");

	ARestrictedArea_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ARestrictedArea::AfterRead()
{
	AVolume::AfterRead();

	READ_PTR_FULL(LinkedSpawnZone, ASpawnZone);
}

void ARestrictedArea::BeforeDelete()
{
	AVolume::BeforeDelete();

	DELE_PTR_FULL(LinkedSpawnZone);
}

// Function Insurgency.RenderTargetController.GetTextureRenderTarget
// ()
// Parameters:
// TEnumAsByte<ERenderTargetSlot> TargetType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTextureRenderTarget2D* URenderTargetController::GetTextureRenderTarget(TEnumAsByte<ERenderTargetSlot> TargetType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RenderTargetController.GetTextureRenderTarget");

	URenderTargetController_GetTextureRenderTarget_Params params;
	params.TargetType = TargetType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.RenderTargetController.GetDesiredResolutionForTarget
// ()
// Parameters:
// TEnumAsByte<ERenderTargetSlot> TargetType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint               OutSize                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void URenderTargetController::GetDesiredResolutionForTarget(TEnumAsByte<ERenderTargetSlot> TargetType, struct FIntPoint* OutSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RenderTargetController.GetDesiredResolutionForTarget");

	URenderTargetController_GetDesiredResolutionForTarget_Params params;
	params.TargetType = TargetType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSize != nullptr)
		*OutSize = params.OutSize;

}


void URenderTargetController::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(OuterLocalPlayer, UINSLocalPlayer);
}

void URenderTargetController::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(OuterLocalPlayer);
}

// Function Insurgency.ReinforcementSystemComponent.StartWave
// ()
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::StartWave(float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.StartWave");

	UReinforcementSystemComponent_StartWave_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.ShouldTriggerReinforcementWave
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UReinforcementSystemComponent::ShouldTriggerReinforcementWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.ShouldTriggerReinforcementWave");

	UReinforcementSystemComponent_ShouldTriggerReinforcementWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ReinforcementSystemComponent.ShouldDeductReinforcementWave
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UReinforcementSystemComponent::ShouldDeductReinforcementWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.ShouldDeductReinforcementWave");

	UReinforcementSystemComponent_ShouldDeductReinforcementWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ReinforcementSystemComponent.SetWaves
// ()
// Parameters:
// int                            Waves                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::SetWaves(int Waves)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.SetWaves");

	UReinforcementSystemComponent_SetWaves_Params params;
	params.Waves = Waves;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ReinforcementSystemComponent.OnWaveGainDelegate__DelegateSignature
// ()
// Parameters:
// class UReinforcementSystemComponent* ReinforcementSystemComponent   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OldWaveCount                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::OnWaveGainDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent, int OldWaveCount)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ReinforcementSystemComponent.OnWaveGainDelegate__DelegateSignature");

	UReinforcementSystemComponent_OnWaveGainDelegate__DelegateSignature_Params params;
	params.ReinforcementSystemComponent = ReinforcementSystemComponent;
	params.OldWaveCount = OldWaveCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ReinforcementSystemComponent.OnWaveDepletionDelegate__DelegateSignature
// ()
// Parameters:
// class UReinforcementSystemComponent* ReinforcementSystemComponent   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::OnWaveDepletionDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ReinforcementSystemComponent.OnWaveDepletionDelegate__DelegateSignature");

	UReinforcementSystemComponent_OnWaveDepletionDelegate__DelegateSignature_Params params;
	params.ReinforcementSystemComponent = ReinforcementSystemComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.OnRoundReset
// ()
void UReinforcementSystemComponent::OnRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.OnRoundReset");

	UReinforcementSystemComponent_OnRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.OnPlayerDeath
// ()
void UReinforcementSystemComponent::OnPlayerDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.OnPlayerDeath");

	UReinforcementSystemComponent_OnPlayerDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.GetWaves
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UReinforcementSystemComponent::GetWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.GetWaves");

	UReinforcementSystemComponent_GetWaves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ReinforcementSystemComponent.ExecuteRapidDeployment
// ()
// Parameters:
// bool                           bDeductWave                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::ExecuteRapidDeployment(bool bDeductWave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.ExecuteRapidDeployment");

	UReinforcementSystemComponent_ExecuteRapidDeployment_Params params;
	params.bDeductWave = bDeductWave;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.DeductWave
// ()
void UReinforcementSystemComponent::DeductWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.DeductWave");

	UReinforcementSystemComponent_DeductWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ReinforcementSystemComponent.DeductReinforcementWaveDelegate__DelegateSignature
// ()
// Parameters:
// class UReinforcementSystemComponent* ReinforcementSystemComponent   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UReinforcementSystemComponent::DeductReinforcementWaveDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ReinforcementSystemComponent.DeductReinforcementWaveDelegate__DelegateSignature");

	UReinforcementSystemComponent_DeductReinforcementWaveDelegate__DelegateSignature_Params params;
	params.ReinforcementSystemComponent = ReinforcementSystemComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ReinforcementSystemComponent.CheckStartWave
// ()
void UReinforcementSystemComponent::CheckStartWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.CheckStartWave");

	UReinforcementSystemComponent_CheckStartWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.CanRedeployPlayers
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UReinforcementSystemComponent::CanRedeployPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.CanRedeployPlayers");

	UReinforcementSystemComponent_CanRedeployPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ReinforcementSystemComponent.CancelWave
// ()
// Parameters:
// bool                           bInformTeam                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::CancelWave(bool bInformTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.CancelWave");

	UReinforcementSystemComponent_CancelWave_Params params;
	params.bInformTeam = bInformTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ReinforcementSystemComponent.AddWaves
// ()
// Parameters:
// int                            Waves                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UReinforcementSystemComponent::AddWaves(int Waves)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ReinforcementSystemComponent.AddWaves");

	UReinforcementSystemComponent_AddWaves_Params params;
	params.Waves = Waves;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UReinforcementSystemComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Team, ATeamInfo);
	READ_PTR_FULL(OuterGameMode, AINSGameMode);
}

void UReinforcementSystemComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Team);
	DELE_PTR_FULL(OuterGameMode);
}

void UWeaponUpgradeFilterTest::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeaponUpgradeFilterTest::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UWeaponUpgradeEquippedFilter::AfterRead()
{
	UWeaponUpgradeFilterTest::AfterRead();

}

void UWeaponUpgradeEquippedFilter::BeforeDelete()
{
	UWeaponUpgradeFilterTest::BeforeDelete();

}

void UWeaponUpgradeTagFilter::AfterRead()
{
	UWeaponUpgradeFilterTest::AfterRead();

}

void UWeaponUpgradeTagFilter::BeforeDelete()
{
	UWeaponUpgradeFilterTest::BeforeDelete();

}

void UWeaponUpgradeFilter::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeaponUpgradeFilter::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.RandomWeaponCrateDataAsset.GetTotalWeaponPoolChance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float URandomWeaponCrateDataAsset::GetTotalWeaponPoolChance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrateDataAsset.GetTotalWeaponPoolChance");

	URandomWeaponCrateDataAsset_GetTotalWeaponPoolChance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URandomWeaponCrateDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URandomWeaponCrateDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.RandomWeaponCrate.SpawnRandomWeapon
// ()
// Parameters:
// class AINSSoldier*             ForUser                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::SpawnRandomWeapon(class AINSSoldier* ForUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.SpawnRandomWeapon");

	ARandomWeaponCrate_SpawnRandomWeapon_Params params;
	params.ForUser = ForUser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.ShowShowPointOfInterest
// ()
// Parameters:
// class AINSSoldier*             ForPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ARandomWeaponCrate::ShowShowPointOfInterest(class AINSSoldier* ForPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.ShowShowPointOfInterest");

	ARandomWeaponCrate_ShowShowPointOfInterest_Params params;
	params.ForPlayer = ForPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.RandomWeaponCrate.SetOpened
// ()
// Parameters:
// bool                           bNewOpened                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::SetOpened(bool bNewOpened)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.SetOpened");

	ARandomWeaponCrate_SetOpened_Params params;
	params.bNewOpened = bNewOpened;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.SetEnabled
// ()
// Parameters:
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::SetEnabled(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.SetEnabled");

	ARandomWeaponCrate_SetEnabled_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.SetCrateDataAsset
// ()
// Parameters:
// class URandomWeaponCrateDataAsset* NewCrateData                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::SetCrateDataAsset(class URandomWeaponCrateDataAsset* NewCrateData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.SetCrateDataAsset");

	ARandomWeaponCrate_SetCrateDataAsset_Params params;
	params.NewCrateData = NewCrateData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.ResupplyLoadout
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::ResupplyLoadout(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.ResupplyLoadout");

	ARandomWeaponCrate_ResupplyLoadout_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.ResetUseLimits
// ()
void ARandomWeaponCrate::ResetUseLimits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.ResetUseLimits");

	ARandomWeaponCrate_ResetUseLimits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.PlaySoundEffect
// ()
// Parameters:
// class UAkAudioEvent*           InSoundEffect                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::PlaySoundEffect(class UAkAudioEvent* InSoundEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.PlaySoundEffect");

	ARandomWeaponCrate_PlaySoundEffect_Params params;
	params.InSoundEffect = InSoundEffect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.OnRep_Opened
// ()
void ARandomWeaponCrate::OnRep_Opened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.OnRep_Opened");

	ARandomWeaponCrate_OnRep_Opened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.OnRep_Enabled
// ()
void ARandomWeaponCrate::OnRep_Enabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.OnRep_Enabled");

	ARandomWeaponCrate_OnRep_Enabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.OnPickupPickedUp
// ()
// Parameters:
// class AItemEquipable*          PickedUpItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::OnPickupPickedUp(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.OnPickupPickedUp");

	ARandomWeaponCrate_OnPickupPickedUp_Params params;
	params.PickedUpItem = PickedUpItem;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.OnPickupDestroyed
// ()
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::OnPickupDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.OnPickupDestroyed");

	ARandomWeaponCrate_OnPickupDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.OnPickupClearAmmo
// ()
// Parameters:
// class AItemEquipable*          PickedUpItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::OnPickupClearAmmo(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.OnPickupClearAmmo");

	ARandomWeaponCrate_OnPickupClearAmmo_Params params;
	params.PickedUpItem = PickedUpItem;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.OnCrateOpened
// ()
// Parameters:
// class AINSSoldier*             OpenedBy                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::OnCrateOpened(class AINSSoldier* OpenedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.OnCrateOpened");

	ARandomWeaponCrate_OnCrateOpened_Params params;
	params.OpenedBy = OpenedBy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.IncrementTotalUseCount
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncrementLinked               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::IncrementTotalUseCount(int Amount, bool bIncrementLinked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.IncrementTotalUseCount");

	ARandomWeaponCrate_IncrementTotalUseCount_Params params;
	params.Amount = Amount;
	params.bIncrementLinked = bIncrementLinked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.IncrementPlayerUseCount
// ()
// Parameters:
// class AINSSoldier*             ForPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncrementTotal                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncrementLinked               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::IncrementPlayerUseCount(class AINSSoldier* ForPlayer, int Amount, bool bIncrementTotal, bool bIncrementLinked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.IncrementPlayerUseCount");

	ARandomWeaponCrate_IncrementPlayerUseCount_Params params;
	params.ForPlayer = ForPlayer;
	params.Amount = Amount;
	params.bIncrementTotal = bIncrementTotal;
	params.bIncrementLinked = bIncrementLinked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.GiveLoadoutItems
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bExcludePrimaryFromRemoval     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::GiveLoadoutItems(class AINSSoldier* Pawn, bool bExcludePrimaryFromRemoval)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.GiveLoadoutItems");

	ARandomWeaponCrate_GiveLoadoutItems_Params params;
	params.Pawn = Pawn;
	params.bExcludePrimaryFromRemoval = bExcludePrimaryFromRemoval;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.RandomWeaponCrate.GetLinkedWeaponCrates
// ()
// Parameters:
// TArray<class ARandomWeaponCrate*> OutLinkedCrates                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARandomWeaponCrate::GetLinkedWeaponCrates(TArray<class ARandomWeaponCrate*>* OutLinkedCrates)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RandomWeaponCrate.GetLinkedWeaponCrates");

	ARandomWeaponCrate_GetLinkedWeaponCrates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLinkedCrates != nullptr)
		*OutLinkedCrates = params.OutLinkedCrates;

}


void ARandomWeaponCrate::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CrateData, URandomWeaponCrateDataAsset);
	READ_PTR_FULL(MeshOpened, UStaticMesh);
	READ_PTR_FULL(MeshInactive, UStaticMesh);
	READ_PTR_FULL(MeshActive, UStaticMesh);
	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(WeaponSpawnLocationComponent, USceneComponent);
	READ_PTR_FULL(ActiveWeaponPickup, AItemPickupDynamic);
	READ_PTR_FULL(UseImage, UTexture2D);
	READ_PTR_FULL(ProximityImage, UTexture2D);
	READ_PTR_FULL(PointOfInterestComponent, UPointOfInterestActorComponent);
	READ_PTR_FULL(EnableSound, UAkAudioEvent);
	READ_PTR_FULL(OpenSound, UAkAudioEvent);
}

void ARandomWeaponCrate::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CrateData);
	DELE_PTR_FULL(MeshOpened);
	DELE_PTR_FULL(MeshInactive);
	DELE_PTR_FULL(MeshActive);
	DELE_PTR_FULL(StaticMeshComponent);
	DELE_PTR_FULL(WeaponSpawnLocationComponent);
	DELE_PTR_FULL(ActiveWeaponPickup);
	DELE_PTR_FULL(UseImage);
	DELE_PTR_FULL(ProximityImage);
	DELE_PTR_FULL(PointOfInterestComponent);
	DELE_PTR_FULL(EnableSound);
	DELE_PTR_FULL(OpenSound);
}

void URagdollMeshComponent::AfterRead()
{
	USkeletalMeshComponent::AfterRead();

}

void URagdollMeshComponent::BeforeDelete()
{
	USkeletalMeshComponent::BeforeDelete();

}

void URagdollManager::AfterRead()
{
	UObject::AfterRead();

}

void URagdollManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.Ragdoll.VisualizeDebugInformation
// ()
void ARagdoll::VisualizeDebugInformation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.VisualizeDebugInformation");

	ARagdoll_VisualizeDebugInformation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.Vaporize
// ()
// Parameters:
// bool                           bShouldObliterate              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::Vaporize(bool bShouldObliterate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.Vaporize");

	ARagdoll_Vaporize_Params params;
	params.bShouldObliterate = bShouldObliterate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.UpdateMaterialSlotVisibility
// ()
// Parameters:
// bool                           bNotViewTarget                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::UpdateMaterialSlotVisibility(bool bNotViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.UpdateMaterialSlotVisibility");

	ARagdoll_UpdateMaterialSlotVisibility_Params params;
	params.bNotViewTarget = bNotViewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.UpdateBloodPool
// ()
void ARagdoll::UpdateBloodPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.UpdateBloodPool");

	ARagdoll_UpdateBloodPool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.TearRandomLimbs
// ()
// Parameters:
// int                            Limbs                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::TearRandomLimbs(int Limbs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.TearRandomLimbs");

	ARagdoll_TearRandomLimbs_Params params;
	params.Limbs = Limbs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.TearLimb
// ()
// Parameters:
// struct FName                   LimbName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FName> ARagdoll::TearLimb(const struct FName& LimbName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.TearLimb");

	ARagdoll_TearLimb_Params params;
	params.LimbName = LimbName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Ragdoll.SprinkleSprayDecals
// ()
void ARagdoll::SprinkleSprayDecals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.SprinkleSprayDecals");

	ARagdoll_SprinkleSprayDecals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.SimplifiedDamage
// ()
// Parameters:
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitPosition                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 DamageForce                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplyModifiers                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::SimplifiedDamage(float DamageAmount, class UClass* DamageType, const struct FVector& HitPosition, const struct FVector& DamageForce, class AController* Killer, class AActor* DamageCauser, bool bApplyModifiers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.SimplifiedDamage");

	ARagdoll_SimplifiedDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageType = DamageType;
	params.HitPosition = HitPosition;
	params.DamageForce = DamageForce;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;
	params.bApplyModifiers = bApplyModifiers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.SetupSkinTint
// ()
// Parameters:
// class UMaterialInstanceDynamic* Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStoreSkinTint                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplySkinTint                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::SetupSkinTint(class UMaterialInstanceDynamic* Material, bool bStoreSkinTint, bool bApplySkinTint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.SetupSkinTint");

	ARagdoll_SetupSkinTint_Params params;
	params.Material = Material;
	params.bStoreSkinTint = bStoreSkinTint;
	params.bApplySkinTint = bApplySkinTint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.SetDismembermentSet
// ()
// Parameters:
// class UDismembermentSet*       DismembermentSetIn             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::SetDismembermentSet(class UDismembermentSet* DismembermentSetIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.SetDismembermentSet");

	ARagdoll_SetDismembermentSet_Params params;
	params.DismembermentSetIn = DismembermentSetIn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.RefreshDismembermentData
// ()
void ARagdoll::RefreshDismembermentData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.RefreshDismembermentData");

	ARagdoll_RefreshDismembermentData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.QueueTearLimb
// ()
// Parameters:
// struct FName                   LimbName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::QueueTearLimb(const struct FName& LimbName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.QueueTearLimb");

	ARagdoll_QueueTearLimb_Params params;
	params.LimbName = LimbName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.PopQueuedLimb
// ()
void ARagdoll::PopQueuedLimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.PopQueuedLimb");

	ARagdoll_PopQueuedLimb_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.OnComponentHit
// ()
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ARagdoll::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.OnComponentHit");

	ARagdoll_OnComponentHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.GetMesh
// ()
// Parameters:
// class URagdollMeshComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class URagdollMeshComponent* ARagdoll::GetMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.GetMesh");

	ARagdoll_GetMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Ragdoll.GetDamageModifierForLimb
// ()
// Parameters:
// struct FName                   LimbName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ARagdoll::GetDamageModifierForLimb(const struct FName& LimbName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.GetDamageModifierForLimb");

	ARagdoll_GetDamageModifierForLimb_Params params;
	params.LimbName = LimbName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Ragdoll.EnablePhysicsForComponent
// ()
// Parameters:
// class UMeshComponent*          Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShouldEnable                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::EnablePhysicsForComponent(class UMeshComponent* Component, bool bShouldEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.EnablePhysicsForComponent");

	ARagdoll_EnablePhysicsForComponent_Params params;
	params.Component = Component;
	params.bShouldEnable = bShouldEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.DamageLimb
// ()
// Parameters:
// struct FName                   LimbName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageAmount                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::DamageLimb(const struct FName& LimbName, float DamageAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.DamageLimb");

	ARagdoll_DamageLimb_Params params;
	params.LimbName = LimbName;
	params.DamageAmount = DamageAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.CreateRagdollBloodSplatter
// ()
// Parameters:
// struct FVector                 HitPosition                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDismemberment                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHeadshot                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bVaporized                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::CreateRagdollBloodSplatter(const struct FVector& HitPosition, const struct FVector& HitDirection, bool bDismemberment, bool bHeadshot, bool bVaporized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.CreateRagdollBloodSplatter");

	ARagdoll_CreateRagdollBloodSplatter_Params params;
	params.HitPosition = HitPosition;
	params.HitDirection = HitDirection;
	params.bDismemberment = bDismemberment;
	params.bHeadshot = bHeadshot;
	params.bVaporized = bVaporized;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.CreateMaterialsForMesh
// ()
// Parameters:
// class UMeshComponent*          MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStoreSkinTint                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplySkinTint                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   LimbName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::CreateMaterialsForMesh(class UMeshComponent* MeshComponent, bool bStoreSkinTint, bool bApplySkinTint, const struct FName& LimbName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.CreateMaterialsForMesh");

	ARagdoll_CreateMaterialsForMesh_Params params;
	params.MeshComponent = MeshComponent;
	params.bStoreSkinTint = bStoreSkinTint;
	params.bApplySkinTint = bApplySkinTint;
	params.LimbName = LimbName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.CreateBloodPool
// ()
void ARagdoll::CreateBloodPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.CreateBloodPool");

	ARagdoll_CreateBloodPool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.ConstrainLimb
// ()
// Parameters:
// struct FName                   LimbName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 BoneLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                   BoneRotation                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UMeshComponent*          LimbComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::ConstrainLimb(const struct FName& LimbName, const struct FVector& BoneLocation, const struct FQuat& BoneRotation, class UMeshComponent* LimbComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.ConstrainLimb");

	ARagdoll_ConstrainLimb_Params params;
	params.LimbName = LimbName;
	params.BoneLocation = BoneLocation;
	params.BoneRotation = BoneRotation;
	params.LimbComponent = LimbComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.ConfigureRagdollMesh
// ()
// Parameters:
// class USkeletalMeshComponent*  SkeletalMeshComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicsAsset*           PhysicsAsset                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ARagdoll::ConfigureRagdollMesh(class USkeletalMeshComponent* SkeletalMeshComponent, class UPhysicsAsset* PhysicsAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.ConfigureRagdollMesh");

	ARagdoll_ConfigureRagdollMesh_Params params;
	params.SkeletalMeshComponent = SkeletalMeshComponent;
	params.PhysicsAsset = PhysicsAsset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.ConfigurePhysicsAnimation
// ()
void ARagdoll::ConfigurePhysicsAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.ConfigurePhysicsAnimation");

	ARagdoll_ConfigurePhysicsAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.ConfigureMaterialEffects
// ()
void ARagdoll::ConfigureMaterialEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.ConfigureMaterialEffects");

	ARagdoll_ConfigureMaterialEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Ragdoll.CheckForSuddenVelocityChanges
// ()
void ARagdoll::CheckForSuddenVelocityChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Ragdoll.CheckForSuddenVelocityChanges");

	ARagdoll_CheckForSuddenVelocityChanges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARagdoll::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RagdollMesh, URagdollMeshComponent);
	READ_PTR_FULL(PhysicalAnimationComponent, UPhysicalAnimationComponent);
	READ_PTR_FULL(BloodSplatterData, UBloodSplatterData);
	READ_PTR_FULL(VoiceAudioComponent, UINSAudioComponent);
	READ_PTR_FULL(VehicleSeatComponent, UVehicleSeatComponent);
	READ_PTR_FULL(DefaultRoot, USceneComponent);
	READ_PTR_FULL(BurnParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(BloodPoolDecalComponent, UDecalComponent);
}

void ARagdoll::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RagdollMesh);
	DELE_PTR_FULL(PhysicalAnimationComponent);
	DELE_PTR_FULL(BloodSplatterData);
	DELE_PTR_FULL(VoiceAudioComponent);
	DELE_PTR_FULL(VehicleSeatComponent);
	DELE_PTR_FULL(DefaultRoot);
	DELE_PTR_FULL(BurnParticleSystemComponent);
	DELE_PTR_FULL(BloodPoolDecalComponent);
}

void URadialMenu::AfterRead()
{
	UObject::AfterRead();

}

void URadialMenu::BeforeDelete()
{
	UObject::BeforeDelete();

}

void APropVehicle::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(VehicleMesh, UStaticMeshComponent);
	READ_PTR_FULL(DestroyedMesh, UStaticMesh);
	READ_PTR_FULL(CleanMesh, UStaticMesh);
	READ_PTR_FULL(EnginePart, UVehicleEnginePart);
	READ_PTR_FULL(EngineParticleEffect, UParticleSystemComponent);
	READ_PTR_FULL(VehicleBlowUpParticleEffect, UParticleSystemComponent);
	READ_PTR_FULL(AkComponentEngineSounds, UINSAudioComponent);
	READ_PTR_FULL(AkEventModularFireStop, UAkAudioEvent);
	READ_PTR_FULL(AkEventModularFire, UAkAudioEvent);
	READ_PTR_FULL(VehicleFireBox, UBoxComponent);
}

void APropVehicle::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(VehicleMesh);
	DELE_PTR_FULL(DestroyedMesh);
	DELE_PTR_FULL(CleanMesh);
	DELE_PTR_FULL(EnginePart);
	DELE_PTR_FULL(EngineParticleEffect);
	DELE_PTR_FULL(VehicleBlowUpParticleEffect);
	DELE_PTR_FULL(AkComponentEngineSounds);
	DELE_PTR_FULL(AkEventModularFireStop);
	DELE_PTR_FULL(AkEventModularFire);
	DELE_PTR_FULL(VehicleFireBox);
}

void APropGib::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(BreakParticle, UParticleSystem);
}

void APropGib::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(BreakParticle);
}

// Function Insurgency.PropFan.UpdateFanSpeed
// ()
// Parameters:
// float                          NewFanSpeed                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void APropFan::UpdateFanSpeed(float NewFanSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PropFan.UpdateFanSpeed");

	APropFan_UpdateFanSpeed_Params params;
	params.NewFanSpeed = NewFanSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APropFan::AfterRead()
{
	APropBreakable::AfterRead();

	READ_PTR_FULL(BladeMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(BladeMesh, UStaticMesh);
	READ_PTR_FULL(RotatingMovementComponent, URotatingMovementComponent);
	READ_PTR_FULL(AudioComponent, UINSAudioComponent);
	READ_PTR_FULL(StartAudioEvent, UAkAudioEvent);
	READ_PTR_FULL(StopAudioEvent, UAkAudioEvent);
}

void APropFan::BeforeDelete()
{
	APropBreakable::BeforeDelete();

	DELE_PTR_FULL(BladeMeshComponent);
	DELE_PTR_FULL(BladeMesh);
	DELE_PTR_FULL(RotatingMovementComponent);
	DELE_PTR_FULL(AudioComponent);
	DELE_PTR_FULL(StartAudioEvent);
	DELE_PTR_FULL(StopAudioEvent);
}

// Function Insurgency.ProjectileBase.SetupThrow
// ()
// Parameters:
// struct FTransform              Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          ThrowSpeed                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileBase::SetupThrow(const struct FTransform& Transform, float ThrowSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.SetupThrow");

	AProjectileBase_SetupThrow_Params params;
	params.Transform = Transform;
	params.ThrowSpeed = ThrowSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.SetEstimatedFlightTimeAndLocation
// ()
// Parameters:
// float                          FlightTime                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileBase::SetEstimatedFlightTimeAndLocation(float FlightTime, const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.SetEstimatedFlightTimeAndLocation");

	AProjectileBase_SetEstimatedFlightTimeAndLocation_Params params;
	params.FlightTime = FlightTime;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.PlayIncomingAudio
// ()
void AProjectileBase::PlayIncomingAudio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.PlayIncomingAudio");

	AProjectileBase_PlayIncomingAudio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.OnSoundscapeUpdate
// ()
// Parameters:
// struct FSoundscapeStateRepl    State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AProjectileBase::OnSoundscapeUpdate(const struct FSoundscapeStateRepl& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.OnSoundscapeUpdate");

	AProjectileBase_OnSoundscapeUpdate_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.OnRep_InitialVelocity
// ()
void AProjectileBase::OnRep_InitialVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.OnRep_InitialVelocity");

	AProjectileBase_OnRep_InitialVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.OnProjectileStopped
// ()
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileBase::OnProjectileStopped(const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.OnProjectileStopped");

	AProjectileBase_OnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.Multicast_SetupThrow
// ()
// Parameters:
// struct FTransform              Transform                      (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          ThrowSpeed                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileBase::Multicast_SetupThrow(const struct FTransform& Transform, float ThrowSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.Multicast_SetupThrow");

	AProjectileBase_Multicast_SetupThrow_Params params;
	params.Transform = Transform;
	params.ThrowSpeed = ThrowSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.DetachFromUser
// ()
void AProjectileBase::DetachFromUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.DetachFromUser");

	AProjectileBase_DetachFromUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.BroadcastIncomingAudio
// ()
void AProjectileBase::BroadcastIncomingAudio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.BroadcastIncomingAudio");

	AProjectileBase_BroadcastIncomingAudio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileBase.AttachToUser
// ()
// Parameters:
// class AINSSoldier*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileBase::AttachToUser(class AINSSoldier* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileBase.AttachToUser");

	AProjectileBase_AttachToUser_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CollisionComp, UShapeComponent);
	READ_PTR_FULL(ProjectileMovement, UINSProjectileMovementComponent);
	READ_PTR_FULL(DamageTypeClass, UClass);
	READ_PTR_FULL(InstigatorActorClass, UClass);
	READ_PTR_FULL(OriginatingWeaponClass, UClass);
	READ_PTR_FULL(LaunchSound, UAkAudioEvent);
	READ_PTR_FULL(AkComponentProjectileSounds, UINSAudioComponent);
	READ_PTR_FULL(IncomingSound, UAkAudioEvent);
	READ_PTR_FULL(TrailParticle, UParticleSystem);
	READ_PTR_FULL(SpawnedTrailParticle, UParticleSystemComponent);
	READ_PTR_FULL(SpectatorParticle, UParticleSystem);
	READ_PTR_FULL(SpawnedSpectatorParticle, UParticleSystemComponent);
	READ_PTR_FULL(SoundscapeComponent, USoundscapeComponent);
}

void AProjectileBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CollisionComp);
	DELE_PTR_FULL(ProjectileMovement);
	DELE_PTR_FULL(DamageTypeClass);
	DELE_PTR_FULL(InstigatorActorClass);
	DELE_PTR_FULL(OriginatingWeaponClass);
	DELE_PTR_FULL(LaunchSound);
	DELE_PTR_FULL(AkComponentProjectileSounds);
	DELE_PTR_FULL(IncomingSound);
	DELE_PTR_FULL(TrailParticle);
	DELE_PTR_FULL(SpawnedTrailParticle);
	DELE_PTR_FULL(SpectatorParticle);
	DELE_PTR_FULL(SpawnedSpectatorParticle);
	DELE_PTR_FULL(SoundscapeComponent);
}

// Function Insurgency.ProjectileGrenade.StopActiveGrenadeSurfaceReactions
// ()
void AProjectileGrenade::StopActiveGrenadeSurfaceReactions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.StopActiveGrenadeSurfaceReactions");

	AProjectileGrenade_StopActiveGrenadeSurfaceReactions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.SetCookTimer
// ()
// Parameters:
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::SetCookTimer(float Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.SetCookTimer");

	AProjectileGrenade_SetCookTimer_Params params;
	params.Timer = Timer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.PlayGrenadeSurfaceReactionWithHit
// ()
// Parameters:
// class USurfaceReaction*        InSurfaceReaction              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileGrenade::PlayGrenadeSurfaceReactionWithHit(class USurfaceReaction* InSurfaceReaction, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.PlayGrenadeSurfaceReactionWithHit");

	AProjectileGrenade_PlayGrenadeSurfaceReactionWithHit_Params params;
	params.InSurfaceReaction = InSurfaceReaction;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.PlayGrenadeSurfaceReactionAtLocation
// ()
// Parameters:
// class USurfaceReaction*        InSurfaceReaction              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::PlayGrenadeSurfaceReactionAtLocation(class USurfaceReaction* InSurfaceReaction, const struct FVector& HitLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.PlayGrenadeSurfaceReactionAtLocation");

	AProjectileGrenade_PlayGrenadeSurfaceReactionAtLocation_Params params;
	params.InSurfaceReaction = InSurfaceReaction;
	params.HitLocation = HitLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.PlayGrenadeSurfaceReaction
// ()
// Parameters:
// class USurfaceReaction*        InSurfaceReaction              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::PlayGrenadeSurfaceReaction(class USurfaceReaction* InSurfaceReaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.PlayGrenadeSurfaceReaction");

	AProjectileGrenade_PlayGrenadeSurfaceReaction_Params params;
	params.InSurfaceReaction = InSurfaceReaction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.PendingDetonationOrHasDetonated
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AProjectileGrenade::PendingDetonationOrHasDetonated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.PendingDetonationOrHasDetonated");

	AProjectileGrenade_PendingDetonationOrHasDetonated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileGrenade.OnPlantParentEndPlay
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EEndPlayReason>    EndPlayReason                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::OnPlantParentEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.OnPlantParentEndPlay");

	AProjectileGrenade_OnPlantParentEndPlay_Params params;
	params.Actor = Actor;
	params.EndPlayReason = EndPlayReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.OnGrenadeBounced
// ()
// Parameters:
// struct FHitResult              ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                 ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::OnGrenadeBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.OnGrenadeBounced");

	AProjectileGrenade_OnGrenadeBounced_Params params;
	params.ImpactResult = ImpactResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.MulticastGrenadeBounce
// ()
// Parameters:
// struct FHitResult              ImpactResult                   (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::MulticastGrenadeBounce(const struct FHitResult& ImpactResult, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.MulticastGrenadeBounce");

	AProjectileGrenade_MulticastGrenadeBounce_Params params;
	params.ImpactResult = ImpactResult;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.MulticastExplodeAt
// ()
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileGrenade::MulticastExplodeAt(const struct FVector& HitLocation, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.MulticastExplodeAt");

	AProjectileGrenade_MulticastExplodeAt_Params params;
	params.HitLocation = HitLocation;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.MakeDud
// ()
void AProjectileGrenade::MakeDud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.MakeDud");

	AProjectileGrenade_MakeDud_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.IsDetonationTimerActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AProjectileGrenade::IsDetonationTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.IsDetonationTimerActive");

	AProjectileGrenade_IsDetonationTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileGrenade.HasTimedFuze
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AProjectileGrenade::HasTimedFuze()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.HasTimedFuze");

	AProjectileGrenade_HasTimedFuze_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileGrenade.GetExplosionElapsedTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AProjectileGrenade::GetExplosionElapsedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.GetExplosionElapsedTime");

	AProjectileGrenade_GetExplosionElapsedTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileGrenade.GetCookRemainingTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AProjectileGrenade::GetCookRemainingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.GetCookRemainingTime");

	AProjectileGrenade_GetCookRemainingTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileGrenade.ExplodeAt
// ()
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileGrenade::ExplodeAt(const struct FVector& HitLocation, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.ExplodeAt");

	AProjectileGrenade_ExplodeAt_Params params;
	params.HitLocation = HitLocation;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.Explode
// ()
void AProjectileGrenade::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.Explode");

	AProjectileGrenade_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.Detonate
// ()
void AProjectileGrenade::Detonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.Detonate");

	AProjectileGrenade_Detonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.ClearCookTimer
// ()
void AProjectileGrenade::ClearCookTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.ClearCookTimer");

	AProjectileGrenade_ClearCookTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.BlueprintOnExplode
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::BlueprintOnExplode(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.BlueprintOnExplode");

	AProjectileGrenade_BlueprintOnExplode_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.ApplyExplosionDamage
// ()
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::ApplyExplosionDamage(const struct FVector& HitLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.ApplyExplosionDamage");

	AProjectileGrenade_ApplyExplosionDamage_Params params;
	params.HitLocation = HitLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileGrenade.ApplyExplosionCustomDamage
// ()
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InDamage                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InRadius                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplyForce                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDoShellShock                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileGrenade::ApplyExplosionCustomDamage(const struct FVector& HitLocation, float InDamage, float InRadius, bool bApplyForce, bool bDoShellShock)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileGrenade.ApplyExplosionCustomDamage");

	AProjectileGrenade_ApplyExplosionCustomDamage_Params params;
	params.HitLocation = HitLocation;
	params.InDamage = InDamage;
	params.InRadius = InRadius;
	params.bApplyForce = bApplyForce;
	params.bDoShellShock = bDoShellShock;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileGrenade::AfterRead()
{
	AProjectileBase::AfterRead();

	READ_PTR_FULL(ThrowbackUIIcon, UTexture2D);
	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(ExplosionDamageTypeClass, UClass);
	READ_PTR_FULL(ExplosionPenetrationSettings, UExplosionPenetrationSettings);
	READ_PTR_FULL(ExplosionSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(BounceSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(CameraShakeClass, UClass);
	READ_PTR_FULL(VisibilityBlockerComponent, USphereComponent);
	READ_PTR_FULL(PlantAttachmentComponent, UPrimitiveComponent);
	READ_PTR_FULL(PlantAttachmentActor, AActor);
	READ_PTR_FULL(PlantSound, UAkAudioEvent);
	READ_PTR_FULL(ShrapnelProjectile, UClass);
	READ_PTR_FULL(ThrowbackWeaponClass, UClass);
}

void AProjectileGrenade::BeforeDelete()
{
	AProjectileBase::BeforeDelete();

	DELE_PTR_FULL(ThrowbackUIIcon);
	DELE_PTR_FULL(StaticMeshComponent);
	DELE_PTR_FULL(ExplosionDamageTypeClass);
	DELE_PTR_FULL(ExplosionPenetrationSettings);
	DELE_PTR_FULL(ExplosionSurfaceReaction);
	DELE_PTR_FULL(BounceSurfaceReaction);
	DELE_PTR_FULL(CameraShakeClass);
	DELE_PTR_FULL(VisibilityBlockerComponent);
	DELE_PTR_FULL(PlantAttachmentComponent);
	DELE_PTR_FULL(PlantAttachmentActor);
	DELE_PTR_FULL(PlantSound);
	DELE_PTR_FULL(ShrapnelProjectile);
	DELE_PTR_FULL(ThrowbackWeaponClass);
}

// Function Insurgency.ProjectileSmokeGrenade.OnEndBlockerOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileSmokeGrenade::OnEndBlockerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileSmokeGrenade.OnEndBlockerOverlap");

	AProjectileSmokeGrenade_OnEndBlockerOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileSmokeGrenade.OnBeginBlockerOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileSmokeGrenade::OnBeginBlockerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileSmokeGrenade.OnBeginBlockerOverlap");

	AProjectileSmokeGrenade_OnBeginBlockerOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileSmokeGrenade::AfterRead()
{
	AProjectileGrenade::AfterRead();

	READ_PTR_FULL(OverlayBlendable, UMaterialInterface);
	READ_PTR_FULL(SimpleParticleSystem, UParticleSystem);
	READ_PTR_FULL(SimpleParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(SimpleAudioEvent, UAkAudioEvent);
}

void AProjectileSmokeGrenade::BeforeDelete()
{
	AProjectileGrenade::BeforeDelete();

	DELE_PTR_FULL(OverlayBlendable);
	DELE_PTR_FULL(SimpleParticleSystem);
	DELE_PTR_FULL(SimpleParticleSystemComponent);
	DELE_PTR_FULL(SimpleAudioEvent);
}

// Function Insurgency.ProjectileThermiteGrenade.IsLocationThreatenedByFire
// ()
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AProjectileThermiteGrenade::IsLocationThreatenedByFire(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileThermiteGrenade.IsLocationThreatenedByFire");

	AProjectileThermiteGrenade_IsLocationThreatenedByFire_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileThermiteGrenade.Extinguish
// ()
void AProjectileThermiteGrenade::Extinguish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileThermiteGrenade.Extinguish");

	AProjectileThermiteGrenade_Extinguish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileThermiteGrenade.DoExtinguish
// ()
void AProjectileThermiteGrenade::DoExtinguish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileThermiteGrenade.DoExtinguish");

	AProjectileThermiteGrenade_DoExtinguish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileThermiteGrenade.BroadcastExtinguish
// ()
void AProjectileThermiteGrenade::BroadcastExtinguish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileThermiteGrenade.BroadcastExtinguish");

	AProjectileThermiteGrenade_BroadcastExtinguish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileThermiteGrenade.BroadcastAreaDamageEnd
// ()
void AProjectileThermiteGrenade::BroadcastAreaDamageEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileThermiteGrenade.BroadcastAreaDamageEnd");

	AProjectileThermiteGrenade_BroadcastAreaDamageEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileThermiteGrenade::AfterRead()
{
	AProjectileSmokeGrenade::AfterRead();

	READ_PTR_FULL(BurnEndAudioEvent, UAkAudioEvent);
	READ_PTR_FULL(ExtinguishSurfaceReaction, USurfaceReaction);
}

void AProjectileThermiteGrenade::BeforeDelete()
{
	AProjectileSmokeGrenade::BeforeDelete();

	DELE_PTR_FULL(BurnEndAudioEvent);
	DELE_PTR_FULL(ExtinguishSurfaceReaction);
}

// Function Insurgency.ProjectileRocket.SuppressTarget
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileRocket::SuppressTarget(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileRocket.SuppressTarget");

	AProjectileRocket_SuppressTarget_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileRocket.OnSuppressionBoxOverlapped
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileRocket::OnSuppressionBoxOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileRocket.OnSuppressionBoxOverlapped");

	AProjectileRocket_OnSuppressionBoxOverlapped_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileRocket.OnSuppressionBoxEndOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileRocket::OnSuppressionBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileRocket.OnSuppressionBoxEndOverlap");

	AProjectileRocket_OnSuppressionBoxEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileRocket::AfterRead()
{
	AProjectileGrenade::AfterRead();

	READ_PTR_FULL(SuppressionBoxComponent, UBoxComponent);
	READ_PTR_FULL(FlyByAudioEvent, UAkAudioEvent);
}

void AProjectileRocket::BeforeDelete()
{
	AProjectileGrenade::BeforeDelete();

	DELE_PTR_FULL(SuppressionBoxComponent);
	DELE_PTR_FULL(FlyByAudioEvent);
}

// Function Insurgency.ProjectileMine.OnMineBeginOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AProjectileMine::OnMineBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileMine.OnMineBeginOverlap");

	AProjectileMine_OnMineBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProjectileMine.CanActorTriggerMine
// ()
// Parameters:
// class AActor*                  TriggerActor                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AProjectileMine::CanActorTriggerMine(class AActor* TriggerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileMine.CanActorTriggerMine");

	AProjectileMine_CanActorTriggerMine_Params params;
	params.TriggerActor = TriggerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AProjectileMine::AfterRead()
{
	AProjectileGrenade::AfterRead();

	READ_PTR_FULL(MineCollisionComponent, USphereComponent);
}

void AProjectileMine::BeforeDelete()
{
	AProjectileGrenade::BeforeDelete();

	DELE_PTR_FULL(MineCollisionComponent);
}

// Function Insurgency.ProjectileFlashbang.GetPercentageFlashed
// ()
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 VictimLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AProjectileFlashbang::GetPercentageFlashed(const struct FVector& HitLocation, const struct FVector& VictimLocation, class AINSSoldier* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileFlashbang.GetPercentageFlashed");

	AProjectileFlashbang_GetPercentageFlashed_Params params;
	params.HitLocation = HitLocation;
	params.VictimLocation = VictimLocation;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProjectileFlashbang.DoFlashEffect
// ()
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProjectileFlashbang::DoFlashEffect(const struct FVector& HitLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProjectileFlashbang.DoFlashEffect");

	AProjectileFlashbang_DoFlashEffect_Params params;
	params.HitLocation = HitLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileFlashbang::AfterRead()
{
	AProjectileGrenade::AfterRead();

}

void AProjectileFlashbang::BeforeDelete()
{
	AProjectileGrenade::BeforeDelete();

}

// Function Insurgency.ProfaneWordCollection.DoesContainProfaneWord
// ()
// Parameters:
// struct FString                 inString                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 OutString                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UProfaneWordCollection::DoesContainProfaneWord(const struct FString& inString, struct FString* OutString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfaneWordCollection.DoesContainProfaneWord");

	UProfaneWordCollection_DoesContainProfaneWord_Params params;
	params.inString = inString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutString != nullptr)
		*OutString = params.OutString;


	return params.ReturnValue;
}


void UProfaneWordCollection::AfterRead()
{
	UDataAsset::AfterRead();

}

void UProfaneWordCollection::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPostMergeManager::AfterRead()
{
	UObject::AfterRead();

}

void UPostMergeManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.PointShootingUpgradeInterface.ShouldEnterPointShootMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPointShootingUpgradeInterface::ShouldEnterPointShootMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PointShootingUpgradeInterface.ShouldEnterPointShootMode");

	UPointShootingUpgradeInterface_ShouldEnterPointShootMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPointShootingUpgradeInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPointShootingUpgradeInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.PointOfInterestActorComponent.ShouldShowOnTacticalMap
// ()
// Parameters:
// class AINSSoldier*             ForPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPointOfInterestActorComponent::ShouldShowOnTacticalMap(class AINSSoldier* ForPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PointOfInterestActorComponent.ShouldShowOnTacticalMap");

	UPointOfInterestActorComponent_ShouldShowOnTacticalMap_Params params;
	params.ForPlayer = ForPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PointOfInterestActorComponent.ShouldShowInProximity
// ()
// Parameters:
// class AINSSoldier*             ForPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPointOfInterestActorComponent::ShouldShowInProximity(class AINSSoldier* ForPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PointOfInterestActorComponent.ShouldShowInProximity");

	UPointOfInterestActorComponent_ShouldShowInProximity_Params params;
	params.ForPlayer = ForPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PointOfInterestActorComponent.SetShouldShowOnTacticalMapEvent
// ()
// Parameters:
// struct FScriptDelegate         Event                          (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
void UPointOfInterestActorComponent::SetShouldShowOnTacticalMapEvent(const struct FScriptDelegate& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PointOfInterestActorComponent.SetShouldShowOnTacticalMapEvent");

	UPointOfInterestActorComponent_SetShouldShowOnTacticalMapEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PointOfInterestActorComponent.SetShouldShowInProximityEvent
// ()
// Parameters:
// struct FScriptDelegate         Event                          (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
void UPointOfInterestActorComponent::SetShouldShowInProximityEvent(const struct FScriptDelegate& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PointOfInterestActorComponent.SetShouldShowInProximityEvent");

	UPointOfInterestActorComponent_SetShouldShowInProximityEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPointOfInterestActorComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(Icon, UTexture2D);
	READ_PTR_FULL(TacticalMapIcon, UTexture2D);
}

void UPointOfInterestActorComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(Icon);
	DELE_PTR_FULL(TacticalMapIcon);
}

// Function Insurgency.PlaylistBrowserWidget.OnUpdateNetworkStatus
// ()
// Parameters:
// bool                           bIsConnectedToWorldServices    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlaylistBrowserWidget::OnUpdateNetworkStatus(bool bIsConnectedToWorldServices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlaylistBrowserWidget.OnUpdateNetworkStatus");

	UPlaylistBrowserWidget_OnUpdateNetworkStatus_Params params;
	params.bIsConnectedToWorldServices = bIsConnectedToWorldServices;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlaylistBrowserWidget.GetPlaylistsOfType
// ()
// Parameters:
// EPlaylistType                  Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPlaylist*>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UPlaylist*> UPlaylistBrowserWidget::GetPlaylistsOfType(EPlaylistType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlaylistBrowserWidget.GetPlaylistsOfType");

	UPlaylistBrowserWidget_GetPlaylistsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlaylistBrowserWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UPlaylistBrowserWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

void UPlaylist::AfterRead()
{
	UPrimaryDataAsset::AfterRead();

	READ_PTR_FULL(HeaderTexture, UTexture2D);
}

void UPlaylist::BeforeDelete()
{
	UPrimaryDataAsset::BeforeDelete();

	DELE_PTR_FULL(HeaderTexture);
}

void UPlaylistFeature::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ThumbnailImage, UTexture2D);
}

void UPlaylistFeature::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ThumbnailImage);
}

// Function Insurgency.PlayerVotingStatics.GetVoteSuccessTextForVoteInfo
// ()
// Parameters:
// struct FReplicatedVoteInfo     VoteInfo                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   OutSuccessText                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UPlayerVotingStatics::GetVoteSuccessTextForVoteInfo(const struct FReplicatedVoteInfo& VoteInfo, struct FText* OutSuccessText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingStatics.GetVoteSuccessTextForVoteInfo");

	UPlayerVotingStatics_GetVoteSuccessTextForVoteInfo_Params params;
	params.VoteInfo = VoteInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSuccessText != nullptr)
		*OutSuccessText = params.OutSuccessText;

}


// Function Insurgency.PlayerVotingStatics.GetVotePromptTextForVoteInfo
// ()
// Parameters:
// struct FReplicatedVoteInfo     VoteInfo                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   OutVotePrompt                  (Parm, OutParm, NativeAccessSpecifierPublic)
void UPlayerVotingStatics::GetVotePromptTextForVoteInfo(const struct FReplicatedVoteInfo& VoteInfo, struct FText* OutVotePrompt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingStatics.GetVotePromptTextForVoteInfo");

	UPlayerVotingStatics_GetVotePromptTextForVoteInfo_Params params;
	params.VoteInfo = VoteInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutVotePrompt != nullptr)
		*OutVotePrompt = params.OutVotePrompt;

}


// Function Insurgency.PlayerVotingStatics.GetVoteIssueDefaults
// ()
// Parameters:
// class UClass*                  VoteIssueClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVoteIssue*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVoteIssue* UPlayerVotingStatics::GetVoteIssueDefaults(class UClass* VoteIssueClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingStatics.GetVoteIssueDefaults");

	UPlayerVotingStatics_GetVoteIssueDefaults_Params params;
	params.VoteIssueClass = VoteIssueClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingStatics.FormatVotingParameters
// ()
// Parameters:
// struct FText                   FormattingText                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FReplicatedVoteInfo     VoteInfo                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   OutVotePrompt                  (Parm, OutParm, NativeAccessSpecifierPublic)
void UPlayerVotingStatics::FormatVotingParameters(const struct FText& FormattingText, const struct FReplicatedVoteInfo& VoteInfo, struct FText* OutVotePrompt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingStatics.FormatVotingParameters");

	UPlayerVotingStatics_FormatVotingParameters_Params params;
	params.FormattingText = FormattingText;
	params.VoteInfo = VoteInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutVotePrompt != nullptr)
		*OutVotePrompt = params.OutVotePrompt;

}


// Function Insurgency.PlayerVotingStatics.DoesIssueNeedPlayerList
// ()
// Parameters:
// class UClass*                  VoteIssueClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingStatics::DoesIssueNeedPlayerList(class UClass* VoteIssueClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingStatics.DoesIssueNeedPlayerList");

	UPlayerVotingStatics_DoesIssueNeedPlayerList_Params params;
	params.VoteIssueClass = VoteIssueClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerVotingStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPlayerVotingStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// DelegateFunction Insurgency.PlayerVotingComponent.VoteDataChangedDelegate__DelegateSignature
// ()
void UPlayerVotingComponent::VoteDataChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.PlayerVotingComponent.VoteDataChangedDelegate__DelegateSignature");

	UPlayerVotingComponent_VoteDataChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerVotingComponent.ResetVoteWithDelay
// ()
// Parameters:
// float                          Time                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerVotingComponent::ResetVoteWithDelay(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.ResetVoteWithDelay");

	UPlayerVotingComponent_ResetVoteWithDelay_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerVotingComponent.ResetVote
// ()
void UPlayerVotingComponent::ResetVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.ResetVote");

	UPlayerVotingComponent_ResetVote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerVotingComponent.OnVoteTimeout
// ()
void UPlayerVotingComponent::OnVoteTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.OnVoteTimeout");

	UPlayerVotingComponent_OnVoteTimeout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerVotingComponent.OnVoteConcluded
// ()
void UPlayerVotingComponent::OnVoteConcluded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.OnVoteConcluded");

	UPlayerVotingComponent_OnVoteConcluded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerVotingComponent.OnRep_ReplicatedVoteInfo
// ()
void UPlayerVotingComponent::OnRep_ReplicatedVoteInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.OnRep_ReplicatedVoteInfo");

	UPlayerVotingComponent_OnRep_ReplicatedVoteInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerVotingComponent.IsVoteInProgress
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::IsVoteInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.IsVoteInProgress");

	UPlayerVotingComponent_IsVoteInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.IsEligibleVoter
// ()
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::IsEligibleVoter(class APlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.IsEligibleVoter");

	UPlayerVotingComponent_IsEligibleVoter_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.HasVotePassed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::HasVotePassed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.HasVotePassed");

	UPlayerVotingComponent_HasVotePassed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.HasVoteFailed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::HasVoteFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.HasVoteFailed");

	UPlayerVotingComponent_HasVoteFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.HasVoteConcluded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::HasVoteConcluded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.HasVoteConcluded");

	UPlayerVotingComponent_HasVoteConcluded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.HasRecentlyVoted
// ()
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::HasRecentlyVoted(class APlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.HasRecentlyVoted");

	UPlayerVotingComponent_HasRecentlyVoted_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.GetVoteIssueForClass
// ()
// Parameters:
// class UClass*                  Issue                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVoteIssue*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVoteIssue* UPlayerVotingComponent::GetVoteIssueForClass(class UClass* Issue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.GetVoteIssueForClass");

	UPlayerVotingComponent_GetVoteIssueForClass_Params params;
	params.Issue = Issue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.GetLastVoteTime
// ()
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UPlayerVotingComponent::GetLastVoteTime(class APlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.GetLastVoteTime");

	UPlayerVotingComponent_GetLastVoteTime_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.GetEligibleVoters
// ()
// Parameters:
// TArray<class APlayerState*>    OutPlayers                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerVotingComponent::GetEligibleVoters(TArray<class APlayerState*>* OutPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.GetEligibleVoters");

	UPlayerVotingComponent_GetEligibleVoters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPlayers != nullptr)
		*OutPlayers = params.OutPlayers;

}


// Function Insurgency.PlayerVotingComponent.CountEligibleVoters
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerVotingComponent::CountEligibleVoters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.CountEligibleVoters");

	UPlayerVotingComponent_CountEligibleVoters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.CanVoteStart
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::CanVoteStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.CanVoteStart");

	UPlayerVotingComponent_CanVoteStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerVotingComponent.CanStartVote
// ()
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerVotingComponent::CanStartVote(class APlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerVotingComponent.CanStartVote");

	UPlayerVotingComponent_CanStartVote_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerVotingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ActiveVoteIssue, UVoteIssue);
}

void UPlayerVotingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ActiveVoteIssue);
}

// Function Insurgency.PlayerReportsAsync.BeginReportSubmit
// ()
// Parameters:
// class UINSGameInstance*        INSGameInstance                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EReportCategoryEnum            Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl        ReporterId                     (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl        TargetId                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Comments                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerReportsAsync*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerReportsAsync* UPlayerReportsAsync::BeginReportSubmit(class UINSGameInstance* INSGameInstance, EReportCategoryEnum Category, const struct FUniqueNetIdRepl& ReporterId, const struct FUniqueNetIdRepl& TargetId, const struct FString& Comments)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerReportsAsync.BeginReportSubmit");

	UPlayerReportsAsync_BeginReportSubmit_Params params;
	params.INSGameInstance = INSGameInstance;
	params.Category = Category;
	params.ReporterId = ReporterId;
	params.TargetId = TargetId;
	params.Comments = Comments;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerReportsAsync::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

	READ_PTR_FULL(INSGameInstance, UINSGameInstance);
}

void UPlayerReportsAsync::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

	DELE_PTR_FULL(INSGameInstance);
}

// Function Insurgency.InventoryComponent.SortItems
// ()
void UInventoryComponent::SortItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.SortItems");

	UInventoryComponent_SortItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.RemoveItem
// ()
// Parameters:
// int                            ItemIdx                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::RemoveItem(int ItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.RemoveItem");

	UInventoryComponent_RemoveItem_Params params;
	params.ItemIdx = ItemIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.PurgeItems
// ()
void UInventoryComponent::PurgeItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.PurgeItems");

	UInventoryComponent_PurgeItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.OnRep_InventoryItems
// ()
void UInventoryComponent::OnRep_InventoryItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.OnRep_InventoryItems");

	UInventoryComponent_OnRep_InventoryItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.InventoryComponent.InventoryChangedDelegate__DelegateSignature
// ()
void UInventoryComponent::InventoryChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.InventoryComponent.InventoryChangedDelegate__DelegateSignature");

	UInventoryComponent_InventoryChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.HasItemInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UInventoryComponent::HasItemInSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.HasItemInSlot");

	UInventoryComponent_HasItemInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.InventoryComponent.GiveItemsReverse
// ()
// Parameters:
// class AINSSoldier*             Consumer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bConsumeItems                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::GiveItemsReverse(class AINSSoldier* Consumer, bool bConsumeItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.GiveItemsReverse");

	UInventoryComponent_GiveItemsReverse_Params params;
	params.Consumer = Consumer;
	params.bConsumeItems = bConsumeItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.GiveItems
// ()
// Parameters:
// class AINSSoldier*             Consumer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bConsumeItems                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::GiveItems(class AINSSoldier* Consumer, bool bConsumeItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.GiveItems");

	UInventoryComponent_GiveItems_Params params;
	params.Consumer = Consumer;
	params.bConsumeItems = bConsumeItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.GiveItemAt
// ()
// Parameters:
// int                            ItemIdx                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Consumer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDeferSpawn                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bConsumeItem                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemBase*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemBase* UInventoryComponent::GiveItemAt(int ItemIdx, class AINSSoldier* Consumer, bool bDeferSpawn, bool bConsumeItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.GiveItemAt");

	UInventoryComponent_GiveItemAt_Params params;
	params.ItemIdx = ItemIdx;
	params.Consumer = Consumer;
	params.bDeferSpawn = bDeferSpawn;
	params.bConsumeItem = bConsumeItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.InventoryComponent.GiveFallbackItems
// ()
// Parameters:
// class AINSSoldier*             Consumer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::GiveFallbackItems(class AINSSoldier* Consumer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.GiveFallbackItems");

	UInventoryComponent_GiveFallbackItems_Params params;
	params.Consumer = Consumer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.GetInventoryItemsFilteredByItemSlot
// ()
// Parameters:
// TArray<struct FInventorySlot>  OutItems                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::GetInventoryItemsFilteredByItemSlot(TArray<struct FInventorySlot>* OutItems, EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.GetInventoryItemsFilteredByItemSlot");

	UInventoryComponent_GetInventoryItemsFilteredByItemSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutItems != nullptr)
		*OutItems = params.OutItems;

}


// Function Insurgency.InventoryComponent.EmptyItems
// ()
// Parameters:
// bool                           bIgnoreLockedSlots             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::EmptyItems(bool bIgnoreLockedSlots)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.EmptyItems");

	UInventoryComponent_EmptyItems_Params params;
	params.bIgnoreLockedSlots = bIgnoreLockedSlots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.ContainsItem
// ()
// Parameters:
// bool                           bIncludeChildren               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UInventoryComponent::ContainsItem(bool bIncludeChildren)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.ContainsItem");

	UInventoryComponent_ContainsItem_Params params;
	params.bIncludeChildren = bIncludeChildren;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.InventoryComponent.CollectFallbackItemsFor
// ()
// Parameters:
// TArray<class UClass*>          OutFallbackItems               (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::CollectFallbackItemsFor(TArray<class UClass*>* OutFallbackItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.CollectFallbackItemsFor");

	UInventoryComponent_CollectFallbackItemsFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutFallbackItems != nullptr)
		*OutFallbackItems = params.OutFallbackItems;

}


// Function Insurgency.InventoryComponent.CollectFallbackItems
// ()
// Parameters:
// TArray<class UClass*>          OutFallbackItems               (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::CollectFallbackItems(TArray<class UClass*>* OutFallbackItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.CollectFallbackItems");

	UInventoryComponent_CollectFallbackItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutFallbackItems != nullptr)
		*OutFallbackItems = params.OutFallbackItems;

}


// Function Insurgency.InventoryComponent.CheckFallbackFor
// ()
// Parameters:
// class AINSSoldier*             Consumer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::CheckFallbackFor(class AINSSoldier* Consumer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.CheckFallbackFor");

	UInventoryComponent_CheckFallbackFor_Params params;
	params.Consumer = Consumer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.BlueprintOnGiveItem
// ()
// Parameters:
// struct FInventorySlot          Slot                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AItemBase*               SpawnedItem                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::BlueprintOnGiveItem(const struct FInventorySlot& Slot, class AItemBase* SpawnedItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.BlueprintOnGiveItem");

	UInventoryComponent_BlueprintOnGiveItem_Params params;
	params.Slot = Slot;
	params.SpawnedItem = SpawnedItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InventoryComponent.AddItem
// ()
// Parameters:
// struct FInventorySlot          Slot                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bSortNow                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInventoryComponent::AddItem(const struct FInventorySlot& Slot, bool bSortNow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InventoryComponent.AddItem");

	UInventoryComponent_AddItem_Params params;
	params.Slot = Slot;
	params.bSortNow = bSortNow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UInventoryComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UInventoryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Insurgency.PlayerInventoryComponent.UpdateOpticPreference
// ()
// Parameters:
// int                            Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::UpdateOpticPreference(int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.UpdateOpticPreference");

	UPlayerInventoryComponent_UpdateOpticPreference_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.UpdateFiremodePreference
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::UpdateFiremodePreference(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.UpdateFiremodePreference");

	UPlayerInventoryComponent_UpdateFiremodePreference_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.SetLoadout
// ()
// Parameters:
// TArray<struct FBasicLoadoutItem> Loadout                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::SetLoadout(TArray<struct FBasicLoadoutItem> Loadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.SetLoadout");

	UPlayerInventoryComponent_SetLoadout_Params params;
	params.Loadout = Loadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.SetItemSlotLocked
// ()
// Parameters:
// EItemSlot                      ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           Blocked                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::SetItemSlotLocked(EItemSlot ItemSlot, bool Blocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.SetItemSlotLocked");

	UPlayerInventoryComponent_SetItemSlotLocked_Params params;
	params.ItemSlot = ItemSlot;
	params.Blocked = Blocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerUpdateOpticPreference
// ()
// Parameters:
// class UClass*                  OpticClass                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerUpdateOpticPreference(class UClass* OpticClass, int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerUpdateOpticPreference");

	UPlayerInventoryComponent_ServerUpdateOpticPreference_Params params;
	params.OpticClass = OpticClass;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerUpdateFiremodePreference
// ()
// Parameters:
// class UClass*                  FirearmClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerUpdateFiremodePreference(class UClass* FirearmClass, EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerUpdateFiremodePreference");

	UPlayerInventoryComponent_ServerUpdateFiremodePreference_Params params;
	params.FirearmClass = FirearmClass;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerSetLoadout
// ()
// Parameters:
// TArray<struct FBasicLoadoutItem> Loadout                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerSetLoadout(TArray<struct FBasicLoadoutItem> Loadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerSetLoadout");

	UPlayerInventoryComponent_ServerSetLoadout_Params params;
	params.Loadout = Loadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerResetLoadout
// ()
void UPlayerInventoryComponent::ServerResetLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerResetLoadout");

	UPlayerInventoryComponent_ServerResetLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerRefundWeaponUpgrade
// ()
// Parameters:
// int                            WeaponIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerRefundWeaponUpgrade(int WeaponIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerRefundWeaponUpgrade");

	UPlayerInventoryComponent_ServerRefundWeaponUpgrade_Params params;
	params.WeaponIndex = WeaponIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerRefundItem
// ()
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerRefundItem(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerRefundItem");

	UPlayerInventoryComponent_ServerRefundItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerPurchaseWeaponUpgrade
// ()
// Parameters:
// int                            PurchaseIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerPurchaseWeaponUpgrade(int PurchaseIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerPurchaseWeaponUpgrade");

	UPlayerInventoryComponent_ServerPurchaseWeaponUpgrade_Params params;
	params.PurchaseIndex = PurchaseIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerPurchaseItem
// ()
// Parameters:
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ServerPurchaseItem(int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerPurchaseItem");

	UPlayerInventoryComponent_ServerPurchaseItem_Params params;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ServerEmptyLoadout
// ()
void UPlayerInventoryComponent::ServerEmptyLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ServerEmptyLoadout");

	UPlayerInventoryComponent_ServerEmptyLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ResetSupplyPoints
// ()
void UPlayerInventoryComponent::ResetSupplyPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ResetSupplyPoints");

	UPlayerInventoryComponent_ResetSupplyPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ResetLoadoutToPlayerClass
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ResetLoadoutToPlayerClass(class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ResetLoadoutToPlayerClass");

	UPlayerInventoryComponent_ResetLoadoutToPlayerClass_Params params;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ResetLoadoutLocks
// ()
void UPlayerInventoryComponent::ResetLoadoutLocks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ResetLoadoutLocks");

	UPlayerInventoryComponent_ResetLoadoutLocks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ResetLoadout
// ()
void UPlayerInventoryComponent::ResetLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ResetLoadout");

	UPlayerInventoryComponent_ResetLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.RefundWeaponUpgrade
// ()
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  UpgradeClass                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERefundResult                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ERefundResult UPlayerInventoryComponent::RefundWeaponUpgrade(int WeaponIndex, class UClass* UpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.RefundWeaponUpgrade");

	UPlayerInventoryComponent_RefundWeaponUpgrade_Params params;
	params.WeaponIndex = WeaponIndex;
	params.UpgradeClass = UpgradeClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.RefundItem
// ()
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckSlots                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceLocked                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERefundResult                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ERefundResult UPlayerInventoryComponent::RefundItem(int Index, bool bCheckSlots, bool bForceLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.RefundItem");

	UPlayerInventoryComponent_RefundItem_Params params;
	params.Index = Index;
	params.bCheckSlots = bCheckSlots;
	params.bForceLocked = bForceLocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.PurchaseWeaponUpgrade
// ()
// Parameters:
// int                            PurchaseIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  UpgradeClass                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPurchaseResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EPurchaseResult UPlayerInventoryComponent::PurchaseWeaponUpgrade(int PurchaseIndex, class UClass* UpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.PurchaseWeaponUpgrade");

	UPlayerInventoryComponent_PurchaseWeaponUpgrade_Params params;
	params.PurchaseIndex = PurchaseIndex;
	params.UpgradeClass = UpgradeClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.PurchaseLoadoutItem
// ()
// Parameters:
// struct FLoadoutWeapon          PurchaseWeapon                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::PurchaseLoadoutItem(const struct FLoadoutWeapon& PurchaseWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.PurchaseLoadoutItem");

	UPlayerInventoryComponent_PurchaseLoadoutItem_Params params;
	params.PurchaseWeapon = PurchaseWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.PurchaseItems
// ()
// Parameters:
// TArray<struct FLoadoutWeapon>  InLoadout                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::PurchaseItems(TArray<struct FLoadoutWeapon> InLoadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.PurchaseItems");

	UPlayerInventoryComponent_PurchaseItems_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.PurchaseItem
// ()
// Parameters:
// class UClass*                  ItemClass                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLockSlot                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSortNow                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckRedirect                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPurchaseResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EPurchaseResult UPlayerInventoryComponent::PurchaseItem(class UClass* ItemClass, int SubSlot, bool bLockSlot, bool bSortNow, bool bCheckRedirect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.PurchaseItem");

	UPlayerInventoryComponent_PurchaseItem_Params params;
	params.ItemClass = ItemClass;
	params.SubSlot = SubSlot;
	params.bLockSlot = bLockSlot;
	params.bSortNow = bSortNow;
	params.bCheckRedirect = bCheckRedirect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.PlayerInventoryComponent.PlayerInventorySupplyChangedDelegate__DelegateSignature
// ()
// Parameters:
// int                            AvailableSupply                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::PlayerInventorySupplyChangedDelegate__DelegateSignature(int AvailableSupply)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.PlayerInventoryComponent.PlayerInventorySupplyChangedDelegate__DelegateSignature");

	UPlayerInventoryComponent_PlayerInventorySupplyChangedDelegate__DelegateSignature_Params params;
	params.AvailableSupply = AvailableSupply;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.PlayerInventoryComponent.PlayerInventoryRefundFailDelegate__DelegateSignature
// ()
// Parameters:
// ERefundResult                  Result                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::PlayerInventoryRefundFailDelegate__DelegateSignature(ERefundResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.PlayerInventoryComponent.PlayerInventoryRefundFailDelegate__DelegateSignature");

	UPlayerInventoryComponent_PlayerInventoryRefundFailDelegate__DelegateSignature_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.PlayerInventoryComponent.PlayerInventoryPurchaseFailDelegate__DelegateSignature
// ()
// Parameters:
// EPurchaseResult                Result                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::PlayerInventoryPurchaseFailDelegate__DelegateSignature(EPurchaseResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.PlayerInventoryComponent.PlayerInventoryPurchaseFailDelegate__DelegateSignature");

	UPlayerInventoryComponent_PlayerInventoryPurchaseFailDelegate__DelegateSignature_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.OnRep_TotalSupply
// ()
void UPlayerInventoryComponent::OnRep_TotalSupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.OnRep_TotalSupply");

	UPlayerInventoryComponent_OnRep_TotalSupply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.OnRep_AvailableSupply
// ()
void UPlayerInventoryComponent::OnRep_AvailableSupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.OnRep_AvailableSupply");

	UPlayerInventoryComponent_OnRep_AvailableSupply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.IsWeaponUpgradeAllowedOnWeapon
// ()
// Parameters:
// class UClass*                  Upgrade                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsAlreadyAllowed              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::IsWeaponUpgradeAllowedOnWeapon(class UClass* Upgrade, class UClass* Weapon, bool bIsAlreadyAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.IsWeaponUpgradeAllowedOnWeapon");

	UPlayerInventoryComponent_IsWeaponUpgradeAllowedOnWeapon_Params params;
	params.Upgrade = Upgrade;
	params.Weapon = Weapon;
	params.bIsAlreadyAllowed = bIsAlreadyAllowed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.IsWeaponUpgradeAllowed
// ()
// Parameters:
// class UClass*                  Upgrade                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::IsWeaponUpgradeAllowed(class UClass* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.IsWeaponUpgradeAllowed");

	UPlayerInventoryComponent_IsWeaponUpgradeAllowed_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.IsItemSlotLocked
// ()
// Parameters:
// EItemSlot                      CheckSlot                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::IsItemSlotLocked(EItemSlot CheckSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.IsItemSlotLocked");

	UPlayerInventoryComponent_IsItemSlotLocked_Params params;
	params.CheckSlot = CheckSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.IsItemAllowed
// ()
// Parameters:
// class UClass*                  Item                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::IsItemAllowed(class UClass* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.IsItemAllowed");

	UPlayerInventoryComponent_IsItemAllowed_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.HasUpgradeInSlot
// ()
// Parameters:
// int                            PurchaseIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::HasUpgradeInSlot(int PurchaseIndex, EWeaponUpgradeSlot UpgradeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.HasUpgradeInSlot");

	UPlayerInventoryComponent_HasUpgradeInSlot_Params params;
	params.PurchaseIndex = PurchaseIndex;
	params.UpgradeSlot = UpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.HasUpgradeBeenAttachedToWeapon
// ()
// Parameters:
// class UClass*                  Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  Upgrade                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::HasUpgradeBeenAttachedToWeapon(class UClass* Weapon, class UClass* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.HasUpgradeBeenAttachedToWeapon");

	UPlayerInventoryComponent_HasUpgradeBeenAttachedToWeapon_Params params;
	params.Weapon = Weapon;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.HasAllowedWeaponUpgradesForWeapon
// ()
// Parameters:
// class UClass*                  For                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::HasAllowedWeaponUpgradesForWeapon(class UClass* For)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.HasAllowedWeaponUpgradesForWeapon");

	UPlayerInventoryComponent_HasAllowedWeaponUpgradesForWeapon_Params params;
	params.For = For;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.HasAllowedItemsForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::HasAllowedItemsForSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.HasAllowedItemsForSlot");

	UPlayerInventoryComponent_HasAllowedItemsForSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GiveInventoryItems
// ()
void UPlayerInventoryComponent::GiveInventoryItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GiveInventoryItems");

	UPlayerInventoryComponent_GiveInventoryItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.GetUpgradeMutalExclusion
// ()
// Parameters:
// int                            PurchaseIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  Upgrade                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* UPlayerInventoryComponent::GetUpgradeMutalExclusion(int PurchaseIndex, class UClass* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetUpgradeMutalExclusion");

	UPlayerInventoryComponent_GetUpgradeMutalExclusion_Params params;
	params.PurchaseIndex = PurchaseIndex;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetSupplyCostForWeaponUpgradeClass
// ()
// Parameters:
// class UClass*                  WeaponUpgradeClass             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetSupplyCostForWeaponUpgradeClass(class UClass* WeaponUpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSupplyCostForWeaponUpgradeClass");

	UPlayerInventoryComponent_GetSupplyCostForWeaponUpgradeClass_Params params;
	params.WeaponUpgradeClass = WeaponUpgradeClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetSupplyCostForWeaponUpgrade
// ()
// Parameters:
// class UWeaponUpgradeComponent* WeaponUpgradeInstance          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetSupplyCostForWeaponUpgrade(class UWeaponUpgradeComponent* WeaponUpgradeInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSupplyCostForWeaponUpgrade");

	UPlayerInventoryComponent_GetSupplyCostForWeaponUpgrade_Params params;
	params.WeaponUpgradeInstance = WeaponUpgradeInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetSupplyCostForItemClass
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetSupplyCostForItemClass(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSupplyCostForItemClass");

	UPlayerInventoryComponent_GetSupplyCostForItemClass_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetSupplyCostForItem
// ()
// Parameters:
// class AItemBase*               ItemInstance                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetSupplyCostForItem(class AItemBase* ItemInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSupplyCostForItem");

	UPlayerInventoryComponent_GetSupplyCostForItem_Params params;
	params.ItemInstance = ItemInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetSubslotUnlockItems
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutItems                       (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetSubslotUnlockItems(EItemSlot Slot, int SubSlot, TArray<class UClass*>* OutItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSubslotUnlockItems");

	UPlayerInventoryComponent_GetSubslotUnlockItems_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutItems != nullptr)
		*OutItems = params.OutItems;

}


// Function Insurgency.PlayerInventoryComponent.GetSquadLayout
// ()
// Parameters:
// class USquadLayout*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USquadLayout* UPlayerInventoryComponent::GetSquadLayout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSquadLayout");

	UPlayerInventoryComponent_GetSquadLayout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetSpentSupply
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetSpentSupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetSpentSupply");

	UPlayerInventoryComponent_GetSpentSupply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetShouldShowSupplyCostForWeaponUpgradeClass
// ()
// Parameters:
// class UClass*                  WeaponUpgradeClass             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerInventoryComponent::GetShouldShowSupplyCostForWeaponUpgradeClass(class UClass* WeaponUpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetShouldShowSupplyCostForWeaponUpgradeClass");

	UPlayerInventoryComponent_GetShouldShowSupplyCostForWeaponUpgradeClass_Params params;
	params.WeaponUpgradeClass = WeaponUpgradeClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetPotentialCapacityForSlots
// ()
// Parameters:
// TMap<EItemSlot, int>           OutSlotMap                     (Parm, OutParm, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetPotentialCapacityForSlots(TMap<EItemSlot, int>* OutSlotMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetPotentialCapacityForSlots");

	UPlayerInventoryComponent_GetPotentialCapacityForSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSlotMap != nullptr)
		*OutSlotMap = params.OutSlotMap;

}


// Function Insurgency.PlayerInventoryComponent.GetPotentialCapacityForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetPotentialCapacityForSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetPotentialCapacityForSlot");

	UPlayerInventoryComponent_GetPotentialCapacityForSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetOuterPlayerState
// ()
// Parameters:
// class AINSPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSPlayerState* UPlayerInventoryComponent::GetOuterPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetOuterPlayerState");

	UPlayerInventoryComponent_GetOuterPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetOuterPlayerClass
// ()
// Parameters:
// class UPlayerClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerClass* UPlayerInventoryComponent::GetOuterPlayerClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetOuterPlayerClass");

	UPlayerInventoryComponent_GetOuterPlayerClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetOuterFaction
// ()
// Parameters:
// class UFactionDefinition*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UFactionDefinition* UPlayerInventoryComponent::GetOuterFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetOuterFaction");

	UPlayerInventoryComponent_GetOuterFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetLoadout
// ()
// Parameters:
// TArray<struct FBasicLoadoutItem> OutLoadout                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeLocked                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetLoadout(TArray<struct FBasicLoadoutItem>* OutLoadout, bool bIncludeLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetLoadout");

	UPlayerInventoryComponent_GetLoadout_Params params;
	params.bIncludeLocked = bIncludeLocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLoadout != nullptr)
		*OutLoadout = params.OutLoadout;

}


// Function Insurgency.PlayerInventoryComponent.GetItemSlotValue
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetItemSlotValue(EItemSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetItemSlotValue");

	UPlayerInventoryComponent_GetItemSlotValue_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetItemIndexForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetItemIndexForSlot(EItemSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetItemIndexForSlot");

	UPlayerInventoryComponent_GetItemIndexForSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetItemEquippedCount
// ()
// Parameters:
// class UClass*                  Item                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetItemEquippedCount(class UClass* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetItemEquippedCount");

	UPlayerInventoryComponent_GetItemEquippedCount_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetItemCountForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetItemCountForSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetItemCountForSlot");

	UPlayerInventoryComponent_GetItemCountForSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetFirearmsInCategoryCount
// ()
// Parameters:
// EFirearmCategory               Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetFirearmsInCategoryCount(EFirearmCategory Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetFirearmsInCategoryCount");

	UPlayerInventoryComponent_GetFirearmsInCategoryCount_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetFirearmCategoryLimit
// ()
// Parameters:
// EFirearmCategory               Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetFirearmCategoryLimit(EFirearmCategory Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetFirearmCategoryLimit");

	UPlayerInventoryComponent_GetFirearmCategoryLimit_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetFilteredWeaponUpgradesForWeaponInSlot
// ()
// Parameters:
// TArray<class UClass*>          InUpgrades                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  For                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetFilteredWeaponUpgradesForWeaponInSlot(TArray<class UClass*> InUpgrades, class UClass* For, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetFilteredWeaponUpgradesForWeaponInSlot");

	UPlayerInventoryComponent_GetFilteredWeaponUpgradesForWeaponInSlot_Params params;
	params.InUpgrades = InUpgrades;
	params.For = For;
	params.UpgradeSlot = UpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetFilteredWeaponUpgradesForWeapon
// ()
// Parameters:
// TArray<class UClass*>          InUpgrades                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  For                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetFilteredWeaponUpgradesForWeapon(TArray<class UClass*> InUpgrades, class UClass* For, TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetFilteredWeaponUpgradesForWeapon");

	UPlayerInventoryComponent_GetFilteredWeaponUpgradesForWeapon_Params params;
	params.InUpgrades = InUpgrades;
	params.For = For;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetFilteredWeaponUpgradesForSlot
// ()
// Parameters:
// TArray<class UClass*>          InUpgrades                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetFilteredWeaponUpgradesForSlot(TArray<class UClass*> InUpgrades, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetFilteredWeaponUpgradesForSlot");

	UPlayerInventoryComponent_GetFilteredWeaponUpgradesForSlot_Params params;
	params.InUpgrades = InUpgrades;
	params.UpgradeSlot = UpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetFilteredItemsForSlot
// ()
// Parameters:
// TArray<class UClass*>          InItems                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetFilteredItemsForSlot(TArray<class UClass*> InItems, EItemSlot Slot, TArray<class UClass*>* OutResults, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetFilteredItemsForSlot");

	UPlayerInventoryComponent_GetFilteredItemsForSlot_Params params;
	params.InItems = InItems;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetCapacityForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetCapacityForSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetCapacityForSlot");

	UPlayerInventoryComponent_GetCapacityForSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetAvailableItemSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UPlayerInventoryComponent::GetAvailableItemSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAvailableItemSlot");

	UPlayerInventoryComponent_GetAvailableItemSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForWeaponInSlot
// ()
// Parameters:
// class UClass*                  For                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponUpgradeSlot             UpgradeSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedWeaponUpgradesForWeaponInSlot(class UClass* For, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForWeaponInSlot");

	UPlayerInventoryComponent_GetAllowedWeaponUpgradesForWeaponInSlot_Params params;
	params.For = For;
	params.UpgradeSlot = UpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForWeapon
// ()
// Parameters:
// class UClass*                  For                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedWeaponUpgradesForWeapon(class UClass* For, TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForWeapon");

	UPlayerInventoryComponent_GetAllowedWeaponUpgradesForWeapon_Params params;
	params.For = For;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForPlayerWithoutSort
// ()
// Parameters:
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedWeaponUpgradesForPlayerWithoutSort(TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForPlayerWithoutSort");

	UPlayerInventoryComponent_GetAllowedWeaponUpgradesForPlayerWithoutSort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForPlayer
// ()
// Parameters:
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedWeaponUpgradesForPlayer(TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedWeaponUpgradesForPlayer");

	UPlayerInventoryComponent_GetAllowedWeaponUpgradesForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetAllowedItemsWithoutSort
// ()
// Parameters:
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedItemsWithoutSort(TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedItemsWithoutSort");

	UPlayerInventoryComponent_GetAllowedItemsWithoutSort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetAllowedItemsForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedItemsForSlot(EItemSlot Slot, TArray<class UClass*>* OutResults, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedItemsForSlot");

	UPlayerInventoryComponent_GetAllowedItemsForSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GetAllowedItems
// ()
// Parameters:
// TArray<class UClass*>          OutResults                     (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::GetAllowedItems(TArray<class UClass*>* OutResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GetAllowedItems");

	UPlayerInventoryComponent_GetAllowedItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResults != nullptr)
		*OutResults = params.OutResults;

}


// Function Insurgency.PlayerInventoryComponent.GearCheckWeaponSlots
// ()
void UPlayerInventoryComponent::GearCheckWeaponSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.GearCheckWeaponSlots");

	UPlayerInventoryComponent_GearCheckWeaponSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ForwardInventoryPreferences
// ()
// Parameters:
// class UINSPlayerLocalProfile*  Profile                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ForwardInventoryPreferences(class UINSPlayerLocalProfile* Profile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ForwardInventoryPreferences");

	UPlayerInventoryComponent_ForwardInventoryPreferences_Params params;
	params.Profile = Profile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.EmptyLoadout
// ()
// Parameters:
// bool                           bForceLocked                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::EmptyLoadout(bool bForceLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.EmptyLoadout");

	UPlayerInventoryComponent_EmptyLoadout_Params params;
	params.bForceLocked = bForceLocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ClientRefundFail
// ()
// Parameters:
// ERefundResult                  Result                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ClientRefundFail(ERefundResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ClientRefundFail");

	UPlayerInventoryComponent_ClientRefundFail_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.ClientPurchaseFail
// ()
// Parameters:
// EPurchaseResult                Result                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::ClientPurchaseFail(EPurchaseResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.ClientPurchaseFail");

	UPlayerInventoryComponent_ClientPurchaseFail_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerInventoryComponent.CanPurchaseWeaponUpgrade
// ()
// Parameters:
// int                            PurchaseIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  Upgrade                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsAlreadyAllowed              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPurchaseResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EPurchaseResult UPlayerInventoryComponent::CanPurchaseWeaponUpgrade(int PurchaseIndex, class UClass* Upgrade, bool bIsAlreadyAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.CanPurchaseWeaponUpgrade");

	UPlayerInventoryComponent_CanPurchaseWeaponUpgrade_Params params;
	params.PurchaseIndex = PurchaseIndex;
	params.Upgrade = Upgrade;
	params.bIsAlreadyAllowed = bIsAlreadyAllowed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.CanPurchaseItem
// ()
// Parameters:
// class UClass*                  Item                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsAlreadyAllowed              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPurchaseResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EPurchaseResult UPlayerInventoryComponent::CanPurchaseItem(class UClass* Item, int SubSlot, bool bIsAlreadyAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.CanPurchaseItem");

	UPlayerInventoryComponent_CanPurchaseItem_Params params;
	params.Item = Item;
	params.SubSlot = SubSlot;
	params.bIsAlreadyAllowed = bIsAlreadyAllowed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerInventoryComponent.AwardSupplyPoints
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerInventoryComponent::AwardSupplyPoints(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerInventoryComponent.AwardSupplyPoints");

	UPlayerInventoryComponent_AwardSupplyPoints_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerInventoryComponent::AfterRead()
{
	UInventoryComponent::AfterRead();

	READ_PTR_FULL(OuterPlayerController, AINSPlayerController);
}

void UPlayerInventoryComponent::BeforeDelete()
{
	UInventoryComponent::BeforeDelete();

	DELE_PTR_FULL(OuterPlayerController);
}

// Function Insurgency.PlayerEquipmentCollection.ContainsWeaponUpgrade
// ()
// Parameters:
// class UClass*                  Upgrade                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerEquipmentCollection::ContainsWeaponUpgrade(class UClass* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.ContainsWeaponUpgrade");

	UPlayerEquipmentCollection_ContainsWeaponUpgrade_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerEquipmentCollection.ContainsItem
// ()
// Parameters:
// class UClass*                  Item                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerEquipmentCollection::ContainsItem(class UClass* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.ContainsItem");

	UPlayerEquipmentCollection_ContainsItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayerEquipmentCollection.AppendWeaponUpgradesToUpgradeArray
// ()
// Parameters:
// TArray<class UClass*>          OutUpgradeArray                (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerEquipmentCollection::AppendWeaponUpgradesToUpgradeArray(TArray<class UClass*>* OutUpgradeArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AppendWeaponUpgradesToUpgradeArray");

	UPlayerEquipmentCollection_AppendWeaponUpgradesToUpgradeArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUpgradeArray != nullptr)
		*OutUpgradeArray = params.OutUpgradeArray;

}


// Function Insurgency.PlayerEquipmentCollection.AppendWeaponUpgradesToSoftUpgradeArray
// ()
void UPlayerEquipmentCollection::AppendWeaponUpgradesToSoftUpgradeArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AppendWeaponUpgradesToSoftUpgradeArray");

	UPlayerEquipmentCollection_AppendWeaponUpgradesToSoftUpgradeArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerEquipmentCollection.AppendItemsToSoftItemArray
// ()
void UPlayerEquipmentCollection::AppendItemsToSoftItemArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AppendItemsToSoftItemArray");

	UPlayerEquipmentCollection_AppendItemsToSoftItemArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerEquipmentCollection.AppendItemsToItemArray
// ()
// Parameters:
// TArray<class UClass*>          OutItemsArray                  (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerEquipmentCollection::AppendItemsToItemArray(TArray<class UClass*>* OutItemsArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AppendItemsToItemArray");

	UPlayerEquipmentCollection_AppendItemsToItemArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutItemsArray != nullptr)
		*OutItemsArray = params.OutItemsArray;

}


// Function Insurgency.PlayerEquipmentCollection.AppendAllowedEquipmentArray
// ()
// Parameters:
// TArray<struct FPlayerAllowedEquipment> OutAllowedEquipmentArray       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerEquipmentCollection::AppendAllowedEquipmentArray(TArray<struct FPlayerAllowedEquipment>* OutAllowedEquipmentArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AppendAllowedEquipmentArray");

	UPlayerEquipmentCollection_AppendAllowedEquipmentArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAllowedEquipmentArray != nullptr)
		*OutAllowedEquipmentArray = params.OutAllowedEquipmentArray;

}


// Function Insurgency.PlayerEquipmentCollection.AddWeaponUpgradesToSet
// ()
void UPlayerEquipmentCollection::AddWeaponUpgradesToSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AddWeaponUpgradesToSet");

	UPlayerEquipmentCollection_AddWeaponUpgradesToSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerEquipmentCollection.AddItemsToSet
// ()
void UPlayerEquipmentCollection::AddItemsToSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerEquipmentCollection.AddItemsToSet");

	UPlayerEquipmentCollection_AddItemsToSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerEquipmentCollection::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPlayerEquipmentCollection::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.PlayerDetailsWidget.RequestDetails
// ()
// Parameters:
// struct FString                 SteamId                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNameOnly                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerDetailsWidget::RequestDetails(const struct FString& SteamId, bool bNameOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerDetailsWidget.RequestDetails");

	UPlayerDetailsWidget_RequestDetails_Params params;
	params.SteamId = SteamId;
	params.bNameOnly = bNameOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerDetailsWidget.OnTextureUpdated
// ()
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerDetailsWidget::OnTextureUpdated(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerDetailsWidget.OnTextureUpdated");

	UPlayerDetailsWidget_OnTextureUpdated_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerDetailsWidget.OnNameUpdated
// ()
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerDetailsWidget::OnNameUpdated(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerDetailsWidget.OnNameUpdated");

	UPlayerDetailsWidget_OnNameUpdated_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerDetailsWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(AssignedAvatar, UTexture2D);
}

void UPlayerDetailsWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(AssignedAvatar);
}

// Function Insurgency.PlayerClassComponent.OnKilled
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerClassComponent::OnKilled(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerClassComponent.OnKilled");

	UPlayerClassComponent_OnKilled_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerClassComponent.OnDeactivate
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerClassComponent::OnDeactivate(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerClassComponent.OnDeactivate");

	UPlayerClassComponent_OnDeactivate_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayerClassComponent.OnActivate
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPlayerClassComponent::OnActivate(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerClassComponent.OnActivate");

	UPlayerClassComponent_OnActivate_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerClassComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UPlayerClassComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Insurgency.PlayerClass.PlayerClassHasFlag
// ()
// Parameters:
// EPlayerClassFlags              CheckFlag                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UPlayerClass::PlayerClassHasFlag(EPlayerClassFlags CheckFlag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerClass.PlayerClassHasFlag");

	UPlayerClass_PlayerClassHasFlag_Params params;
	params.CheckFlag = CheckFlag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerClass::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ClassIcon, UTexture2D);
	READ_PTR_FULL(SpecialUIClassIcon, UTexture2D);
	READ_PTR_FULL(SpecialUIOverviewClassIcon, UTexture2D);
	READ_PTR_FULL(MeshCharacter, USkeletalMesh);
	READ_PTR_FULL(MeshCharacterCosmeticBase, USkeletalMesh);
	READ_PTR_FULL(MeshArms, USkeletalMesh);
	READ_PTR_FULL(VoiceDictionary, UCharacterDialogueDictionary);
	READ_PTR_FULL(CustomBotSkillConfig, UBotSkillConfig);
	READ_PTR_FULL(ComponentClass, UClass);
}

void UPlayerClass::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ClassIcon);
	DELE_PTR_FULL(SpecialUIClassIcon);
	DELE_PTR_FULL(SpecialUIOverviewClassIcon);
	DELE_PTR_FULL(MeshCharacter);
	DELE_PTR_FULL(MeshCharacterCosmeticBase);
	DELE_PTR_FULL(MeshArms);
	DELE_PTR_FULL(VoiceDictionary);
	DELE_PTR_FULL(CustomBotSkillConfig);
	DELE_PTR_FULL(ComponentClass);
}

// Function Insurgency.PlayerAccountStatusAsync.BeginGetAccountStatus
// ()
// Parameters:
// int                            userId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerAccountStatusAsync* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerAccountStatusAsync* UPlayerAccountStatusAsync::BeginGetAccountStatus(int userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayerAccountStatusAsync.BeginGetAccountStatus");

	UPlayerAccountStatusAsync_BeginGetAccountStatus_Params params;
	params.userId = userId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerAccountStatusAsync::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void UPlayerAccountStatusAsync::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

// Function Insurgency.PlayableArea.OnEndAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void APlayableArea::OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayableArea.OnEndAreaOverlap");

	APlayableArea_OnEndAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayableArea.OnBeginAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void APlayableArea::OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayableArea.OnBeginAreaOverlap");

	APlayableArea_OnBeginAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PlayableArea.IsValidPlayableArea
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool APlayableArea::IsValidPlayableArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayableArea.IsValidPlayableArea");

	APlayableArea_IsValidPlayableArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayableArea.IsScenarioPlayableArea
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool APlayableArea::IsScenarioPlayableArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayableArea.IsScenarioPlayableArea");

	APlayableArea_IsScenarioPlayableArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.PlayableArea.IsOverviewArea
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool APlayableArea::IsOverviewArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PlayableArea.IsOverviewArea");

	APlayableArea_IsOverviewArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void APlayableArea::AfterRead()
{
	AVolume::AfterRead();

}

void APlayableArea::BeforeDelete()
{
	AVolume::BeforeDelete();

}

// Function Insurgency.PerFrameCallQueue.OnFrameCall
// ()
void UPerFrameCallQueue::OnFrameCall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PerFrameCallQueue.OnFrameCall");

	UPerFrameCallQueue_OnFrameCall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PerFrameCallQueue.EventTick
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPerFrameCallQueue::EventTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PerFrameCallQueue.EventTick");

	UPerFrameCallQueue_EventTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPerFrameCallQueue::AfterRead()
{
	UObject::AfterRead();

}

void UPerFrameCallQueue::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.PerFrameCallQueueWorldSubsystem.GetPerFrameCallQueue
// ()
// Parameters:
// class UPerFrameCallQueue*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPerFrameCallQueue* UPerFrameCallQueueWorldSubsystem::GetPerFrameCallQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PerFrameCallQueueWorldSubsystem.GetPerFrameCallQueue");

	UPerFrameCallQueueWorldSubsystem_GetPerFrameCallQueue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPerFrameCallQueueWorldSubsystem::AfterRead()
{
	UWorldSubsystem::AfterRead();

	READ_PTR_FULL(PerFrameCallQueue, UPerFrameCallQueue);
}

void UPerFrameCallQueueWorldSubsystem::BeforeDelete()
{
	UWorldSubsystem::BeforeDelete();

	DELE_PTR_FULL(PerFrameCallQueue);
}

// Function Insurgency.PainCausingVolumeComponent.OnEndAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UPainCausingVolumeComponent::OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PainCausingVolumeComponent.OnEndAreaOverlap");

	UPainCausingVolumeComponent_OnEndAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.PainCausingVolumeComponent.OnBeginAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UPainCausingVolumeComponent::OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PainCausingVolumeComponent.OnBeginAreaOverlap");

	UPainCausingVolumeComponent_OnBeginAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPainCausingVolumeComponent::AfterRead()
{
	UBoxComponent::AfterRead();

	READ_PTR_FULL(DamageTypeClass, UClass);
}

void UPainCausingVolumeComponent::BeforeDelete()
{
	UBoxComponent::BeforeDelete();

	DELE_PTR_FULL(DamageTypeClass);
}

// Function Insurgency.OutpostHUD.GetINSUserSettings
// ()
// Parameters:
// class UINSGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSGameUserSettings* UOutpostHUD::GetINSUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OutpostHUD.GetINSUserSettings");

	UOutpostHUD_GetINSUserSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UOutpostHUD::AfterRead()
{
	UUserWidget::AfterRead();

}

void UOutpostHUD::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.OSSStatusWidget.OnPlatformStateUpdated
// ()
// Parameters:
// EOSSNetworkState               OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOSSNetworkState               NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOSSStatusWidget::OnPlatformStateUpdated(EOSSNetworkState OldState, EOSSNetworkState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OSSStatusWidget.OnPlatformStateUpdated");

	UOSSStatusWidget_OnPlatformStateUpdated_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OSSStatusWidget.OnNewWorldStateUpdated
// ()
// Parameters:
// EOSSNetworkState               OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOSSNetworkState               NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOSSStatusWidget::OnNewWorldStateUpdated(EOSSNetworkState OldState, EOSSNetworkState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OSSStatusWidget.OnNewWorldStateUpdated");

	UOSSStatusWidget_OnNewWorldStateUpdated_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOSSStatusWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(HorizPlatformBox, UHorizontalBox);
}

void UOSSStatusWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(HorizPlatformBox);
}

// Function Insurgency.OnlineInventorySubsystem.ValidateCosmeticOwnership
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::ValidateCosmeticOwnership(struct FProfileCharacterCosmeticState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.ValidateCosmeticOwnership");

	UOnlineInventorySubsystem_ValidateCosmeticOwnership_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (State != nullptr)
		*State = params.State;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.SwitchToFaction
// ()
// Parameters:
// struct FName                   SelectedFaction                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::SwitchToFaction(struct FName* SelectedFaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.SwitchToFaction");

	UOnlineInventorySubsystem_SwitchToFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SelectedFaction != nullptr)
		*SelectedFaction = params.SelectedFaction;

}


// Function Insurgency.OnlineInventorySubsystem.SwitchFaction
// ()
void UOnlineInventorySubsystem::SwitchFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.SwitchFaction");

	UOnlineInventorySubsystem_SwitchFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.SetSecuritySelectedGender
// ()
// Parameters:
// ECharacterGender               NewGender                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::SetSecuritySelectedGender(ECharacterGender NewGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.SetSecuritySelectedGender");

	UOnlineInventorySubsystem_SetSecuritySelectedGender_Params params;
	params.NewGender = NewGender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.SaveCurrentStateAsPreset
// ()
// Parameters:
// struct FText                   PresetName                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   PresetDesignation              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::SaveCurrentStateAsPreset(struct FText* PresetName, struct FText* PresetDesignation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.SaveCurrentStateAsPreset");

	UOnlineInventorySubsystem_SaveCurrentStateAsPreset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PresetName != nullptr)
		*PresetName = params.PresetName;
	if (PresetDesignation != nullptr)
		*PresetDesignation = params.PresetDesignation;

}


// Function Insurgency.OnlineInventorySubsystem.ResetCurrentCosmeticStateToDefault
// ()
void UOnlineInventorySubsystem::ResetCurrentCosmeticStateToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.ResetCurrentCosmeticStateToDefault");

	UOnlineInventorySubsystem_ResetCurrentCosmeticStateToDefault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RequestPlayerBalance
// ()
void UOnlineInventorySubsystem::RequestPlayerBalance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RequestPlayerBalance");

	UOnlineInventorySubsystem_RequestPlayerBalance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RequestInventoryTransaction
// ()
// Parameters:
// int                            ItemDefId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::RequestInventoryTransaction(int ItemDefId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RequestInventoryTransaction");

	UOnlineInventorySubsystem_RequestInventoryTransaction_Params params;
	params.ItemDefId = ItemDefId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.ReQueryEntitlements
// ()
void UOnlineInventorySubsystem::ReQueryEntitlements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.ReQueryEntitlements");

	UOnlineInventorySubsystem_ReQueryEntitlements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RemovePreset
// ()
// Parameters:
// struct FText                   PresetName                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::RemovePreset(struct FText* PresetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RemovePreset");

	UOnlineInventorySubsystem_RemovePreset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PresetName != nullptr)
		*PresetName = params.PresetName;

}


// Function Insurgency.OnlineInventorySubsystem.RemoveCosmeticsInSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCallDelegate                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::RemoveCosmeticsInSlot(ECharacterAppearanceSlot Slot, int SubSlot, bool bCallDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RemoveCosmeticsInSlot");

	UOnlineInventorySubsystem_RemoveCosmeticsInSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.bCallDelegate = bCallDelegate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RemoveCosmeticFromShoppingCart
// ()
// Parameters:
// int                            ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::RemoveCosmeticFromShoppingCart(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RemoveCosmeticFromShoppingCart");

	UOnlineInventorySubsystem_RemoveCosmeticFromShoppingCart_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RemoveCosmeticFromCurrentState
// ()
// Parameters:
// struct FSelectedCosmetic       Cosmetic                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::RemoveCosmeticFromCurrentState(const struct FSelectedCosmetic& Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RemoveCosmeticFromCurrentState");

	UOnlineInventorySubsystem_RemoveCosmeticFromCurrentState_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RefreshEntitledCosmetics
// ()
void UOnlineInventorySubsystem::RefreshEntitledCosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RefreshEntitledCosmetics");

	UOnlineInventorySubsystem_RefreshEntitledCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.RandomizeCosmeticsForPreferredFaction
// ()
void UOnlineInventorySubsystem::RandomizeCosmeticsForPreferredFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.RandomizeCosmeticsForPreferredFaction");

	UOnlineInventorySubsystem_RandomizeCosmeticsForPreferredFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.PlaySampleFromCosmeticVoiceDictionary
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::PlaySampleFromCosmeticVoiceDictionary(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.PlaySampleFromCosmeticVoiceDictionary");

	UOnlineInventorySubsystem_PlaySampleFromCosmeticVoiceDictionary_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.PlayRadialSampleFromCosmeticVoiceDictionary
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SampleIndex                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::PlayRadialSampleFromCosmeticVoiceDictionary(int ItemId, int SampleIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.PlayRadialSampleFromCosmeticVoiceDictionary");

	UOnlineInventorySubsystem_PlayRadialSampleFromCosmeticVoiceDictionary_Params params;
	params.ItemId = ItemId;
	params.SampleIndex = SampleIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.PlayerOwnsItemId
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::PlayerOwnsItemId(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.PlayerOwnsItemId");

	UOnlineInventorySubsystem_PlayerOwnsItemId_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.OpenDLCLinkForBundle
// ()
// Parameters:
// class UClass*                  BundleClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::OpenDLCLinkForBundle(class UClass* BundleClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.OpenDLCLinkForBundle");

	UOnlineInventorySubsystem_OpenDLCLinkForBundle_Params params;
	params.BundleClass = BundleClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestSellInventoryUpdated__DelegateSignature
// ()
void UOnlineInventorySubsystem::OnRequestSellInventoryUpdated__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestSellInventoryUpdated__DelegateSignature");

	UOnlineInventorySubsystem_OnRequestSellInventoryUpdated__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestPurchaseInventoryUpdated__DelegateSignature
// ()
// Parameters:
// int                            ItemDefId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::OnRequestPurchaseInventoryUpdated__DelegateSignature(int ItemDefId)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestPurchaseInventoryUpdated__DelegateSignature");

	UOnlineInventorySubsystem_OnRequestPurchaseInventoryUpdated__DelegateSignature_Params params;
	params.ItemDefId = ItemDefId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestInventoryTransactionListCompleted__DelegateSignature
// ()
void UOnlineInventorySubsystem::OnRequestInventoryTransactionListCompleted__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestInventoryTransactionListCompleted__DelegateSignature");

	UOnlineInventorySubsystem_OnRequestInventoryTransactionListCompleted__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestInventoryTransactionInitCompleted__DelegateSignature
// ()
void UOnlineInventorySubsystem::OnRequestInventoryTransactionInitCompleted__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestInventoryTransactionInitCompleted__DelegateSignature");

	UOnlineInventorySubsystem_OnRequestInventoryTransactionInitCompleted__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestInventoryTransactionCompleted__DelegateSignature
// ()
void UOnlineInventorySubsystem::OnRequestInventoryTransactionCompleted__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnRequestInventoryTransactionCompleted__DelegateSignature");

	UOnlineInventorySubsystem_OnRequestInventoryTransactionCompleted__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnReceivedNewItemClaims__DelegateSignature
// ()
// Parameters:
// struct FOnlineItemClaimResult  Claims                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::OnReceivedNewItemClaims__DelegateSignature(const struct FOnlineItemClaimResult& Claims)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnReceivedNewItemClaims__DelegateSignature");

	UOnlineInventorySubsystem_OnReceivedNewItemClaims__DelegateSignature_Params params;
	params.Claims = Claims;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnQueryEntitlementsComplete__DelegateSignature
// ()
void UOnlineInventorySubsystem::OnQueryEntitlementsComplete__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnQueryEntitlementsComplete__DelegateSignature");

	UOnlineInventorySubsystem_OnQueryEntitlementsComplete__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnPreferredFactionChangedDelegate__DelegateSignature
// ()
// Parameters:
// struct FName                   Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::OnPreferredFactionChangedDelegate__DelegateSignature(const struct FName& Faction)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnPreferredFactionChangedDelegate__DelegateSignature");

	UOnlineInventorySubsystem_OnPreferredFactionChangedDelegate__DelegateSignature_Params params;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnOwnedItemsLoadingCompleteDelegate__DelegateSignature
// ()
void UOnlineInventorySubsystem::OnOwnedItemsLoadingCompleteDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnOwnedItemsLoadingCompleteDelegate__DelegateSignature");

	UOnlineInventorySubsystem_OnOwnedItemsLoadingCompleteDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnCosmeticRemovedFromSlotDelegate__DelegateSignature
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::OnCosmeticRemovedFromSlotDelegate__DelegateSignature(ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnCosmeticRemovedFromSlotDelegate__DelegateSignature");

	UOnlineInventorySubsystem_OnCosmeticRemovedFromSlotDelegate__DelegateSignature_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.OnlineInventorySubsystem.OnCosmeticEquippedDelegate__DelegateSignature
// ()
// Parameters:
// struct FSelectedCosmetic       Cosmetic                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::OnCosmeticEquippedDelegate__DelegateSignature(const struct FSelectedCosmetic& Cosmetic, ECharacterAppearanceSlot Slot, int SubSlot, bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.OnlineInventorySubsystem.OnCosmeticEquippedDelegate__DelegateSignature");

	UOnlineInventorySubsystem_OnCosmeticEquippedDelegate__DelegateSignature_Params params;
	params.Cosmetic = Cosmetic;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.LoadPreset
// ()
// Parameters:
// struct FText                   PresetName                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::LoadPreset(struct FText* PresetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.LoadPreset");

	UOnlineInventorySubsystem_LoadPreset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PresetName != nullptr)
		*PresetName = params.PresetName;

}


// Function Insurgency.OnlineInventorySubsystem.IsEntitledToCosmetic
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::IsEntitledToCosmetic(class UClass* Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.IsEntitledToCosmetic");

	UOnlineInventorySubsystem_IsEntitledToCosmetic_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.IsCosmeticIdEquipped
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeBase                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::IsCosmeticIdEquipped(int ItemId, bool bIncludeBase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.IsCosmeticIdEquipped");

	UOnlineInventorySubsystem_IsCosmeticIdEquipped_Params params;
	params.ItemId = ItemId;
	params.bIncludeBase = bIncludeBase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.IsCosmeticEquippedInCurrentState
// ()
// Parameters:
// struct FSelectedCosmetic       Cosmetic                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::IsCosmeticEquippedInCurrentState(const struct FSelectedCosmetic& Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.IsCosmeticEquippedInCurrentState");

	UOnlineInventorySubsystem_IsCosmeticEquippedInCurrentState_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.IsCosmeticEquipped
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::IsCosmeticEquipped(class UClass* Cosmetic, bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.IsCosmeticEquipped");

	UOnlineInventorySubsystem_IsCosmeticEquipped_Params params;
	params.Cosmetic = Cosmetic;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.HasPreOrderEntitlement
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::HasPreOrderEntitlement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.HasPreOrderEntitlement");

	UOnlineInventorySubsystem_HasPreOrderEntitlement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.HasEquippedCosmeticForSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::HasEquippedCosmeticForSlot(ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.HasEquippedCosmeticForSlot");

	UOnlineInventorySubsystem_HasEquippedCosmeticForSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GrantCosmeticEntitlement
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShouldEquip                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::GrantCosmeticEntitlement(class UClass* Cosmetic, bool bShouldEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GrantCosmeticEntitlement");

	UOnlineInventorySubsystem_GrantCosmeticEntitlement_Params params;
	params.Cosmetic = Cosmetic;
	params.bShouldEquip = bShouldEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.GiveDefaultCosmeticsForPreferredFaction
// ()
void UOnlineInventorySubsystem::GiveDefaultCosmeticsForPreferredFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GiveDefaultCosmeticsForPreferredFaction");

	UOnlineInventorySubsystem_GiveDefaultCosmeticsForPreferredFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.GetTotalEntitledCosmeticsForSubSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UOnlineInventorySubsystem::GetTotalEntitledCosmeticsForSubSlot(ECharacterAppearanceSlot Slot, int SubSlot, bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetTotalEntitledCosmeticsForSubSlot");

	UOnlineInventorySubsystem_GetTotalEntitledCosmeticsForSubSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetTotalEntitledCosmeticsForSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UOnlineInventorySubsystem::GetTotalEntitledCosmeticsForSlot(ECharacterAppearanceSlot Slot, bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetTotalEntitledCosmeticsForSlot");

	UOnlineInventorySubsystem_GetTotalEntitledCosmeticsForSlot_Params params;
	params.Slot = Slot;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetTauntSamplesForCosmetic
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<int> UOnlineInventorySubsystem::GetTauntSamplesForCosmetic(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetTauntSamplesForCosmetic");

	UOnlineInventorySubsystem_GetTauntSamplesForCosmetic_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetRandomOwnedCosmeticInSlotForState
// ()
// Parameters:
// struct FProfileCharacterCosmeticState CosmeticState                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UOnlineInventorySubsystem::GetRandomOwnedCosmeticInSlotForState(const struct FProfileCharacterCosmeticState& CosmeticState, ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetRandomOwnedCosmeticInSlotForState");

	UOnlineInventorySubsystem_GetRandomOwnedCosmeticInSlotForState_Params params;
	params.CosmeticState = CosmeticState;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetLastKnownBalance
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UOnlineInventorySubsystem::GetLastKnownBalance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetLastKnownBalance");

	UOnlineInventorySubsystem_GetLastKnownBalance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetEquippedCosmeticForSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* UOnlineInventorySubsystem::GetEquippedCosmeticForSlot(ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetEquippedCosmeticForSlot");

	UOnlineInventorySubsystem_GetEquippedCosmeticForSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetEntitledCosmeticsInSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UClass*> UOnlineInventorySubsystem::GetEntitledCosmeticsInSlot(ECharacterAppearanceSlot Slot, int SubSlot, bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetEntitledCosmeticsInSlot");

	UOnlineInventorySubsystem_GetEntitledCosmeticsInSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetDefaultCosmeticForSlot
// ()
// Parameters:
// struct FName                   Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* UOnlineInventorySubsystem::GetDefaultCosmeticForSlot(const struct FName& Faction, ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetDefaultCosmeticForSlot");

	UOnlineInventorySubsystem_GetDefaultCosmeticForSlot_Params params;
	params.Faction = Faction;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetCosmeticVariationsArray
// ()
// Parameters:
// class UClass*                  CosmeticClass                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UClass*> UOnlineInventorySubsystem::GetCosmeticVariationsArray(class UClass* CosmeticClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetCosmeticVariationsArray");

	UOnlineInventorySubsystem_GetCosmeticVariationsArray_Params params;
	params.CosmeticClass = CosmeticClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetCosmeticVariations
// ()
// Parameters:
// class UClass*                  CosmeticClass                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSelectedCosmetic> CosmeticVariations             (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::GetCosmeticVariations(class UClass* CosmeticClass, TArray<struct FSelectedCosmetic>* CosmeticVariations)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetCosmeticVariations");

	UOnlineInventorySubsystem_GetCosmeticVariations_Params params;
	params.CosmeticClass = CosmeticClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (CosmeticVariations != nullptr)
		*CosmeticVariations = params.CosmeticVariations;

}


// Function Insurgency.OnlineInventorySubsystem.GetCosmeticsCountForSlot
// ()
// Parameters:
// struct FName                   FactionRestriction             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            CountOwned                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            CountTotal                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::GetCosmeticsCountForSlot(const struct FName& FactionRestriction, ECharacterAppearanceSlot Slot, int SubSlot, int* CountOwned, int* CountTotal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetCosmeticsCountForSlot");

	UOnlineInventorySubsystem_GetCosmeticsCountForSlot_Params params;
	params.FactionRestriction = FactionRestriction;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (CountOwned != nullptr)
		*CountOwned = params.CountOwned;
	if (CountTotal != nullptr)
		*CountTotal = params.CountTotal;

}


// Function Insurgency.OnlineInventorySubsystem.GetCosmeticByItemDefId
// ()
// Parameters:
// int                            ItemDefId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* UOnlineInventorySubsystem::GetCosmeticByItemDefId(int ItemDefId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetCosmeticByItemDefId");

	UOnlineInventorySubsystem_GetCosmeticByItemDefId_Params params;
	params.ItemDefId = ItemDefId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetCharacterCosmeticState
// ()
// Parameters:
// struct FName                   FactionName                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeShoppingCart           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfileCharacterCosmeticState ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FProfileCharacterCosmeticState UOnlineInventorySubsystem::GetCharacterCosmeticState(struct FName* FactionName, bool bIncludeShoppingCart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetCharacterCosmeticState");

	UOnlineInventorySubsystem_GetCharacterCosmeticState_Params params;
	params.bIncludeShoppingCart = bIncludeShoppingCart;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (FactionName != nullptr)
		*FactionName = params.FactionName;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.GetAvailableScoreboardBadges
// ()
// Parameters:
// TArray<struct FScoreboardBadge> OutBadges                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::GetAvailableScoreboardBadges(TArray<struct FScoreboardBadge>* OutBadges)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.GetAvailableScoreboardBadges");

	UOnlineInventorySubsystem_GetAvailableScoreboardBadges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutBadges != nullptr)
		*OutBadges = params.OutBadges;

}


// Function Insurgency.OnlineInventorySubsystem.EquipCosmeticByItemId
// ()
// Parameters:
// int                            ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::EquipCosmeticByItemId(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.EquipCosmeticByItemId");

	UOnlineInventorySubsystem_EquipCosmeticByItemId_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.EquipCosmetic
// ()
// Parameters:
// struct FSelectedCosmetic       Cosmetic                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::EquipCosmetic(const struct FSelectedCosmetic& Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.EquipCosmetic");

	UOnlineInventorySubsystem_EquipCosmetic_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.EmptyShoppingCart
// ()
// Parameters:
// struct FName                   SelectedFaction                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::EmptyShoppingCart(struct FName* SelectedFaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.EmptyShoppingCart");

	UOnlineInventorySubsystem_EmptyShoppingCart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SelectedFaction != nullptr)
		*SelectedFaction = params.SelectedFaction;

}


// Function Insurgency.OnlineInventorySubsystem.DoesPlayerOwnCosmeticItemId
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesPlayerOwnCosmeticItemId(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesPlayerOwnCosmeticItemId");

	UOnlineInventorySubsystem_DoesPlayerOwnCosmeticItemId_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.DoesPlayerOwnCosmetic
// ()
// Parameters:
// struct FSelectedCosmetic       Cosmetic                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesPlayerOwnCosmetic(const struct FSelectedCosmetic& Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesPlayerOwnCosmetic");

	UOnlineInventorySubsystem_DoesPlayerOwnCosmetic_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.DoesPlayerOwnCompetitiveCosmeticItemId
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesPlayerOwnCompetitiveCosmeticItemId(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesPlayerOwnCompetitiveCosmeticItemId");

	UOnlineInventorySubsystem_DoesPlayerOwnCompetitiveCosmeticItemId_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.DoesCosmeticSlotSupportEmpty
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesCosmeticSlotSupportEmpty(ECharacterAppearanceSlot Slot, int SubSlot, const struct FName& Faction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesCosmeticSlotSupportEmpty");

	UOnlineInventorySubsystem_DoesCosmeticSlotSupportEmpty_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.DoesCosmeticSlotContainSubSlots
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesCosmeticSlotContainSubSlots(ECharacterAppearanceSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesCosmeticSlotContainSubSlots");

	UOnlineInventorySubsystem_DoesCosmeticSlotContainSubSlots_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.DoesCosmeticHaveParent
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesCosmeticHaveParent(class UClass* Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesCosmeticHaveParent");

	UOnlineInventorySubsystem_DoesCosmeticHaveParent_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.DoesCosmeticHaveChildren
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEquippedOnly                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::DoesCosmeticHaveChildren(class UClass* Cosmetic, bool bEquippedOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.DoesCosmeticHaveChildren");

	UOnlineInventorySubsystem_DoesCosmeticHaveChildren_Params params;
	params.Cosmetic = Cosmetic;
	params.bEquippedOnly = bEquippedOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.CanPurchase
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UOnlineInventorySubsystem::CanPurchase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.CanPurchase");

	UOnlineInventorySubsystem_CanPurchase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.OnlineInventorySubsystem.AttemptToClaimTutorialCredits
// ()
void UOnlineInventorySubsystem::AttemptToClaimTutorialCredits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.AttemptToClaimTutorialCredits");

	UOnlineInventorySubsystem_AttemptToClaimTutorialCredits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.AddNewStoredCosmeticState
// ()
// Parameters:
// struct FText                   NewStateName                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::AddNewStoredCosmeticState(struct FText* NewStateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.AddNewStoredCosmeticState");

	UOnlineInventorySubsystem_AddNewStoredCosmeticState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (NewStateName != nullptr)
		*NewStateName = params.NewStateName;

}


// Function Insurgency.OnlineInventorySubsystem.AddCosmeticToShoppingCart
// ()
// Parameters:
// int                            ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::AddCosmeticToShoppingCart(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.AddCosmeticToShoppingCart");

	UOnlineInventorySubsystem_AddCosmeticToShoppingCart_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.OnlineInventorySubsystem.AddCosmeticToCurrentState
// ()
// Parameters:
// struct FSelectedCosmetic       NewCosmetic                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UOnlineInventorySubsystem::AddCosmeticToCurrentState(const struct FSelectedCosmetic& NewCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.OnlineInventorySubsystem.AddCosmeticToCurrentState");

	UOnlineInventorySubsystem_AddCosmeticToCurrentState_Params params;
	params.NewCosmetic = NewCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOnlineInventorySubsystem::AfterRead()
{
	ULocalPlayerSubsystem::AfterRead();

}

void UOnlineInventorySubsystem::BeforeDelete()
{
	ULocalPlayerSubsystem::BeforeDelete();

}

// Function Insurgency.ObjectiveDestructible.OnStateChanged
// ()
void AObjectiveDestructible::OnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.OnStateChanged");

	AObjectiveDestructible_OnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.OnRigObjective
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::OnRigObjective(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.OnRigObjective");

	AObjectiveDestructible_OnRigObjective_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.OnRep_State
// ()
void AObjectiveDestructible::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.OnRep_State");

	AObjectiveDestructible_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.OnPlayDestructionEffects
// ()
void AObjectiveDestructible::OnPlayDestructionEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.OnPlayDestructionEffects");

	AObjectiveDestructible_OnPlayDestructionEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.OnObjectiveDestroyed
// ()
// Parameters:
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OriginalOwners                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::OnObjectiveDestroyed(class AController* EventInstigator, class AActor* DamageCauser, unsigned char OriginalOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.OnObjectiveDestroyed");

	AObjectiveDestructible_OnObjectiveDestroyed_Params params;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.OriginalOwners = OriginalOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ObjectiveDestructible.OnDestructibleObjectiveStateChangedDelegate__DelegateSignature
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDestructibleObjectiveState    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::OnDestructibleObjectiveStateChangedDelegate__DelegateSignature(class AObjectiveDestructible* Objective, EDestructibleObjectiveState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ObjectiveDestructible.OnDestructibleObjectiveStateChangedDelegate__DelegateSignature");

	AObjectiveDestructible_OnDestructibleObjectiveStateChangedDelegate__DelegateSignature_Params params;
	params.Objective = Objective;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.MulticastPlayDestructionEffects
// ()
void AObjectiveDestructible::MulticastPlayDestructionEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.MulticastPlayDestructionEffects");

	AObjectiveDestructible_MulticastPlayDestructionEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.MulticastCancelRigObjective
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::MulticastCancelRigObjective(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.MulticastCancelRigObjective");

	AObjectiveDestructible_MulticastCancelRigObjective_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.MulticastBeginRigObjective
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::MulticastBeginRigObjective(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.MulticastBeginRigObjective");

	AObjectiveDestructible_MulticastBeginRigObjective_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.IsPlanter
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::IsPlanter(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.IsPlanter");

	AObjectiveDestructible_IsPlanter_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.IsDisabledOrDestroyed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::IsDisabledOrDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.IsDisabledOrDestroyed");

	AObjectiveDestructible_IsDisabledOrDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.IsDisabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::IsDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.IsDisabled");

	AObjectiveDestructible_IsDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.IsDestroyed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::IsDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.IsDestroyed");

	AObjectiveDestructible_IsDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.IsDecoy
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::IsDecoy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.IsDecoy");

	AObjectiveDestructible_IsDecoy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.HasRiggedExplosives
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::HasRiggedExplosives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.HasRiggedExplosives");

	AObjectiveDestructible_HasRiggedExplosives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.HasLiveRiggedExplosives
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::HasLiveRiggedExplosives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.HasLiveRiggedExplosives");

	AObjectiveDestructible_HasLiveRiggedExplosives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.ChangeState
// ()
// Parameters:
// EDestructibleObjectiveState    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::ChangeState(EDestructibleObjectiveState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.ChangeState");

	AObjectiveDestructible_ChangeState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveDestructible.BlueprintCanTakeDamage
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AObjectiveDestructible::BlueprintCanTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.BlueprintCanTakeDamage");

	AObjectiveDestructible_BlueprintCanTakeDamage_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveDestructible.ApplyExplosionDamageAndPhysics
// ()
// Parameters:
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveDestructible::ApplyExplosionDamageAndPhysics(class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructible.ApplyExplosionDamageAndPhysics");

	AObjectiveDestructible_ApplyExplosionDamageAndPhysics_Params params;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AObjectiveDestructible::AfterRead()
{
	AObjectiveBase::AfterRead();

	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(MeshDefault, UStaticMesh);
	READ_PTR_FULL(MeshDamaged, UStaticMesh);
	READ_PTR_FULL(MeshDisabled, UStaticMesh);
	READ_PTR_FULL(MeshDestroyed, UStaticMesh);
	READ_PTR_FULL(ParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(ParticleSystemDamaged, UParticleSystem);
	READ_PTR_FULL(ParticleSystemDisabled, UParticleSystem);
	READ_PTR_FULL(ParticleSystemDestroyed, UParticleSystem);
	READ_PTR_FULL(AudioComponent, UINSAudioComponent);
	READ_PTR_FULL(AudioEventDamaged, UAkAudioEvent);
	READ_PTR_FULL(AudioEventDisabled, UAkAudioEvent);
	READ_PTR_FULL(AudioEventDestroyed, UAkAudioEvent);
	READ_PTR_FULL(AudioEventRig, UAkAudioEvent);
	READ_PTR_FULL(AudioEventRigCancel, UAkAudioEvent);
	READ_PTR_FULL(DamageLogComponent, UDamageLogComponent);
	READ_PTR_FULL(RigUIIcon, UTexture2D);
	READ_PTR_FULL(ExplosionDamageTypeClass, UClass);
}

void AObjectiveDestructible::BeforeDelete()
{
	AObjectiveBase::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(MeshDefault);
	DELE_PTR_FULL(MeshDamaged);
	DELE_PTR_FULL(MeshDisabled);
	DELE_PTR_FULL(MeshDestroyed);
	DELE_PTR_FULL(ParticleSystemComponent);
	DELE_PTR_FULL(ParticleSystemDamaged);
	DELE_PTR_FULL(ParticleSystemDisabled);
	DELE_PTR_FULL(ParticleSystemDestroyed);
	DELE_PTR_FULL(AudioComponent);
	DELE_PTR_FULL(AudioEventDamaged);
	DELE_PTR_FULL(AudioEventDisabled);
	DELE_PTR_FULL(AudioEventDestroyed);
	DELE_PTR_FULL(AudioEventRig);
	DELE_PTR_FULL(AudioEventRigCancel);
	DELE_PTR_FULL(DamageLogComponent);
	DELE_PTR_FULL(RigUIIcon);
	DELE_PTR_FULL(ExplosionDamageTypeClass);
}

void AObjectiveTruck::AfterRead()
{
	AObjectiveDestructible::AfterRead();

}

void AObjectiveTruck::BeforeDelete()
{
	AObjectiveDestructible::BeforeDelete();

}

// Function Insurgency.ObjectiveIcon.UpdateProgress
// ()
// Parameters:
// class UImage*                  Image                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::UpdateProgress(class UImage* Image)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.UpdateProgress");

	UObjectiveIcon_UpdateProgress_Params params;
	params.Image = Image;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.UpdateIconProgress
// ()
// Parameters:
// float                          OpacityAlpha                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::UpdateIconProgress(float OpacityAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.UpdateIconProgress");

	UObjectiveIcon_UpdateIconProgress_Params params;
	params.OpacityAlpha = OpacityAlpha;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.UpdateIcon
// ()
// Parameters:
// float                          InDistance                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InFrontDot                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InRightDot                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InIronsightFrac                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInIsOnScreen                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::UpdateIcon(float InDistance, float InFrontDot, float InRightDot, float InIronsightFrac, bool bInIsOnScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.UpdateIcon");

	UObjectiveIcon_UpdateIcon_Params params;
	params.InDistance = InDistance;
	params.InFrontDot = InFrontDot;
	params.InRightDot = InRightDot;
	params.InIronsightFrac = InIronsightFrac;
	params.bInIsOnScreen = bInIsOnScreen;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.ShouldShowObjectiveCaptureProgress
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UObjectiveIcon::ShouldShowObjectiveCaptureProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.ShouldShowObjectiveCaptureProgress");

	UObjectiveIcon_ShouldShowObjectiveCaptureProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.SetObjective
// ()
// Parameters:
// class AObjectiveBase*          NewObjective                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::SetObjective(class AObjectiveBase* NewObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.SetObjective");

	UObjectiveIcon_SetObjective_Params params;
	params.NewObjective = NewObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnSetObjective
// ()
// Parameters:
// class AObjectiveBase*          NewObjective                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnSetObjective(class AObjectiveBase* NewObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnSetObjective");

	UObjectiveIcon_OnSetObjective_Params params;
	params.NewObjective = NewObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnRemoveObjective
// ()
// Parameters:
// class AObjectiveBase*          OldObjective                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnRemoveObjective(class AObjectiveBase* OldObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnRemoveObjective");

	UObjectiveIcon_OnRemoveObjective_Params params;
	params.OldObjective = OldObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnPlayerChangeTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnPlayerChangeTeam(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnPlayerChangeTeam");

	UObjectiveIcon_OnPlayerChangeTeam_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnObjectiveIsCounterAttacked
// ()
// Parameters:
// bool                           bNewCounterAttackState         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          InObjective                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnObjectiveIsCounterAttacked(bool bNewCounterAttackState, class AObjectiveBase* InObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnObjectiveIsCounterAttacked");

	UObjectiveIcon_OnObjectiveIsCounterAttacked_Params params;
	params.bNewCounterAttackState = bNewCounterAttackState;
	params.InObjective = InObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnObjectiveChangeOwner
// ()
// Parameters:
// class AObjectiveBase*          InObjective                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnObjectiveChangeOwner(class AObjectiveBase* InObjective, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnObjectiveChangeOwner");

	UObjectiveIcon_OnObjectiveChangeOwner_Params params;
	params.InObjective = InObjective;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnObjectiveChangeCapturingTeam
// ()
// Parameters:
// class AObjectiveBase*          InObjective                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewCapturers                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnObjectiveChangeCapturingTeam(class AObjectiveBase* InObjective, unsigned char NewCapturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnObjectiveChangeCapturingTeam");

	UObjectiveIcon_OnObjectiveChangeCapturingTeam_Params params;
	params.InObjective = InObjective;
	params.NewCapturers = NewCapturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnObjectiveActive
// ()
// Parameters:
// bool                           bNewActiveState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          InObjective                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnObjectiveActive(bool bNewActiveState, class AObjectiveBase* InObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnObjectiveActive");

	UObjectiveIcon_OnObjectiveActive_Params params;
	params.bNewActiveState = bNewActiveState;
	params.InObjective = InObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.OnDestructibleObjectiveStateChanged
// ()
// Parameters:
// class AObjectiveDestructible*  InObjective                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDestructibleObjectiveState    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveIcon::OnDestructibleObjectiveStateChanged(class AObjectiveDestructible* InObjective, EDestructibleObjectiveState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.OnDestructibleObjectiveStateChanged");

	UObjectiveIcon_OnDestructibleObjectiveStateChanged_Params params;
	params.InObjective = InObjective;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveIcon.IsObjectiveContested
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UObjectiveIcon::IsObjectiveContested()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.IsObjectiveContested");

	UObjectiveIcon_IsObjectiveContested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveType
// ()
// Parameters:
// EObjectiveType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EObjectiveType UObjectiveIcon::GetObjectiveType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveType");

	UObjectiveIcon_GetObjectiveType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveRelationship
// ()
// Parameters:
// EObjectiveRelationship         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EObjectiveRelationship UObjectiveIcon::GetObjectiveRelationship()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveRelationship");

	UObjectiveIcon_GetObjectiveRelationship_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveLetter
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UObjectiveIcon::GetObjectiveLetter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveLetter");

	UObjectiveIcon_GetObjectiveLetter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveIconFillColorAndOpacity
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UObjectiveIcon::GetObjectiveIconFillColorAndOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveIconFillColorAndOpacity");

	UObjectiveIcon_GetObjectiveIconFillColorAndOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveIconColorAndOpacity
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UObjectiveIcon::GetObjectiveIconColorAndOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveIconColorAndOpacity");

	UObjectiveIcon_GetObjectiveIconColorAndOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveIconBorderColorAndOpacity
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UObjectiveIcon::GetObjectiveIconBorderColorAndOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveIconBorderColorAndOpacity");

	UObjectiveIcon_GetObjectiveIconBorderColorAndOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveDistance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UObjectiveIcon::GetObjectiveDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveDistance");

	UObjectiveIcon_GetObjectiveDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UObjectiveIcon::GetObjectiveColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveColor");

	UObjectiveIcon_GetObjectiveColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjectiveCaptureProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UObjectiveIcon::GetObjectiveCaptureProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjectiveCaptureProgress");

	UObjectiveIcon_GetObjectiveCaptureProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* UObjectiveIcon::GetObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetObjective");

	UObjectiveIcon_GetObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetMainOpacity
// ()
// Parameters:
// struct FSlateColor             ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSlateColor UObjectiveIcon::GetMainOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetMainOpacity");

	UObjectiveIcon_GetMainOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetIconMaterial
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSlateBrush UObjectiveIcon::GetIconMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetIconMaterial");

	UObjectiveIcon_GetIconMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetIconCaptureProgressColorAndOpacity
// ()
// Parameters:
// struct FSlateColor             ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSlateColor UObjectiveIcon::GetIconCaptureProgressColorAndOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetIconCaptureProgressColorAndOpacity");

	UObjectiveIcon_GetIconCaptureProgressColorAndOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetIconBorderVisibility
// ()
// Parameters:
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESlateVisibility UObjectiveIcon::GetIconBorderVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetIconBorderVisibility");

	UObjectiveIcon_GetIconBorderVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetFormattedObjectiveDistance
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UObjectiveIcon::GetFormattedObjectiveDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetFormattedObjectiveDistance");

	UObjectiveIcon_GetFormattedObjectiveDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetCapturingColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UObjectiveIcon::GetCapturingColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetCapturingColor");

	UObjectiveIcon_GetCapturingColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveIcon.GetBackgroundMaterial
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSlateBrush UObjectiveIcon::GetBackgroundMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveIcon.GetBackgroundMaterial");

	UObjectiveIcon_GetBackgroundMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UObjectiveIcon::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(BackgroundTexture, UTexture);
	READ_PTR_FULL(CapturePointTexture, UTexture);
	READ_PTR_FULL(BackgroundDestructibleTexture, UTexture);
	READ_PTR_FULL(DestructibleTexture, UTexture);
	READ_PTR_FULL(TextObjectiveLetter, UTextBlock);
	READ_PTR_FULL(IconScaleBox, UScaleBox);
	READ_PTR_FULL(CaptureProgress, UImage);
	READ_PTR_FULL(ObjectiveBorder, UBorder);
}

void UObjectiveIcon::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(BackgroundTexture);
	DELE_PTR_FULL(CapturePointTexture);
	DELE_PTR_FULL(BackgroundDestructibleTexture);
	DELE_PTR_FULL(DestructibleTexture);
	DELE_PTR_FULL(TextObjectiveLetter);
	DELE_PTR_FULL(IconScaleBox);
	DELE_PTR_FULL(CaptureProgress);
	DELE_PTR_FULL(ObjectiveBorder);
}

void AObjectiveCharacter::AfterRead()
{
	AObjectiveBase::AfterRead();

	READ_PTR_FULL(CharacterClass, UClass);
	READ_PTR_FULL(SpawnedCharacter, AINSSoldier);
	READ_PTR_FULL(SpawnedController, AINSAISoldierController);
}

void AObjectiveCharacter::BeforeDelete()
{
	AObjectiveBase::BeforeDelete();

	DELE_PTR_FULL(CharacterClass);
	DELE_PTR_FULL(SpawnedCharacter);
	DELE_PTR_FULL(SpawnedController);
}

// Function Insurgency.ObjectiveBriefing.PopulateObjectiveBriefing
// ()
// Parameters:
// bool                           bNewObjective                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveBriefing::PopulateObjectiveBriefing(bool bNewObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.PopulateObjectiveBriefing");

	UObjectiveBriefing_PopulateObjectiveBriefing_Params params;
	params.bNewObjective = bNewObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBriefing.OnScoreboardOpened
// ()
void UObjectiveBriefing::OnScoreboardOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.OnScoreboardOpened");

	UObjectiveBriefing_OnScoreboardOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBriefing.OnQueueObjectiveBriefing
// ()
void UObjectiveBriefing::OnQueueObjectiveBriefing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.OnQueueObjectiveBriefing");

	UObjectiveBriefing_OnQueueObjectiveBriefing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBriefing.OnObjectiveDestroyed
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Attackers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveBriefing::OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.OnObjectiveDestroyed");

	UObjectiveBriefing_OnObjectiveDestroyed_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Attackers = Attackers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBriefing.OnObjectiveCaptured
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Capturers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveBriefing::OnObjectiveCaptured(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.OnObjectiveCaptured");

	UObjectiveBriefing_OnObjectiveCaptured_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Capturers = Capturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBriefing.OnExitSpawnZone
// ()
void UObjectiveBriefing::OnExitSpawnZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.OnExitSpawnZone");

	UObjectiveBriefing_OnExitSpawnZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveBriefing.DoCreateDestructibleObjectiveIcon
// ()
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* UObjectiveBriefing::DoCreateDestructibleObjectiveIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.DoCreateDestructibleObjectiveIcon");

	UObjectiveBriefing_DoCreateDestructibleObjectiveIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBriefing.DoCreateCapturingObjectiveIcon
// ()
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* UObjectiveBriefing::DoCreateCapturingObjectiveIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.DoCreateCapturingObjectiveIcon");

	UObjectiveBriefing_DoCreateCapturingObjectiveIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ObjectiveBriefing.CheckForObjectiveUpdateQueue
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveBriefing::CheckForObjectiveUpdateQueue(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveBriefing.CheckForObjectiveUpdateQueue");

	UObjectiveBriefing_CheckForObjectiveUpdateQueue_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UObjectiveBriefing::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(BriefingHeading, UTextBlock);
	READ_PTR_FULL(CaptureObjectiveList, UHorizontalBox);
	READ_PTR_FULL(ObjectiveBriefingContainer, USizeBox);
	READ_PTR_FULL(ObjectiveBriefingTeamColorBorder, UBorder);
	READ_PTR_FULL(ObjectiveTypePopupText, UTextBlock);
	READ_PTR_FULL(ObjectiveTypeScoreboardText, UTextBlock);
	READ_PTR_FULL(ObjectiveTypeTextSwitcher, UWidgetSwitcher);
	READ_PTR_FULL(CurrentPlayerController, AINSPlayerController);
}

void UObjectiveBriefing::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(BriefingHeading);
	DELE_PTR_FULL(CaptureObjectiveList);
	DELE_PTR_FULL(ObjectiveBriefingContainer);
	DELE_PTR_FULL(ObjectiveBriefingTeamColorBorder);
	DELE_PTR_FULL(ObjectiveTypePopupText);
	DELE_PTR_FULL(ObjectiveTypeScoreboardText);
	DELE_PTR_FULL(ObjectiveTypeTextSwitcher);
	DELE_PTR_FULL(CurrentPlayerController);
}

// Function Insurgency.ObjectiveAction.SetActionCompleted
// ()
void AObjectiveAction::SetActionCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveAction.SetActionCompleted");

	AObjectiveAction_SetActionCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveAction.OnEndObjectiveOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveAction::OnEndObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveAction.OnEndObjectiveOverlap");

	AObjectiveAction_OnEndObjectiveOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveAction.OnBeginObjectiveOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AObjectiveAction::OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveAction.OnBeginObjectiveOverlap");

	AObjectiveAction_OnBeginObjectiveOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ObjectiveAction.ActionPerformedBySoldier
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectiveActionType           InputActionType                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          CompletionDelay                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AObjectiveAction::ActionPerformedBySoldier(class AINSSoldier* Soldier, EObjectiveActionType InputActionType, float CompletionDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveAction.ActionPerformedBySoldier");

	AObjectiveAction_ActionPerformedBySoldier_Params params;
	params.Soldier = Soldier;
	params.InputActionType = InputActionType;
	params.CompletionDelay = CompletionDelay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AObjectiveAction::AfterRead()
{
	AObjectiveBase::AfterRead();

}

void AObjectiveAction::BeforeDelete()
{
	AObjectiveBase::BeforeDelete();

}

// Function Insurgency.ObjectiveDestructableAchievement.OnRecievedObjectiveDestroy
// ()
// Parameters:
// class AINSPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromRig                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveDestructableAchievement::OnRecievedObjectiveDestroy(class AINSPlayerController* PC, class AObjectiveDestructible* Objective, bool bFromRig)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveDestructableAchievement.OnRecievedObjectiveDestroy");

	UObjectiveDestructableAchievement_OnRecievedObjectiveDestroy_Params params;
	params.PC = PC;
	params.Objective = Objective;
	params.bFromRig = bFromRig;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UObjectiveDestructableAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UObjectiveDestructableAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

void UDrainedAchievement::AfterRead()
{
	UObjectiveDestructableAchievement::AfterRead();

}

void UDrainedAchievement::BeforeDelete()
{
	UObjectiveDestructableAchievement::BeforeDelete();

}

void USelfDestructiveAchievement::AfterRead()
{
	UObjectiveDestructableAchievement::AfterRead();

}

void USelfDestructiveAchievement::BeforeDelete()
{
	UObjectiveDestructableAchievement::BeforeDelete();

}

void USpecialDeliveryAchievement::AfterRead()
{
	UObjectiveDestructableAchievement::AfterRead();

}

void USpecialDeliveryAchievement::BeforeDelete()
{
	UObjectiveDestructableAchievement::BeforeDelete();

}

// Function Insurgency.TurfWarAchievement.OnRecievedObjectiveReset
// ()
// Parameters:
// class AINSPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTurfWarAchievement::OnRecievedObjectiveReset(class AINSPlayerController* PC, class AObjectiveCapturable* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TurfWarAchievement.OnRecievedObjectiveReset");

	UTurfWarAchievement_OnRecievedObjectiveReset_Params params;
	params.PC = PC;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTurfWarAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UTurfWarAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.CarryingAchievement.OnRecievedObjectiveCaptured
// ()
// Parameters:
// class AINSPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCarryingAchievement::OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CarryingAchievement.OnRecievedObjectiveCaptured");

	UCarryingAchievement_OnRecievedObjectiveCaptured_Params params;
	params.PC = PC;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCarryingAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UCarryingAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.ObjectiveCapturedAchievement.OnRecievedObjectiveCaptured
// ()
// Parameters:
// class AINSPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UObjectiveCapturedAchievement::OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ObjectiveCapturedAchievement.OnRecievedObjectiveCaptured");

	UObjectiveCapturedAchievement_OnRecievedObjectiveCaptured_Params params;
	params.PC = PC;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UObjectiveCapturedAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UObjectiveCapturedAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

void UObjectiveAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UObjectiveAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

void ANonVaultingVolume::AfterRead()
{
	AVolume::AfterRead();

}

void ANonVaultingVolume::BeforeDelete()
{
	AVolume::BeforeDelete();

}

// Function Insurgency.NoiseLibrary.SmoothNoise
// ()
// Parameters:
// int                            X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UNoiseLibrary::SmoothNoise(int X)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.NoiseLibrary.SmoothNoise");

	UNoiseLibrary_SmoothNoise_Params params;
	params.X = X;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.NoiseLibrary.PerlinNoise
// ()
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Persistence                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Octaves                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UNoiseLibrary::PerlinNoise(float X, float Persistence, int Octaves)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.NoiseLibrary.PerlinNoise");

	UNoiseLibrary_PerlinNoise_Params params;
	params.X = X;
	params.Persistence = Persistence;
	params.Octaves = Octaves;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.NoiseLibrary.Noise
// ()
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UNoiseLibrary::Noise(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.NoiseLibrary.Noise");

	UNoiseLibrary_Noise_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.NoiseLibrary.InterpolatedNoise
// ()
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UNoiseLibrary::InterpolatedNoise(float X)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.NoiseLibrary.InterpolatedNoise");

	UNoiseLibrary_InterpolatedNoise_Params params;
	params.X = X;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNoiseLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UNoiseLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UNavQueryFilter_IgnoreDeathArea::AfterRead()
{
	UNavigationQueryFilter::AfterRead();

}

void UNavQueryFilter_IgnoreDeathArea::BeforeDelete()
{
	UNavigationQueryFilter::BeforeDelete();

}

void UNavQueryFilter_ExcludeHazards::AfterRead()
{
	UNavigationQueryFilter::AfterRead();

}

void UNavQueryFilter_ExcludeHazards::BeforeDelete()
{
	UNavigationQueryFilter::BeforeDelete();

}

void UNavQueryFilter_ExcludeDanger::AfterRead()
{
	UNavigationQueryFilter::AfterRead();

}

void UNavQueryFilter_ExcludeDanger::BeforeDelete()
{
	UNavigationQueryFilter::BeforeDelete();

}

void UNavAreaExtended::AfterRead()
{
	UNavArea::AfterRead();

}

void UNavAreaExtended::BeforeDelete()
{
	UNavArea::BeforeDelete();

}

void UNavArea_Hazard::AfterRead()
{
	UNavAreaExtended::AfterRead();

}

void UNavArea_Hazard::BeforeDelete()
{
	UNavAreaExtended::BeforeDelete();

}

void UNavArea_DeathArea::AfterRead()
{
	UNavAreaExtended::AfterRead();

}

void UNavArea_DeathArea::BeforeDelete()
{
	UNavAreaExtended::BeforeDelete();

}

// Function Insurgency.Mutator.OnTextMessageSent
// ()
// Parameters:
// class AINSPlayerController*    Speaker                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bTeamOnly                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMutator::OnTextMessageSent(class AINSPlayerController* Speaker, const struct FText& Message, bool bTeamOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnTextMessageSent");

	UMutator_OnTextMessageSent_Params params;
	params.Speaker = Speaker;
	params.Message = Message;
	params.bTeamOnly = bTeamOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Mutator.OnTeamInitialized
// ()
// Parameters:
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnTeamInitialized(class ATeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnTeamInitialized");

	UMutator_OnTeamInitialized_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnRoundStarted
// ()
void UMutator::OnRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnRoundStarted");

	UMutator_OnRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnRoundOver
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnRoundOver");

	UMutator_OnRoundOver_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerTeamChanged
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewTeamId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDidKillPlayer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnPlayerTeamChanged(class AController* Controller, unsigned char NewTeamId, bool bForced, bool bDidKillPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerTeamChanged");

	UMutator_OnPlayerTeamChanged_Params params;
	params.Controller = Controller;
	params.NewTeamId = NewTeamId;
	params.bForced = bForced;
	params.bDidKillPlayer = bDidKillPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerTakeAnyDamage
// ()
// Parameters:
// class AINSSoldier*             Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Attacker                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutDamage                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMutator::OnPlayerTakeAnyDamage(class AINSSoldier* Victim, class AController* Attacker, class AActor* DamageCauser, float* OutDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerTakeAnyDamage");

	UMutator_OnPlayerTakeAnyDamage_Params params;
	params.Victim = Victim;
	params.Attacker = Attacker;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDamage != nullptr)
		*OutDamage = params.OutDamage;


	return params.ReturnValue;
}


// Function Insurgency.Mutator.OnPlayerSpawned
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                StartRotation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UMutator::OnPlayerSpawned(class AINSSoldier* Soldier, class AController* NewPlayer, const struct FRotator& StartRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerSpawned");

	UMutator_OnPlayerSpawned_Params params;
	params.Soldier = Soldier;
	params.NewPlayer = NewPlayer;
	params.StartRotation = StartRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerPostInitialize
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnPlayerPostInitialize(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerPostInitialize");

	UMutator_OnPlayerPostInitialize_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerLogout
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnPlayerLogout(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerLogout");

	UMutator_OnPlayerLogout_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerLogin
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Portal                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Options                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnPlayerLogin(class APlayerController* PlayerController, const struct FString& Portal, const struct FString& Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerLogin");

	UMutator_OnPlayerLogin_Params params;
	params.PlayerController = PlayerController;
	params.Portal = Portal;
	params.Options = Options;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerKilledAnyDamage
// ()
// Parameters:
// class AINSSoldier*             Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Assister                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnPlayerKilledAnyDamage(class AINSSoldier* Victim, float KillingDamage, class AController* Killer, class AController* Assister, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerKilledAnyDamage");

	UMutator_OnPlayerKilledAnyDamage_Params params;
	params.Victim = Victim;
	params.KillingDamage = KillingDamage;
	params.Killer = Killer;
	params.Assister = Assister;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnPlayerClassChanged
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnPlayerClassChanged(class AController* Controller, class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnPlayerClassChanged");

	UMutator_OnPlayerClassChanged_Params params;
	params.Controller = Controller;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnObjectiveChangeOwnership
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnObjectiveChangeOwnership(class AObjectiveBase* Objective, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnObjectiveChangeOwnership");

	UMutator_OnObjectiveChangeOwnership_Params params;
	params.Objective = Objective;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.OnFactionsInitialized
// ()
// Parameters:
// TArray<class ATeamInfo*>       Teams                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::OnFactionsInitialized(TArray<class ATeamInfo*> Teams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.OnFactionsInitialized");

	UMutator_OnFactionsInitialized_Params params;
	params.Teams = Teams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.InitializeMutatorPostLoad
// ()
void UMutator::InitializeMutatorPostLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.InitializeMutatorPostLoad");

	UMutator_InitializeMutatorPostLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.InitializeMutator
// ()
// Parameters:
// class AINSGameMode*            GameMode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Options                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutator::InitializeMutator(class AINSGameMode* GameMode, const struct FString& Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.InitializeMutator");

	UMutator_InitializeMutator_Params params;
	params.GameMode = GameMode;
	params.Options = Options;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.GivePlayerInventory
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromResupply                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMutator::GivePlayerInventory(class AINSSoldier* Player, bool bFromResupply)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.GivePlayerInventory");

	UMutator_GivePlayerInventory_Params params;
	params.Player = Player;
	params.bFromResupply = bFromResupply;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Mutator.GetRulesForGameModeCopy
// ()
// Parameters:
// class UClass*                  GameMode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRulesetGameModeRulesMinimal OutRules                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMutator::GetRulesForGameModeCopy(class UClass* GameMode, struct FRulesetGameModeRulesMinimal* OutRules)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.GetRulesForGameModeCopy");

	UMutator_GetRulesForGameModeCopy_Params params;
	params.GameMode = GameMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutRules != nullptr)
		*OutRules = params.OutRules;


	return params.ReturnValue;
}


// Function Insurgency.Mutator.GetRequiredAssets
// ()
void UMutator::GetRequiredAssets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.GetRequiredAssets");

	UMutator_GetRequiredAssets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Mutator.GetOwnerGameMode
// ()
// Parameters:
// class AINSGameMode*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSGameMode* UMutator::GetOwnerGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.GetOwnerGameMode");

	UMutator_GetOwnerGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Mutator.CanItemDrop
// ()
// Parameters:
// class AItemBase*               Item                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanDrop                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMutator::CanItemDrop(class AItemBase* Item, class AINSSoldier* Owner, bool* bCanDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Mutator.CanItemDrop");

	UMutator_CanItemDrop_Params params;
	params.Item = Item;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (bCanDrop != nullptr)
		*bCanDrop = params.bCanDrop;


	return params.ReturnValue;
}


void UMutator::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMutator::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UMutator_Vampirism::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_Vampirism::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_Ultralethal::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_Ultralethal::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_SupplyBase::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_SupplyBase::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_NoDrops::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_NoDrops::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_LoadoutBase::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_LoadoutBase::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_HotPotato::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_HotPotato::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_HeadshotOnly::AfterRead()
{
	UMutator::AfterRead();

}

void UMutator_HeadshotOnly::BeforeDelete()
{
	UMutator::BeforeDelete();

}

void UMutator_CoopBase::AfterRead()
{
	UMutator::AfterRead();

	READ_PTR_FULL(AllFactionsBotSquadLayoutOverride, USquadLayout);
	READ_PTR_FULL(CounterAttackOverride, UCheckpointCounterAttackTypes);
}

void UMutator_CoopBase::BeforeDelete()
{
	UMutator::BeforeDelete();

	DELE_PTR_FULL(AllFactionsBotSquadLayoutOverride);
	DELE_PTR_FULL(CounterAttackOverride);
}

// Function Insurgency.MutatorStatics.GetMutatorDisplayNames
// ()
// Parameters:
// TArray<struct FName>           InNames                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FText>           OutDisplayNames                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMutatorStatics::GetMutatorDisplayNames(TArray<struct FName> InNames, TArray<struct FText>* OutDisplayNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MutatorStatics.GetMutatorDisplayNames");

	UMutatorStatics_GetMutatorDisplayNames_Params params;
	params.InNames = InNames;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDisplayNames != nullptr)
		*OutDisplayNames = params.OutDisplayNames;

}


// Function Insurgency.MutatorStatics.GetMutatorDisplayName
// ()
// Parameters:
// struct FName                   InName                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutDisplayName                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UMutatorStatics::GetMutatorDisplayName(const struct FName& InName, struct FText* OutDisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MutatorStatics.GetMutatorDisplayName");

	UMutatorStatics_GetMutatorDisplayName_Params params;
	params.InName = InName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDisplayName != nullptr)
		*OutDisplayName = params.OutDisplayName;

}


void UMutatorStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UMutatorStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.MusicManagerComponent.OnPlayerMusicUpdated
// ()
// Parameters:
// struct FPlayingMusic           PlayingMusic                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UMusicManagerComponent::OnPlayerMusicUpdated(const struct FPlayingMusic& PlayingMusic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MusicManagerComponent.OnPlayerMusicUpdated");

	UMusicManagerComponent_OnPlayerMusicUpdated_Params params;
	params.PlayingMusic = PlayingMusic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MusicManagerComponent.OnMusicDirectorStateChange
// ()
// Parameters:
// TEnumAsByte<EMusicDirectorState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EMusicDirectorState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMusicManagerComponent::OnMusicDirectorStateChange(TEnumAsByte<EMusicDirectorState> OldState, TEnumAsByte<EMusicDirectorState> NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MusicManagerComponent.OnMusicDirectorStateChange");

	UMusicManagerComponent_OnMusicDirectorStateChange_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMusicManagerComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UMusicManagerComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Insurgency.MusicDirector.OnUIMusicBanksLoaded
// ()
void UMusicDirector::OnUIMusicBanksLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MusicDirector.OnUIMusicBanksLoaded");

	UMusicDirector_OnUIMusicBanksLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.MusicDirector.MusicDirectorStateUpdate__DelegateSignature
// ()
// Parameters:
// TEnumAsByte<EMusicDirectorState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EMusicDirectorState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMusicDirector::MusicDirectorStateUpdate__DelegateSignature(TEnumAsByte<EMusicDirectorState> OldState, TEnumAsByte<EMusicDirectorState> NewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.MusicDirector.MusicDirectorStateUpdate__DelegateSignature");

	UMusicDirector_MusicDirectorStateUpdate__DelegateSignature_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMusicDirector::AfterRead()
{
	UObject::AfterRead();

}

void UMusicDirector::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.MountedWeapon.OnMountedWeaponReplicated
// ()
void AMountedWeapon::OnMountedWeaponReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MountedWeapon.OnMountedWeaponReplicated");

	AMountedWeapon_OnMountedWeaponReplicated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMountedWeapon::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MountedGunBase, UStaticMeshComponent);
	READ_PTR_FULL(MountedGunYaw, UStaticMeshComponent);
	READ_PTR_FULL(VehicleSeat, UVehicleSeatComponent);
	READ_PTR_FULL(WeaponClass, UClass);
	READ_PTR_FULL(WeaponAnimInstanceClass, UClass);
	READ_PTR_FULL(HintImage, UTexture2D);
}

void AMountedWeapon::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MountedGunBase);
	DELE_PTR_FULL(MountedGunYaw);
	DELE_PTR_FULL(VehicleSeat);
	DELE_PTR_FULL(WeaponClass);
	DELE_PTR_FULL(WeaponAnimInstanceClass);
	DELE_PTR_FULL(HintImage);
}

// Function Insurgency.ModSubsystem.RenewToken
// ()
void UModSubsystem::RenewToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.RenewToken");

	UModSubsystem_RenewToken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.OnSubscribedModActivated
// ()
// Parameters:
// struct FModState               ModState                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bIsUpToDate                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UModSubsystem::OnSubscribedModActivated(const struct FModState& ModState, bool bIsUpToDate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.OnSubscribedModActivated");

	UModSubsystem_OnSubscribedModActivated_Params params;
	params.ModState = ModState;
	params.bIsUpToDate = bIsUpToDate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.OnOnlineAuthStateChanged
// ()
// Parameters:
// EModPlatformAuthState          NewAuthState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UModSubsystem::OnOnlineAuthStateChanged(EModPlatformAuthState NewAuthState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.OnOnlineAuthStateChanged");

	UModSubsystem_OnOnlineAuthStateChanged_Params params;
	params.NewAuthState = NewAuthState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.OnModDeactivatedFromCloud
// ()
// Parameters:
// struct FModState               ModState                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UModSubsystem::OnModDeactivatedFromCloud(const struct FModState& ModState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.OnModDeactivatedFromCloud");

	UModSubsystem_OnModDeactivatedFromCloud_Params params;
	params.ModState = ModState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.OnInitialServerModDownloadsComplete
// ()
void UModSubsystem::OnInitialServerModDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.OnInitialServerModDownloadsComplete");

	UModSubsystem_OnInitialServerModDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.OnAcceptedServiceTerms
// ()
void UModSubsystem::OnAcceptedServiceTerms()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.OnAcceptedServiceTerms");

	UModSubsystem_OnAcceptedServiceTerms_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.FindThumbnailForLevel
// ()
// Parameters:
// struct FString                 LevelName                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Lighting                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UModSubsystem::FindThumbnailForLevel(const struct FString& LevelName, const struct FString& Lighting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.FindThumbnailForLevel");

	UModSubsystem_FindThumbnailForLevel_Params params;
	params.LevelName = LevelName;
	params.Lighting = Lighting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModSubsystem.FindLoadingScreenForLevel
// ()
// Parameters:
// struct FString                 LevelName                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Lighting                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UModSubsystem::FindLoadingScreenForLevel(const struct FString& LevelName, const struct FString& Lighting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModSubsystem.FindLoadingScreenForLevel");

	UModSubsystem_FindLoadingScreenForLevel_Params params;
	params.LevelName = LevelName;
	params.Lighting = Lighting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UModSubsystem::AfterRead()
{
	UEngineSubsystem::AfterRead();

}

void UModSubsystem::BeforeDelete()
{
	UEngineSubsystem::BeforeDelete();

}

void UModData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UModData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.ModalPopupWidget.SetVisibleConfirmBtn
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UModalPopupWidget::SetVisibleConfirmBtn(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModalPopupWidget.SetVisibleConfirmBtn");

	UModalPopupWidget_SetVisibleConfirmBtn_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModalPopupWidget.SetVisibleCancelBtn
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UModalPopupWidget::SetVisibleCancelBtn(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModalPopupWidget.SetVisibleCancelBtn");

	UModalPopupWidget_SetVisibleCancelBtn_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModalPopupWidget.OnUpdatedText
// ()
void UModalPopupWidget::OnUpdatedText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModalPopupWidget.OnUpdatedText");

	UModalPopupWidget_OnUpdatedText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModalPopupWidget.OnConfirmed
// ()
void UModalPopupWidget::OnConfirmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModalPopupWidget.OnConfirmed");

	UModalPopupWidget_OnConfirmed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ModalPopupWidget.OnCancelled
// ()
void UModalPopupWidget::OnCancelled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ModalPopupWidget.OnCancelled");

	UModalPopupWidget_OnCancelled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UModalPopupWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UModalPopupWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

void UMenuSquadLayout::AfterRead()
{
	UPrimaryDataAsset::AfterRead();

	READ_PTR_FULL(Faction, UFactionDefinition);
}

void UMenuSquadLayout::BeforeDelete()
{
	UPrimaryDataAsset::BeforeDelete();

	DELE_PTR_FULL(Faction);
}

// Function Insurgency.INSBasePlayerController.UpdateInputMode
// ()
// Parameters:
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::UpdateInputMode(bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.UpdateInputMode");

	AINSBasePlayerController_UpdateInputMode_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.UpdatedPlayerSettings
// ()
void AINSBasePlayerController::UpdatedPlayerSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.UpdatedPlayerSettings");

	AINSBasePlayerController_UpdatedPlayerSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.UnmutePlayerState
// ()
// Parameters:
// class APlayerState*            OtherPlayerState               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::UnmutePlayerState(class APlayerState* OtherPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.UnmutePlayerState");

	AINSBasePlayerController_UnmutePlayerState_Params params;
	params.OtherPlayerState = OtherPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ToggleDebugMenu
// ()
void AINSBasePlayerController::ToggleDebugMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ToggleDebugMenu");

	AINSBasePlayerController_ToggleDebugMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ToggleAdminMenu
// ()
void AINSBasePlayerController::ToggleAdminMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ToggleAdminMenu");

	AINSBasePlayerController_ToggleAdminMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ShowScoreboard
// ()
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ShowScoreboard(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ShowScoreboard");

	AINSBasePlayerController_ShowScoreboard_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.ShowRoundOverUIDelegate__DelegateSignature
// ()
// Parameters:
// struct FPlayerRoundOverData    UIData                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ShowRoundOverUIDelegate__DelegateSignature(const struct FPlayerRoundOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.ShowRoundOverUIDelegate__DelegateSignature");

	AINSBasePlayerController_ShowRoundOverUIDelegate__DelegateSignature_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.ShowMatchOverUIDelegate__DelegateSignature
// ()
// Parameters:
// struct FPlayerMatchOverData    UIData                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ShowMatchOverUIDelegate__DelegateSignature(const struct FPlayerMatchOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.ShowMatchOverUIDelegate__DelegateSignature");

	AINSBasePlayerController_ShowMatchOverUIDelegate__DelegateSignature_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ShowMap
// ()
void AINSBasePlayerController::ShowMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ShowMap");

	AINSBasePlayerController_ShowMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ShowGenericMenu
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* AINSBasePlayerController::ShowGenericMenu(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ShowGenericMenu");

	AINSBasePlayerController_ShowGenericMenu_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.ShouldHintLesson
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALessonArea*             LessonArea                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSBasePlayerController::ShouldHintLesson(class UClass* Lesson, class ALessonArea* LessonArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ShouldHintLesson");

	AINSBasePlayerController_ShouldHintLesson_Params params;
	params.Lesson = Lesson;
	params.LessonArea = LessonArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.SetVideo
// ()
// Parameters:
// struct FString                 GroupId                        (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 HighlightId                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            StartDelta                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            EndDelta                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::SetVideo(const struct FString& GroupId, const struct FString& HighlightId, int StartDelta, int EndDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.SetVideo");

	AINSBasePlayerController_SetVideo_Params params;
	params.GroupId = GroupId;
	params.HighlightId = HighlightId;
	params.StartDelta = StartDelta;
	params.EndDelta = EndDelta;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.SetGenericMenu
// ()
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::SetGenericMenu(class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.SetGenericMenu");

	AINSBasePlayerController_SetGenericMenu_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.SetActiveHint
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HintTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPlayVideo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPause                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::SetActiveHint(class UClass* Lesson, float HintTime, bool bPlayVideo, bool bPause)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.SetActiveHint");

	AINSBasePlayerController_SetActiveHint_Params params;
	params.Lesson = Lesson;
	params.HintTime = HintTime;
	params.bPlayVideo = bPlayVideo;
	params.bPause = bPause;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminUnbanPlayer
// ()
// Parameters:
// struct FString                 UniqueId                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminUnbanPlayer(const struct FString& UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminUnbanPlayer");

	AINSBasePlayerController_Server_AdminUnbanPlayer_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminTravelScenario
// ()
// Parameters:
// struct FString                 Scenario                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminTravelScenario(const struct FString& Scenario)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminTravelScenario");

	AINSBasePlayerController_Server_AdminTravelScenario_Params params;
	params.Scenario = Scenario;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminTravelMap
// ()
// Parameters:
// struct FString                 TravelArgs                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminTravelMap(const struct FString& TravelArgs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminTravelMap");

	AINSBasePlayerController_Server_AdminTravelMap_Params params;
	params.TravelArgs = TravelArgs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminTravel
// ()
// Parameters:
// struct FString                 Level                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Scenario                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminTravel(const struct FString& Level, const struct FString& Scenario)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminTravel");

	AINSBasePlayerController_Server_AdminTravel_Params params;
	params.Level = Level;
	params.Scenario = Scenario;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminSetGamemodeProperty
// ()
// Parameters:
// struct FString                 Property                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Value                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminSetGamemodeProperty(const struct FString& Property, const struct FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminSetGamemodeProperty");

	AINSBasePlayerController_Server_AdminSetGamemodeProperty_Params params;
	params.Property = Property;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminRestartRound
// ()
// Parameters:
// bool                           bSwitchTeams                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminRestartRound(bool bSwitchTeams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminRestartRound");

	AINSBasePlayerController_Server_AdminRestartRound_Params params;
	params.bSwitchTeams = bSwitchTeams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminRestartLevel
// ()
void AINSBasePlayerController::Server_AdminRestartLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminRestartLevel");

	AINSBasePlayerController_Server_AdminRestartLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminRespawnAllPlayers
// ()
void AINSBasePlayerController::Server_AdminRespawnAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminRespawnAllPlayers");

	AINSBasePlayerController_Server_AdminRespawnAllPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminRequestScenarios
// ()
// Parameters:
// struct FString                 LevelName                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminRequestScenarios(const struct FString& LevelName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminRequestScenarios");

	AINSBasePlayerController_Server_AdminRequestScenarios_Params params;
	params.LevelName = LevelName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminRequestLevels
// ()
void AINSBasePlayerController::Server_AdminRequestLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminRequestLevels");

	AINSBasePlayerController_Server_AdminRequestLevels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminKickPlayer
// ()
// Parameters:
// int                            PlayerId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminKickPlayer(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminKickPlayer");

	AINSBasePlayerController_Server_AdminKickPlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminGetGamemodeProperty
// ()
// Parameters:
// struct FString                 Property                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminGetGamemodeProperty(const struct FString& Property)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminGetGamemodeProperty");

	AINSBasePlayerController_Server_AdminGetGamemodeProperty_Params params;
	params.Property = Property;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminForceGameOver
// ()
void AINSBasePlayerController::Server_AdminForceGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminForceGameOver");

	AINSBasePlayerController_Server_AdminForceGameOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminExtendRoundTimer
// ()
void AINSBasePlayerController::Server_AdminExtendRoundTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminExtendRoundTimer");

	AINSBasePlayerController_Server_AdminExtendRoundTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminEndRound
// ()
// Parameters:
// bool                           bVictory                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminEndRound(bool bVictory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminEndRound");

	AINSBasePlayerController_Server_AdminEndRound_Params params;
	params.bVictory = bVictory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminDebugPlayerState
// ()
void AINSBasePlayerController::Server_AdminDebugPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminDebugPlayerState");

	AINSBasePlayerController_Server_AdminDebugPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminDebugLightLevels
// ()
void AINSBasePlayerController::Server_AdminDebugLightLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminDebugLightLevels");

	AINSBasePlayerController_Server_AdminDebugLightLevels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminConsoleCommand
// ()
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminConsoleCommand(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminConsoleCommand");

	AINSBasePlayerController_Server_AdminConsoleCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminCheat
// ()
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminCheat(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminCheat");

	AINSBasePlayerController_Server_AdminCheat_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminBypassWaitingState
// ()
void AINSBasePlayerController::Server_AdminBypassWaitingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminBypassWaitingState");

	AINSBasePlayerController_Server_AdminBypassWaitingState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminBroadcastMusic
// ()
// Parameters:
// EMusicEvent                    Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminBroadcastMusic(EMusicEvent Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminBroadcastMusic");

	AINSBasePlayerController_Server_AdminBroadcastMusic_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminBeginProfiling
// ()
// Parameters:
// bool                           bStopAtRoundEnd                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminBeginProfiling(bool bStopAtRoundEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminBeginProfiling");

	AINSBasePlayerController_Server_AdminBeginProfiling_Params params;
	params.bStopAtRoundEnd = bStopAtRoundEnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Server_AdminBanPlayer
// ()
// Parameters:
// int                            PlayerId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BanDuration                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Server_AdminBanPlayer(int PlayerId, float BanDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Server_AdminBanPlayer");

	AINSBasePlayerController_Server_AdminBanPlayer_Params params;
	params.PlayerId = PlayerId;
	params.BanDuration = BanDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.RoundOverRewardsDelegate__DelegateSignature
// ()
// Parameters:
// int                            RoundNumber                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameStatsRoundReward   Rewards                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::RoundOverRewardsDelegate__DelegateSignature(int RoundNumber, const struct FGameStatsRoundReward& Rewards)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.RoundOverRewardsDelegate__DelegateSignature");

	AINSBasePlayerController_RoundOverRewardsDelegate__DelegateSignature_Params params;
	params.RoundNumber = RoundNumber;
	params.Rewards = Rewards;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ReturnToMainMenu
// ()
void AINSBasePlayerController::ReturnToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ReturnToMainMenu");

	AINSBasePlayerController_ReturnToMainMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ResetPlayerAccount
// ()
void AINSBasePlayerController::ResetPlayerAccount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ResetPlayerAccount");

	AINSBasePlayerController_ResetPlayerAccount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.RefreshTeamsDelegate__DelegateSignature
// ()
void AINSBasePlayerController::RefreshTeamsDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.RefreshTeamsDelegate__DelegateSignature");

	AINSBasePlayerController_RefreshTeamsDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.RefreshObjectivesDelegate__DelegateSignature
// ()
void AINSBasePlayerController::RefreshObjectivesDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.RefreshObjectivesDelegate__DelegateSignature");

	AINSBasePlayerController_RefreshObjectivesDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.RefreshMutatorsDelegate__DelegateSignature
// ()
void AINSBasePlayerController::RefreshMutatorsDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.RefreshMutatorsDelegate__DelegateSignature");

	AINSBasePlayerController_RefreshMutatorsDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.PrintAvailableFireSupport
// ()
void AINSBasePlayerController::PrintAvailableFireSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.PrintAvailableFireSupport");

	AINSBasePlayerController_PrintAvailableFireSupport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.PlayerSettingsUpdatedDelegate__DelegateSignature
// ()
void AINSBasePlayerController::PlayerSettingsUpdatedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.PlayerSettingsUpdatedDelegate__DelegateSignature");

	AINSBasePlayerController_PlayerSettingsUpdatedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.PlayerAdminReceivedScenarioList__DelegateSignature
// ()
// Parameters:
// TArray<struct FString>         Scenarios                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::PlayerAdminReceivedScenarioList__DelegateSignature(TArray<struct FString> Scenarios)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.PlayerAdminReceivedScenarioList__DelegateSignature");

	AINSBasePlayerController_PlayerAdminReceivedScenarioList__DelegateSignature_Params params;
	params.Scenarios = Scenarios;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.PlayerAdminReceivedLevelList__DelegateSignature
// ()
// Parameters:
// TArray<struct FString>         LevelNames                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::PlayerAdminReceivedLevelList__DelegateSignature(TArray<struct FString> LevelNames)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.PlayerAdminReceivedLevelList__DelegateSignature");

	AINSBasePlayerController_PlayerAdminReceivedLevelList__DelegateSignature_Params params;
	params.LevelNames = LevelNames;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OpenNVIDIAHighlights
// ()
void AINSBasePlayerController::OpenNVIDIAHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OpenNVIDIAHighlights");

	AINSBasePlayerController_OpenNVIDIAHighlights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnSoundscapeUpdate
// ()
// Parameters:
// struct FSoundscapeStateRepl    NewState                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::OnSoundscapeUpdate(const struct FSoundscapeStateRepl& NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnSoundscapeUpdate");

	AINSBasePlayerController_OnSoundscapeUpdate_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.OnShowCenterMessageDelegate__DelegateSignature
// ()
// Parameters:
// struct FText                   MessageText                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::OnShowCenterMessageDelegate__DelegateSignature(const struct FText& MessageText)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.OnShowCenterMessageDelegate__DelegateSignature");

	AINSBasePlayerController_OnShowCenterMessageDelegate__DelegateSignature_Params params;
	params.MessageText = MessageText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.OnSetViewTargetDelegate__DelegateSignature
// ()
// Parameters:
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::OnSetViewTargetDelegate__DelegateSignature(class AActor* NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.OnSetViewTargetDelegate__DelegateSignature");

	AINSBasePlayerController_OnSetViewTargetDelegate__DelegateSignature_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.OnScoreboardShownDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bShow                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::OnScoreboardShownDelegate__DelegateSignature(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.OnScoreboardShownDelegate__DelegateSignature");

	AINSBasePlayerController_OnScoreboardShownDelegate__DelegateSignature_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnQueuedHintReady
// ()
void AINSBasePlayerController::OnQueuedHintReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnQueuedHintReady");

	AINSBasePlayerController_OnQueuedHintReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnPlayerReportingStart
// ()
void AINSBasePlayerController::OnPlayerReportingStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnPlayerReportingStart");

	AINSBasePlayerController_OnPlayerReportingStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnPlayerReportingEnd
// ()
void AINSBasePlayerController::OnPlayerReportingEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnPlayerReportingEnd");

	AINSBasePlayerController_OnPlayerReportingEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnPlayerKillEvent
// ()
// Parameters:
// struct FSoldierKillInfo        SoldierKillInfo                (Parm, NoDestructor, NativeAccessSpecifierPublic)
void AINSBasePlayerController::OnPlayerKillEvent(const struct FSoldierKillInfo& SoldierKillInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnPlayerKillEvent");

	AINSBasePlayerController_OnPlayerKillEvent_Params params;
	params.SoldierKillInfo = SoldierKillInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnLocalPlayerProfileUpdated
// ()
// Parameters:
// EProfileBlockType              SavedBlockType                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::OnLocalPlayerProfileUpdated(EProfileBlockType SavedBlockType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnLocalPlayerProfileUpdated");

	AINSBasePlayerController_OnLocalPlayerProfileUpdated_Params params;
	params.SavedBlockType = SavedBlockType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnHUDDisplayOptionChanged
// ()
void AINSBasePlayerController::OnHUDDisplayOptionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnHUDDisplayOptionChanged");

	AINSBasePlayerController_OnHUDDisplayOptionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnHighlightsPreferencesChanged
// ()
void AINSBasePlayerController::OnHighlightsPreferencesChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnHighlightsPreferencesChanged");

	AINSBasePlayerController_OnHighlightsPreferencesChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.OnActiveHintExpired
// ()
void AINSBasePlayerController::OnActiveHintExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.OnActiveHintExpired");

	AINSBasePlayerController_OnActiveHintExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.MutePlayerState
// ()
// Parameters:
// class APlayerState*            OtherPlayerState               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::MutePlayerState(class APlayerState* OtherPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.MutePlayerState");

	AINSBasePlayerController_MutePlayerState_Params params;
	params.OtherPlayerState = OtherPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.IsUsingGamepad
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSBasePlayerController::IsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.IsUsingGamepad");

	AINSBasePlayerController_IsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.IsSpectator
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSBasePlayerController::IsSpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.IsSpectator");

	AINSBasePlayerController_IsSpectator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.IsReportingPlayer
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSBasePlayerController::IsReportingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.IsReportingPlayer");

	AINSBasePlayerController_IsReportingPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.IsPlayerStateMuted
// ()
// Parameters:
// class APlayerState*            OtherPlayerState               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSBasePlayerController::IsPlayerStateMuted(class APlayerState* OtherPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.IsPlayerStateMuted");

	AINSBasePlayerController_IsPlayerStateMuted_Params params;
	params.OtherPlayerState = OtherPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.IsInFirstPersonFor
// ()
// Parameters:
// class UObject*                 Object                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSBasePlayerController::IsInFirstPersonFor(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.IsInFirstPersonFor");

	AINSBasePlayerController_IsInFirstPersonFor_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.InitNVIDIAHighlights
// ()
// Parameters:
// bool                           bNeedsPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::InitNVIDIAHighlights(bool bNeedsPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.InitNVIDIAHighlights");

	AINSBasePlayerController_InitNVIDIAHighlights_Params params;
	params.bNeedsPlayerState = bNeedsPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.InformIncomingHint
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HintTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bQueueIfBusy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPlayVideo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceShow                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPauseGame                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALessonArea*             LessonArea                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::InformIncomingHint(class UClass* Lesson, float HintTime, bool bQueueIfBusy, bool bPlayVideo, bool bForceShow, bool bPauseGame, class ALessonArea* LessonArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.InformIncomingHint");

	AINSBasePlayerController_InformIncomingHint_Params params;
	params.Lesson = Lesson;
	params.HintTime = HintTime;
	params.bQueueIfBusy = bQueueIfBusy;
	params.bPlayVideo = bPlayVideo;
	params.bForceShow = bForceShow;
	params.bPauseGame = bPauseGame;
	params.LessonArea = LessonArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSBasePlayerController.HideRoundOverUIDelegate__DelegateSignature
// ()
void AINSBasePlayerController::HideRoundOverUIDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSBasePlayerController.HideRoundOverUIDelegate__DelegateSignature");

	AINSBasePlayerController_HideRoundOverUIDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.HideOpenMenu
// ()
void AINSBasePlayerController::HideOpenMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.HideOpenMenu");

	AINSBasePlayerController_HideOpenMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.HideMap
// ()
void AINSBasePlayerController::HideMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.HideMap");

	AINSBasePlayerController_HideMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.HideHint
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::HideHint(class UClass* Lesson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.HideHint");

	AINSBasePlayerController_HideHint_Params params;
	params.Lesson = Lesson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.GetLocalProfile
// ()
// Parameters:
// class UINSPlayerLocalProfile*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSPlayerLocalProfile* AINSBasePlayerController::GetLocalProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.GetLocalProfile");

	AINSBasePlayerController_GetLocalProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.GetLocalPlayer
// ()
// Parameters:
// class UINSLocalPlayer*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSLocalPlayer* AINSBasePlayerController::GetLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.GetLocalPlayer");

	AINSBasePlayerController_GetLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.GetINSPlayerState
// ()
// Parameters:
// class AINSPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSPlayerState* AINSBasePlayerController::GetINSPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.GetINSPlayerState");

	AINSBasePlayerController_GetINSPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.GetHUDBase
// ()
// Parameters:
// class AHUDBase*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AHUDBase* AINSBasePlayerController::GetHUDBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.GetHUDBase");

	AINSBasePlayerController_GetHUDBase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBasePlayerController.DestroyNVIDIAHighlights
// ()
// Parameters:
// bool                           bDeleteHighlights              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::DestroyNVIDIAHighlights(bool bDeleteHighlights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.DestroyNVIDIAHighlights");

	AINSBasePlayerController_DestroyNVIDIAHighlights_Params params;
	params.bDeleteHighlights = bDeleteHighlights;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientTeamMessageText
// ()
// Parameters:
// class APlayerState*            SenderPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   InText                         (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MsgLifeTime                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientTeamMessageText(class APlayerState* SenderPlayerState, const struct FText& InText, const struct FName& Type, float MsgLifeTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientTeamMessageText");

	AINSBasePlayerController_ClientTeamMessageText_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.InText = InText;
	params.Type = Type;
	params.MsgLifeTime = MsgLifeTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientShowFriendlyKillWarning
// ()
// Parameters:
// int                            TeamKills                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Limit                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientShowFriendlyKillWarning(int TeamKills, int Limit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientShowFriendlyKillWarning");

	AINSBasePlayerController_ClientShowFriendlyKillWarning_Params params;
	params.TeamKills = TeamKills;
	params.Limit = Limit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientRoundOverRewards
// ()
// Parameters:
// int                            RoundNumber                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameStatsRoundReward   Rewards                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientRoundOverRewards(int RoundNumber, const struct FGameStatsRoundReward& Rewards)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientRoundOverRewards");

	AINSBasePlayerController_ClientRoundOverRewards_Params params;
	params.RoundNumber = RoundNumber;
	params.Rewards = Rewards;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientReceivedRoundOver
// ()
// Parameters:
// struct FPlayerRoundOverData    UIData                         (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientReceivedRoundOver(const struct FPlayerRoundOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientReceivedRoundOver");

	AINSBasePlayerController_ClientReceivedRoundOver_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientReceivedMatchOver
// ()
// Parameters:
// struct FPlayerMatchOverData    UIData                         (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientReceivedMatchOver(const struct FPlayerMatchOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientReceivedMatchOver");

	AINSBasePlayerController_ClientReceivedMatchOver_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientPlayIncomingRadioEventSpectator
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Seed                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOnlyOfficerOrObserver         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientPlayIncomingRadioEventSpectator(class UAkAudioEvent* Event, int Seed, bool bOnlyOfficerOrObserver, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientPlayIncomingRadioEventSpectator");

	AINSBasePlayerController_ClientPlayIncomingRadioEventSpectator_Params params;
	params.Event = Event;
	params.Seed = Seed;
	params.bOnlyOfficerOrObserver = bOnlyOfficerOrObserver;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientPlayIncomingRadioEvent
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Seed                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientPlayIncomingRadioEvent(class UAkAudioEvent* Event, int Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientPlayIncomingRadioEvent");

	AINSBasePlayerController_ClientPlayIncomingRadioEvent_Params params;
	params.Event = Event;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientPlayerKillNotice
// ()
// Parameters:
// struct FPlayerKillNotice       Notice                         (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientPlayerKillNotice(const struct FPlayerKillNotice& Notice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientPlayerKillNotice");

	AINSBasePlayerController_ClientPlayerKillNotice_Params params;
	params.Notice = Notice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientPawnReceivedDamage
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitSource                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitDirection                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 BoneName                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientPawnReceivedDamage(float Damage, class AINSSoldier* Target, const struct FVector& HitSource, const struct FVector& HitDirection, class AController* EventInstigator, class AActor* DamageCauser, const struct FString& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientPawnReceivedDamage");

	AINSBasePlayerController_ClientPawnReceivedDamage_Params params;
	params.Damage = Damage;
	params.Target = Target;
	params.HitSource = HitSource;
	params.HitDirection = HitDirection;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientObjectiveDestroyed
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Attackers                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientObjectiveDestroyed");

	AINSBasePlayerController_ClientObjectiveDestroyed_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Attackers = Attackers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientObjectiveCapture
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Capturers                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientObjectiveCapture(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientObjectiveCapture");

	AINSBasePlayerController_ClientObjectiveCapture_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Capturers = Capturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.ClientMessageText
// ()
// Parameters:
// struct FText                   Text                           (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MsgLifeTime                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::ClientMessageText(const struct FText& Text, const struct FName& Type, float MsgLifeTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.ClientMessageText");

	AINSBasePlayerController_ClientMessageText_Params params;
	params.Text = Text;
	params.Type = Type;
	params.MsgLifeTime = MsgLifeTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Client_AdminReceiveScenarios
// ()
// Parameters:
// TArray<struct FString>         Scenarios                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Client_AdminReceiveScenarios(TArray<struct FString> Scenarios)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Client_AdminReceiveScenarios");

	AINSBasePlayerController_Client_AdminReceiveScenarios_Params params;
	params.Scenarios = Scenarios;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.Client_AdminReceiveLevels
// ()
// Parameters:
// TArray<struct FString>         LevelNames                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::Client_AdminReceiveLevels(TArray<struct FString> LevelNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.Client_AdminReceiveLevels");

	AINSBasePlayerController_Client_AdminReceiveLevels_Params params;
	params.LevelNames = LevelNames;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminUnbanPlayer
// ()
// Parameters:
// struct FString                 UniqueId                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminUnbanPlayer(const struct FString& UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminUnbanPlayer");

	AINSBasePlayerController_AdminUnbanPlayer_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminTravelScenario
// ()
// Parameters:
// struct FString                 Scenario                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminTravelScenario(const struct FString& Scenario)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminTravelScenario");

	AINSBasePlayerController_AdminTravelScenario_Params params;
	params.Scenario = Scenario;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminTravelMap
// ()
// Parameters:
// struct FString                 TravelArgs                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminTravelMap(const struct FString& TravelArgs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminTravelMap");

	AINSBasePlayerController_AdminTravelMap_Params params;
	params.TravelArgs = TravelArgs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminSetGamemodeProperty
// ()
// Parameters:
// struct FString                 Property                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Value                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminSetGamemodeProperty(const struct FString& Property, const struct FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminSetGamemodeProperty");

	AINSBasePlayerController_AdminSetGamemodeProperty_Params params;
	params.Property = Property;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminRestartRound
// ()
// Parameters:
// bool                           bSwitchTeams                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminRestartRound(bool bSwitchTeams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminRestartRound");

	AINSBasePlayerController_AdminRestartRound_Params params;
	params.bSwitchTeams = bSwitchTeams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminRespawnAllPlayers
// ()
void AINSBasePlayerController::AdminRespawnAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminRespawnAllPlayers");

	AINSBasePlayerController_AdminRespawnAllPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminKickPlayer
// ()
// Parameters:
// int                            PlayerId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminKickPlayer(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminKickPlayer");

	AINSBasePlayerController_AdminKickPlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminGetGamemodeProperty
// ()
// Parameters:
// struct FString                 Property                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminGetGamemodeProperty(const struct FString& Property)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminGetGamemodeProperty");

	AINSBasePlayerController_AdminGetGamemodeProperty_Params params;
	params.Property = Property;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminForceGameOver
// ()
void AINSBasePlayerController::AdminForceGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminForceGameOver");

	AINSBasePlayerController_AdminForceGameOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminExtendRoundTimer
// ()
void AINSBasePlayerController::AdminExtendRoundTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminExtendRoundTimer");

	AINSBasePlayerController_AdminExtendRoundTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminDebugPlayerState
// ()
void AINSBasePlayerController::AdminDebugPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminDebugPlayerState");

	AINSBasePlayerController_AdminDebugPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminDebugLightLevels
// ()
void AINSBasePlayerController::AdminDebugLightLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminDebugLightLevels");

	AINSBasePlayerController_AdminDebugLightLevels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminConsoleCommand
// ()
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminConsoleCommand(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminConsoleCommand");

	AINSBasePlayerController_AdminConsoleCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminCheat
// ()
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminCheat(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminCheat");

	AINSBasePlayerController_AdminCheat_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBasePlayerController.AdminBanPlayer
// ()
// Parameters:
// int                            PlayerId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BanDuration                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSBasePlayerController::AdminBanPlayer(int PlayerId, float BanDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBasePlayerController.AdminBanPlayer");

	AINSBasePlayerController_AdminBanPlayer_Params params;
	params.PlayerId = PlayerId;
	params.BanDuration = BanDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSBasePlayerController::AfterRead()
{
	APlayerController::AfterRead();

	READ_PTR_FULL(CachedHUDBase, AHUDBase);
	READ_PTR_FULL(GenericMenuWidget, UUserWidget);
	READ_PTR_FULL(ActiveTacticalMapWidget, UUserWidget);
	READ_PTR_FULL(TacticalMapWidget, UClass);
	READ_PTR_FULL(ScopeSceneCapture, USceneCaptureComponent2D);
	READ_PTR_FULL(RadioComponent, UINSAudioComponent);
	READ_PTR_FULL(HighlightsManager, AActor);
	READ_PTR_FULL(AdminMenuWidget, UClass);
}

void AINSBasePlayerController::BeforeDelete()
{
	APlayerController::BeforeDelete();

	DELE_PTR_FULL(CachedHUDBase);
	DELE_PTR_FULL(GenericMenuWidget);
	DELE_PTR_FULL(ActiveTacticalMapWidget);
	DELE_PTR_FULL(TacticalMapWidget);
	DELE_PTR_FULL(ScopeSceneCapture);
	DELE_PTR_FULL(RadioComponent);
	DELE_PTR_FULL(HighlightsManager);
	DELE_PTR_FULL(AdminMenuWidget);
}

// Function Insurgency.MenuPlayerController.SetupKitPreviewActors
// ()
// Parameters:
// class AKitPreviewCharacter*    NewPreviewCharacter            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKitPreviewWeapon*       NewPreviewWeapon               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::SetupKitPreviewActors(class AKitPreviewCharacter* NewPreviewCharacter, class AKitPreviewWeapon* NewPreviewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.SetupKitPreviewActors");

	AMenuPlayerController_SetupKitPreviewActors_Params params;
	params.NewPreviewCharacter = NewPreviewCharacter;
	params.NewPreviewWeapon = NewPreviewWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.SetPreviewCharacter
// ()
// Parameters:
// class AProfileCharacter*       NewPreviewCharacter            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::SetPreviewCharacter(class AProfileCharacter* NewPreviewCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.SetPreviewCharacter");

	AMenuPlayerController_SetPreviewCharacter_Params params;
	params.NewPreviewCharacter = NewPreviewCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.SetLoadoutMenuSupplyPoints
// ()
// Parameters:
// int                            SupplyPoints                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::SetLoadoutMenuSupplyPoints(int SupplyPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.SetLoadoutMenuSupplyPoints");

	AMenuPlayerController_SetLoadoutMenuSupplyPoints_Params params;
	params.SupplyPoints = SupplyPoints;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.SetLoadoutMenuSquadLayoutCollection
// ()
// Parameters:
// class UMenuSquadLayout*        MenuSquadLayout                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SectionIndex                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::SetLoadoutMenuSquadLayoutCollection(class UMenuSquadLayout* MenuSquadLayout, int SectionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.SetLoadoutMenuSquadLayoutCollection");

	AMenuPlayerController_SetLoadoutMenuSquadLayoutCollection_Params params;
	params.MenuSquadLayout = MenuSquadLayout;
	params.SectionIndex = SectionIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.SetLoadoutMenuSquadLayoutAndClass
// ()
// Parameters:
// class USquadLayout*            SquadLayout                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::SetLoadoutMenuSquadLayoutAndClass(class USquadLayout* SquadLayout, class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.SetLoadoutMenuSquadLayoutAndClass");

	AMenuPlayerController_SetLoadoutMenuSquadLayoutAndClass_Params params;
	params.SquadLayout = SquadLayout;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.SaveLoadoutMenuLoadout
// ()
void AMenuPlayerController::SaveLoadoutMenuLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.SaveLoadoutMenuLoadout");

	AMenuPlayerController_SaveLoadoutMenuLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.MenuPlayerController.RefreshMenuSquadLayoutsDelegate__DelegateSignature
// ()
void AMenuPlayerController::RefreshMenuSquadLayoutsDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.MenuPlayerController.RefreshMenuSquadLayoutsDelegate__DelegateSignature");

	AMenuPlayerController_RefreshMenuSquadLayoutsDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.MenuPlayerController.RefreshCosmeticsDelegate__DelegateSignature
// ()
void AMenuPlayerController::RefreshCosmeticsDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.MenuPlayerController.RefreshCosmeticsDelegate__DelegateSignature");

	AMenuPlayerController_RefreshCosmeticsDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.MenuPlayerController.PlayerClassChangedDelegate__DelegateSignature
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::PlayerClassChangedDelegate__DelegateSignature(class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.MenuPlayerController.PlayerClassChangedDelegate__DelegateSignature");

	AMenuPlayerController_PlayerClassChangedDelegate__DelegateSignature_Params params;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.OnAvailableCosmeticsLoaded
// ()
void AMenuPlayerController::OnAvailableCosmeticsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.OnAvailableCosmeticsLoaded");

	AMenuPlayerController_OnAvailableCosmeticsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.LoadMenuSquadLayouts
// ()
void AMenuPlayerController::LoadMenuSquadLayouts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.LoadMenuSquadLayouts");

	AMenuPlayerController_LoadMenuSquadLayouts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.MenuPlayerController.KitPreviewActorsSetDelegate__DelegateSignature
// ()
// Parameters:
// class AKitPreviewCharacter*    KitPreviewCharacter            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKitPreviewWeapon*       KitPreviewWeapon               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerController::KitPreviewActorsSetDelegate__DelegateSignature(class AKitPreviewCharacter* KitPreviewCharacter, class AKitPreviewWeapon* KitPreviewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.MenuPlayerController.KitPreviewActorsSetDelegate__DelegateSignature");

	AMenuPlayerController_KitPreviewActorsSetDelegate__DelegateSignature_Params params;
	params.KitPreviewCharacter = KitPreviewCharacter;
	params.KitPreviewWeapon = KitPreviewWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerController.ClearLoadoutMenuData
// ()
void AMenuPlayerController::ClearLoadoutMenuData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerController.ClearLoadoutMenuData");

	AMenuPlayerController_ClearLoadoutMenuData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMenuPlayerController::AfterRead()
{
	AINSBasePlayerController::AfterRead();

	READ_PTR_FULL(DebugMenuWidget, UClass);
	READ_PTR_FULL(ActiveDebugMenuWidget, UUserWidget);
	READ_PTR_FULL(PreviewCharacter, AProfileCharacter);
	READ_PTR_FULL(KitPreviewCharacter, AKitPreviewCharacter);
	READ_PTR_FULL(KitPreviewWeapon, AKitPreviewWeapon);
	READ_PTR_FULL(KitMenuInventory, UPlayerInventoryComponent);
}

void AMenuPlayerController::BeforeDelete()
{
	AINSBasePlayerController::BeforeDelete();

	DELE_PTR_FULL(DebugMenuWidget);
	DELE_PTR_FULL(ActiveDebugMenuWidget);
	DELE_PTR_FULL(PreviewCharacter);
	DELE_PTR_FULL(KitPreviewCharacter);
	DELE_PTR_FULL(KitPreviewWeapon);
	DELE_PTR_FULL(KitMenuInventory);
}

// Function Insurgency.INSPlayerCameraManager.UpdateDefaultFOV
// ()
void AINSPlayerCameraManager::UpdateDefaultFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerCameraManager.UpdateDefaultFOV");

	AINSPlayerCameraManager_UpdateDefaultFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerCameraManager.OnOwnerChangeTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerCameraManager::OnOwnerChangeTeam(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerCameraManager.OnOwnerChangeTeam");

	AINSPlayerCameraManager_OnOwnerChangeTeam_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerCameraManager.IsFirstPersonCamera
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerCameraManager::IsFirstPersonCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerCameraManager.IsFirstPersonCamera");

	AINSPlayerCameraManager_IsFirstPersonCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSPlayerCameraManager::AfterRead()
{
	APlayerCameraManager::AfterRead();

	READ_PTR_FULL(PlayerCollection, UMaterialParameterCollection);
	READ_PTR_FULL(SuppressionEffectMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(BlendableSuppressionEffectMaterial, UMaterialInterface);
	READ_PTR_FULL(BlindEffectMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(BlendableBlindEffectMaterial, UMaterialInterface);
	READ_PTR_FULL(GaussianBlurEffectMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(BlendableGaussianBlurEffectMaterial, UMaterialInterface);
	READ_PTR_FULL(BlendablePainEffectMaterial, UMaterialInterface);
	READ_PTR_FULL(PainEffectMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(BlendableSharpenEffectMaterial, UMaterialInterface);
	READ_PTR_FULL(SharpenEffectMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(CustomDepthBlendableMaterial, UMaterialInterface);
	READ_PTR_FULL(CustomDepthBlendable, UMaterialInstanceDynamic);
	READ_PTR_FULL(SmokeEffectMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(BlendableSmokeEffectMaterial, UMaterialInterface);
	READ_PTR_FULL(ScopeTargetTexture, UTextureRenderTarget2D);
	READ_PTR_FULL(ScopeSceneCapture, USceneCaptureComponent2D);
}

void AINSPlayerCameraManager::BeforeDelete()
{
	APlayerCameraManager::BeforeDelete();

	DELE_PTR_FULL(PlayerCollection);
	DELE_PTR_FULL(SuppressionEffectMaterial);
	DELE_PTR_FULL(BlendableSuppressionEffectMaterial);
	DELE_PTR_FULL(BlindEffectMaterial);
	DELE_PTR_FULL(BlendableBlindEffectMaterial);
	DELE_PTR_FULL(GaussianBlurEffectMaterial);
	DELE_PTR_FULL(BlendableGaussianBlurEffectMaterial);
	DELE_PTR_FULL(BlendablePainEffectMaterial);
	DELE_PTR_FULL(PainEffectMaterial);
	DELE_PTR_FULL(BlendableSharpenEffectMaterial);
	DELE_PTR_FULL(SharpenEffectMaterial);
	DELE_PTR_FULL(CustomDepthBlendableMaterial);
	DELE_PTR_FULL(CustomDepthBlendable);
	DELE_PTR_FULL(SmokeEffectMaterial);
	DELE_PTR_FULL(BlendableSmokeEffectMaterial);
	DELE_PTR_FULL(ScopeTargetTexture);
	DELE_PTR_FULL(ScopeSceneCapture);
}

// Function Insurgency.MenuPlayerCameraManager.SwitchToMainCamera
// ()
void AMenuPlayerCameraManager::SwitchToMainCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SwitchToMainCamera");

	AMenuPlayerCameraManager_SwitchToMainCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.SwitchToLoadoutCamera
// ()
// Parameters:
// bool                           bCharacter                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SwitchToLoadoutCamera(bool bCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SwitchToLoadoutCamera");

	AMenuPlayerCameraManager_SwitchToLoadoutCamera_Params params;
	params.bCharacter = bCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.SwitchToCosmeticCamera
// ()
// Parameters:
// ECharacterAppearanceSlot       CosmeticSlot                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SwitchToCosmeticCamera(ECharacterAppearanceSlot CosmeticSlot, int SubSlot, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SwitchToCosmeticCamera");

	AMenuPlayerCameraManager_SwitchToCosmeticCamera_Params params;
	params.CosmeticSlot = CosmeticSlot;
	params.SubSlot = SubSlot;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.SmoothTransitionToCamera
// ()
// Parameters:
// class ACameraActor*            DesiredCamera                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SmoothTransitionToCamera(class ACameraActor* DesiredCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SmoothTransitionToCamera");

	AMenuPlayerCameraManager_SmoothTransitionToCamera_Params params;
	params.DesiredCamera = DesiredCamera;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.MenuPlayerCameraManager.SetUsingCustomizationLightsEvent__DelegateSignature
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SetUsingCustomizationLightsEvent__DelegateSignature(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.MenuPlayerCameraManager.SetUsingCustomizationLightsEvent__DelegateSignature");

	AMenuPlayerCameraManager_SetUsingCustomizationLightsEvent__DelegateSignature_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.SetUsingCustomizationLights
// ()
// Parameters:
// bool                           bNewUsingCustomizationLights   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SetUsingCustomizationLights(bool bNewUsingCustomizationLights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SetUsingCustomizationLights");

	AMenuPlayerCameraManager_SetUsingCustomizationLights_Params params;
	params.bNewUsingCustomizationLights = bNewUsingCustomizationLights;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.SetupMainCamera
// ()
// Parameters:
// class ACameraActor*            InMainCamera                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SetupMainCamera(class ACameraActor* InMainCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SetupMainCamera");

	AMenuPlayerCameraManager_SetupMainCamera_Params params;
	params.InMainCamera = InMainCamera;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.SetLoadoutCameras
// ()
// Parameters:
// class ACameraActor*            InLoadoutCharacterCamera       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACameraActor*            InLoadoutWeaponCamera          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::SetLoadoutCameras(class ACameraActor* InLoadoutCharacterCamera, class ACameraActor* InLoadoutWeaponCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.SetLoadoutCameras");

	AMenuPlayerCameraManager_SetLoadoutCameras_Params params;
	params.InLoadoutCharacterCamera = InLoadoutCharacterCamera;
	params.InLoadoutWeaponCamera = InLoadoutWeaponCamera;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.RegisterMenuDynamicLights
// ()
// Parameters:
// TArray<class ALight*>          InCustomizationLights          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ALight*>          InDefaultLights                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::RegisterMenuDynamicLights(TArray<class ALight*> InCustomizationLights, TArray<class ALight*> InDefaultLights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.RegisterMenuDynamicLights");

	AMenuPlayerCameraManager_RegisterMenuDynamicLights_Params params;
	params.InCustomizationLights = InCustomizationLights;
	params.InDefaultLights = InDefaultLights;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MenuPlayerCameraManager.RegisterCosmeticCameras
// ()
// Parameters:
// TMap<ECharacterAppearanceSlot, class ACameraActor*> InCosmeticSlotCameras          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<int, class ACameraActor*> InCosmeticSubSlotCameras       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AMenuPlayerCameraManager::RegisterCosmeticCameras(TMap<ECharacterAppearanceSlot, class ACameraActor*> InCosmeticSlotCameras, TMap<int, class ACameraActor*> InCosmeticSubSlotCameras)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MenuPlayerCameraManager.RegisterCosmeticCameras");

	AMenuPlayerCameraManager_RegisterCosmeticCameras_Params params;
	params.InCosmeticSlotCameras = InCosmeticSlotCameras;
	params.InCosmeticSubSlotCameras = InCosmeticSubSlotCameras;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMenuPlayerCameraManager::AfterRead()
{
	AINSPlayerCameraManager::AfterRead();

	READ_PTR_FULL(CharacterCustomizePostProcess, UPostProcessComponent);
	READ_PTR_FULL(MainCamera, ACameraActor);
	READ_PTR_FULL(LoadoutCharacterCamera, ACameraActor);
	READ_PTR_FULL(LoadoutWeaponCamera, ACameraActor);
}

void AMenuPlayerCameraManager::BeforeDelete()
{
	AINSPlayerCameraManager::BeforeDelete();

	DELE_PTR_FULL(CharacterCustomizePostProcess);
	DELE_PTR_FULL(MainCamera);
	DELE_PTR_FULL(LoadoutCharacterCamera);
	DELE_PTR_FULL(LoadoutWeaponCamera);
}

void AMenuGameMode::AfterRead()
{
	AGameMode::AfterRead();

}

void AMenuGameMode::BeforeDelete()
{
	AGameMode::BeforeDelete();

}

// Function Insurgency.ProfileCharacter.UpdateVisibility
// ()
void AProfileCharacter::UpdateVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.UpdateVisibility");

	AProfileCharacter_UpdateVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.StopAnimMontage
// ()
// Parameters:
// class UAnimMontage*            AnimMontage                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::StopAnimMontage(class UAnimMontage* AnimMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.StopAnimMontage");

	AProfileCharacter_StopAnimMontage_Params params;
	params.AnimMontage = AnimMontage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.SpawnPreviewWeapon
// ()
void AProfileCharacter::SpawnPreviewWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.SpawnPreviewWeapon");

	AProfileCharacter_SpawnPreviewWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.SetPreviewWeapon
// ()
// Parameters:
// class AItemBase*               PreviewWeapon                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::SetPreviewWeapon(class AItemBase* PreviewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.SetPreviewWeapon");

	AProfileCharacter_SetPreviewWeapon_Params params;
	params.PreviewWeapon = PreviewWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.SetMeshVisibility
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::SetMeshVisibility(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.SetMeshVisibility");

	AProfileCharacter_SetMeshVisibility_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.SetCosmeticsFromState
// ()
// Parameters:
// struct FProfileCharacterCosmeticState NewCosmeticState               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AProfileCharacter::SetCosmeticsFromState(struct FProfileCharacterCosmeticState* NewCosmeticState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.SetCosmeticsFromState");

	AProfileCharacter_SetCosmeticsFromState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (NewCosmeticState != nullptr)
		*NewCosmeticState = params.NewCosmeticState;

}


// Function Insurgency.ProfileCharacter.SetCosmeticMeshVisibility
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::SetCosmeticMeshVisibility(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.SetCosmeticMeshVisibility");

	AProfileCharacter_SetCosmeticMeshVisibility_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.RemoveCosmeticByClass
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::RemoveCosmeticByClass(class UClass* Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.RemoveCosmeticByClass");

	AProfileCharacter_RemoveCosmeticByClass_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.RefreshAppliedCosmetics
// ()
void AProfileCharacter::RefreshAppliedCosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.RefreshAppliedCosmetics");

	AProfileCharacter_RefreshAppliedCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.PlayAnimMontage
// ()
// Parameters:
// class UAnimMontage*            AnimMontage                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InPlayRate                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   StartSectionName               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AProfileCharacter::PlayAnimMontage(class UAnimMontage* AnimMontage, float InPlayRate, const struct FName& StartSectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.PlayAnimMontage");

	AProfileCharacter_PlayAnimMontage_Params params;
	params.AnimMontage = AnimMontage;
	params.InPlayRate = InPlayRate;
	params.StartSectionName = StartSectionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProfileCharacter.OnSwitchFaction
// ()
void AProfileCharacter::OnSwitchFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.OnSwitchFaction");

	AProfileCharacter_OnSwitchFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.OnProfileBlockLoaded
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromCloud                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::OnProfileBlockLoaded(EProfileBlockType Type, bool bFromCloud)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.OnProfileBlockLoaded");

	AProfileCharacter_OnProfileBlockLoaded_Params params;
	params.Type = Type;
	params.bFromCloud = bFromCloud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.OnCustomizeMenuChanged
// ()
// Parameters:
// bool                           bIsCustomizing                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::OnCustomizeMenuChanged(bool bIsCustomizing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.OnCustomizeMenuChanged");

	AProfileCharacter_OnCustomizeMenuChanged_Params params;
	params.bIsCustomizing = bIsCustomizing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.OnCosmeticMeshesLoaded
// ()
// Parameters:
// class UCosmeticItem*           Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::OnCosmeticMeshesLoaded(class UCosmeticItem* Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.OnCosmeticMeshesLoaded");

	AProfileCharacter_OnCosmeticMeshesLoaded_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.OnAllCosmeticMeshesLoaded
// ()
void AProfileCharacter::OnAllCosmeticMeshesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.OnAllCosmeticMeshesLoaded");

	AProfileCharacter_OnAllCosmeticMeshesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.InitProfileCharacter
// ()
// Parameters:
// class UINSLocalPlayer*         InPlayer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::InitProfileCharacter(class UINSLocalPlayer* InPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.InitProfileCharacter");

	AProfileCharacter_InitProfileCharacter_Params params;
	params.InPlayer = InPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.GetSharedCosmeticState
// ()
// Parameters:
// class USharedCosmeticState*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USharedCosmeticState* AProfileCharacter::GetSharedCosmeticState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.GetSharedCosmeticState");

	AProfileCharacter_GetSharedCosmeticState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProfileCharacter.GetCurrentMontage
// ()
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimMontage* AProfileCharacter::GetCurrentMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.GetCurrentMontage");

	AProfileCharacter_GetCurrentMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ProfileCharacter.DetachCosmeticFromMesh
// ()
// Parameters:
// class UClass*                  Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::DetachCosmeticFromMesh(class UClass* Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.DetachCosmeticFromMesh");

	AProfileCharacter_DetachCosmeticFromMesh_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.DetachAllCosmeticsFromMesh
// ()
void AProfileCharacter::DetachAllCosmeticsFromMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.DetachAllCosmeticsFromMesh");

	AProfileCharacter_DetachAllCosmeticsFromMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.AttachCosmeticToMesh
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bStartVisible                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AProfileCharacter::AttachCosmeticToMesh(const struct FSelectedCosmetic& SelectedCosmetic, bool bStartVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.AttachCosmeticToMesh");

	AProfileCharacter_AttachCosmeticToMesh_Params params;
	params.SelectedCosmetic = SelectedCosmetic;
	params.bStartVisible = bStartVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.AttachCosmeticsToMesh
// ()
void AProfileCharacter::AttachCosmeticsToMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.AttachCosmeticsToMesh");

	AProfileCharacter_AttachCosmeticsToMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ProfileCharacter.ApplyCosmetic
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AProfileCharacter::ApplyCosmetic(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ProfileCharacter.ApplyCosmetic");

	AProfileCharacter_ApplyCosmetic_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProfileCharacter::AfterRead()
{
	APawn::AfterRead();

	READ_PTR_FULL(LocalPlayer, UINSLocalPlayer);
	READ_PTR_FULL(Mesh, UINSSkeletalMeshComponent);
	READ_PTR_FULL(PreviewPlayerClass, UPlayerClass);
	READ_PTR_FULL(SpawnedCarrier, AItemBase);
	READ_PTR_FULL(SpawnedArmor, AItemBase);
	READ_PTR_FULL(WeaponModel3P, AItemBase);
	READ_PTR_FULL(SharedCosmeticState, USharedCosmeticState);
}

void AProfileCharacter::BeforeDelete()
{
	APawn::BeforeDelete();

	DELE_PTR_FULL(LocalPlayer);
	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(PreviewPlayerClass);
	DELE_PTR_FULL(SpawnedCarrier);
	DELE_PTR_FULL(SpawnedArmor);
	DELE_PTR_FULL(WeaponModel3P);
	DELE_PTR_FULL(SharedCosmeticState);
}

// Function Insurgency.MarketingProfileCharacter.LoadCosmetics
// ()
void AMarketingProfileCharacter::LoadCosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MarketingProfileCharacter.LoadCosmetics");

	AMarketingProfileCharacter_LoadCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MarketingProfileCharacter.GetWeaponFallbackDetails
// ()
// Parameters:
// struct FWeaponFallbackModel    InWeaponFallbackModel          (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int                            OutSlot                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentFallbackMode        OutFallbackMode                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMarketingProfileCharacter::GetWeaponFallbackDetails(const struct FWeaponFallbackModel& InWeaponFallbackModel, int* OutSlot, EAttachmentFallbackMode* OutFallbackMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MarketingProfileCharacter.GetWeaponFallbackDetails");

	AMarketingProfileCharacter_GetWeaponFallbackDetails_Params params;
	params.InWeaponFallbackModel = InWeaponFallbackModel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSlot != nullptr)
		*OutSlot = params.OutSlot;
	if (OutFallbackMode != nullptr)
		*OutFallbackMode = params.OutFallbackMode;

}


// Function Insurgency.MarketingProfileCharacter.BP_UpdateEnum
// ()
// Parameters:
// struct FString                 EnumName                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           Names                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMarketingProfileCharacter::BP_UpdateEnum(const struct FString& EnumName, TArray<struct FName> Names)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MarketingProfileCharacter.BP_UpdateEnum");

	AMarketingProfileCharacter_BP_UpdateEnum_Params params;
	params.EnumName = EnumName;
	params.Names = Names;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMarketingProfileCharacter::AfterRead()
{
	AProfileCharacter::AfterRead();

}

void AMarketingProfileCharacter::BeforeDelete()
{
	AProfileCharacter::BeforeDelete();

}

// Function Insurgency.MapVoteWidget.SubmitMapVote
// ()
// Parameters:
// EMapVoteSelection              Selection                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteWidget::SubmitMapVote(EMapVoteSelection Selection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteWidget.SubmitMapVote");

	UMapVoteWidget_SubmitMapVote_Params params;
	params.Selection = Selection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteWidget.RestoreWidgetFocus
// ()
void UMapVoteWidget::RestoreWidgetFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteWidget.RestoreWidgetFocus");

	UMapVoteWidget_RestoreWidgetFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteWidget.OnVoteWinnerChosen
// ()
// Parameters:
// EMapVoteSelection              Selection                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteWidget::OnVoteWinnerChosen(EMapVoteSelection Selection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteWidget.OnVoteWinnerChosen");

	UMapVoteWidget_OnVoteWinnerChosen_Params params;
	params.Selection = Selection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteWidget.OnVoteCountUpdated
// ()
// Parameters:
// TArray<struct FMapVoteCount>   Data                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteWidget::OnVoteCountUpdated(TArray<struct FMapVoteCount> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteWidget.OnVoteCountUpdated");

	UMapVoteWidget_OnVoteCountUpdated_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteWidget.OnMapVoteStarted
// ()
// Parameters:
// TArray<struct FMapVoteOption>  Maps                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          EndTime                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInCanVoteRefresh              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteWidget::OnMapVoteStarted(TArray<struct FMapVoteOption> Maps, float EndTime, bool bInCanVoteRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteWidget.OnMapVoteStarted");

	UMapVoteWidget_OnMapVoteStarted_Params params;
	params.Maps = Maps;
	params.EndTime = EndTime;
	params.bInCanVoteRefresh = bInCanVoteRefresh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteWidget.OnLocalOptionSelected
// ()
// Parameters:
// EMapVoteSelection              Selection                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteWidget::OnLocalOptionSelected(EMapVoteSelection Selection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteWidget.OnLocalOptionSelected");

	UMapVoteWidget_OnLocalOptionSelected_Params params;
	params.Selection = Selection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMapVoteWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UMapVoteWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.MapVoteButtonInterface.SetVoteCount
// ()
// Parameters:
// int                            NewVoteCount                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteButtonInterface::SetVoteCount(int NewVoteCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteButtonInterface.SetVoteCount");

	UMapVoteButtonInterface_SetVoteCount_Params params;
	params.NewVoteCount = NewVoteCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteButtonInterface.SetLocalVoteState
// ()
// Parameters:
// bool                           bSelected                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapVoteButtonInterface::SetLocalVoteState(bool bSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteButtonInterface.SetLocalVoteState");

	UMapVoteButtonInterface_SetLocalVoteState_Params params;
	params.bSelected = bSelected;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteButtonInterface.PlayWinningVoteAnimation
// ()
void UMapVoteButtonInterface::PlayWinningVoteAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteButtonInterface.PlayWinningVoteAnimation");

	UMapVoteButtonInterface_PlayWinningVoteAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapVoteButtonInterface.PlayLosingVoteAnimation
// ()
void UMapVoteButtonInterface::PlayLosingVoteAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVoteButtonInterface.PlayLosingVoteAnimation");

	UMapVoteButtonInterface_PlayLosingVoteAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMapVoteButtonInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMapVoteButtonInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMapVoteManager::AfterRead()
{
	UObject::AfterRead();

}

void UMapVoteManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.MapIconWidget.BlueprintOnTeamChange
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapIconWidget::BlueprintOnTeamChange(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapIconWidget.BlueprintOnTeamChange");

	UMapIconWidget_BlueprintOnTeamChange_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMapIconWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(TacticalMap, UTacticalMapWidget);
	READ_PTR_FULL(IconImage, UImage);
}

void UMapIconWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(TacticalMap);
	DELE_PTR_FULL(IconImage);
}

// Function Insurgency.MapActorWidget.UpdateFollowActor
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMapActorWidget::UpdateFollowActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapActorWidget.UpdateFollowActor");

	UMapActorWidget_UpdateFollowActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.MapActorWidget.SizeToActorBounds
// ()
void UMapActorWidget::SizeToActorBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapActorWidget.SizeToActorBounds");

	UMapActorWidget_SizeToActorBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapActorWidget.SetToTeamColor
// ()
// Parameters:
// bool                           bHasNoTeam                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapActorWidget::SetToTeamColor(bool bHasNoTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapActorWidget.SetToTeamColor");

	UMapActorWidget_SetToTeamColor_Params params;
	params.bHasNoTeam = bHasNoTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapActorWidget.GetRepresentativeLocation
// ()
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UMapActorWidget::GetRepresentativeLocation(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapActorWidget.GetRepresentativeLocation");

	UMapActorWidget_GetRepresentativeLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;

}


// Function Insurgency.MapActorWidget.GetFollowedActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* UMapActorWidget::GetFollowedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapActorWidget.GetFollowedActor");

	UMapActorWidget_GetFollowedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMapActorWidget::AfterRead()
{
	UMapIconWidget::AfterRead();

}

void UMapActorWidget::BeforeDelete()
{
	UMapIconWidget::BeforeDelete();

}

// Function Insurgency.MapVehicleWidget.GetFollowedVehicle
// ()
// Parameters:
// class AVehicleBase*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AVehicleBase* UMapVehicleWidget::GetFollowedVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapVehicleWidget.GetFollowedVehicle");

	UMapVehicleWidget_GetFollowedVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMapVehicleWidget::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapVehicleWidget::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

// Function Insurgency.MapSupplyCrateActor.GetFollowedCrate
// ()
// Parameters:
// class ASupplyCrate*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASupplyCrate* UMapSupplyCrateActor::GetFollowedCrate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSupplyCrateActor.GetFollowedCrate");

	UMapSupplyCrateActor_GetFollowedCrate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMapSupplyCrateActor::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapSupplyCrateActor::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

// Function Insurgency.MapSpawnZoneWidget.GetFollowedSpawnZone
// ()
// Parameters:
// class ASpawnZone*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASpawnZone* UMapSpawnZoneWidget::GetFollowedSpawnZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSpawnZoneWidget.GetFollowedSpawnZone");

	UMapSpawnZoneWidget_GetFollowedSpawnZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMapSpawnZoneWidget::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapSpawnZoneWidget::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

// Function Insurgency.MapSoldierWidget.UpdatePlayerZOrder
// ()
void UMapSoldierWidget::UpdatePlayerZOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSoldierWidget.UpdatePlayerZOrder");

	UMapSoldierWidget_UpdatePlayerZOrder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapSoldierWidget.OnUpdateObjective
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          NewActiveObjective             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapSoldierWidget::OnUpdateObjective(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSoldierWidget.OnUpdateObjective");

	UMapSoldierWidget_OnUpdateObjective_Params params;
	params.PlayerState = PlayerState;
	params.NewActiveObjective = NewActiveObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapSoldierWidget.GetFollowedSoldier
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* UMapSoldierWidget::GetFollowedSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSoldierWidget.GetFollowedSoldier");

	UMapSoldierWidget_GetFollowedSoldier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.MapSoldierWidget.BlueprintOnUpdateObjective
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          NewActiveObjective             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMapSoldierWidget::BlueprintOnUpdateObjective(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSoldierWidget.BlueprintOnUpdateObjective");

	UMapSoldierWidget_BlueprintOnUpdateObjective_Params params;
	params.PlayerState = PlayerState;
	params.NewActiveObjective = NewActiveObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapSoldierWidget.BlueprintOnUpdateLocalViewTarget
// ()
void UMapSoldierWidget::BlueprintOnUpdateLocalViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSoldierWidget.BlueprintOnUpdateLocalViewTarget");

	UMapSoldierWidget_BlueprintOnUpdateLocalViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MapSoldierWidget.BlueprintOnObjectiveStateChange
// ()
void UMapSoldierWidget::BlueprintOnObjectiveStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapSoldierWidget.BlueprintOnObjectiveStateChange");

	UMapSoldierWidget_BlueprintOnObjectiveStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMapSoldierWidget::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapSoldierWidget::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

// Function Insurgency.MapRestrictedAreaWidget.GetFollowedRestrictedArea
// ()
// Parameters:
// class ARestrictedArea*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ARestrictedArea* UMapRestrictedAreaWidget::GetFollowedRestrictedArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MapRestrictedAreaWidget.GetFollowedRestrictedArea");

	UMapRestrictedAreaWidget_GetFollowedRestrictedArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMapRestrictedAreaWidget::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapRestrictedAreaWidget::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

void UMapItemPickupWidget::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapItemPickupWidget::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

void UMapIconPointOfInterestWidget::AfterRead()
{
	UMapActorWidget::AfterRead();

}

void UMapIconPointOfInterestWidget::BeforeDelete()
{
	UMapActorWidget::BeforeDelete();

}

void UMainMenuSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UMainMenuSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

// Function Insurgency.MainMenuWidget.InitMenu
// ()
void UMainMenuWidget::InitMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuWidget.InitMenu");

	UMainMenuWidget_InitMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMainMenuWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UMainMenuWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.PhysicalDebris.OnBounce
// ()
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void APhysicalDebris::OnBounce(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.PhysicalDebris.OnBounce");

	APhysicalDebris_OnBounce_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APhysicalDebris::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(SurfaceReaction, USurfaceReaction);
}

void APhysicalDebris::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(SurfaceReaction);
}

// Function Insurgency.MagazineDebris.SetFromAmmoContainer
// ()
// Parameters:
// class UClass*                  AmmoContainerClass             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AMagazineDebris::SetFromAmmoContainer(class UClass* AmmoContainerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MagazineDebris.SetFromAmmoContainer");

	AMagazineDebris_SetFromAmmoContainer_Params params;
	params.AmmoContainerClass = AmmoContainerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMagazineDebris::AfterRead()
{
	APhysicalDebris::AfterRead();

}

void AMagazineDebris::BeforeDelete()
{
	APhysicalDebris::BeforeDelete();

}

void ULocalizableObjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULocalizableObjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.LoadingScreenStatics.HideViewportLoadingScreen
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ULoadingScreenStatics::HideViewportLoadingScreen(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadingScreenStatics.HideViewportLoadingScreen");

	ULoadingScreenStatics_HideViewportLoadingScreen_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LoadingScreenStatics.GetLoadingScreenProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ULoadingScreenStatics::GetLoadingScreenProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadingScreenStatics.GetLoadingScreenProgress");

	ULoadingScreenStatics_GetLoadingScreenProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LoadingScreenStatics.GetLoadingHints
// ()
// Parameters:
// TArray<struct FLoadingScreenHint> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FLoadingScreenHint> ULoadingScreenStatics::GetLoadingHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadingScreenStatics.GetLoadingHints");

	ULoadingScreenStatics_GetLoadingHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LoadingScreenStatics.DisplayViewportLoadingScreen
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLoadingScreenSetup     Setup                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void ULoadingScreenStatics::DisplayViewportLoadingScreen(class UObject* WorldContext, const struct FLoadingScreenSetup& Setup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadingScreenStatics.DisplayViewportLoadingScreen");

	ULoadingScreenStatics_DisplayViewportLoadingScreen_Params params;
	params.WorldContext = WorldContext;
	params.Setup = Setup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULoadingScreenStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void ULoadingScreenStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.LoadingScreenSettings.GetThumbnailForLevel
// ()
// Parameters:
// struct FString                 LevelName                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Lighting                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ULoadingScreenSettings::GetThumbnailForLevel(const struct FString& LevelName, const struct FString& Lighting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadingScreenSettings.GetThumbnailForLevel");

	ULoadingScreenSettings_GetThumbnailForLevel_Params params;
	params.LevelName = LevelName;
	params.Lighting = Lighting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LoadingScreenSettings.GetLoadingScreenTextureAsset
// ()
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 LightingName                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ULoadingScreenSettings::GetLoadingScreenTextureAsset(const struct FString& Name, const struct FString& LightingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadingScreenSettings.GetLoadingScreenTextureAsset");

	ULoadingScreenSettings_GetLoadingScreenTextureAsset_Params params;
	params.Name = Name;
	params.LightingName = LightingName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULoadingScreenSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void ULoadingScreenSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

// Function Insurgency.LoadCollectibleItemDataAsync.LoadCollectibleItemData
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int>                    InItemIds                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULoadCollectibleItemDataAsync* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ULoadCollectibleItemDataAsync* ULoadCollectibleItemDataAsync::LoadCollectibleItemData(class UObject* WorldContextObject, TArray<int> InItemIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LoadCollectibleItemDataAsync.LoadCollectibleItemData");

	ULoadCollectibleItemDataAsync_LoadCollectibleItemData_Params params;
	params.WorldContextObject = WorldContextObject;
	params.InItemIds = InItemIds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULoadCollectibleItemDataAsync::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void ULoadCollectibleItemDataAsync::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

// Function Insurgency.LightStatics.GetLightSampler
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALightSampler*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ALightSampler* ULightStatics::GetLightSampler(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightStatics.GetLightSampler");

	ULightStatics_GetLightSampler_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULightStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void ULightStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.LightSampler.UntrackNamedLightSource
// ()
// Parameters:
// struct FName                   Name                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ALightSampler::UntrackNamedLightSource(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.UntrackNamedLightSource");

	ALightSampler_UntrackNamedLightSource_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LightSampler.TrackNamedLightSource
// ()
// Parameters:
// struct FName                   Name                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Intensity                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Radius                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*         Parent                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerConeAngle                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterConeAngle                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ALightSampler::TrackNamedLightSource(const struct FName& Name, const struct FVector& Position, float Intensity, float Radius, class UActorComponent* Parent, float InnerConeAngle, float OuterConeAngle, const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.TrackNamedLightSource");

	ALightSampler_TrackNamedLightSource_Params params;
	params.Name = Name;
	params.Position = Position;
	params.Intensity = Intensity;
	params.Radius = Radius;
	params.Parent = Parent;
	params.InnerConeAngle = InnerConeAngle;
	params.OuterConeAngle = OuterConeAngle;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LightSampler.GetVolumetricLightingIntensity
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ALightSampler::GetVolumetricLightingIntensity(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetVolumetricLightingIntensity");

	ALightSampler_GetVolumetricLightingIntensity_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetVolumetricLightingForPosition
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ALightSampler::GetVolumetricLightingForPosition(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetVolumetricLightingForPosition");

	ALightSampler_GetVolumetricLightingForPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetVolumetricLighting
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ALightSampler::GetVolumetricLighting(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetVolumetricLighting");

	ALightSampler_GetVolumetricLighting_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetUnfilteredVolumetricLightingIntensity
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ALightSampler::GetUnfilteredVolumetricLightingIntensity(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetUnfilteredVolumetricLightingIntensity");

	ALightSampler_GetUnfilteredVolumetricLightingIntensity_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetUnfilteredVolumetricLightingForPosition
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ALightSampler::GetUnfilteredVolumetricLightingForPosition(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetUnfilteredVolumetricLightingForPosition");

	ALightSampler_GetUnfilteredVolumetricLightingForPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetUnfilteredVolumetricLighting
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ALightSampler::GetUnfilteredVolumetricLighting(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetUnfilteredVolumetricLighting");

	ALightSampler_GetUnfilteredVolumetricLighting_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetLightingIntensity
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ALightSampler::GetLightingIntensity(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetLightingIntensity");

	ALightSampler_GetLightingIntensity_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetDynamicLightSources
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSampledLightSource> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FSampledLightSource> ALightSampler::GetDynamicLightSources(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetDynamicLightSources");

	ALightSampler_GetDynamicLightSources_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetDynamicLightIntensityFromSources
// ()
// Parameters:
// TArray<struct FSampledLightSource> LightSources                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ALightSampler::GetDynamicLightIntensityFromSources(TArray<struct FSampledLightSource> LightSources)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetDynamicLightIntensityFromSources");

	ALightSampler_GetDynamicLightIntensityFromSources_Params params;
	params.LightSources = LightSources;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.GetDynamicLightIntensity
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ALightSampler::GetDynamicLightIntensity(const struct FVector& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.GetDynamicLightIntensity");

	ALightSampler_GetDynamicLightIntensity_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.DrawDebugInformation
// ()
void ALightSampler::DrawDebugInformation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.DrawDebugInformation");

	ALightSampler_DrawDebugInformation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LightSampler.AffectsBoundsVirtualSource
// ()
// Parameters:
// struct FSampledLightSource     LightSource                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FBoxSphereBounds        Bounds                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ALightSampler::AffectsBoundsVirtualSource(const struct FSampledLightSource& LightSource, const struct FBoxSphereBounds& Bounds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.AffectsBoundsVirtualSource");

	ALightSampler_AffectsBoundsVirtualSource_Params params;
	params.LightSource = LightSource;
	params.Bounds = Bounds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LightSampler.AddLightSource
// ()
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Intensity                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Radius                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*         Parent                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerConeAngle                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterConeAngle                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ALightSampler::AddLightSource(const struct FVector& Position, float Intensity, float Duration, float Radius, class UActorComponent* Parent, float InnerConeAngle, float OuterConeAngle, const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LightSampler.AddLightSource");

	ALightSampler_AddLightSource_Params params;
	params.Position = Position;
	params.Intensity = Intensity;
	params.Duration = Duration;
	params.Radius = Radius;
	params.Parent = Parent;
	params.InnerConeAngle = InnerConeAngle;
	params.OuterConeAngle = OuterConeAngle;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ALightSampler::AfterRead()
{
	AInfo::AfterRead();

}

void ALightSampler::BeforeDelete()
{
	AInfo::BeforeDelete();

}

// Function Insurgency.LessonLoadingWidget.SetLessonVideo
// ()
void ULessonLoadingWidget::SetLessonVideo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonLoadingWidget.SetLessonVideo");

	ULessonLoadingWidget_SetLessonVideo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LessonLoadingWidget.OnVideoAsyncLoadComplete
// ()
void ULessonLoadingWidget::OnVideoAsyncLoadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonLoadingWidget.OnVideoAsyncLoadComplete");

	ULessonLoadingWidget_OnVideoAsyncLoadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LessonLoadingWidget.OnLessonVideoLoadedEvent
// ()
void ULessonLoadingWidget::OnLessonVideoLoadedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonLoadingWidget.OnLessonVideoLoadedEvent");

	ULessonLoadingWidget_OnLessonVideoLoadedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULessonLoadingWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void ULessonLoadingWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.LessonArea.ToggleLesson
// ()
// Parameters:
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ALessonArea::ToggleLesson(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonArea.ToggleLesson");

	ALessonArea_ToggleLesson_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LessonArea.OnBeginAreaOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ALessonArea::OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonArea.OnBeginAreaOverlap");

	ALessonArea_OnBeginAreaOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.LessonArea.LessonAreaEventDelegate__DelegateSignature
// ()
// Parameters:
// class AINSBasePlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ALessonArea::LessonAreaEventDelegate__DelegateSignature(class AINSBasePlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.LessonArea.LessonAreaEventDelegate__DelegateSignature");

	ALessonArea_LessonAreaEventDelegate__DelegateSignature_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LessonArea.HasHintedController
// ()
// Parameters:
// class AINSBasePlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ALessonArea::HasHintedController(class AINSBasePlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonArea.HasHintedController");

	ALessonArea_HasHintedController_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.LessonArea.ControllerConfirmedHint
// ()
// Parameters:
// class AINSBasePlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ALessonArea::ControllerConfirmedHint(class AINSBasePlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LessonArea.ControllerConfirmedHint");

	ALessonArea_ControllerConfirmedHint_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ALessonArea::AfterRead()
{
	AVolume::AfterRead();

	READ_PTR_FULL(AssociatedLesson, UClass);
	READ_PTR_FULL(AssociatedLessonPS4, UClass);
	READ_PTR_FULL(AssociatedLessonXBOX, UClass);
}

void ALessonArea::BeforeDelete()
{
	AVolume::BeforeDelete();

	DELE_PTR_FULL(AssociatedLesson);
	DELE_PTR_FULL(AssociatedLessonPS4);
	DELE_PTR_FULL(AssociatedLessonXBOX);
}

// Function Insurgency.LagCompensationComponent.RewindToTime
// ()
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ULagCompensationComponent::RewindToTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LagCompensationComponent.RewindToTime");

	ULagCompensationComponent_RewindToTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.LagCompensationComponent.RestorePosition
// ()
void ULagCompensationComponent::RestorePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.LagCompensationComponent.RestorePosition");

	ULagCompensationComponent_RestorePosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULagCompensationComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(BodyComponent, USkeletalMeshComponent);
}

void ULagCompensationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(BodyComponent);
}

void ALadder::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ModularMeshComponent, UInstancedStaticMeshComponent);
	READ_PTR_FULL(TopMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(BottomMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(BoxComponent, UBoxComponent);
	READ_PTR_FULL(TopBoxComponent, UBoxComponent);
	READ_PTR_FULL(LadderUpUIIcon, UTexture2D);
	READ_PTR_FULL(LadderDownUIIcon, UTexture2D);
	READ_PTR_FULL(LadderSlideUIIcon, UTexture2D);
	READ_PTR_FULL(LadderExitUIIcon, UTexture2D);
}

void ALadder::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ModularMeshComponent);
	DELE_PTR_FULL(TopMeshComponent);
	DELE_PTR_FULL(BottomMeshComponent);
	DELE_PTR_FULL(BoxComponent);
	DELE_PTR_FULL(TopBoxComponent);
	DELE_PTR_FULL(LadderUpUIIcon);
	DELE_PTR_FULL(LadderDownUIIcon);
	DELE_PTR_FULL(LadderSlideUIIcon);
	DELE_PTR_FULL(LadderExitUIIcon);
}

// Function Insurgency.KitSelect_UpgradeButton.UpdateVisualComponents
// ()
void UKitSelect_UpgradeButton::UpdateVisualComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_UpgradeButton.UpdateVisualComponents");

	UKitSelect_UpgradeButton_UpdateVisualComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitSelect_UpgradeButton.UpdateUpgradeData
// ()
// Parameters:
// class UClass*                  InUpgradeClass                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemSlot                      InParentItemSlot               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            InSupplyCost                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInSupplyCostVisible           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInSelected                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInPurchasable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInIsNewGear                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKitSelect_UpgradeButton::UpdateUpgradeData(class UClass* InUpgradeClass, EItemSlot InParentItemSlot, int InSupplyCost, bool bInSupplyCostVisible, bool bInSelected, bool bInPurchasable, bool bInIsNewGear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_UpgradeButton.UpdateUpgradeData");

	UKitSelect_UpgradeButton_UpdateUpgradeData_Params params;
	params.InUpgradeClass = InUpgradeClass;
	params.InParentItemSlot = InParentItemSlot;
	params.InSupplyCost = InSupplyCost;
	params.bInSupplyCostVisible = bInSupplyCostVisible;
	params.bInSelected = bInSelected;
	params.bInPurchasable = bInPurchasable;
	params.bInIsNewGear = bInIsNewGear;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitSelect_UpgradeButton.RefreshColors
// ()
void UKitSelect_UpgradeButton::RefreshColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_UpgradeButton.RefreshColors");

	UKitSelect_UpgradeButton_RefreshColors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKitSelect_UpgradeButton::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(MainButtonArea, UBorder);
	READ_PTR_FULL(LeftTextWidget, UTextBlock);
	READ_PTR_FULL(SupplyCostWidget, UTextBlock);
	READ_PTR_FULL(LeftTab, UWidgetSwitcher);
	READ_PTR_FULL(UnequipInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(BackgroundInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(NameInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(UpgradeClass, UClass);
}

void UKitSelect_UpgradeButton::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(MainButtonArea);
	DELE_PTR_FULL(LeftTextWidget);
	DELE_PTR_FULL(SupplyCostWidget);
	DELE_PTR_FULL(LeftTab);
	DELE_PTR_FULL(UnequipInvalidationBox);
	DELE_PTR_FULL(BackgroundInvalidationBox);
	DELE_PTR_FULL(NameInvalidationBox);
	DELE_PTR_FULL(UpgradeClass);
}

// Function Insurgency.KitSelect_ItemButton.UpdateNotificationVisibility
// ()
void UKitSelect_ItemButton::UpdateNotificationVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_ItemButton.UpdateNotificationVisibility");

	UKitSelect_ItemButton_UpdateNotificationVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitSelect_ItemButton.UpdateItemData
// ()
// Parameters:
// class UClass*                  InItemClass                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            InSubSlot                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInSelected                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInIsNewGear                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLoadoutChanged                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            InLoadoutCategoryIndex         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKitSelect_ItemButton::UpdateItemData(class UClass* InItemClass, int InSubSlot, bool bInSelected, bool bInIsNewGear, bool bLoadoutChanged, int InLoadoutCategoryIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_ItemButton.UpdateItemData");

	UKitSelect_ItemButton_UpdateItemData_Params params;
	params.InItemClass = InItemClass;
	params.InSubSlot = InSubSlot;
	params.bInSelected = bInSelected;
	params.bInIsNewGear = bInIsNewGear;
	params.bLoadoutChanged = bLoadoutChanged;
	params.InLoadoutCategoryIndex = InLoadoutCategoryIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitSelect_ItemButton.SetUnequipButtonVisibility
// ()
void UKitSelect_ItemButton::SetUnequipButtonVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_ItemButton.SetUnequipButtonVisibility");

	UKitSelect_ItemButton_SetUnequipButtonVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitSelect_ItemButton.RefreshColors
// ()
void UKitSelect_ItemButton::RefreshColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_ItemButton.RefreshColors");

	UKitSelect_ItemButton_RefreshColors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKitSelect_ItemButton::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(HighlightsNotificationSlot, UNamedSlot);
	READ_PTR_FULL(SizeBox_2, USizeBox);
	READ_PTR_FULL(Background, UBorder);
	READ_PTR_FULL(LeftTextWidget, UTextBlock);
	READ_PTR_FULL(WeaponIcon, UImage);
	READ_PTR_FULL(SupplyCostWidget, UTextBlock);
	READ_PTR_FULL(UnequipButtonCanvas, UCanvasPanel);
	READ_PTR_FULL(Button_1, UButton);
	READ_PTR_FULL(LeftSelectHighlight, UBorder);
	READ_PTR_FULL(BackgroundInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(NameInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(IconInvalidationBox, USaberInvalidationBox);
	READ_PTR_FULL(ItemClass, UClass);
}

void UKitSelect_ItemButton::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(HighlightsNotificationSlot);
	DELE_PTR_FULL(SizeBox_2);
	DELE_PTR_FULL(Background);
	DELE_PTR_FULL(LeftTextWidget);
	DELE_PTR_FULL(WeaponIcon);
	DELE_PTR_FULL(SupplyCostWidget);
	DELE_PTR_FULL(UnequipButtonCanvas);
	DELE_PTR_FULL(Button_1);
	DELE_PTR_FULL(LeftSelectHighlight);
	DELE_PTR_FULL(BackgroundInvalidationBox);
	DELE_PTR_FULL(NameInvalidationBox);
	DELE_PTR_FULL(IconInvalidationBox);
	DELE_PTR_FULL(ItemClass);
}

// Function Insurgency.KitSelect_ItemAttribute.DoSetImages
// ()
// Parameters:
// TArray<class UTexture2D*>      Images                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKitSelect_ItemAttribute::DoSetImages(TArray<class UTexture2D*> Images)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelect_ItemAttribute.DoSetImages");

	UKitSelect_ItemAttribute_DoSetImages_Params params;
	params.Images = Images;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKitSelect_ItemAttribute::AfterRead()
{
	UUserWidget::AfterRead();

}

void UKitSelect_ItemAttribute::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.MainMenuPanelWidget.TryEnterMiltiplayerGame
// ()
void UMainMenuPanelWidget::TryEnterMiltiplayerGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.TryEnterMiltiplayerGame");

	UMainMenuPanelWidget_TryEnterMiltiplayerGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MainMenuPanelWidget.SetTutorialPromptResult
// ()
// Parameters:
// bool                           bOpeningTutorial               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMainMenuPanelWidget::SetTutorialPromptResult(bool bOpeningTutorial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.SetTutorialPromptResult");

	UMainMenuPanelWidget_SetTutorialPromptResult_Params params;
	params.bOpeningTutorial = bOpeningTutorial;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MainMenuPanelWidget.SetActiveMapPageSelect
// ()
// Parameters:
// int                            InValue                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMainMenuPanelWidget::SetActiveMapPageSelect(int InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.SetActiveMapPageSelect");

	UMainMenuPanelWidget_SetActiveMapPageSelect_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MainMenuPanelWidget.OnRequestNavigateBack
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UMainMenuPanelWidget::OnRequestNavigateBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.OnRequestNavigateBack");

	UMainMenuPanelWidget_OnRequestNavigateBack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.MainMenuPanelWidget.OnPanelOpened
// ()
void UMainMenuPanelWidget::OnPanelOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.OnPanelOpened");

	UMainMenuPanelWidget_OnPanelOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MainMenuPanelWidget.OnPanelClosed
// ()
void UMainMenuPanelWidget::OnPanelClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.OnPanelClosed");

	UMainMenuPanelWidget_OnPanelClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MainMenuPanelWidget.GetLessonList
// ()
// Parameters:
// class UTutorialList*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTutorialList* UMainMenuPanelWidget::GetLessonList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.GetLessonList");

	UMainMenuPanelWidget_GetLessonList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.MainMenuPanelWidget.DisplayRestrictionDialog
// ()
// Parameters:
// EUserPrivilegeResult           PrivilageRestriction           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UMainMenuPanelWidget::DisplayRestrictionDialog(EUserPrivilegeResult PrivilageRestriction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.DisplayRestrictionDialog");

	UMainMenuPanelWidget_DisplayRestrictionDialog_Params params;
	params.PrivilageRestriction = PrivilageRestriction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.MainMenuPanelWidget.BPGetINSWorldSetting
// ()
// Parameters:
// class AINSWorldSettings*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSWorldSettings* UMainMenuPanelWidget::BPGetINSWorldSetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.MainMenuPanelWidget.BPGetINSWorldSetting");

	UMainMenuPanelWidget_BPGetINSWorldSetting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMainMenuPanelWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(AccountNickname, UAccountNickname);
}

void UMainMenuPanelWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(AccountNickname);
}

// Function Insurgency.KitSelectMenu.UpdateFirearmAttributes
// ()
// Parameters:
// class UClass*                  InFirearmClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  InAmmoTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  InOriginalAmmoTypeClass        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* CaliberAttribute               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* MuzzleVelocityAttribute        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* PenetrationAttribute           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* EffectiveRangeAttribute        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* MagSizeAttribute               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* FireModesAttribute             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* FireRateAttribute              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* VerticalHandlingAttribute      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKitSelect_ItemAttribute* HorizontalHandlingAttribute    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKitSelectMenu::UpdateFirearmAttributes(class UClass* InFirearmClass, class UClass* InAmmoTypeClass, class UClass* InOriginalAmmoTypeClass, class UKitSelect_ItemAttribute* CaliberAttribute, class UKitSelect_ItemAttribute* MuzzleVelocityAttribute, class UKitSelect_ItemAttribute* PenetrationAttribute, class UKitSelect_ItemAttribute* EffectiveRangeAttribute, class UKitSelect_ItemAttribute* MagSizeAttribute, class UKitSelect_ItemAttribute* FireModesAttribute, class UKitSelect_ItemAttribute* FireRateAttribute, class UKitSelect_ItemAttribute* VerticalHandlingAttribute, class UKitSelect_ItemAttribute* HorizontalHandlingAttribute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.UpdateFirearmAttributes");

	UKitSelectMenu_UpdateFirearmAttributes_Params params;
	params.InFirearmClass = InFirearmClass;
	params.InAmmoTypeClass = InAmmoTypeClass;
	params.InOriginalAmmoTypeClass = InOriginalAmmoTypeClass;
	params.CaliberAttribute = CaliberAttribute;
	params.MuzzleVelocityAttribute = MuzzleVelocityAttribute;
	params.PenetrationAttribute = PenetrationAttribute;
	params.EffectiveRangeAttribute = EffectiveRangeAttribute;
	params.MagSizeAttribute = MagSizeAttribute;
	params.FireModesAttribute = FireModesAttribute;
	params.FireRateAttribute = FireRateAttribute;
	params.VerticalHandlingAttribute = VerticalHandlingAttribute;
	params.HorizontalHandlingAttribute = HorizontalHandlingAttribute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitSelectMenu.HasWeaponUpgradeEquipped
// ()
// Parameters:
// class UClass*                  WeaponUpgrade                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemSlot                      ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKitSelectMenu::HasWeaponUpgradeEquipped(class UClass* WeaponUpgrade, EItemSlot ItemSlot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.HasWeaponUpgradeEquipped");

	UKitSelectMenu_HasWeaponUpgradeEquipped_Params params;
	params.WeaponUpgrade = WeaponUpgrade;
	params.ItemSlot = ItemSlot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KitSelectMenu.HasItemInSlot
// ()
// Parameters:
// EItemSlot                      ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKitSelectMenu::HasItemInSlot(EItemSlot ItemSlot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.HasItemInSlot");

	UKitSelectMenu_HasItemInSlot_Params params;
	params.ItemSlot = ItemSlot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KitSelectMenu.HasItemEquipped
// ()
// Parameters:
// class UClass*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKitSelectMenu::HasItemEquipped(class UClass* Item, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.HasItemEquipped");

	UKitSelectMenu_HasItemEquipped_Params params;
	params.Item = Item;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KitSelectMenu.GetPlayerInventory
// ()
// Parameters:
// class UPlayerInventoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerInventoryComponent* UKitSelectMenu::GetPlayerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.GetPlayerInventory");

	UKitSelectMenu_GetPlayerInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KitSelectMenu.GetPlayerClass
// ()
// Parameters:
// class UPlayerClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerClass* UKitSelectMenu::GetPlayerClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.GetPlayerClass");

	UKitSelectMenu_GetPlayerClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KitSelectMenu.DoHasActiveHoverComparison
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKitSelectMenu::DoHasActiveHoverComparison()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.DoHasActiveHoverComparison");

	UKitSelectMenu_DoHasActiveHoverComparison_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KitSelectMenu.DoDetermineFireModeImages
// ()
// Parameters:
// class UClass*                  InFirearmClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTexture2D*>      OutFireModeImages              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKitSelectMenu::DoDetermineFireModeImages(class UClass* InFirearmClass, TArray<class UTexture2D*>* OutFireModeImages)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitSelectMenu.DoDetermineFireModeImages");

	UKitSelectMenu_DoDetermineFireModeImages_Params params;
	params.InFirearmClass = InFirearmClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutFireModeImages != nullptr)
		*OutFireModeImages = params.OutFireModeImages;

}


void UKitSelectMenu::AfterRead()
{
	UMainMenuPanelWidget::AfterRead();

	READ_PTR_FULL(ItemTypeSwitcher, UWidgetSwitcher);
	READ_PTR_FULL(FirearmAttributes, UVerticalBox);
	READ_PTR_FULL(CurrentlyHoveredItemClass, UClass);
	READ_PTR_FULL(CurrentlyHoveredUpgradeClass, UClass);
	READ_PTR_FULL(LastSelectedItemClass, UClass);
}

void UKitSelectMenu::BeforeDelete()
{
	UMainMenuPanelWidget::BeforeDelete();

	DELE_PTR_FULL(ItemTypeSwitcher);
	DELE_PTR_FULL(FirearmAttributes);
	DELE_PTR_FULL(CurrentlyHoveredItemClass);
	DELE_PTR_FULL(CurrentlyHoveredUpgradeClass);
	DELE_PTR_FULL(LastSelectedItemClass);
}

// Function Insurgency.KitPreviewActor.RegisterPlayer
// ()
// Parameters:
// class AINSBasePlayerController* InPlayerController             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewActor::RegisterPlayer(class AINSBasePlayerController* InPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.RegisterPlayer");

	AKitPreviewActor_RegisterPlayer_Params params;
	params.InPlayerController = InPlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.OnUpdatePlayerClass
// ()
// Parameters:
// class UFactionDefinition*      FactionDefinition              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewActor::OnUpdatePlayerClass(class UFactionDefinition* FactionDefinition, class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.OnUpdatePlayerClass");

	AKitPreviewActor_OnUpdatePlayerClass_Params params;
	params.FactionDefinition = FactionDefinition;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.OnUpdateInventory
// ()
// Parameters:
// class UPlayerInventoryComponent* InventoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewActor::OnUpdateInventory(class UPlayerInventoryComponent* InventoryComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.OnUpdateInventory");

	AKitPreviewActor_OnUpdateInventory_Params params;
	params.InventoryComponent = InventoryComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.OnTeamChanged
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewActor::OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.OnTeamChanged");

	AKitPreviewActor_OnTeamChanged_Params params;
	params.TeamId = TeamId;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.OnPlayerClassChanged
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewActor::OnPlayerClassChanged(class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.OnPlayerClassChanged");

	AKitPreviewActor_OnPlayerClassChanged_Params params;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.OnInventoryChanged
// ()
void AKitPreviewActor::OnInventoryChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.OnInventoryChanged");

	AKitPreviewActor_OnInventoryChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.OnFirstPersonWeaponMeshSet
// ()
// Parameters:
// class UINSSkeletalMeshComponent* NewMesh                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewActor::OnFirstPersonWeaponMeshSet(class UINSSkeletalMeshComponent* NewMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.OnFirstPersonWeaponMeshSet");

	AKitPreviewActor_OnFirstPersonWeaponMeshSet_Params params;
	params.NewMesh = NewMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewActor.GetOwnerInventory
// ()
// Parameters:
// class UPlayerInventoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerInventoryComponent* AKitPreviewActor::GetOwnerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewActor.GetOwnerInventory");

	AKitPreviewActor_GetOwnerInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AKitPreviewActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ArrowComponent, UArrowComponent);
}

void AKitPreviewActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ArrowComponent);
}

// Function Insurgency.KitPreviewWeapon.UpdateWeaponModel
// ()
// Parameters:
// struct FStoredInventoryItem    Item                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AKitPreviewWeapon::UpdateWeaponModel(const struct FStoredInventoryItem& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewWeapon.UpdateWeaponModel");

	AKitPreviewWeapon_UpdateWeaponModel_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewWeapon.UpdateViewedWeaponSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceRefresh                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AKitPreviewWeapon::UpdateViewedWeaponSlot(EItemSlot Slot, int SubSlot, bool bForceRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewWeapon.UpdateViewedWeaponSlot");

	AKitPreviewWeapon_UpdateViewedWeaponSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.bForceRefresh = bForceRefresh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KitPreviewWeapon.RemoveWeapon
// ()
void AKitPreviewWeapon::RemoveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KitPreviewWeapon.RemoveWeapon");

	AKitPreviewWeapon_RemoveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.KitPreviewWeapon.OnViewedWeaponSlotUpdated__DelegateSignature
// ()
void AKitPreviewWeapon::OnViewedWeaponSlotUpdated__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.KitPreviewWeapon.OnViewedWeaponSlotUpdated__DelegateSignature");

	AKitPreviewWeapon_OnViewedWeaponSlotUpdated__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AKitPreviewWeapon::AfterRead()
{
	AKitPreviewActor::AfterRead();

	READ_PTR_FULL(WeaponAnimClass, UClass);
	READ_PTR_FULL(SpawnedItem, AItemBase);
}

void AKitPreviewWeapon::BeforeDelete()
{
	AKitPreviewActor::BeforeDelete();

	DELE_PTR_FULL(WeaponAnimClass);
	DELE_PTR_FULL(SpawnedItem);
}

void AKitPreviewCharacter::AfterRead()
{
	AKitPreviewActor::AfterRead();

	READ_PTR_FULL(PreviewCapsuleComponent, UCapsuleComponent);
	READ_PTR_FULL(SpawnedCharacter, AProfileCharacter);
	READ_PTR_FULL(CharacterAnimClass, UClass);
	READ_PTR_FULL(PrimaryWeapon, AItemBase);
}

void AKitPreviewCharacter::BeforeDelete()
{
	AKitPreviewActor::BeforeDelete();

	DELE_PTR_FULL(PreviewCapsuleComponent);
	DELE_PTR_FULL(SpawnedCharacter);
	DELE_PTR_FULL(CharacterAnimClass);
	DELE_PTR_FULL(PrimaryWeapon);
}

void UKillerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UKillerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.TraumaAchievement.OnDismemberRagdoll
// ()
// Parameters:
// class ARagdoll*                Ragdoll                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UTraumaAchievement::OnDismemberRagdoll(class ARagdoll* Ragdoll, class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.TraumaAchievement.OnDismemberRagdoll");

	UTraumaAchievement_OnDismemberRagdoll_Params params;
	params.Ragdoll = Ragdoll;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTraumaAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UTraumaAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

// Function Insurgency.KillAchievement.OnRecievedKill
// ()
// Parameters:
// struct FSoldierKillInfo        SoldierKillInfo                (Parm, NoDestructor, NativeAccessSpecifierPublic)
void UKillAchievement::OnRecievedKill(const struct FSoldierKillInfo& SoldierKillInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KillAchievement.OnRecievedKill");

	UKillAchievement_OnRecievedKill_Params params;
	params.SoldierKillInfo = SoldierKillInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKillAchievement::AfterRead()
{
	USandstormAchievement::AfterRead();

}

void UKillAchievement::BeforeDelete()
{
	USandstormAchievement::BeforeDelete();

}

void UBangedAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UBangedAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UBlindFireAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UBlindFireAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void ULuckyAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void ULuckyAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UExploitativeAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UExploitativeAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UCinematicAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UCinematicAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void URuthlessAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void URuthlessAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

// Function Insurgency.RoadHazardAchievement.OnRecievedVehicleKill
// ()
// Parameters:
// struct FSoldierKillInfo        SoldierKillInfo                (Parm, NoDestructor, NativeAccessSpecifierPublic)
void URoadHazardAchievement::OnRecievedVehicleKill(const struct FSoldierKillInfo& SoldierKillInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.RoadHazardAchievement.OnRecievedVehicleKill");

	URoadHazardAchievement_OnRecievedVehicleKill_Params params;
	params.SoldierKillInfo = SoldierKillInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URoadHazardAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void URoadHazardAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

// Function Insurgency.JR50Achievement.OnRecievedVehicleKill
// ()
// Parameters:
// struct FSoldierKillInfo        SoldierKillInfo                (Parm, NoDestructor, NativeAccessSpecifierPublic)
void UJR50Achievement::OnRecievedVehicleKill(const struct FSoldierKillInfo& SoldierKillInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.JR50Achievement.OnRecievedVehicleKill");

	UJR50Achievement_OnRecievedVehicleKill_Params params;
	params.SoldierKillInfo = SoldierKillInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UJR50Achievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UJR50Achievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UThanksStationAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UThanksStationAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UWallbangerAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UWallbangerAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UHSLDAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UHSLDAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UItsAllInTheReflxesAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UItsAllInTheReflxesAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UEfficientAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UEfficientAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UShotgunShotgunAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UShotgunShotgunAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UKnockKnockAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UKnockKnockAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UMountAndGunAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UMountAndGunAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UPointShootingAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UPointShootingAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UHitAndRunAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UHitAndRunAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

void UPersonalAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UPersonalAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

// Function Insurgency.GroundedAchievement.OnDownedFireSupport
// ()
// Parameters:
// class AINSPlayerController*    Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGroundedAchievement::OnDownedFireSupport(class AINSPlayerController* Killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GroundedAchievement.OnDownedFireSupport");

	UGroundedAchievement_OnDownedFireSupport_Params params;
	params.Killer = Killer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGroundedAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UGroundedAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

// Function Insurgency.FlaccidParalysisAchievement.OnOwningSoldierKilled
// ()
void UFlaccidParalysisAchievement::OnOwningSoldierKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FlaccidParalysisAchievement.OnOwningSoldierKilled");

	UFlaccidParalysisAchievement_OnOwningSoldierKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFlaccidParalysisAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UFlaccidParalysisAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

// Function Insurgency.FirstBloodAchievement.OnRecievedFirstBlood
// ()
// Parameters:
// class AINSPlayerController*    Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UFirstBloodAchievement::OnRecievedFirstBlood(class AINSPlayerController* Killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FirstBloodAchievement.OnRecievedFirstBlood");

	UFirstBloodAchievement_OnRecievedFirstBlood_Params params;
	params.Killer = Killer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFirstBloodAchievement::AfterRead()
{
	UKillAchievement::AfterRead();

}

void UFirstBloodAchievement::BeforeDelete()
{
	UKillAchievement::BeforeDelete();

}

// Function Insurgency.KeyIconWidget.UpdateAction
// ()
// Parameters:
// struct FLessonInputAction      NewAction                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UKeyIconWidget::UpdateAction(const struct FLessonInputAction& NewAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.UpdateAction");

	UKeyIconWidget_UpdateAction_Params params;
	params.NewAction = NewAction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyIconWidget.SetKey
// ()
// Parameters:
// struct FKey                    InKey                          (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKeyIconWidget::SetKey(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.SetKey");

	UKeyIconWidget_SetKey_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KeyIconWidget.SetFallbackKey
// ()
// Parameters:
// struct FKey                    InFallbackKey                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKeyIconWidget::SetFallbackKey(const struct FKey& InFallbackKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.SetFallbackKey");

	UKeyIconWidget_SetFallbackKey_Params params;
	params.InFallbackKey = InFallbackKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyIconWidget.RebuildKeyIcon
// ()
void UKeyIconWidget::RebuildKeyIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.RebuildKeyIcon");

	UKeyIconWidget_RebuildKeyIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyIconWidget.OnUsingControllerUpdated
// ()
// Parameters:
// bool                           bUsingController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EeInputIconType                NewIconType                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKeyIconWidget::OnUsingControllerUpdated(bool bUsingController, EeInputIconType NewIconType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.OnUsingControllerUpdated");

	UKeyIconWidget_OnUsingControllerUpdated_Params params;
	params.bUsingController = bUsingController;
	params.NewIconType = NewIconType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyIconWidget.OnSettingsUpdated
// ()
void UKeyIconWidget::OnSettingsUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.OnSettingsUpdated");

	UKeyIconWidget_OnSettingsUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyIconWidget.IsUsingGamepad
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKeyIconWidget::IsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.IsUsingGamepad");

	UKeyIconWidget_IsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KeyIconWidget.GetTextureForKey
// ()
// Parameters:
// struct FKey                    InKey                          (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* UKeyIconWidget::GetTextureForKey(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.GetTextureForKey");

	UKeyIconWidget_GetTextureForKey_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KeyIconWidget.GetTextureForInput
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* UKeyIconWidget::GetTextureForInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.GetTextureForInput");

	UKeyIconWidget_GetTextureForInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KeyIconWidget.GetKeyForInput
// ()
// Parameters:
// bool                           bIsUsingGamepad                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    ReturnValue                    (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FKey UKeyIconWidget::GetKeyForInput(bool bIsUsingGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.GetKeyForInput");

	UKeyIconWidget_GetKeyForInput_Params params;
	params.bIsUsingGamepad = bIsUsingGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KeyIconWidget.GetInputIconType
// ()
// Parameters:
// EeInputIconType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EeInputIconType UKeyIconWidget::GetInputIconType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyIconWidget.GetInputIconType");

	UKeyIconWidget_GetInputIconType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UKeyIconWidget::AfterRead()
{
	UWidget::AfterRead();

}

void UKeyIconWidget::BeforeDelete()
{
	UWidget::BeforeDelete();

}

void UKeyIconSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

	READ_PTR_FULL(LoadedKeyIconsPC, UKeyIconImageData);
	READ_PTR_FULL(LoadedKeyIconsPS4, UKeyIconImageData);
	READ_PTR_FULL(LoadedKeyIconsX1, UKeyIconImageData);
}

void UKeyIconSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

	DELE_PTR_FULL(LoadedKeyIconsPC);
	DELE_PTR_FULL(LoadedKeyIconsPS4);
	DELE_PTR_FULL(LoadedKeyIconsX1);
}

void UKeyIconImageData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UKeyIconImageData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UKeyHintDecorator::AfterRead()
{
	URichTextBlockDecorator::AfterRead();

}

void UKeyHintDecorator::BeforeDelete()
{
	URichTextBlockDecorator::BeforeDelete();

}

// Function Insurgency.KeyBindingsMenu.UpdateKeyBindings
// ()
void UKeyBindingsMenu::UpdateKeyBindings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.UpdateKeyBindings");

	UKeyBindingsMenu_UpdateKeyBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.UpdateKeyBinding
// ()
// Parameters:
// struct FKeyBindingOption       Binding                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FInputChord             NewInput                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKeyBindingsMenu::UpdateKeyBinding(const struct FKeyBindingOption& Binding, const struct FInputChord& NewInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.UpdateKeyBinding");

	UKeyBindingsMenu_UpdateKeyBinding_Params params;
	params.Binding = Binding;
	params.NewInput = NewInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.SaveKeyMappings
// ()
void UKeyBindingsMenu::SaveKeyMappings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.SaveKeyMappings");

	UKeyBindingsMenu_SaveKeyMappings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.ResetBindingsToDefaults
// ()
void UKeyBindingsMenu::ResetBindingsToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.ResetBindingsToDefaults");

	UKeyBindingsMenu_ResetBindingsToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.RemoveAllMappingsFromKeyWithExemptions
// ()
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           ExemptActions                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKeyBindingsMenu::RemoveAllMappingsFromKeyWithExemptions(const struct FKey& Key, TArray<struct FName> ExemptActions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.RemoveAllMappingsFromKeyWithExemptions");

	UKeyBindingsMenu_RemoveAllMappingsFromKeyWithExemptions_Params params;
	params.Key = Key;
	params.ExemptActions = ExemptActions;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.RemoveAllMappingsFromKey
// ()
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UKeyBindingsMenu::RemoveAllMappingsFromKey(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.RemoveAllMappingsFromKey");

	UKeyBindingsMenu_RemoveAllMappingsFromKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.RemoveActionMapping
// ()
// Parameters:
// struct FInputActionKeyMapping  KeyMapping                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UKeyBindingsMenu::RemoveActionMapping(struct FInputActionKeyMapping* KeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.RemoveActionMapping");

	UKeyBindingsMenu_RemoveActionMapping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (KeyMapping != nullptr)
		*KeyMapping = params.KeyMapping;

}


// DelegateFunction Insurgency.KeyBindingsMenu.RefreshAllKeysDelegate__DelegateSignature
// ()
void UKeyBindingsMenu::RefreshAllKeysDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.KeyBindingsMenu.RefreshAllKeysDelegate__DelegateSignature");

	UKeyBindingsMenu_RefreshAllKeysDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.RefreshAllKeys
// ()
void UKeyBindingsMenu::RefreshAllKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.RefreshAllKeys");

	UKeyBindingsMenu_RefreshAllKeys_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.HasKeyConflict
// ()
// Parameters:
// struct FKeyBindingOption       Binding                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FKey                    TestKey                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   OutConflictingAction           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UKeyBindingsMenu::HasKeyConflict(const struct FKeyBindingOption& Binding, const struct FKey& TestKey, struct FName* OutConflictingAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.HasKeyConflict");

	UKeyBindingsMenu_HasKeyConflict_Params params;
	params.Binding = Binding;
	params.TestKey = TestKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutConflictingAction != nullptr)
		*OutConflictingAction = params.OutConflictingAction;


	return params.ReturnValue;
}


// Function Insurgency.KeyBindingsMenu.GetLocalizedActionName
// ()
// Parameters:
// struct FName                   Action                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutLocalized                   (Parm, OutParm, NativeAccessSpecifierPublic)
void UKeyBindingsMenu::GetLocalizedActionName(const struct FName& Action, struct FText* OutLocalized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.GetLocalizedActionName");

	UKeyBindingsMenu_GetLocalizedActionName_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocalized != nullptr)
		*OutLocalized = params.OutLocalized;

}


// Function Insurgency.KeyBindingsMenu.GetActionMappings
// ()
// Parameters:
// TMap<struct FName, struct FActionMapList> ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
TMap<struct FName, struct FActionMapList> UKeyBindingsMenu::GetActionMappings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.GetActionMappings");

	UKeyBindingsMenu_GetActionMappings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.KeyBindingsMenu.ApplyDirtyKeyBindings
// ()
void UKeyBindingsMenu::ApplyDirtyKeyBindings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.ApplyDirtyKeyBindings");

	UKeyBindingsMenu_ApplyDirtyKeyBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.KeyBindingsMenu.AddActionMapping
// ()
// Parameters:
// struct FInputActionKeyMapping  KeyMapping                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UKeyBindingsMenu::AddActionMapping(struct FInputActionKeyMapping* KeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.KeyBindingsMenu.AddActionMapping");

	UKeyBindingsMenu_AddActionMapping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (KeyMapping != nullptr)
		*KeyMapping = params.KeyMapping;

}


void UKeyBindingsMenu::AfterRead()
{
	UOptionsMenu::AfterRead();

}

void UKeyBindingsMenu::BeforeDelete()
{
	UOptionsMenu::BeforeDelete();

}

void AItemStripper::AfterRead()
{
	ATriggerVolume::AfterRead();

}

void AItemStripper::BeforeDelete()
{
	ATriggerVolume::BeforeDelete();

}

// Function Insurgency.ItemBase.ReattachMasterPosedChildMeshes
// ()
// Parameters:
// class USkinnedMeshComponent*   NewParent                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::ReattachMasterPosedChildMeshes(class USkinnedMeshComponent* NewParent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.ReattachMasterPosedChildMeshes");

	AItemBase_ReattachMasterPosedChildMeshes_Params params;
	params.NewParent = NewParent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.PlaySoundEventPairOnOwner
// ()
// Parameters:
// struct FAkComponentCameraPair  AudioEvent                     (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AItemBase::PlaySoundEventPairOnOwner(struct FAkComponentCameraPair* AudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.PlaySoundEventPairOnOwner");

	AItemBase_PlaySoundEventPairOnOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AudioEvent != nullptr)
		*AudioEvent = params.AudioEvent;

}


// Function Insurgency.ItemBase.PlaySoundEventOnOwnerFromView
// ()
// Parameters:
// class UAkAudioEvent*           FirstPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*           ThirdPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::PlaySoundEventOnOwnerFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.PlaySoundEventOnOwnerFromView");

	AItemBase_PlaySoundEventOnOwnerFromView_Params params;
	params.FirstPersonEvent = FirstPersonEvent;
	params.ThirdPersonEvent = ThirdPersonEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.PlaySoundEventOnOwner
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::PlaySoundEventOnOwner(class UAkAudioEvent* Event, bool bThirdPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.PlaySoundEventOnOwner");

	AItemBase_PlaySoundEventOnOwner_Params params;
	params.Event = Event;
	params.bThirdPerson = bThirdPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.OnSpawnedPreviewActor
// ()
// Parameters:
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerInventoryComponent* PlayerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::OnSpawnedPreviewActor(bool bFirstPerson, class UPlayerInventoryComponent* PlayerInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.OnSpawnedPreviewActor");

	AItemBase_OnSpawnedPreviewActor_Params params;
	params.bFirstPerson = bFirstPerson;
	params.PlayerInventory = PlayerInventory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.OnRep_PawnOwner
// ()
void AItemBase::OnRep_PawnOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.OnRep_PawnOwner");

	AItemBase_OnRep_PawnOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.MigrateStructsToNative
// ()
void AItemBase::MigrateStructsToNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.MigrateStructsToNative");

	AItemBase_MigrateStructsToNative_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.IsOwnerLocallyControlled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemBase::IsOwnerLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.IsOwnerLocallyControlled");

	AItemBase_IsOwnerLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.GetWeight
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemBase::GetWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.GetWeight");

	AItemBase_GetWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.GetRepresentativeItemSlot
// ()
// Parameters:
// EItemSlot                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EItemSlot AItemBase::GetRepresentativeItemSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.GetRepresentativeItemSlot");

	AItemBase_GetRepresentativeItemSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.GetOwnerMesh3P
// ()
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USkeletalMeshComponent* AItemBase::GetOwnerMesh3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.GetOwnerMesh3P");

	AItemBase_GetOwnerMesh3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.GetMesh3P
// ()
// Parameters:
// class UINSSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSSkeletalMeshComponent* AItemBase::GetMesh3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.GetMesh3P");

	AItemBase_GetMesh3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.GetDroppedLifeSpan
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemBase::GetDroppedLifeSpan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.GetDroppedLifeSpan");

	AItemBase_GetDroppedLifeSpan_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.DropItem
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemBase::DropItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.DropItem");

	AItemBase_DropItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.DetachMeshFromPawn
// ()
void AItemBase::DetachMeshFromPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.DetachMeshFromPawn");

	AItemBase_DetachMeshFromPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.ConsumesSlotCapacity
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemBase::ConsumesSlotCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.ConsumesSlotCapacity");

	AItemBase_ConsumesSlotCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.CheckPhysicsSleep
// ()
void AItemBase::CheckPhysicsSleep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.CheckPhysicsSleep");

	AItemBase_CheckPhysicsSleep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.CanShowCosmeticEffects
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemBase::CanShowCosmeticEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.CanShowCosmeticEffects");

	AItemBase_CanShowCosmeticEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.CanBeDropped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemBase::CanBeDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.CanBeDropped");

	AItemBase_CanBeDropped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemBase.BlueprintSpawnedPreviewActor
// ()
// Parameters:
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerInventoryComponent* PlayerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::BlueprintSpawnedPreviewActor(bool bFirstPerson, class UPlayerInventoryComponent* PlayerInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintSpawnedPreviewActor");

	AItemBase_BlueprintSpawnedPreviewActor_Params params;
	params.bFirstPerson = bFirstPerson;
	params.PlayerInventory = PlayerInventory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintPreItemRemovedFromInventory
// ()
void AItemBase::BlueprintPreItemRemovedFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintPreItemRemovedFromInventory");

	AItemBase_BlueprintPreItemRemovedFromInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintPostItemRemovedFromInventory
// ()
// Parameters:
// class AINSSoldier*             PreviousOwnerPawn              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::BlueprintPostItemRemovedFromInventory(class AINSSoldier* PreviousOwnerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintPostItemRemovedFromInventory");

	AItemBase_BlueprintPostItemRemovedFromInventory_Params params;
	params.PreviousOwnerPawn = PreviousOwnerPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintOnPickedUp
// ()
void AItemBase::BlueprintOnPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintOnPickedUp");

	AItemBase_BlueprintOnPickedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintOnDropped
// ()
void AItemBase::BlueprintOnDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintOnDropped");

	AItemBase_BlueprintOnDropped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintOnDetachMeshFromPawn
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::BlueprintOnDetachMeshFromPawn(class UINSSkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintOnDetachMeshFromPawn");

	AItemBase_BlueprintOnDetachMeshFromPawn_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintOnDeath
// ()
void AItemBase::BlueprintOnDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintOnDeath");

	AItemBase_BlueprintOnDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintOnAttachMeshToPawn
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemBase::BlueprintOnAttachMeshToPawn(class UINSSkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintOnAttachMeshToPawn");

	AItemBase_BlueprintOnAttachMeshToPawn_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemBase.BlueprintCalcOwnerCamera
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMinimalViewInfo        OutResult                      (Parm, OutParm, NativeAccessSpecifierPublic)
void AItemBase::BlueprintCalcOwnerCamera(float DeltaTime, struct FMinimalViewInfo* OutResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.BlueprintCalcOwnerCamera");

	AItemBase_BlueprintCalcOwnerCamera_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResult != nullptr)
		*OutResult = params.OutResult;

}


// Function Insurgency.ItemBase.AttachMeshToPawn
// ()
void AItemBase::AttachMeshToPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemBase.AttachMeshToPawn");

	AItemBase_AttachMeshToPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(PreviewPawn, AProfileCharacter);
	READ_PTR_FULL(PawnOwner, AINSSoldier);
	READ_PTR_FULL(LocalPlayerController, APlayerController);
	READ_PTR_FULL(Mesh3P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(CollisionSurfaceReaction, USurfaceReaction);
}

void AItemBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(PreviewPawn);
	DELE_PTR_FULL(PawnOwner);
	DELE_PTR_FULL(LocalPlayerController);
	DELE_PTR_FULL(Mesh3P);
	DELE_PTR_FULL(CollisionSurfaceReaction);
}

// Function Insurgency.ItemEquipable.UpdateLocalRTPC
// ()
void AItemEquipable::UpdateLocalRTPC()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.UpdateLocalRTPC");

	AItemEquipable_UpdateLocalRTPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.ShouldShowItemsOnBack
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::ShouldShowItemsOnBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.ShouldShowItemsOnBack");

	AItemEquipable_ShouldShowItemsOnBack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.ShouldPlayFirstEquip
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::ShouldPlayFirstEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.ShouldPlayFirstEquip");

	AItemEquipable_ShouldPlayFirstEquip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.SetWeaponRTPC
// ()
// Parameters:
// struct FString                 RTPCName                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemEquipable::SetWeaponRTPC(const struct FString& RTPCName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.SetWeaponRTPC");

	AItemEquipable_SetWeaponRTPC_Params params;
	params.RTPCName = RTPCName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.SetEquipableState
// ()
// Parameters:
// EEquipableState                NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemEquipable::SetEquipableState(EEquipableState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.SetEquipableState");

	AItemEquipable_SetEquipableState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.PlaySoundEventPair
// ()
// Parameters:
// struct FAkComponentCameraPair  AudioEvent                     (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemEquipable::PlaySoundEventPair(struct FAkComponentCameraPair* AudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.PlaySoundEventPair");

	AItemEquipable_PlaySoundEventPair_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AudioEvent != nullptr)
		*AudioEvent = params.AudioEvent;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.PlaySoundEventFromView
// ()
// Parameters:
// class UAkAudioEvent*           FirstPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*           ThirdPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemEquipable::PlaySoundEventFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.PlaySoundEventFromView");

	AItemEquipable_PlaySoundEventFromView_Params params;
	params.FirstPersonEvent = FirstPersonEvent;
	params.ThirdPersonEvent = ThirdPersonEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.PlaySoundEvent
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplySpeedOfSound             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemEquipable::PlaySoundEvent(class UAkAudioEvent* Event, bool bApplySpeedOfSound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.PlaySoundEvent");

	AItemEquipable_PlaySoundEvent_Params params;
	params.Event = Event;
	params.bApplySpeedOfSound = bApplySpeedOfSound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.OnRep_EquipableState
// ()
void AItemEquipable::OnRep_EquipableState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.OnRep_EquipableState");

	AItemEquipable_OnRep_EquipableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemEquipable.ItemUnequipDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          SwitchingTo                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemEquipable::ItemUnequipDelegate__DelegateSignature(bool bInstant, class AItemEquipable* SwitchingTo)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemEquipable.ItemUnequipDelegate__DelegateSignature");

	AItemEquipable_ItemUnequipDelegate__DelegateSignature_Params params;
	params.bInstant = bInstant;
	params.SwitchingTo = SwitchingTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemEquipable.ItemEquipDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bInstant                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          SwitchingFrom                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWantsFirstEquip               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemEquipable::ItemEquipDelegate__DelegateSignature(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemEquipable.ItemEquipDelegate__DelegateSignature");

	AItemEquipable_ItemEquipDelegate__DelegateSignature_Params params;
	params.bInstant = bInstant;
	params.SwitchingFrom = SwitchingFrom;
	params.bWantsFirstEquip = bWantsFirstEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.IsViewTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsViewTarget");

	AItemEquipable_IsViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsUnequippingOrUnequipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsUnequippingOrUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsUnequippingOrUnequipped");

	AItemEquipable_IsUnequippingOrUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsUnequipping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsUnequipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsUnequipping");

	AItemEquipable_IsUnequipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsUnequipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsUnequipped");

	AItemEquipable_IsUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsOwnerUsingGamepad
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsOwnerUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsOwnerUsingGamepad");

	AItemEquipable_IsOwnerUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsMeshVisibleWhenUnequipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsMeshVisibleWhenUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsMeshVisibleWhenUnequipped");

	AItemEquipable_IsMeshVisibleWhenUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsFreeaimEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsFreeaimEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsFreeaimEnabled");

	AItemEquipable_IsFreeaimEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsFirstPersonViewTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsFirstPersonViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsFirstPersonViewTarget");

	AItemEquipable_IsFirstPersonViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsEquippingOrEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsEquippingOrEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsEquippingOrEquipped");

	AItemEquipable_IsEquippingOrEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsEquipping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsEquipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsEquipping");

	AItemEquipable_IsEquipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsEquippedOrNearlyEquipped
// ()
// Parameters:
// float                          Tolerance                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsEquippedOrNearlyEquipped(float Tolerance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsEquippedOrNearlyEquipped");

	AItemEquipable_IsEquippedOrNearlyEquipped_Params params;
	params.Tolerance = Tolerance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsEquipped");

	AItemEquipable_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.IsAIControlled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::IsAIControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.IsAIControlled");

	AItemEquipable_IsAIControlled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetUnequipDurationModifier
// ()
// Parameters:
// bool                           bSwitchingFrom                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemEquipable::GetUnequipDurationModifier(bool bSwitchingFrom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetUnequipDurationModifier");

	AItemEquipable_GetUnequipDurationModifier_Params params;
	params.bSwitchingFrom = bSwitchingFrom;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetOwningPawn
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* AItemEquipable::GetOwningPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetOwningPawn");

	AItemEquipable_GetOwningPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetMesh1P
// ()
// Parameters:
// class UINSSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSSkeletalMeshComponent* AItemEquipable::GetMesh1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetMesh1P");

	AItemEquipable_GetMesh1P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetFreeaimFraction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemEquipable::GetFreeaimFraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetFreeaimFraction");

	AItemEquipable_GetFreeaimFraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetEquipDurationModifier
// ()
// Parameters:
// bool                           bSwitchingFrom                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemEquipable::GetEquipDurationModifier(bool bSwitchingFrom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetEquipDurationModifier");

	AItemEquipable_GetEquipDurationModifier_Params params;
	params.bSwitchingFrom = bSwitchingFrom;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetEquipableState
// ()
// Parameters:
// EEquipableState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EEquipableState AItemEquipable::GetEquipableState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetEquipableState");

	AItemEquipable_GetEquipableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.GetController
// ()
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AController* AItemEquipable::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.GetController");

	AItemEquipable_GetController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.ClientCancelUnequip
// ()
void AItemEquipable::ClientCancelUnequip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.ClientCancelUnequip");

	AItemEquipable_ClientCancelUnequip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.ClientCancelEquip
// ()
void AItemEquipable::ClientCancelEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.ClientCancelEquip");

	AItemEquipable_ClientCancelEquip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.CanEquipBlueprint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemEquipable::CanEquipBlueprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.CanEquipBlueprint");

	AItemEquipable_CanEquipBlueprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemEquipable.BlueprintOnUpdateFirstPersonVisibility
// ()
// Parameters:
// bool                           bFirstPersonVisibile           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemEquipable::BlueprintOnUpdateFirstPersonVisibility(bool bFirstPersonVisibile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.BlueprintOnUpdateFirstPersonVisibility");

	AItemEquipable_BlueprintOnUpdateFirstPersonVisibility_Params params;
	params.bFirstPersonVisibile = bFirstPersonVisibile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.BlueprintOnUnequipped
// ()
void AItemEquipable::BlueprintOnUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.BlueprintOnUnequipped");

	AItemEquipable_BlueprintOnUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.BlueprintOnUnequip
// ()
void AItemEquipable::BlueprintOnUnequip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.BlueprintOnUnequip");

	AItemEquipable_BlueprintOnUnequip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.BlueprintOnEquipped
// ()
void AItemEquipable::BlueprintOnEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.BlueprintOnEquipped");

	AItemEquipable_BlueprintOnEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.BlueprintOnEquip
// ()
void AItemEquipable::BlueprintOnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.BlueprintOnEquip");

	AItemEquipable_BlueprintOnEquip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.BlueprintOnAttachToBack
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemEquipable::BlueprintOnAttachToBack(class UINSSkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.BlueprintOnAttachToBack");

	AItemEquipable_BlueprintOnAttachToBack_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemEquipable.AttachMeshToBack
// ()
void AItemEquipable::AttachMeshToBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemEquipable.AttachMeshToBack");

	AItemEquipable_AttachMeshToBack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemEquipable::AfterRead()
{
	AItemBase::AfterRead();

	READ_PTR_FULL(WeaponAudioComponent, UINSAudioComponent);
	READ_PTR_FULL(Mesh1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(ItemPickupUIIcon, UTexture2D);
	READ_PTR_FULL(ItemScavengeUIIcon, UTexture2D);
}

void AItemEquipable::BeforeDelete()
{
	AItemBase::BeforeDelete();

	DELE_PTR_FULL(WeaponAudioComponent);
	DELE_PTR_FULL(Mesh1P);
	DELE_PTR_FULL(ItemPickupUIIcon);
	DELE_PTR_FULL(ItemScavengeUIIcon);
}

// DelegateFunction Insurgency.ItemWeapon.WeaponUpgradeRemovedDelegate__DelegateSignature
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::WeaponUpgradeRemovedDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemWeapon.WeaponUpgradeRemovedDelegate__DelegateSignature");

	AItemWeapon_WeaponUpgradeRemovedDelegate__DelegateSignature_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemWeapon.WeaponUpgradeInstalledDelegate__DelegateSignature
// ()
// Parameters:
// class UWeaponUpgradeComponent* Upgrade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::WeaponUpgradeInstalledDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemWeapon.WeaponUpgradeInstalledDelegate__DelegateSignature");

	AItemWeapon_WeaponUpgradeInstalledDelegate__DelegateSignature_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UsesReloadSequences
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::UsesReloadSequences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UsesReloadSequences");

	AItemWeapon_UsesReloadSequences_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.UsesMagazineReloads
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::UsesMagazineReloads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UsesMagazineReloads");

	AItemWeapon_UsesMagazineReloads_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainerToDefault
// ()
// Parameters:
// bool                           bForceFirstPerson              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::UpdateVisibleAmmoContainerToDefault(bool bForceFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainerToDefault");

	AItemWeapon_UpdateVisibleAmmoContainerToDefault_Params params;
	params.bForceFirstPerson = bForceFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainerForMeshes
// ()
// Parameters:
// class UClass*                  NewContainer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ParentMesh1P                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce1P                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ParentMesh3P                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce3P                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::UpdateVisibleAmmoContainerForMeshes(class UClass* NewContainer, class USkeletalMeshComponent* ParentMesh1P, bool bForce1P, class USkeletalMeshComponent* ParentMesh3P, bool bForce3P)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainerForMeshes");

	AItemWeapon_UpdateVisibleAmmoContainerForMeshes_Params params;
	params.NewContainer = NewContainer;
	params.ParentMesh1P = ParentMesh1P;
	params.bForce1P = bForce1P;
	params.ParentMesh3P = ParentMesh3P;
	params.bForce3P = bForce3P;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainerForMesh
// ()
// Parameters:
// class UClass*                  NewContainer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ParentMesh                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::UpdateVisibleAmmoContainerForMesh(class UClass* NewContainer, class USkeletalMeshComponent* ParentMesh, bool bFirstPerson, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainerForMesh");

	AItemWeapon_UpdateVisibleAmmoContainerForMesh_Params params;
	params.NewContainer = NewContainer;
	params.ParentMesh = ParentMesh;
	params.bFirstPerson = bFirstPerson;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainer
// ()
// Parameters:
// class UClass*                  NewContainer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceFirstPerson              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceThirdPerson              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::UpdateVisibleAmmoContainer(class UClass* NewContainer, bool bForceFirstPerson, bool bForceThirdPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateVisibleAmmoContainer");

	AItemWeapon_UpdateVisibleAmmoContainer_Params params;
	params.NewContainer = NewContainer;
	params.bForceFirstPerson = bForceFirstPerson;
	params.bForceThirdPerson = bForceThirdPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UpdateUpgradeFallbackThirdPersonMeshes
// ()
void AItemWeapon::UpdateUpgradeFallbackThirdPersonMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateUpgradeFallbackThirdPersonMeshes");

	AItemWeapon_UpdateUpgradeFallbackThirdPersonMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UpdateUpgradeFallbackFirstPersonMeshes
// ()
// Parameters:
// class USkeletalMeshComponent*  ParentSkeletalMesh             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::UpdateUpgradeFallbackFirstPersonMeshes(class USkeletalMeshComponent* ParentSkeletalMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateUpgradeFallbackFirstPersonMeshes");

	AItemWeapon_UpdateUpgradeFallbackFirstPersonMeshes_Params params;
	params.ParentSkeletalMesh = ParentSkeletalMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.UpdateLoadedAmmo
// ()
// Parameters:
// int                            NewLoadedAmmo                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::UpdateLoadedAmmo(int NewLoadedAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.UpdateLoadedAmmo");

	AItemWeapon_UpdateLoadedAmmo_Params params;
	params.NewLoadedAmmo = NewLoadedAmmo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.SpawnWeaponUpgrade
// ()
// Parameters:
// class UClass*                  UpgradeClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWeaponUpgradeComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWeaponUpgradeComponent* AItemWeapon::SpawnWeaponUpgrade(class UClass* UpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.SpawnWeaponUpgrade");

	AItemWeapon_SpawnWeaponUpgrade_Params params;
	params.UpgradeClass = UpgradeClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.ShouldRemoveOnUnequip
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::ShouldRemoveOnUnequip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ShouldRemoveOnUnequip");

	AItemWeapon_ShouldRemoveOnUnequip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.SetChamberedRound
// ()
// Parameters:
// bool                           bNewChamberedRound             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::SetChamberedRound(bool bNewChamberedRound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.SetChamberedRound");

	AItemWeapon_SetChamberedRound_Params params;
	params.bNewChamberedRound = bNewChamberedRound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.ServerInformGenericMeleeHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemWeapon::ServerInformGenericMeleeHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ServerInformGenericMeleeHit");

	AItemWeapon_ServerInformGenericMeleeHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.ServerDoGenericMeleeAttack
// ()
void AItemWeapon::ServerDoGenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ServerDoGenericMeleeAttack");

	AItemWeapon_ServerDoGenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.ServerCheckEmpty
// ()
void AItemWeapon::ServerCheckEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ServerCheckEmpty");

	AItemWeapon_ServerCheckEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.Server_OnMeleeChargeEnd
// ()
void AItemWeapon::Server_OnMeleeChargeEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.Server_OnMeleeChargeEnd");

	AItemWeapon_Server_OnMeleeChargeEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.Server_OnMeleeChargeBegin
// ()
void AItemWeapon::Server_OnMeleeChargeBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.Server_OnMeleeChargeBegin");

	AItemWeapon_Server_OnMeleeChargeBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.RemoveFirstPersonUpgradeMeshes
// ()
void AItemWeapon::RemoveFirstPersonUpgradeMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.RemoveFirstPersonUpgradeMeshes");

	AItemWeapon_RemoveFirstPersonUpgradeMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.RemoveFirstPersonAttachedMeshes
// ()
void AItemWeapon::RemoveFirstPersonAttachedMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.RemoveFirstPersonAttachedMeshes");

	AItemWeapon_RemoveFirstPersonAttachedMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.ReloadLoadAmmo
// ()
void AItemWeapon::ReloadLoadAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ReloadLoadAmmo");

	AItemWeapon_ReloadLoadAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.PullBolt
// ()
void AItemWeapon::PullBolt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.PullBolt");

	AItemWeapon_PullBolt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.PeekPendingAmmoContainer
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* AItemWeapon::PeekPendingAmmoContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.PeekPendingAmmoContainer");

	AItemWeapon_PeekPendingAmmoContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.OnRep_PendingAmmoContainer
// ()
void AItemWeapon::OnRep_PendingAmmoContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_PendingAmmoContainer");

	AItemWeapon_OnRep_PendingAmmoContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnRep_MountedComponent
// ()
void AItemWeapon::OnRep_MountedComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_MountedComponent");

	AItemWeapon_OnRep_MountedComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnRep_MeleeCharging
// ()
void AItemWeapon::OnRep_MeleeCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_MeleeCharging");

	AItemWeapon_OnRep_MeleeCharging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnRep_LoadedAmmoContainer
// ()
void AItemWeapon::OnRep_LoadedAmmoContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_LoadedAmmoContainer");

	AItemWeapon_OnRep_LoadedAmmoContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnRep_LoadedAmmo
// ()
void AItemWeapon::OnRep_LoadedAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_LoadedAmmo");

	AItemWeapon_OnRep_LoadedAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnRep_ChamberedRound
// ()
void AItemWeapon::OnRep_ChamberedRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_ChamberedRound");

	AItemWeapon_OnRep_ChamberedRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnRep_AttachedParent
// ()
void AItemWeapon::OnRep_AttachedParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnRep_AttachedParent");

	AItemWeapon_OnRep_AttachedParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemWeapon.OnGenericMeleeAttackDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bBash                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::OnGenericMeleeAttackDelegate__DelegateSignature(bool bBash)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemWeapon.OnGenericMeleeAttackDelegate__DelegateSignature");

	AItemWeapon_OnGenericMeleeAttackDelegate__DelegateSignature_Params params;
	params.bBash = bBash;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.OnAmmoUpdated
// ()
void AItemWeapon::OnAmmoUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.OnAmmoUpdated");

	AItemWeapon_OnAmmoUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.NeedsBoltPull
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::NeedsBoltPull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.NeedsBoltPull");

	AItemWeapon_NeedsBoltPull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.MountWeaponOnComponent
// ()
// Parameters:
// class USceneComponent*         Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::MountWeaponOnComponent(class USceneComponent* Component, const struct FName& SocketName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.MountWeaponOnComponent");

	AItemWeapon_MountWeaponOnComponent_Params params;
	params.Component = Component;
	params.SocketName = SocketName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.MagazineCapacity
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::MagazineCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.MagazineCapacity");

	AItemWeapon_MagazineCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.LoadAmmo
// ()
void AItemWeapon::LoadAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.LoadAmmo");

	AItemWeapon_LoadAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.IsWeaponFull
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsWeaponFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsWeaponFull");

	AItemWeapon_IsWeaponFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsWeaponAttachedTo
// ()
// Parameters:
// class AItemWeapon*             Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsWeaponAttachedTo(class AItemWeapon* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsWeaponAttachedTo");

	AItemWeapon_IsWeaponAttachedTo_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsSingleReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsSingleReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsSingleReload");

	AItemWeapon_IsSingleReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsOpenBolt
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsOpenBolt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsOpenBolt");

	AItemWeapon_IsOpenBolt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsMounted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsMounted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsMounted");

	AItemWeapon_IsMounted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsAttackRestricted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsAttackRestricted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsAttackRestricted");

	AItemWeapon_IsAttackRestricted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsAttached
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsAttached");

	AItemWeapon_IsAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsAtLargestMagazine
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsAtLargestMagazine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsAtLargestMagazine");

	AItemWeapon_IsAtLargestMagazine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IsAmmoContainerSupported
// ()
// Parameters:
// class UClass*                  AmmoType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::IsAmmoContainerSupported(class UClass* AmmoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IsAmmoContainerSupported");

	AItemWeapon_IsAmmoContainerSupported_Params params;
	params.AmmoType = AmmoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.InteractUpgradeSlot
// ()
// Parameters:
// EWeaponUpgradeSlot             Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::InteractUpgradeSlot(EWeaponUpgradeSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.InteractUpgradeSlot");

	AItemWeapon_InteractUpgradeSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.InGenericMeleeAttack
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::InGenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.InGenericMeleeAttack");

	AItemWeapon_InGenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.IncrementLoadedAmmo
// ()
// Parameters:
// int                            AddedAmmo                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::IncrementLoadedAmmo(int AddedAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.IncrementLoadedAmmo");

	AItemWeapon_IncrementLoadedAmmo_Params params;
	params.AddedAmmo = AddedAmmo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.HasVisibleMagazine
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::HasVisibleMagazine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.HasVisibleMagazine");

	AItemWeapon_HasVisibleMagazine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.HasUpgradeWithTag
// ()
// Parameters:
// struct FName                   Tag                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::HasUpgradeWithTag(const struct FName& Tag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.HasUpgradeWithTag");

	AItemWeapon_HasUpgradeWithTag_Params params;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.HasUpgradeInSlot
// ()
// Parameters:
// EWeaponUpgradeSlot             Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::HasUpgradeInSlot(EWeaponUpgradeSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.HasUpgradeInSlot");

	AItemWeapon_HasUpgradeInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.HasRoundInChamber
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::HasRoundInChamber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.HasRoundInChamber");

	AItemWeapon_HasRoundInChamber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.HasLoadedAmmo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::HasLoadedAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.HasLoadedAmmo");

	AItemWeapon_HasLoadedAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.HasAttachedMagazine
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::HasAttachedMagazine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.HasAttachedMagazine");

	AItemWeapon_HasAttachedMagazine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GiveDefaultAmmo
// ()
void AItemWeapon::GiveDefaultAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GiveDefaultAmmo");

	AItemWeapon_GiveDefaultAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.GetUpgradeInSlot
// ()
// Parameters:
// EWeaponUpgradeSlot             Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWeaponUpgradeComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWeaponUpgradeComponent* AItemWeapon::GetUpgradeInSlot(EWeaponUpgradeSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetUpgradeInSlot");

	AItemWeapon_GetUpgradeInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetReserveAmmo
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::GetReserveAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetReserveAmmo");

	AItemWeapon_GetReserveAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetPendingAmmoContainer
// ()
// Parameters:
// class UAmmoContainer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAmmoContainer* AItemWeapon::GetPendingAmmoContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetPendingAmmoContainer");

	AItemWeapon_GetPendingAmmoContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetNextMagazineSize
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::GetNextMagazineSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetNextMagazineSize");

	AItemWeapon_GetNextMagazineSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetMountedComponent
// ()
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* AItemWeapon::GetMountedComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetMountedComponent");

	AItemWeapon_GetMountedComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetLoadedAmmoType
// ()
// Parameters:
// class UAmmoType*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAmmoType* AItemWeapon::GetLoadedAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetLoadedAmmoType");

	AItemWeapon_GetLoadedAmmoType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetLoadedAmmoFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemWeapon::GetLoadedAmmoFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetLoadedAmmoFrac");

	AItemWeapon_GetLoadedAmmoFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetLoadedAmmoContainer
// ()
// Parameters:
// class UAmmoContainer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAmmoContainer* AItemWeapon::GetLoadedAmmoContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetLoadedAmmoContainer");

	AItemWeapon_GetLoadedAmmoContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetLoadedAmmo
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::GetLoadedAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetLoadedAmmo");

	AItemWeapon_GetLoadedAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetLargestMagazine
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::GetLargestMagazine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetLargestMagazine");

	AItemWeapon_GetLargestMagazine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetEquippedUpgradeSlotsMask
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::GetEquippedUpgradeSlotsMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetEquippedUpgradeSlotsMask");

	AItemWeapon_GetEquippedUpgradeSlotsMask_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetDefaultAmmoType
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* AItemWeapon::GetDefaultAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetDefaultAmmoType");

	AItemWeapon_GetDefaultAmmoType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetDefaultAmmoContainerType
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* AItemWeapon::GetDefaultAmmoContainerType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetDefaultAmmoContainerType");

	AItemWeapon_GetDefaultAmmoContainerType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GetCompatibleAmmo
// ()
// Parameters:
// TArray<struct FStoredAmmo>     Ammo                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemWeapon::GetCompatibleAmmo(TArray<struct FStoredAmmo> Ammo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GetCompatibleAmmo");

	AItemWeapon_GetCompatibleAmmo_Params params;
	params.Ammo = Ammo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.GenericMeleeAttack
// ()
void AItemWeapon::GenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.GenericMeleeAttack");

	AItemWeapon_GenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.EquipMountedWeapon
// ()
// Parameters:
// class AINSCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::EquipMountedWeapon(class AINSCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.EquipMountedWeapon");

	AItemWeapon_EquipMountedWeapon_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.DoGenericMeleeAttack
// ()
void AItemWeapon::DoGenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.DoGenericMeleeAttack");

	AItemWeapon_DoGenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.DestroyVisibleAmmoContainerMesh
// ()
// Parameters:
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::DestroyVisibleAmmoContainerMesh(bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.DestroyVisibleAmmoContainerMesh");

	AItemWeapon_DestroyVisibleAmmoContainerMesh_Params params;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.DecrementAmmo
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::DecrementAmmo(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.DecrementAmmo");

	AItemWeapon_DecrementAmmo_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.ConsumesAmmo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::ConsumesAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ConsumesAmmo");

	AItemWeapon_ConsumesAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemWeapon.CheckEmpty
// ()
void AItemWeapon::CheckEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.CheckEmpty");

	AItemWeapon_CheckEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.ChamberRound
// ()
void AItemWeapon::ChamberRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.ChamberRound");

	AItemWeapon_ChamberRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.CanGenericMeleeAttack
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemWeapon::CanGenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.CanGenericMeleeAttack");

	AItemWeapon_CanGenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.ItemWeapon.CalcShotOriginDelegate__DelegateSignature
// ()
// Parameters:
// struct FVector                 OutShotOrigin                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::CalcShotOriginDelegate__DelegateSignature(struct FVector* OutShotOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemWeapon.CalcShotOriginDelegate__DelegateSignature");

	AItemWeapon_CalcShotOriginDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShotOrigin != nullptr)
		*OutShotOrigin = params.OutShotOrigin;

}


// DelegateFunction Insurgency.ItemWeapon.CalcShotDirectionDelegate__DelegateSignature
// ()
// Parameters:
// struct FVector                 OutShotDirection               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::CalcShotDirectionDelegate__DelegateSignature(struct FVector* OutShotDirection)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemWeapon.CalcShotDirectionDelegate__DelegateSignature");

	AItemWeapon_CalcShotDirectionDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShotDirection != nullptr)
		*OutShotDirection = params.OutShotDirection;

}


// Function Insurgency.ItemWeapon.CalcShootVectors
// ()
// Parameters:
// struct FVector                 OutShootPosition               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutShootDirection              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::CalcShootVectors(struct FVector* OutShootPosition, struct FVector* OutShootDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.CalcShootVectors");

	AItemWeapon_CalcShootVectors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShootPosition != nullptr)
		*OutShootPosition = params.OutShootPosition;
	if (OutShootDirection != nullptr)
		*OutShootDirection = params.OutShootDirection;

}


// Function Insurgency.ItemWeapon.CalcShootOffset
// ()
// Parameters:
// struct FVector                 Location                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void AItemWeapon::CalcShootOffset(struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.CalcShootOffset");

	AItemWeapon_CalcShootOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;
	if (Rotation != nullptr)
		*Rotation = params.Rotation;

}


// Function Insurgency.ItemWeapon.BroadcastGenericMeleeHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemWeapon::BroadcastGenericMeleeHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.BroadcastGenericMeleeHit");

	AItemWeapon_BroadcastGenericMeleeHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.BroadcastDoGenericMeleeAttack
// ()
void AItemWeapon::BroadcastDoGenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.BroadcastDoGenericMeleeAttack");

	AItemWeapon_BroadcastDoGenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.BlueprintOnUpdateVisibleAmmoContainer
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::BlueprintOnUpdateVisibleAmmoContainer(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.BlueprintOnUpdateVisibleAmmoContainer");

	AItemWeapon_BlueprintOnUpdateVisibleAmmoContainer_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.BeginGenericMeleeAttack
// ()
void AItemWeapon::BeginGenericMeleeAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.BeginGenericMeleeAttack");

	AItemWeapon_BeginGenericMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemWeapon.AddChildMesh
// ()
// Parameters:
// struct FWeaponAttachedModel    AttachedModel                  (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ParentMeshComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsFirstPerson                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemWeapon::AddChildMesh(struct FWeaponAttachedModel* AttachedModel, class USkeletalMeshComponent* ParentMeshComponent, bool bIsFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemWeapon.AddChildMesh");

	AItemWeapon_AddChildMesh_Params params;
	params.ParentMeshComponent = ParentMeshComponent;
	params.bIsFirstPerson = bIsFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AttachedModel != nullptr)
		*AttachedModel = params.AttachedModel;

}


void AItemWeapon::AfterRead()
{
	AItemEquipable::AfterRead();

	READ_PTR_FULL(AttachUsing, UClass);
	READ_PTR_FULL(AttachedParent, AItemWeapon);
	READ_PTR_FULL(DefaultAmmoContainer, UClass);
	READ_PTR_FULL(LoadedAmmoContainer, UClass);
	READ_PTR_FULL(PendingAmmoContainer, UClass);
	READ_PTR_FULL(AmmoMesh1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(AmmoMesh3P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(DefaultAmmoType, UClass);
	READ_PTR_FULL(LoadedAmmoType, UClass);
	READ_PTR_FULL(MountedComponent, USceneComponent);
}

void AItemWeapon::BeforeDelete()
{
	AItemEquipable::BeforeDelete();

	DELE_PTR_FULL(AttachUsing);
	DELE_PTR_FULL(AttachedParent);
	DELE_PTR_FULL(DefaultAmmoContainer);
	DELE_PTR_FULL(LoadedAmmoContainer);
	DELE_PTR_FULL(PendingAmmoContainer);
	DELE_PTR_FULL(AmmoMesh1P);
	DELE_PTR_FULL(AmmoMesh3P);
	DELE_PTR_FULL(DefaultAmmoType);
	DELE_PTR_FULL(LoadedAmmoType);
	DELE_PTR_FULL(MountedComponent);
}

// Function Insurgency.ItemAimableWeapon.ToggleSights
// ()
void AItemAimableWeapon::ToggleSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.ToggleSights");

	AItemAimableWeapon_ToggleSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.ShouldEnterPointShootMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::ShouldEnterPointShootMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.ShouldEnterPointShootMode");

	AItemAimableWeapon_ShouldEnterPointShootMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.SetSights
// ()
// Parameters:
// bool                           bNewAimingDownSights           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAimableWeapon::SetSights(bool bNewAimingDownSights, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.SetSights");

	AItemAimableWeapon_SetSights_Params params;
	params.bNewAimingDownSights = bNewAimingDownSights;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.ServerSetSights
// ()
// Parameters:
// bool                           bNewAimingDownSights           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAimableWeapon::ServerSetSights(bool bNewAimingDownSights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.ServerSetSights");

	AItemAimableWeapon_ServerSetSights_Params params;
	params.bNewAimingDownSights = bNewAimingDownSights;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.OnRep_AimingDownSights
// ()
void AItemAimableWeapon::OnRep_AimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.OnRep_AimingDownSights");

	AItemAimableWeapon_OnRep_AimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.IsRaisingOrLoweringSights
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::IsRaisingOrLoweringSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.IsRaisingOrLoweringSights");

	AItemAimableWeapon_IsRaisingOrLoweringSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.IsFullySighted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::IsFullySighted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.IsFullySighted");

	AItemAimableWeapon_IsFullySighted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.IsAimingDownSights
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.IsAimingDownSights");

	AItemAimableWeapon_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.IsAimingDownScope
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::IsAimingDownScope()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.IsAimingDownScope");

	AItemAimableWeapon_IsAimingDownScope_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.GetZoomProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemAimableWeapon::GetZoomProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.GetZoomProgress");

	AItemAimableWeapon_GetZoomProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.GetCachedSightsFraction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemAimableWeapon::GetCachedSightsFraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.GetCachedSightsFraction");

	AItemAimableWeapon_GetCachedSightsFraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.ExitSights
// ()
void AItemAimableWeapon::ExitSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.ExitSights");

	AItemAimableWeapon_ExitSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.EnterSights
// ()
void AItemAimableWeapon::EnterSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.EnterSights");

	AItemAimableWeapon_EnterSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.CanAimDownSights
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::CanAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.CanAimDownSights");

	AItemAimableWeapon_CanAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.CalcSightsFraction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemAimableWeapon::CalcSightsFraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.CalcSightsFraction");

	AItemAimableWeapon_CalcSightsFraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAimableWeapon.BlueprintOnToggleSights
// ()
// Parameters:
// bool                           bNewAimingDownSights           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAimableWeapon::BlueprintOnToggleSights(bool bNewAimingDownSights, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.BlueprintOnToggleSights");

	AItemAimableWeapon_BlueprintOnToggleSights_Params params;
	params.bNewAimingDownSights = bNewAimingDownSights;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAimableWeapon.AllowSightsChange
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemAimableWeapon::AllowSightsChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAimableWeapon.AllowSightsChange");

	AItemAimableWeapon_AllowSightsChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemAimableWeapon::AfterRead()
{
	AItemWeapon::AfterRead();

}

void AItemAimableWeapon::BeforeDelete()
{
	AItemWeapon::BeforeDelete();

}

// Function Insurgency.ItemFirearm.SupportsSpeedReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::SupportsSpeedReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.SupportsSpeedReload");

	AItemFirearm_SupportsSpeedReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.StartReload
// ()
// Parameters:
// bool                           bReloadIfFull                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromClientReplication         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::StartReload(bool bReloadIfFull, bool bFromClientReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.StartReload");

	AItemFirearm_StartReload_Params params;
	params.bReloadIfFull = bReloadIfFull;
	params.bFromClientReplication = bFromClientReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.StartAmmoCheck
// ()
// Parameters:
// bool                           bFromClientReplication         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::StartAmmoCheck(bool bFromClientReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.StartAmmoCheck");

	AItemFirearm_StartAmmoCheck_Params params;
	params.bFromClientReplication = bFromClientReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ShouldSingleReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::ShouldSingleReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ShouldSingleReload");

	AItemFirearm_ShouldSingleReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.ShouldFireTracerRound
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::ShouldFireTracerRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ShouldFireTracerRound");

	AItemFirearm_ShouldFireTracerRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.ShouldDryReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::ShouldDryReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ShouldDryReload");

	AItemFirearm_ShouldDryReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.SetFiremode
// ()
// Parameters:
// EFirearmFiremode               NewFiremode                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::SetFiremode(EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.SetFiremode");

	AItemFirearm_SetFiremode_Params params;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.SetFireEnabled
// ()
// Parameters:
// bool                           bNewFireEnabled                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::SetFireEnabled(bool bNewFireEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.SetFireEnabled");

	AItemFirearm_SetFireEnabled_Params params;
	params.bNewFireEnabled = bNewFireEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.SetBoltState
// ()
// Parameters:
// EFirearmBoltState              NewBoltState                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::SetBoltState(EFirearmBoltState NewBoltState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.SetBoltState");

	AItemFirearm_SetBoltState_Params params;
	params.NewBoltState = NewBoltState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerStartSpeedReload
// ()
void AItemFirearm::ServerStartSpeedReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerStartSpeedReload");

	AItemFirearm_ServerStartSpeedReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerStartReload
// ()
void AItemFirearm::ServerStartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerStartReload");

	AItemFirearm_ServerStartReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerStartAmmoCheck
// ()
void AItemFirearm::ServerStartAmmoCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerStartAmmoCheck");

	AItemFirearm_ServerStartAmmoCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerSetFiringState
// ()
// Parameters:
// bool                           bNewIsFiring                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::ServerSetFiringState(bool bNewIsFiring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerSetFiringState");

	AItemFirearm_ServerSetFiringState_Params params;
	params.bNewIsFiring = bNewIsFiring;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerInterruptReload
// ()
void AItemFirearm::ServerInterruptReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerInterruptReload");

	AItemFirearm_ServerInterruptReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerFireWeapon
// ()
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal Direction                      (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            RandomSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ClientBulletId                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::ServerFireWeapon(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& Direction, int RandomSeed, float Timestamp, int ClientBulletId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerFireWeapon");

	AItemFirearm_ServerFireWeapon_Params params;
	params.Origin = Origin;
	params.Direction = Direction;
	params.RandomSeed = RandomSeed;
	params.Timestamp = Timestamp;
	params.ClientBulletId = ClientBulletId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerDryFire
// ()
void AItemFirearm::ServerDryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerDryFire");

	AItemFirearm_ServerDryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerDelayedFireProjectile
// ()
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal ShootDir                       (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            RandomSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ClientTimestamp                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ClientBulletId                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::ServerDelayedFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir, int RandomSeed, float ClientTimestamp, int ClientBulletId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerDelayedFireProjectile");

	AItemFirearm_ServerDelayedFireProjectile_Params params;
	params.Origin = Origin;
	params.ShootDir = ShootDir;
	params.RandomSeed = RandomSeed;
	params.ClientTimestamp = ClientTimestamp;
	params.ClientBulletId = ClientBulletId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerCycleFiremode
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::ServerCycleFiremode(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerCycleFiremode");

	AItemFirearm_ServerCycleFiremode_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ServerBeginBoltCycle
// ()
void AItemFirearm::ServerBeginBoltCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ServerBeginBoltCycle");

	AItemFirearm_ServerBeginBoltCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ReleaseTrigger
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::ReleaseTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ReleaseTrigger");

	AItemFirearm_ReleaseTrigger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.PullTrigger
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::PullTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.PullTrigger");

	AItemFirearm_PullTrigger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.PlayEjectAfterFiringLast
// ()
void AItemFirearm::PlayEjectAfterFiringLast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.PlayEjectAfterFiringLast");

	AItemFirearm_PlayEjectAfterFiringLast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnSpeedReloadDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bDryReload                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RateMultiplier                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::OnSpeedReloadDelegate__DelegateSignature(bool bDryReload, float RateMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnSpeedReloadDelegate__DelegateSignature");

	AItemFirearm_OnSpeedReloadDelegate__DelegateSignature_Params params;
	params.bDryReload = bDryReload;
	params.RateMultiplier = RateMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.OnRep_FirearmState
// ()
void AItemFirearm::OnRep_FirearmState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.OnRep_FirearmState");

	AItemFirearm_OnRep_FirearmState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.OnRep_BoltState
// ()
void AItemFirearm::OnRep_BoltState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.OnRep_BoltState");

	AItemFirearm_OnRep_BoltState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnReloadInterruptDelegate__DelegateSignature
// ()
void AItemFirearm::OnReloadInterruptDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnReloadInterruptDelegate__DelegateSignature");

	AItemFirearm_OnReloadInterruptDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnReloadDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bDryReload                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSingleReload                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RateMultiplier                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::OnReloadDelegate__DelegateSignature(bool bDryReload, bool bSingleReload, float RateMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnReloadDelegate__DelegateSignature");

	AItemFirearm_OnReloadDelegate__DelegateSignature_Params params;
	params.bDryReload = bDryReload;
	params.bSingleReload = bSingleReload;
	params.RateMultiplier = RateMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnMagOutDelegate__DelegateSignature
// ()
void AItemFirearm::OnMagOutDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnMagOutDelegate__DelegateSignature");

	AItemFirearm_OnMagOutDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnMagInDelegate__DelegateSignature
// ()
void AItemFirearm::OnMagInDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnMagInDelegate__DelegateSignature");

	AItemFirearm_OnMagInDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnFireStopDelegate__DelegateSignature
// ()
void AItemFirearm::OnFireStopDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnFireStopDelegate__DelegateSignature");

	AItemFirearm_OnFireStopDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.OnFireStop
// ()
void AItemFirearm::OnFireStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.OnFireStop");

	AItemFirearm_OnFireStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnFireStartDelegate__DelegateSignature
// ()
void AItemFirearm::OnFireStartDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnFireStartDelegate__DelegateSignature");

	AItemFirearm_OnFireStartDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.OnFireStart
// ()
void AItemFirearm::OnFireStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.OnFireStart");

	AItemFirearm_OnFireStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnFireDelegate__DelegateSignature
// ()
// Parameters:
// struct FVector                 FireOrigin                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 FireDirection                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::OnFireDelegate__DelegateSignature(const struct FVector& FireOrigin, const struct FVector& FireDirection)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnFireDelegate__DelegateSignature");

	AItemFirearm_OnFireDelegate__DelegateSignature_Params params;
	params.FireOrigin = FireOrigin;
	params.FireDirection = FireDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.OnFire
// ()
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ShootDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::OnFire(const struct FVector& Origin, const struct FVector& ShootDir, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.OnFire");

	AItemFirearm_OnFire_Params params;
	params.Origin = Origin;
	params.ShootDir = ShootDir;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.OnFindParticleSystemForAmmoTypeStaticMesh
// ()
// Parameters:
// bool                           bIsAmmoContainer               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::OnFindParticleSystemForAmmoTypeStaticMesh(bool bIsAmmoContainer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.OnFindParticleSystemForAmmoTypeStaticMesh");

	AItemFirearm_OnFindParticleSystemForAmmoTypeStaticMesh_Params params;
	params.bIsAmmoContainer = bIsAmmoContainer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnDryFireDelegate__DelegateSignature
// ()
void AItemFirearm::OnDryFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnDryFireDelegate__DelegateSignature");

	AItemFirearm_OnDryFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnCycleFiremodeDelegate__DelegateSignature
// ()
// Parameters:
// EFirearmFiremode               OldFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               NewFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::OnCycleFiremodeDelegate__DelegateSignature(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnCycleFiremodeDelegate__DelegateSignature");

	AItemFirearm_OnCycleFiremodeDelegate__DelegateSignature_Params params;
	params.OldFiremode = OldFiremode;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnBoltCycleDelegate__DelegateSignature
// ()
void AItemFirearm::OnBoltCycleDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnBoltCycleDelegate__DelegateSignature");

	AItemFirearm_OnBoltCycleDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.OnAmmoCheckDelegate__DelegateSignature
// ()
void AItemFirearm::OnAmmoCheckDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.OnAmmoCheckDelegate__DelegateSignature");

	AItemFirearm_OnAmmoCheckDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.NetMulticastStartAmmoCheck
// ()
void AItemFirearm::NetMulticastStartAmmoCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.NetMulticastStartAmmoCheck");

	AItemFirearm_NetMulticastStartAmmoCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.MulticastFireWeapon
// ()
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Direction                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            RandomSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::MulticastFireWeapon(const struct FVector& Origin, const struct FVector& Direction, int RandomSeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.MulticastFireWeapon");

	AItemFirearm_MulticastFireWeapon_Params params;
	params.Origin = Origin;
	params.Direction = Direction;
	params.RandomSeed = RandomSeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.MulticastFireProjectile
// ()
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal ShootDir                       (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            RandomSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::MulticastFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir, int RandomSeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.MulticastFireProjectile");

	AItemFirearm_MulticastFireProjectile_Params params;
	params.Origin = Origin;
	params.ShootDir = ShootDir;
	params.RandomSeed = RandomSeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.MulticastDryFire
// ()
void AItemFirearm::MulticastDryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.MulticastDryFire");

	AItemFirearm_MulticastDryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.Multicast_PlayEjectAfterFiringLast
// ()
void AItemFirearm::Multicast_PlayEjectAfterFiringLast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.Multicast_PlayEjectAfterFiringLast");

	AItemFirearm_Multicast_PlayEjectAfterFiringLast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.IsWaitingToFire
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsWaitingToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsWaitingToFire");

	AItemFirearm_IsWaitingToFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsTacticalReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsTacticalReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsTacticalReload");

	AItemFirearm_IsTacticalReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsSpeedReloading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsSpeedReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsSpeedReloading");

	AItemFirearm_IsSpeedReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsReloadingOrFinishingReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsReloadingOrFinishingReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsReloadingOrFinishingReload");

	AItemFirearm_IsReloadingOrFinishingReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsReloadingInsertLoop
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsReloadingInsertLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsReloadingInsertLoop");

	AItemFirearm_IsReloadingInsertLoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsReloading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsReloading");

	AItemFirearm_IsReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsPullingTrigger
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsPullingTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsPullingTrigger");

	AItemFirearm_IsPullingTrigger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsPlayerControlled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsPlayerControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsPlayerControlled");

	AItemFirearm_IsPlayerControlled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsManualAction
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsManualAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsManualAction");

	AItemFirearm_IsManualAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsLocallyControlled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsLocallyControlled");

	AItemFirearm_IsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsInStandardReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsInStandardReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsInStandardReload");

	AItemFirearm_IsInStandardReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsInSingleReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsInSingleReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsInSingleReload");

	AItemFirearm_IsInSingleReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsInMagazineStyleReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsInMagazineStyleReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsInMagazineStyleReload");

	AItemFirearm_IsInMagazineStyleReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsInInterruptableState
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsInInterruptableState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsInInterruptableState");

	AItemFirearm_IsInInterruptableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsInFiringAnimation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsInFiringAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsInFiringAnimation");

	AItemFirearm_IsInFiringAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsIdle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsIdle");

	AItemFirearm_IsIdle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsFocusing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsFocusing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsFocusing");

	AItemFirearm_IsFocusing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsFiring
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsFiring");

	AItemFirearm_IsFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsFireEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsFireEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsFireEnabled");

	AItemFirearm_IsFireEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsFinishingReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsFinishingReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsFinishingReload");

	AItemFirearm_IsFinishingReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsDryReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsDryReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsDryReload");

	AItemFirearm_IsDryReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsCyclingBolt
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsCyclingBolt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsCyclingBolt");

	AItemFirearm_IsCyclingBolt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsCheckingAmmo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsCheckingAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsCheckingAmmo");

	AItemFirearm_IsCheckingAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsChangingFiremode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsChangingFiremode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsChangingFiremode");

	AItemFirearm_IsChangingFiremode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsBoltReady
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsBoltReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsBoltReady");

	AItemFirearm_IsBoltReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsBarrelObstructed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsBarrelObstructed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsBarrelObstructed");

	AItemFirearm_IsBarrelObstructed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.IsBarrelAtLeastPartiallyObstructed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::IsBarrelAtLeastPartiallyObstructed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.IsBarrelAtLeastPartiallyObstructed");

	AItemFirearm_IsBarrelAtLeastPartiallyObstructed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.HasMultipleFiremodes
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::HasMultipleFiremodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.HasMultipleFiremodes");

	AItemFirearm_HasMultipleFiremodes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.HasFiremode
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::HasFiremode(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.HasFiremode");

	AItemFirearm_HasFiremode_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.HasBipodDeployed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::HasBipodDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.HasBipodDeployed");

	AItemFirearm_HasBipodDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetReloadTimesForState
// ()
// Parameters:
// EFirearmState                  ReloadState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FReloadTimes            ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
struct FReloadTimes AItemFirearm::GetReloadTimesForState(EFirearmState ReloadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetReloadTimesForState");

	AItemFirearm_GetReloadTimesForState_Params params;
	params.ReloadState = ReloadState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetReloadTimesForContainer
// ()
// Parameters:
// class UClass*                  ContainerType                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FReloadTimesGroup       ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
struct FReloadTimesGroup AItemFirearm::GetReloadTimesForContainer(class UClass* ContainerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetReloadTimesForContainer");

	AItemFirearm_GetReloadTimesForContainer_Params params;
	params.ContainerType = ContainerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetRecoilRestRate
// ()
// Parameters:
// int                            ShotCount                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemFirearm::GetRecoilRestRate(int ShotCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetRecoilRestRate");

	AItemFirearm_GetRecoilRestRate_Params params;
	params.ShotCount = ShotCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetProjectileSpread
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemFirearm::GetProjectileSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetProjectileSpread");

	AItemFirearm_GetProjectileSpread_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetMuzzleSocketFromMesh
// ()
// Parameters:
// class USkeletalMeshComponent*  Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutShootPosition               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutShootDirection              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::GetMuzzleSocketFromMesh(class USkeletalMeshComponent* Component, struct FVector* OutShootPosition, struct FVector* OutShootDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetMuzzleSocketFromMesh");

	AItemFirearm_GetMuzzleSocketFromMesh_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShootPosition != nullptr)
		*OutShootPosition = params.OutShootPosition;
	if (OutShootDirection != nullptr)
		*OutShootDirection = params.OutShootDirection;

}


// Function Insurgency.ItemFirearm.GetMuzzleMesh
// ()
// Parameters:
// bool                           bForceFirstPerson              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USkeletalMeshComponent* AItemFirearm::GetMuzzleMesh(bool bForceFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetMuzzleMesh");

	AItemFirearm_GetMuzzleMesh_Params params;
	params.bForceFirstPerson = bForceFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetMuzzle
// ()
// Parameters:
// struct FVector                 OutShootPosition               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutShootDirection              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::GetMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection, bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetMuzzle");

	AItemFirearm_GetMuzzle_Params params;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShootPosition != nullptr)
		*OutShootPosition = params.OutShootPosition;
	if (OutShootDirection != nullptr)
		*OutShootDirection = params.OutShootDirection;

}


// Function Insurgency.ItemFirearm.GetLastFireTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemFirearm::GetLastFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetLastFireTime");

	AItemFirearm_GetLastFireTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetFreeaimMuzzle
// ()
// Parameters:
// struct FVector                 OutShootPosition               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutShootDirection              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::GetFreeaimMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetFreeaimMuzzle");

	AItemFirearm_GetFreeaimMuzzle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShootPosition != nullptr)
		*OutShootPosition = params.OutShootPosition;
	if (OutShootDirection != nullptr)
		*OutShootDirection = params.OutShootDirection;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetFirstPersonMuzzle
// ()
// Parameters:
// struct FVector                 OutShootPosition               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutShootDirection              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::GetFirstPersonMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetFirstPersonMuzzle");

	AItemFirearm_GetFirstPersonMuzzle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutShootPosition != nullptr)
		*OutShootPosition = params.OutShootPosition;
	if (OutShootDirection != nullptr)
		*OutShootDirection = params.OutShootDirection;

}


// Function Insurgency.ItemFirearm.GetFiremodeCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemFirearm::GetFiremodeCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetFiremodeCount");

	AItemFirearm_GetFiremodeCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetFiremode
// ()
// Parameters:
// EFirearmFiremode               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EFirearmFiremode AItemFirearm::GetFiremode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetFiremode");

	AItemFirearm_GetFiremode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetFirearmState
// ()
// Parameters:
// EFirearmState                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EFirearmState AItemFirearm::GetFirearmState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetFirearmState");

	AItemFirearm_GetFirearmState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetEffectTargetMesh
// ()
// Parameters:
// bool                           bForceFirstPerson              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USkeletalMeshComponent* AItemFirearm::GetEffectTargetMesh(bool bForceFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetEffectTargetMesh");

	AItemFirearm_GetEffectTargetMesh_Params params;
	params.bForceFirstPerson = bForceFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetContainerReloadTimesForState
// ()
// Parameters:
// class UClass*                  ContainerType                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmState                  ReloadState                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FReloadTimes            ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
struct FReloadTimes AItemFirearm::GetContainerReloadTimesForState(class UClass* ContainerType, EFirearmState ReloadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetContainerReloadTimesForState");

	AItemFirearm_GetContainerReloadTimesForState_Params params;
	params.ContainerType = ContainerType;
	params.ReloadState = ReloadState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetBoltState
// ()
// Parameters:
// EFirearmBoltState              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EFirearmBoltState AItemFirearm::GetBoltState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetBoltState");

	AItemFirearm_GetBoltState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetBipod
// ()
// Parameters:
// class UWeaponBipodComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWeaponBipodComponent* AItemFirearm::GetBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetBipod");

	AItemFirearm_GetBipod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.GetAmmoContainerForReloadStart
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* AItemFirearm::GetAmmoContainerForReloadStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.GetAmmoContainerForReloadStart");

	AItemFirearm_GetAmmoContainerForReloadStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.ForceStopFire
// ()
void AItemFirearm::ForceStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ForceStopFire");

	AItemFirearm_ForceStopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ForceChangeFiremode
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::ForceChangeFiremode(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ForceChangeFiremode");

	AItemFirearm_ForceChangeFiremode_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.FireWeapon
// ()
void AItemFirearm::FireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.FireWeapon");

	AItemFirearm_FireWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.FireProjectile
// ()
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ShootDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            RandomSeed                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ClientTimestamp                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ClientBulletId                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bClientReplication             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::FireProjectile(const struct FVector& Origin, const struct FVector& ShootDir, int RandomSeed, float ClientTimestamp, int ClientBulletId, bool bClientReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.FireProjectile");

	AItemFirearm_FireProjectile_Params params;
	params.Origin = Origin;
	params.ShootDir = ShootDir;
	params.RandomSeed = RandomSeed;
	params.ClientTimestamp = ClientTimestamp;
	params.ClientBulletId = ClientBulletId;
	params.bClientReplication = bClientReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.FinishBoltCycle
// ()
void AItemFirearm::FinishBoltCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.FinishBoltCycle");

	AItemFirearm_FinishBoltCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.DoesBoltNeedCycling
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::DoesBoltNeedCycling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.DoesBoltNeedCycling");

	AItemFirearm_DoesBoltNeedCycling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.CreateRecoil
// ()
void AItemFirearm::CreateRecoil()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CreateRecoil");

	AItemFirearm_CreateRecoil_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ClientLoadMagAmmo
// ()
void AItemFirearm::ClientLoadMagAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ClientLoadMagAmmo");

	AItemFirearm_ClientLoadMagAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ClientInterruptReload
// ()
void AItemFirearm::ClientInterruptReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ClientInterruptReload");

	AItemFirearm_ClientInterruptReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.ClientFinishReloading
// ()
void AItemFirearm::ClientFinishReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.ClientFinishReloading");

	AItemFirearm_ClientFinishReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.CanStartFire
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::CanStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CanStartFire");

	AItemFirearm_CanStartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.CanInterruptFire
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::CanInterruptFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CanInterruptFire");

	AItemFirearm_CanInterruptFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.CanFire
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::CanFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CanFire");

	AItemFirearm_CanFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.CanContinueFiring
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::CanContinueFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CanContinueFiring");

	AItemFirearm_CanContinueFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.CancelBoltCycle
// ()
void AItemFirearm::CancelBoltCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CancelBoltCycle");

	AItemFirearm_CancelBoltCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.CalcRecoilModifier
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemFirearm::CalcRecoilModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.CalcRecoilModifier");

	AItemFirearm_CalcRecoilModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.BroadcastFiremodeChange
// ()
// Parameters:
// EFirearmFiremode               OldFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               NewFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::BroadcastFiremodeChange(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BroadcastFiremodeChange");

	AItemFirearm_BroadcastFiremodeChange_Params params;
	params.OldFiremode = OldFiremode;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnSpeedReload
// ()
void AItemFirearm::BlueprintOnSpeedReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnSpeedReload");

	AItemFirearm_BlueprintOnSpeedReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnReloadInterrupted
// ()
void AItemFirearm::BlueprintOnReloadInterrupted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnReloadInterrupted");

	AItemFirearm_BlueprintOnReloadInterrupted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnReloaded
// ()
void AItemFirearm::BlueprintOnReloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnReloaded");

	AItemFirearm_BlueprintOnReloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnReload
// ()
void AItemFirearm::BlueprintOnReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnReload");

	AItemFirearm_BlueprintOnReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnFireStopping
// ()
void AItemFirearm::BlueprintOnFireStopping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnFireStopping");

	AItemFirearm_BlueprintOnFireStopping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnFireStop
// ()
void AItemFirearm::BlueprintOnFireStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnFireStop");

	AItemFirearm_BlueprintOnFireStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnFireStart
// ()
void AItemFirearm::BlueprintOnFireStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnFireStart");

	AItemFirearm_BlueprintOnFireStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnFire
// ()
// Parameters:
// struct FVector                 Origin                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::BlueprintOnFire(const struct FVector& Origin, const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnFire");

	AItemFirearm_BlueprintOnFire_Params params;
	params.Origin = Origin;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnDryFire
// ()
void AItemFirearm::BlueprintOnDryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnDryFire");

	AItemFirearm_BlueprintOnDryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnCycleFiremode
// ()
// Parameters:
// EFirearmFiremode               OldFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               NewFiremode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::BlueprintOnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnCycleFiremode");

	AItemFirearm_BlueprintOnCycleFiremode_Params params;
	params.OldFiremode = OldFiremode;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BlueprintOnBoltCycle
// ()
void AItemFirearm::BlueprintOnBoltCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BlueprintOnBoltCycle");

	AItemFirearm_BlueprintOnBoltCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemFirearm.BeginBoltCycle
// ()
// Parameters:
// bool                           bFromReplication               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemFirearm::BeginBoltCycle(bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.BeginBoltCycle");

	AItemFirearm_BeginBoltCycle_Params params;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemFirearm.AllowNextShotDelegate__DelegateSignature
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::AllowNextShotDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.AllowNextShotDelegate__DelegateSignature");

	AItemFirearm_AllowNextShotDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.AllowNextShot
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::AllowNextShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.AllowNextShot");

	AItemFirearm_AllowNextShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.ItemFirearm.AllowFireDelegate__DelegateSignature
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::AllowFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemFirearm.AllowFireDelegate__DelegateSignature");

	AItemFirearm_AllowFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemFirearm.AllowFire
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemFirearm::AllowFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemFirearm.AllowFire");

	AItemFirearm_AllowFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemFirearm::AfterRead()
{
	AItemAimableWeapon::AfterRead();

	READ_PTR_FULL(ForceFeedbackShot, UForceFeedbackEffect);
	READ_PTR_FULL(FlashParticle, UParticleSystemComponent);
	READ_PTR_FULL(ShellParticle, UParticleSystemComponent);
	READ_PTR_FULL(BrassParticle, UParticleSystem);
	READ_PTR_FULL(EjectionBrassParticle, UParticleSystem);
	READ_PTR_FULL(DustKickupSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(PendingEjectedContainer, UClass);
}

void AItemFirearm::BeforeDelete()
{
	AItemAimableWeapon::BeforeDelete();

	DELE_PTR_FULL(ForceFeedbackShot);
	DELE_PTR_FULL(FlashParticle);
	DELE_PTR_FULL(ShellParticle);
	DELE_PTR_FULL(BrassParticle);
	DELE_PTR_FULL(EjectionBrassParticle);
	DELE_PTR_FULL(DustKickupSurfaceReaction);
	DELE_PTR_FULL(PendingEjectedContainer);
}

// Function Insurgency.ItemRevolver.OnRep_CurrentChamberIndex
// ()
void AItemRevolver::OnRep_CurrentChamberIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.OnRep_CurrentChamberIndex");

	AItemRevolver_OnRep_CurrentChamberIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemRevolver.OnRep_ChamberStates
// ()
void AItemRevolver::OnRep_ChamberStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.OnRep_ChamberStates");

	AItemRevolver_OnRep_ChamberStates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemRevolver.OnChamberStatesUpdateDelegate__DelegateSignature
// ()
void AItemRevolver::OnChamberStatesUpdateDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemRevolver.OnChamberStatesUpdateDelegate__DelegateSignature");

	AItemRevolver_OnChamberStatesUpdateDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemRevolver.OnActiveChamberUpdatedDelegate__DelegateSignature
// ()
void AItemRevolver::OnActiveChamberUpdatedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemRevolver.OnActiveChamberUpdatedDelegate__DelegateSignature");

	AItemRevolver_OnActiveChamberUpdatedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemRevolver.HasAnyChamberInState
// ()
// Parameters:
// ERevolverChamberState          ChamberState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemRevolver::HasAnyChamberInState(ERevolverChamberState ChamberState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.HasAnyChamberInState");

	AItemRevolver_HasAnyChamberInState_Params params;
	params.ChamberState = ChamberState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemRevolver.GetCurrentChamberState
// ()
// Parameters:
// ERevolverChamberState          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ERevolverChamberState AItemRevolver::GetCurrentChamberState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.GetCurrentChamberState");

	AItemRevolver_GetCurrentChamberState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemRevolver.CountFiredChambers
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemRevolver::CountFiredChambers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.CountFiredChambers");

	AItemRevolver_CountFiredChambers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemRevolver.CountChambersInState
// ()
// Parameters:
// ERevolverChamberState          ChamberState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemRevolver::CountChambersInState(ERevolverChamberState ChamberState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.CountChambersInState");

	AItemRevolver_CountChambersInState_Params params;
	params.ChamberState = ChamberState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemRevolver.AreAllChambersEmpty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemRevolver::AreAllChambersEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRevolver.AreAllChambersEmpty");

	AItemRevolver_AreAllChambersEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemRevolver::AfterRead()
{
	AItemFirearm::AfterRead();

}

void AItemRevolver::BeforeDelete()
{
	AItemFirearm::BeforeDelete();

}

// Function Insurgency.ItemGear.ShouldSpawnAttachmentMesh
// ()
// Parameters:
// struct FName                   AttachmentSocket               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGear::ShouldSpawnAttachmentMesh(const struct FName& AttachmentSocket)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGear.ShouldSpawnAttachmentMesh");

	AItemGear_ShouldSpawnAttachmentMesh_Params params;
	params.AttachmentSocket = AttachmentSocket;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGear.Interact
// ()
void AItemGear::Interact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGear.Interact");

	AItemGear_Interact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGear.BlueprintOnTransferToRagdoll
// ()
// Parameters:
// class ARagdoll*                Ragdoll                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGear::BlueprintOnTransferToRagdoll(class ARagdoll* Ragdoll)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGear.BlueprintOnTransferToRagdoll");

	AItemGear_BlueprintOnTransferToRagdoll_Params params;
	params.Ragdoll = Ragdoll;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemGear::AfterRead()
{
	AItemBase::AfterRead();

}

void AItemGear::BeforeDelete()
{
	AItemBase::BeforeDelete();

}

// Function Insurgency.ItemRadio.RadiusEndOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemRadio::RadiusEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRadio.RadiusEndOverlap");

	AItemRadio_RadiusEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemRadio.RadiusBeginOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemRadio::RadiusBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRadio.RadiusBeginOverlap");

	AItemRadio_RadiusBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemRadio::AfterRead()
{
	AItemGear::AfterRead();

	READ_PTR_FULL(RadioRadiusComponent, USphereComponent);
}

void AItemRadio::BeforeDelete()
{
	AItemGear::BeforeDelete();

	DELE_PTR_FULL(RadioRadiusComponent);
}

// Function Insurgency.ItemGrenade.SetThrowMode
// ()
// Parameters:
// EGrenadeThrowMode              NewThrowMode                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::SetThrowMode(EGrenadeThrowMode NewThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.SetThrowMode");

	AItemGrenade_SetThrowMode_Params params;
	params.NewThrowMode = NewThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.SetGrenadeState
// ()
// Parameters:
// EGrenadeState                  NewGrenadeState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::SetGrenadeState(EGrenadeState NewGrenadeState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.SetGrenadeState");

	AItemGrenade_SetGrenadeState_Params params;
	params.NewGrenadeState = NewGrenadeState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.ServerStartCook
// ()
void AItemGrenade::ServerStartCook()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.ServerStartCook");

	AItemGrenade_ServerStartCook_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.ServerSetHold
// ()
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::ServerSetHold(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.ServerSetHold");

	AItemGrenade_ServerSetHold_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.ServerReleaseThrow
// ()
void AItemGrenade::ServerReleaseThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.ServerReleaseThrow");

	AItemGrenade_ServerReleaseThrow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.ServerPullBack
// ()
// Parameters:
// EGrenadeThrowMode              NewThrowMode                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::ServerPullBack(EGrenadeThrowMode NewThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.ServerPullBack");

	AItemGrenade_ServerPullBack_Params params;
	params.NewThrowMode = NewThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.OnRep_ThrowMode
// ()
void AItemGrenade::OnRep_ThrowMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.OnRep_ThrowMode");

	AItemGrenade_OnRep_ThrowMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.OnRep_ProjectileInHand
// ()
void AItemGrenade::OnRep_ProjectileInHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.OnRep_ProjectileInHand");

	AItemGrenade_OnRep_ProjectileInHand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.OnRep_GrenadeState
// ()
void AItemGrenade::OnRep_GrenadeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.OnRep_GrenadeState");

	AItemGrenade_OnRep_GrenadeState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnHotGrenadePickedUpDelegate__DelegateSignature
// ()
void AItemGrenade::OnHotGrenadePickedUpDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnHotGrenadePickedUpDelegate__DelegateSignature");

	AItemGrenade_OnHotGrenadePickedUpDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadeThrowModeChangedDelegate__DelegateSignature
// ()
// Parameters:
// EGrenadeThrowMode              OldThrowMode                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::OnGrenadeThrowModeChangedDelegate__DelegateSignature(EGrenadeThrowMode OldThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadeThrowModeChangedDelegate__DelegateSignature");

	AItemGrenade_OnGrenadeThrowModeChangedDelegate__DelegateSignature_Params params;
	params.OldThrowMode = OldThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadeStateChangedDelegate__DelegateSignature
// ()
// Parameters:
// EGrenadeState                  OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::OnGrenadeStateChangedDelegate__DelegateSignature(EGrenadeState OldState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadeStateChangedDelegate__DelegateSignature");

	AItemGrenade_OnGrenadeStateChangedDelegate__DelegateSignature_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadeSpawnedDelegate__DelegateSignature
// ()
// Parameters:
// class AProjectileBase*         NewProjectile                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::OnGrenadeSpawnedDelegate__DelegateSignature(class AProjectileBase* NewProjectile)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadeSpawnedDelegate__DelegateSignature");

	AItemGrenade_OnGrenadeSpawnedDelegate__DelegateSignature_Params params;
	params.NewProjectile = NewProjectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadeReloadDelegate__DelegateSignature
// ()
void AItemGrenade::OnGrenadeReloadDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadeReloadDelegate__DelegateSignature");

	AItemGrenade_OnGrenadeReloadDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadePullbackDelegate__DelegateSignature
// ()
// Parameters:
// EGrenadeThrowMode              ThrowMode                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::OnGrenadePullbackDelegate__DelegateSignature(EGrenadeThrowMode ThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadePullbackDelegate__DelegateSignature");

	AItemGrenade_OnGrenadePullbackDelegate__DelegateSignature_Params params;
	params.ThrowMode = ThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadeBeginThrowDelegate__DelegateSignature
// ()
void AItemGrenade::OnGrenadeBeginThrowDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadeBeginThrowDelegate__DelegateSignature");

	AItemGrenade_OnGrenadeBeginThrowDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemGrenade.OnGrenadeBeginCookDelegate__DelegateSignature
// ()
// Parameters:
// EGrenadeThrowMode              NewThrowMode                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::OnGrenadeBeginCookDelegate__DelegateSignature(EGrenadeThrowMode NewThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemGrenade.OnGrenadeBeginCookDelegate__DelegateSignature");

	AItemGrenade_OnGrenadeBeginCookDelegate__DelegateSignature_Params params;
	params.NewThrowMode = NewThrowMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.IsThrowingAndInHand
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsThrowingAndInHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsThrowingAndInHand");

	AItemGrenade_IsThrowingAndInHand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsThrowing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsThrowing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsThrowing");

	AItemGrenade_IsThrowing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsPullingBack
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsPullingBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsPullingBack");

	AItemGrenade_IsPullingBack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsPrimedForThrow
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsPrimedForThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsPrimedForThrow");

	AItemGrenade_IsPrimedForThrow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsPinPulled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsPinPulled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsPinPulled");

	AItemGrenade_IsPinPulled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsOverhandThrow
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsOverhandThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsOverhandThrow");

	AItemGrenade_IsOverhandThrow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsInCookingState
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsInCookingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsInCookingState");

	AItemGrenade_IsInCookingState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsGrenadeBusy
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsGrenadeBusy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsGrenadeBusy");

	AItemGrenade_IsGrenadeBusy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.IsCooking
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::IsCooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.IsCooking");

	AItemGrenade_IsCooking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.GetUpwardsThrowSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemGrenade::GetUpwardsThrowSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.GetUpwardsThrowSpeed");

	AItemGrenade_GetUpwardsThrowSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.GetThrowSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemGrenade::GetThrowSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.GetThrowSpeed");

	AItemGrenade_GetThrowSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.GetThrowMode
// ()
// Parameters:
// EGrenadeThrowMode              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EGrenadeThrowMode AItemGrenade::GetThrowMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.GetThrowMode");

	AItemGrenade_GetThrowMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.GetSpawnedGrenadeTimer
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemGrenade::GetSpawnedGrenadeTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.GetSpawnedGrenadeTimer");

	AItemGrenade_GetSpawnedGrenadeTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.GetGrenadeState
// ()
// Parameters:
// EGrenadeState                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EGrenadeState AItemGrenade::GetGrenadeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.GetGrenadeState");

	AItemGrenade_GetGrenadeState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.DropGrenade
// ()
// Parameters:
// bool                           bDeath                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGrenade::DropGrenade(bool bDeath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.DropGrenade");

	AItemGrenade_DropGrenade_Params params;
	params.bDeath = bDeath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGrenade.CanThrow
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::CanThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.CanThrow");

	AItemGrenade_CanThrow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemGrenade.CanPullback
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemGrenade::CanPullback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGrenade.CanPullback");

	AItemGrenade_CanPullback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemGrenade::AfterRead()
{
	AItemWeapon::AfterRead();

	READ_PTR_FULL(ProjectileInHand, AProjectileBase);
}

void AItemGrenade::BeforeDelete()
{
	AItemWeapon::BeforeDelete();

	DELE_PTR_FULL(ProjectileInHand);
}

// Function Insurgency.ItemRemoteExplosive.SwitchToDetonator
// ()
void AItemRemoteExplosive::SwitchToDetonator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRemoteExplosive.SwitchToDetonator");

	AItemRemoteExplosive_SwitchToDetonator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemRemoteExplosive.OnGrenadeSpawned
// ()
// Parameters:
// class AProjectileBase*         NewProjectile                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemRemoteExplosive::OnGrenadeSpawned(class AProjectileBase* NewProjectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemRemoteExplosive.OnGrenadeSpawned");

	AItemRemoteExplosive_OnGrenadeSpawned_Params params;
	params.NewProjectile = NewProjectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemRemoteExplosive::AfterRead()
{
	AItemGrenade::AfterRead();

	READ_PTR_FULL(DetonatorType, UClass);
	READ_PTR_FULL(ActiveDetonator, AItemDetonator);
}

void AItemRemoteExplosive::BeforeDelete()
{
	AItemGrenade::BeforeDelete();

	DELE_PTR_FULL(DetonatorType);
	DELE_PTR_FULL(ActiveDetonator);
}

// Function Insurgency.ItemPlantedExplosive.TracePlantTargetDest
// ()
// Parameters:
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                 FromLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 DestLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemPlantedExplosive::TracePlantTargetDest(struct FHitResult* OutHitResult, const struct FVector& FromLocation, const struct FVector& DestLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.TracePlantTargetDest");

	AItemPlantedExplosive_TracePlantTargetDest_Params params;
	params.FromLocation = FromLocation;
	params.DestLocation = DestLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;


	return params.ReturnValue;
}


// Function Insurgency.ItemPlantedExplosive.TracePlantTarget
// ()
// Parameters:
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemPlantedExplosive::TracePlantTarget(struct FHitResult* OutHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.TracePlantTarget");

	AItemPlantedExplosive_TracePlantTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;


	return params.ReturnValue;
}


// Function Insurgency.ItemPlantedExplosive.SetupPlant
// ()
// Parameters:
// struct FHitResult              PlantTrace                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemPlantedExplosive::SetupPlant(const struct FHitResult& PlantTrace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.SetupPlant");

	AItemPlantedExplosive_SetupPlant_Params params;
	params.PlantTrace = PlantTrace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPlantedExplosive.SetPlantLocationFromTrace
// ()
// Parameters:
// struct FHitResult              PlantTrace                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemPlantedExplosive::SetPlantLocationFromTrace(const struct FHitResult& PlantTrace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.SetPlantLocationFromTrace");

	AItemPlantedExplosive_SetPlantLocationFromTrace_Params params;
	params.PlantTrace = PlantTrace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPlantedExplosive.ServerStartPlant
// ()
void AItemPlantedExplosive::ServerStartPlant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.ServerStartPlant");

	AItemPlantedExplosive_ServerStartPlant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPlantedExplosive.ServerPlantAbandoned
// ()
void AItemPlantedExplosive::ServerPlantAbandoned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.ServerPlantAbandoned");

	AItemPlantedExplosive_ServerPlantAbandoned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPlantedExplosive.OnRep_Planting
// ()
void AItemPlantedExplosive::OnRep_Planting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.OnRep_Planting");

	AItemPlantedExplosive_OnRep_Planting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemPlantedExplosive.OnPlantStartDelegate__DelegateSignature
// ()
void AItemPlantedExplosive::OnPlantStartDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemPlantedExplosive.OnPlantStartDelegate__DelegateSignature");

	AItemPlantedExplosive_OnPlantStartDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemPlantedExplosive.OnPlantFinishedDelegate__DelegateSignature
// ()
void AItemPlantedExplosive::OnPlantFinishedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemPlantedExplosive.OnPlantFinishedDelegate__DelegateSignature");

	AItemPlantedExplosive_OnPlantFinishedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemPlantedExplosive.OnPlantAbandonedDelegate__DelegateSignature
// ()
void AItemPlantedExplosive::OnPlantAbandonedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemPlantedExplosive.OnPlantAbandonedDelegate__DelegateSignature");

	AItemPlantedExplosive_OnPlantAbandonedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPlantedExplosive.MulticastOnPlantComplete
// ()
void AItemPlantedExplosive::MulticastOnPlantComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.MulticastOnPlantComplete");

	AItemPlantedExplosive_MulticastOnPlantComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPlantedExplosive.ClientAbandonPlant
// ()
void AItemPlantedExplosive::ClientAbandonPlant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPlantedExplosive.ClientAbandonPlant");

	AItemPlantedExplosive_ClientAbandonPlant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemPlantedExplosive::AfterRead()
{
	AItemRemoteExplosive::AfterRead();

}

void AItemPlantedExplosive::BeforeDelete()
{
	AItemRemoteExplosive::BeforeDelete();

}

// Function Insurgency.ItemPickup.ResetPickup
// ()
void AItemPickup::ResetPickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.ResetPickup");

	AItemPickup_ResetPickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnSetItemClass
// ()
void AItemPickup::OnSetItemClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnSetItemClass");

	AItemPickup_OnSetItemClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnRep_Upgrades
// ()
void AItemPickup::OnRep_Upgrades()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnRep_Upgrades");

	AItemPickup_OnRep_Upgrades_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnRep_ItemClass
// ()
void AItemPickup::OnRep_ItemClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnRep_ItemClass");

	AItemPickup_OnRep_ItemClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnRep_Disabled
// ()
void AItemPickup::OnRep_Disabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnRep_Disabled");

	AItemPickup_OnRep_Disabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnPickupEnabledOrDisabled
// ()
// Parameters:
// bool                           bNewIsDisabled                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickup::OnPickupEnabledOrDisabled(bool bNewIsDisabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnPickupEnabledOrDisabled");

	AItemPickup_OnPickupEnabledOrDisabled_Params params;
	params.bNewIsDisabled = bNewIsDisabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnLinkedObjectiveActivated
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickup::OnLinkedObjectiveActivated(bool bNewState, class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnLinkedObjectiveActivated");

	AItemPickup_OnLinkedObjectiveActivated_Params params;
	params.bNewState = bNewState;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.OnItemClassChanged
// ()
void AItemPickup::OnItemClassChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.OnItemClassChanged");

	AItemPickup_OnItemClassChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.Multicast_SetDisabled
// ()
// Parameters:
// bool                           IsDisabled                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickup::Multicast_SetDisabled(bool IsDisabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.Multicast_SetDisabled");

	AItemPickup_Multicast_SetDisabled_Params params;
	params.IsDisabled = IsDisabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.Multicast_PlayPickupEvent
// ()
void AItemPickup::Multicast_PlayPickupEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.Multicast_PlayPickupEvent");

	AItemPickup_Multicast_PlayPickupEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemPickup.ItemPickupDelegate__DelegateSignature
// ()
// Parameters:
// class AItemEquipable*          PickedUpItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickup::ItemPickupDelegate__DelegateSignature(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemPickup.ItemPickupDelegate__DelegateSignature");

	AItemPickup_ItemPickupDelegate__DelegateSignature_Params params;
	params.PickedUpItem = PickedUpItem;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.IsPickupDisabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemPickup::IsPickupDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.IsPickupDisabled");

	AItemPickup_IsPickupDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemPickup.EnablePickup
// ()
void AItemPickup::EnablePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.EnablePickup");

	AItemPickup_EnablePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickup.DisablePickup
// ()
// Parameters:
// float                          PickupTimer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickup::DisablePickup(float PickupTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickup.DisablePickup");

	AItemPickup_DisablePickup_Params params;
	params.PickupTimer = PickupTimer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemPickup.ClearAmmoDelegate__DelegateSignature
// ()
// Parameters:
// class AItemEquipable*          PickedUpItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickup::ClearAmmoDelegate__DelegateSignature(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemPickup.ClearAmmoDelegate__DelegateSignature");

	AItemPickup_ClearAmmoDelegate__DelegateSignature_Params params;
	params.PickedUpItem = PickedUpItem;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemPickup::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AkComponent, UINSAudioComponent);
	READ_PTR_FULL(SkeletalMesh3P, USkeletalMesh);
	READ_PTR_FULL(StaticMesh3P, UStaticMesh);
	READ_PTR_FULL(Mesh3P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(StaticMesh3PComponent, UStaticMeshComponent);
	READ_PTR_FULL(ItemClass, UClass);
	READ_PTR_FULL(DefaultUseImage, UTexture2D);
	READ_PTR_FULL(TacticalMapImage, UTexture2D);
	READ_PTR_FULL(PickupEvent, UAkAudioEvent);
}

void AItemPickup::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AkComponent);
	DELE_PTR_FULL(SkeletalMesh3P);
	DELE_PTR_FULL(StaticMesh3P);
	DELE_PTR_FULL(Mesh3P);
	DELE_PTR_FULL(StaticMesh3PComponent);
	DELE_PTR_FULL(ItemClass);
	DELE_PTR_FULL(DefaultUseImage);
	DELE_PTR_FULL(TacticalMapImage);
	DELE_PTR_FULL(PickupEvent);
}

// Function Insurgency.ItemPickupDynamic.SetPickupItemAndUpgrades
// ()
// Parameters:
// class UClass*                  InItemClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          InUpgrades                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickupDynamic::SetPickupItemAndUpgrades(class UClass* InItemClass, TArray<class UClass*> InUpgrades)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickupDynamic.SetPickupItemAndUpgrades");

	AItemPickupDynamic_SetPickupItemAndUpgrades_Params params;
	params.InItemClass = InItemClass;
	params.InUpgrades = InUpgrades;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickupDynamic.SetPickupItem
// ()
// Parameters:
// class UClass*                  InItemClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickupDynamic::SetPickupItem(class UClass* InItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickupDynamic.SetPickupItem");

	AItemPickupDynamic_SetPickupItem_Params params;
	params.InItemClass = InItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickupDynamic.SetLockedUser
// ()
// Parameters:
// class AINSSoldier*             InLockedUser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OverrideLockoutTimer           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemPickupDynamic::SetLockedUser(class AINSSoldier* InLockedUser, float OverrideLockoutTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickupDynamic.SetLockedUser");

	AItemPickupDynamic_SetLockedUser_Params params;
	params.InLockedUser = InLockedUser;
	params.OverrideLockoutTimer = OverrideLockoutTimer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemPickupDynamic.ClearLockedUser
// ()
void AItemPickupDynamic::ClearLockedUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemPickupDynamic.ClearLockedUser");

	AItemPickupDynamic_ClearLockedUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemPickupDynamic::AfterRead()
{
	AItemPickup::AfterRead();

	READ_PTR_FULL(LockedUser, AINSSoldier);
}

void AItemPickupDynamic::BeforeDelete()
{
	AItemPickup::BeforeDelete();

	DELE_PTR_FULL(LockedUser);
}

// Function Insurgency.ItemInteractableGear.ToggleGear
// ()
void AItemInteractableGear::ToggleGear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.ToggleGear");

	AItemInteractableGear_ToggleGear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.SetEquipableState
// ()
// Parameters:
// EEquipableState                NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemInteractableGear::SetEquipableState(EEquipableState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.SetEquipableState");

	AItemInteractableGear_SetEquipableState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.OnTransitionComplete
// ()
void AItemInteractableGear::OnTransitionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.OnTransitionComplete");

	AItemInteractableGear_OnTransitionComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.OnRep_EquipableState
// ()
void AItemInteractableGear::OnRep_EquipableState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.OnRep_EquipableState");

	AItemInteractableGear_OnRep_EquipableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.OnPutAwayWeaponForToggle
// ()
// Parameters:
// float                          WeaponUnequipDuration          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemInteractableGear::OnPutAwayWeaponForToggle(float WeaponUnequipDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.OnPutAwayWeaponForToggle");

	AItemInteractableGear_OnPutAwayWeaponForToggle_Params params;
	params.WeaponUnequipDuration = WeaponUnequipDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.MulticastOnCanceled
// ()
void AItemInteractableGear::MulticastOnCanceled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.MulticastOnCanceled");

	AItemInteractableGear_MulticastOnCanceled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.IsUnequippingOrUnequipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsUnequippingOrUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsUnequippingOrUnequipped");

	AItemInteractableGear_IsUnequippingOrUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsUnequipping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsUnequipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsUnequipping");

	AItemInteractableGear_IsUnequipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsUnequipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsUnequipped");

	AItemInteractableGear_IsUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsTransitioningTo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsTransitioningTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsTransitioningTo");

	AItemInteractableGear_IsTransitioningTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsInWeaponTransitionDelay
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsInWeaponTransitionDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsInWeaponTransitionDelay");

	AItemInteractableGear_IsInWeaponTransitionDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsEquippingOrEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsEquippingOrEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsEquippingOrEquipped");

	AItemInteractableGear_IsEquippingOrEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsEquipping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsEquipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsEquipping");

	AItemInteractableGear_IsEquipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.IsEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemInteractableGear::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.IsEquipped");

	AItemInteractableGear_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.ItemInteractableGear.InteractableStateChangedDelegate__DelegateSignature
// ()
// Parameters:
// class AItemInteractableGear*   Gear                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipableState                NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemInteractableGear::InteractableStateChangedDelegate__DelegateSignature(class AItemInteractableGear* Gear, EEquipableState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemInteractableGear.InteractableStateChangedDelegate__DelegateSignature");

	AItemInteractableGear_InteractableStateChangedDelegate__DelegateSignature_Params params;
	params.Gear = Gear;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemInteractableGear.GetInteractableGearType
// ()
// Parameters:
// EInteractableGearType          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EInteractableGearType AItemInteractableGear::GetInteractableGearType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.GetInteractableGearType");

	AItemInteractableGear_GetInteractableGearType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.GetEquipableState
// ()
// Parameters:
// EEquipableState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EEquipableState AItemInteractableGear::GetEquipableState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.GetEquipableState");

	AItemInteractableGear_GetEquipableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemInteractableGear.BlueprintInteractableStateChanged
// ()
// Parameters:
// EEquipableState                NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemInteractableGear::BlueprintInteractableStateChanged(EEquipableState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemInteractableGear.BlueprintInteractableStateChanged");

	AItemInteractableGear_BlueprintInteractableStateChanged_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemInteractableGear::AfterRead()
{
	AItemGear::AfterRead();

	READ_PTR_FULL(Mesh1P, USkeletalMesh);
}

void AItemInteractableGear::BeforeDelete()
{
	AItemGear::BeforeDelete();

	DELE_PTR_FULL(Mesh1P);
}

// Function Insurgency.ItemGoggles.OnRep_Active
// ()
void AItemGoggles::OnRep_Active()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGoggles.OnRep_Active");

	AItemGoggles_OnRep_Active_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGoggles.MulticastPlayToggleAudioCue
// ()
// Parameters:
// bool                           bEquip                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGoggles::MulticastPlayToggleAudioCue(bool bEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGoggles.MulticastPlayToggleAudioCue");

	AItemGoggles_MulticastPlayToggleAudioCue_Params params;
	params.bEquip = bEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemGoggles.AttachGogglesToComponent
// ()
// Parameters:
// class UINSSkeletalMeshComponent* TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemGoggles::AttachGogglesToComponent(class UINSSkeletalMeshComponent* TargetComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemGoggles.AttachGogglesToComponent");

	AItemGoggles_AttachGogglesToComponent_Params params;
	params.TargetComponent = TargetComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemGoggles::AfterRead()
{
	AItemInteractableGear::AfterRead();

	READ_PTR_FULL(PostProcessMaterial, UMaterialInterface);
	READ_PTR_FULL(AkEventToggleOn1P, UAkAudioEvent);
	READ_PTR_FULL(AkEventToggleOn3P, UAkAudioEvent);
	READ_PTR_FULL(AkEventToggleOff1P, UAkAudioEvent);
	READ_PTR_FULL(AkEventToggleOff3P, UAkAudioEvent);
}

void AItemGoggles::BeforeDelete()
{
	AItemInteractableGear::BeforeDelete();

	DELE_PTR_FULL(PostProcessMaterial);
	DELE_PTR_FULL(AkEventToggleOn1P);
	DELE_PTR_FULL(AkEventToggleOn3P);
	DELE_PTR_FULL(AkEventToggleOff1P);
	DELE_PTR_FULL(AkEventToggleOff3P);
}

void AItemNightVision::AfterRead()
{
	AItemGoggles::AfterRead();

}

void AItemNightVision::BeforeDelete()
{
	AItemGoggles::BeforeDelete();

}

void AItemHeavyMachineGun::AfterRead()
{
	AItemFirearm::AfterRead();

}

void AItemHeavyMachineGun::BeforeDelete()
{
	AItemFirearm::BeforeDelete();

}

// Function Insurgency.ItemMinigun.IsUsingSpinUpTime
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemMinigun::IsUsingSpinUpTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMinigun.IsUsingSpinUpTime");

	AItemMinigun_IsUsingSpinUpTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMinigun.IsSpunUp
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemMinigun::IsSpunUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMinigun.IsSpunUp");

	AItemMinigun_IsSpunUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemMinigun::AfterRead()
{
	AItemHeavyMachineGun::AfterRead();

	READ_PTR_FULL(SpinUpAudioEvent1P, UAkAudioEvent);
	READ_PTR_FULL(SpinUpAudioEvent3P, UAkAudioEvent);
	READ_PTR_FULL(SpinDownAudioEvent1P, UAkAudioEvent);
	READ_PTR_FULL(SpinDownAudioEvent3P, UAkAudioEvent);
}

void AItemMinigun::BeforeDelete()
{
	AItemHeavyMachineGun::BeforeDelete();

	DELE_PTR_FULL(SpinUpAudioEvent1P);
	DELE_PTR_FULL(SpinUpAudioEvent3P);
	DELE_PTR_FULL(SpinDownAudioEvent1P);
	DELE_PTR_FULL(SpinDownAudioEvent3P);
}

// Function Insurgency.ItemMeleeWeapon.ServerStartSwing
// ()
// Parameters:
// int                            AttackIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemMeleeWeapon::ServerStartSwing(int AttackIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.ServerStartSwing");

	AItemMeleeWeapon_ServerStartSwing_Params params;
	params.AttackIndex = AttackIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemMeleeWeapon.ServerNotifyHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          ClientTime                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemMeleeWeapon::ServerNotifyHit(const struct FHitResult& Hit, float ClientTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.ServerNotifyHit");

	AItemMeleeWeapon_ServerNotifyHit_Params params;
	params.Hit = Hit;
	params.ClientTime = ClientTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemMeleeWeapon.IsSwinging
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemMeleeWeapon::IsSwinging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.IsSwinging");

	AItemMeleeWeapon_IsSwinging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMeleeWeapon.InSwingDelay
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemMeleeWeapon::InSwingDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.InSwingDelay");

	AItemMeleeWeapon_InSwingDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMeleeWeapon.GetSwingRemainingTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemMeleeWeapon::GetSwingRemainingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.GetSwingRemainingTime");

	AItemMeleeWeapon_GetSwingRemainingTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMeleeWeapon.GetSwingPercentage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemMeleeWeapon::GetSwingPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.GetSwingPercentage");

	AItemMeleeWeapon_GetSwingPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMeleeWeapon.GetNextSwingTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AItemMeleeWeapon::GetNextSwingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.GetNextSwingTime");

	AItemMeleeWeapon_GetNextSwingTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMeleeWeapon.CanSwing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AItemMeleeWeapon::CanSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.CanSwing");

	AItemMeleeWeapon_CanSwing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemMeleeWeapon.BroadcastStartSwing
// ()
// Parameters:
// int                            AttackIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemMeleeWeapon::BroadcastStartSwing(int AttackIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.BroadcastStartSwing");

	AItemMeleeWeapon_BroadcastStartSwing_Params params;
	params.AttackIndex = AttackIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemMeleeWeapon.BroadcastHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemMeleeWeapon::BroadcastHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.BroadcastHit");

	AItemMeleeWeapon_BroadcastHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemMeleeWeapon.BlueprintOnSwing
// ()
void AItemMeleeWeapon::BlueprintOnSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.BlueprintOnSwing");

	AItemMeleeWeapon_BlueprintOnSwing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemMeleeWeapon.BlueprintOnHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemMeleeWeapon::BlueprintOnHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.BlueprintOnHit");

	AItemMeleeWeapon_BlueprintOnHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemMeleeWeapon.ApplyDamageForHit
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AItemMeleeWeapon::ApplyDamageForHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemMeleeWeapon.ApplyDamageForHit");

	AItemMeleeWeapon_ApplyDamageForHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemMeleeWeapon::AfterRead()
{
	AItemWeapon::AfterRead();

	READ_PTR_FULL(DefaultDamageTypeClass, UClass);
	READ_PTR_FULL(DefaultSurfaceReaction, USurfaceReaction);
}

void AItemMeleeWeapon::BeforeDelete()
{
	AItemWeapon::BeforeDelete();

	DELE_PTR_FULL(DefaultDamageTypeClass);
	DELE_PTR_FULL(DefaultSurfaceReaction);
}

// Function Insurgency.ItemDetonator.ServerDetonate
// ()
void AItemDetonator::ServerDetonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemDetonator.ServerDetonate");

	AItemDetonator_ServerDetonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.ItemDetonator.OnDetonatorUsedDelegate__DelegateSignature
// ()
void AItemDetonator::OnDetonatorUsedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.ItemDetonator.OnDetonatorUsedDelegate__DelegateSignature");

	AItemDetonator_OnDetonatorUsedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemDetonator.MulticastDetonate
// ()
void AItemDetonator::MulticastDetonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemDetonator.MulticastDetonate");

	AItemDetonator_MulticastDetonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemDetonator.CheckDetonated
// ()
void AItemDetonator::CheckDetonated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemDetonator.CheckDetonated");

	AItemDetonator_CheckDetonated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemDetonator.BlueprintOnDetonated
// ()
void AItemDetonator::BlueprintOnDetonated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemDetonator.BlueprintOnDetonated");

	AItemDetonator_BlueprintOnDetonated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemDetonator.AddGrenade
// ()
// Parameters:
// class AProjectileBase*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemDetonator::AddGrenade(class AProjectileBase* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemDetonator.AddGrenade");

	AItemDetonator_AddGrenade_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemDetonator::AfterRead()
{
	AItemEquipable::AfterRead();

	READ_PTR_FULL(LinkedDestructible, AObjectiveDestructible);
}

void AItemDetonator::BeforeDelete()
{
	AItemEquipable::BeforeDelete();

	DELE_PTR_FULL(LinkedDestructible);
}

void AItemBinocular::AfterRead()
{
	AItemAimableWeapon::AfterRead();

	READ_PTR_FULL(PostProcessMaterial, UMaterialInterface);
	READ_PTR_FULL(SpawnedIndicatorParticle, UParticleSystemComponent);
	READ_PTR_FULL(CooldownParticleSystem, UParticleSystem);
}

void AItemBinocular::BeforeDelete()
{
	AItemAimableWeapon::BeforeDelete();

	DELE_PTR_FULL(PostProcessMaterial);
	DELE_PTR_FULL(SpawnedIndicatorParticle);
	DELE_PTR_FULL(CooldownParticleSystem);
}

void AItemArmor::AfterRead()
{
	AItemGear::AfterRead();

	READ_PTR_FULL(PhysicsAssetOverride, UPhysicsAsset);
}

void AItemArmor::BeforeDelete()
{
	AItemGear::BeforeDelete();

	DELE_PTR_FULL(PhysicsAssetOverride);
}

// Function Insurgency.ItemAmmoVest.UpdatePreviewVisuals
// ()
// Parameters:
// bool                           bPreviewFemale                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGearLevel                 PreviewArmorLevel              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::UpdatePreviewVisuals(bool bPreviewFemale, EItemGearLevel PreviewArmorLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.UpdatePreviewVisuals");

	AItemAmmoVest_UpdatePreviewVisuals_Params params;
	params.bPreviewFemale = bPreviewFemale;
	params.PreviewArmorLevel = PreviewArmorLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.UpdateEquipmentVisualsInternal
// ()
// Parameters:
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bProfile                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInventoryComponent*     Inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDontRunOnProfile              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::UpdateEquipmentVisualsInternal(bool bForce, bool bProfile, class UInventoryComponent* Inventory, bool bDontRunOnProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.UpdateEquipmentVisualsInternal");

	AItemAmmoVest_UpdateEquipmentVisualsInternal_Params params;
	params.bForce = bForce;
	params.bProfile = bProfile;
	params.Inventory = Inventory;
	params.bDontRunOnProfile = bDontRunOnProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.UpdateEquipmentVisuals
// ()
// Parameters:
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bProfile                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInventoryComponent*     Inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::UpdateEquipmentVisuals(bool bForce, bool bProfile, class UInventoryComponent* Inventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.UpdateEquipmentVisuals");

	AItemAmmoVest_UpdateEquipmentVisuals_Params params;
	params.bForce = bForce;
	params.bProfile = bProfile;
	params.Inventory = Inventory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.UpdateEquipmentChangeInterface
// ()
void AItemAmmoVest::UpdateEquipmentChangeInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.UpdateEquipmentChangeInterface");

	AItemAmmoVest_UpdateEquipmentChangeInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.SetCarrierCosmetic
// ()
// Parameters:
// class UCosmeticItem*           NewCarrierCosmetic             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::SetCarrierCosmetic(class UCosmeticItem* NewCarrierCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.SetCarrierCosmetic");

	AItemAmmoVest_SetCarrierCosmetic_Params params;
	params.NewCarrierCosmetic = NewCarrierCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.SetCarrierArmourCombination
// ()
// Parameters:
// EItemGearLevel                 Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::SetCarrierArmourCombination(EItemGearLevel Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.SetCarrierArmourCombination");

	AItemAmmoVest_SetCarrierArmourCombination_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.SetBackpackCosmetic
// ()
// Parameters:
// class UCosmeticItem*           NewBackPackCosmetic            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::SetBackpackCosmetic(class UCosmeticItem* NewBackPackCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.SetBackpackCosmetic");

	AItemAmmoVest_SetBackpackCosmetic_Params params;
	params.NewBackPackCosmetic = NewBackPackCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnUpdateCosmeticMeshesMorphs
// ()
// Parameters:
// bool                           bProfile                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::OnUpdateCosmeticMeshesMorphs(bool bProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnUpdateCosmeticMeshesMorphs");

	AItemAmmoVest_OnUpdateCosmeticMeshesMorphs_Params params;
	params.bProfile = bProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnUpdateCharacterAnimInstance
// ()
// Parameters:
// bool                           bProfile                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::OnUpdateCharacterAnimInstance(bool bProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnUpdateCharacterAnimInstance");

	AItemAmmoVest_OnUpdateCharacterAnimInstance_Params params;
	params.bProfile = bProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnSettingsChanged
// ()
void AItemAmmoVest::OnSettingsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnSettingsChanged");

	AItemAmmoVest_OnSettingsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* INSSkeletalMeshComponent       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::OnMeshLoaded(class UINSSkeletalMeshComponent* INSSkeletalMeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnMeshLoaded");

	AItemAmmoVest_OnMeshLoaded_Params params;
	params.INSSkeletalMeshComponent = INSSkeletalMeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnMergedMesh
// ()
void AItemAmmoVest::OnMergedMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnMergedMesh");

	AItemAmmoVest_OnMergedMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnExitVehicle
// ()
// Parameters:
// class UVehicleSeatComponent*   VehicleSeat                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::OnExitVehicle(class UVehicleSeatComponent* VehicleSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnExitVehicle");

	AItemAmmoVest_OnExitVehicle_Params params;
	params.VehicleSeat = VehicleSeat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnEnteredVehicle
// ()
// Parameters:
// class UVehicleSeatComponent*   VehicleSeat                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::OnEnteredVehicle(class UVehicleSeatComponent* VehicleSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnEnteredVehicle");

	AItemAmmoVest_OnEnteredVehicle_Params params;
	params.VehicleSeat = VehicleSeat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.OnAttachMeshToPawn
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::OnAttachMeshToPawn(class UINSSkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.OnAttachMeshToPawn");

	AItemAmmoVest_OnAttachMeshToPawn_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.GetSkeletalMesh3P
// ()
// Parameters:
// EItemGearLevel                 Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AItemAmmoVest::GetSkeletalMesh3P(EItemGearLevel Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.GetSkeletalMesh3P");

	AItemAmmoVest_GetSkeletalMesh3P_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ItemAmmoVest.GetCurrentArmourLevel
// ()
// Parameters:
// EItemGearLevel                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EItemGearLevel AItemAmmoVest::GetCurrentArmourLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.GetCurrentArmourLevel");

	AItemAmmoVest_GetCurrentArmourLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ItemAmmoVest.GetAdditionalAmmoForWeapon
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AItemAmmoVest::GetAdditionalAmmoForWeapon(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ItemAmmoVest.GetAdditionalAmmoForWeapon");

	AItemAmmoVest_GetAdditionalAmmoForWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemAmmoVest::AfterRead()
{
	AItemGear::AfterRead();

	READ_PTR_FULL(INSSoldier, AINSSoldier);
	READ_PTR_FULL(ProfileCharacter, AProfileCharacter);
	READ_PTR_FULL(BackPackCosmetic, UCosmeticItem);
	READ_PTR_FULL(CarrierCosmetic, UCosmeticItem);
}

void AItemAmmoVest::BeforeDelete()
{
	AItemGear::BeforeDelete();

	DELE_PTR_FULL(INSSoldier);
	DELE_PTR_FULL(ProfileCharacter);
	DELE_PTR_FULL(BackPackCosmetic);
	DELE_PTR_FULL(CarrierCosmetic);
}

void AItemAmmoPickup::AfterRead()
{
	AItemPickup::AfterRead();

}

void AItemAmmoPickup::BeforeDelete()
{
	AItemPickup::BeforeDelete();

}

void AIntroCameraActor::AfterRead()
{
	ACameraActor::AfterRead();

}

void AIntroCameraActor::BeforeDelete()
{
	ACameraActor::BeforeDelete();

}

// Function Insurgency.INSWorldSettings.OnRep_LoadedLightingScenario
// ()
void AINSWorldSettings::OnRep_LoadedLightingScenario()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSWorldSettings.OnRep_LoadedLightingScenario");

	AINSWorldSettings_OnRep_LoadedLightingScenario_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSWorldSettings.LoadAndPlayBenchmarkSequence
// ()
// Parameters:
// bool                           bAutomated                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSWorldSettings::LoadAndPlayBenchmarkSequence(bool bAutomated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSWorldSettings.LoadAndPlayBenchmarkSequence");

	AINSWorldSettings_LoadAndPlayBenchmarkSequence_Params params;
	params.bAutomated = bAutomated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSWorldSettings.BenchmarkOnStop
// ()
void AINSWorldSettings::BenchmarkOnStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSWorldSettings.BenchmarkOnStop");

	AINSWorldSettings_BenchmarkOnStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSWorldSettings::AfterRead()
{
	AWorldSettings::AfterRead();

	READ_PTR_FULL(DefaultSoundscape, USoundscapeDefinition);
	READ_PTR_FULL(TacticalMapMaterial, UMaterialInterface);
	READ_PTR_FULL(BreathParticleSystemOverride, UParticleSystem);
	READ_PTR_FULL(SequencePlayer, ULevelSequencePlayer);
	READ_PTR_FULL(SequencePlayerActor, ALevelSequenceActor);
}

void AINSWorldSettings::BeforeDelete()
{
	AWorldSettings::BeforeDelete();

	DELE_PTR_FULL(DefaultSoundscape);
	DELE_PTR_FULL(TacticalMapMaterial);
	DELE_PTR_FULL(BreathParticleSystemOverride);
	DELE_PTR_FULL(SequencePlayer);
	DELE_PTR_FULL(SequencePlayerActor);
}

void UInsurgencyGlobals::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(GameUIData, UGameUIData);
}

void UInsurgencyGlobals::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(GameUIData);
}

// Function Insurgency.INSGameState.OnTeamInfoReady
// ()
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameState::OnTeamInfoReady(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnTeamInfoReady");

	AINSGameState_OnTeamInfoReady_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_UseAttributeOverrides
// ()
void AINSGameState::OnRep_UseAttributeOverrides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_UseAttributeOverrides");

	AINSGameState_OnRep_UseAttributeOverrides_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_TeamLockState
// ()
void AINSGameState::OnRep_TeamLockState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_TeamLockState");

	AINSGameState_OnRep_TeamLockState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_SubMatchState
// ()
void AINSGameState::OnRep_SubMatchState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_SubMatchState");

	AINSGameState_OnRep_SubMatchState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_RulesetAttributeOverrides
// ()
void AINSGameState::OnRep_RulesetAttributeOverrides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_RulesetAttributeOverrides");

	AINSGameState_OnRep_RulesetAttributeOverrides_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_IsCompetitiveSession
// ()
void AINSGameState::OnRep_IsCompetitiveSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_IsCompetitiveSession");

	AINSGameState_OnRep_IsCompetitiveSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_FreezeTime
// ()
void AINSGameState::OnRep_FreezeTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_FreezeTime");

	AINSGameState_OnRep_FreezeTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_ActiveScenarioLocalized
// ()
void AINSGameState::OnRep_ActiveScenarioLocalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_ActiveScenarioLocalized");

	AINSGameState_OnRep_ActiveScenarioLocalized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnRep_ActiveMutators
// ()
void AINSGameState::OnRep_ActiveMutators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnRep_ActiveMutators");

	AINSGameState_OnRep_ActiveMutators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnMapVoteStarted
// ()
void AINSGameState::OnMapVoteStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnMapVoteStarted");

	AINSGameState_OnMapVoteStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.OnMapVoteEnded
// ()
void AINSGameState::OnMapVoteEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.OnMapVoteEnded");

	AINSGameState_OnMapVoteEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.MulticastTextMessage
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameState::MulticastTextMessage(const struct FText& Message, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.MulticastTextMessage");

	AINSGameState_MulticastTextMessage_Params params;
	params.Message = Message;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.MulticastSetActiveMutators
// ()
void AINSGameState::MulticastSetActiveMutators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.MulticastSetActiveMutators");

	AINSGameState_MulticastSetActiveMutators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.IsTeamVisuallyLocked
// ()
// Parameters:
// unsigned char                  TeamIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::IsTeamVisuallyLocked(unsigned char TeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.IsTeamVisuallyLocked");

	AINSGameState_IsTeamVisuallyLocked_Params params;
	params.TeamIndex = TeamIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.IsRoundRunning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::IsRoundRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.IsRoundRunning");

	AINSGameState_IsRoundRunning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.IsPostRoundOrGame
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::IsPostRoundOrGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.IsPostRoundOrGame");

	AINSGameState_IsPostRoundOrGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.IsPostRound
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::IsPostRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.IsPostRound");

	AINSGameState_IsPostRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.IsMapVoteInProgress
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::IsMapVoteInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.IsMapVoteInProgress");

	AINSGameState_IsMapVoteInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.IsGameOver
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::IsGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.IsGameOver");

	AINSGameState_IsGameOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.InRoundIntermission
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::InRoundIntermission()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.InRoundIntermission");

	AINSGameState_InRoundIntermission_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.GetTeam
// ()
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSGameState::GetTeam(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.GetTeam");

	AINSGameState_GetTeam_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.GetFaction
// ()
// Parameters:
// unsigned char                  FactionId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSGameState::GetFaction(unsigned char FactionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.GetFaction");

	AINSGameState_GetFaction_Params params;
	params.FactionId = FactionId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.DebugStartMapVoteFromCycle
// ()
void AINSGameState::DebugStartMapVoteFromCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.DebugStartMapVoteFromCycle");

	AINSGameState_DebugStartMapVoteFromCycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.CollectInterestingTaglines
// ()
// Parameters:
// TArray<struct FOtherPlayerAwardedTagline> OutTaglines                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameState::CollectInterestingTaglines(TArray<struct FOtherPlayerAwardedTagline>* OutTaglines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.CollectInterestingTaglines");

	AINSGameState_CollectInterestingTaglines_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTaglines != nullptr)
		*OutTaglines = params.OutTaglines;

}


// Function Insurgency.INSGameState.CanResupplyInCurrentGameState
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameState::CanResupplyInCurrentGameState(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.CanResupplyInCurrentGameState");

	AINSGameState_CanResupplyInCurrentGameState_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameState.BroadcastShowPlayerExperience
// ()
void AINSGameState::BroadcastShowPlayerExperience()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.BroadcastShowPlayerExperience");

	AINSGameState_BroadcastShowPlayerExperience_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.BroadcastRoundReset
// ()
void AINSGameState::BroadcastRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.BroadcastRoundReset");

	AINSGameState_BroadcastRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.BroadcastRoundOver
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningFaction                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FOtherPlayerAwardedTagline> Taglines                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameState::BroadcastRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.BroadcastRoundOver");

	AINSGameState_BroadcastRoundOver_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningFaction = WinningFaction;
	params.Taglines = Taglines;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.BroadcastMatchEnded
// ()
// Parameters:
// unsigned char                  WinningFaction                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameState::BroadcastMatchEnded(unsigned char WinningFaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.BroadcastMatchEnded");

	AINSGameState_BroadcastMatchEnded_Params params;
	params.WinningFaction = WinningFaction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameState.AddTeam
// ()
// Parameters:
// class ATeamInfo*               InTeam                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameState::AddTeam(class ATeamInfo* InTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameState.AddTeam");

	AINSGameState_AddTeam_Params params;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSGameState::AfterRead()
{
	AGameState::AfterRead();

	READ_PTR_FULL(BulletManager, ABulletManager);
	READ_PTR_FULL(BrassManager, UBrassManager);
	READ_PTR_FULL(RagdollManager, URagdollManager);
	READ_PTR_FULL(FoliageInteractionManager, AFoliageInteractionManager);
	READ_PTR_FULL(PostMergeManager, UPostMergeManager);
	READ_PTR_FULL(LightSampler, ALightSampler);
	READ_PTR_FULL(SoundscapeState, USoundscapeState);
	READ_PTR_FULL(DecalManager, UDecalManager);
	READ_PTR_FULL(VoiceRouting, UVoiceRouting);
	READ_PTR_FULL(MapVoteManager, UMapVoteManager);
}

void AINSGameState::BeforeDelete()
{
	AGameState::BeforeDelete();

	DELE_PTR_FULL(BulletManager);
	DELE_PTR_FULL(BrassManager);
	DELE_PTR_FULL(RagdollManager);
	DELE_PTR_FULL(FoliageInteractionManager);
	DELE_PTR_FULL(PostMergeManager);
	DELE_PTR_FULL(LightSampler);
	DELE_PTR_FULL(SoundscapeState);
	DELE_PTR_FULL(DecalManager);
	DELE_PTR_FULL(VoiceRouting);
	DELE_PTR_FULL(MapVoteManager);
}

// Function Insurgency.INSMultiplayerGameState.SetRoundTimer
// ()
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerGameState::SetRoundTimer(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.SetRoundTimer");

	AINSMultiplayerGameState_SetRoundTimer_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.OnRoundStarted
// ()
void AINSMultiplayerGameState::OnRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.OnRoundStarted");

	AINSMultiplayerGameState_OnRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.OnRoundEnded
// ()
void AINSMultiplayerGameState::OnRoundEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.OnRoundEnded");

	AINSMultiplayerGameState_OnRoundEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.OnRep_EndRoundTime
// ()
void AINSMultiplayerGameState::OnRep_EndRoundTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.OnRep_EndRoundTime");

	AINSMultiplayerGameState_OnRep_EndRoundTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.OnPreRoundStarted
// ()
void AINSMultiplayerGameState::OnPreRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.OnPreRoundStarted");

	AINSMultiplayerGameState_OnPreRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.IsWaitingForPlayers
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::IsWaitingForPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.IsWaitingForPlayers");

	AINSMultiplayerGameState_IsWaitingForPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.IsThirdPersonSpectatorAllowed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::IsThirdPersonSpectatorAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.IsThirdPersonSpectatorAllowed");

	AINSMultiplayerGameState_IsThirdPersonSpectatorAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.IsRoundActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::IsRoundActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.IsRoundActive");

	AINSMultiplayerGameState_IsRoundActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.IsInPreRound
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::IsInPreRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.IsInPreRound");

	AINSMultiplayerGameState_IsInPreRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.IsGameStarting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::IsGameStarting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.IsGameStarting");

	AINSMultiplayerGameState_IsGameStarting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.IsDeathCameraEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::IsDeathCameraEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.IsDeathCameraEnabled");

	AINSMultiplayerGameState_IsDeathCameraEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.InvalidateRoundTimer
// ()
void AINSMultiplayerGameState::InvalidateRoundTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.InvalidateRoundTimer");

	AINSMultiplayerGameState_InvalidateRoundTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.GetRoundTimeRemaining
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSMultiplayerGameState::GetRoundTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.GetRoundTimeRemaining");

	AINSMultiplayerGameState_GetRoundTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.GetRoundTimeElapsed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSMultiplayerGameState::GetRoundTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.GetRoundTimeElapsed");

	AINSMultiplayerGameState_GetRoundTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.ExtendRoundTimer
// ()
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerGameState::ExtendRoundTimer(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.ExtendRoundTimer");

	AINSMultiplayerGameState_ExtendRoundTimer_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerGameState.AreClassLevelRestrictionsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::AreClassLevelRestrictionsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.AreClassLevelRestrictionsEnabled");

	AINSMultiplayerGameState_AreClassLevelRestrictionsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerGameState.AllowPlayerMove
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerGameState::AllowPlayerMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerGameState.AllowPlayerMove");

	AINSMultiplayerGameState_AllowPlayerMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSMultiplayerGameState::AfterRead()
{
	AINSGameState::AfterRead();

}

void AINSMultiplayerGameState::BeforeDelete()
{
	AINSGameState::BeforeDelete();

}

// Function Insurgency.INSSurvivalGameState.SetCurrentWave
// ()
// Parameters:
// int                            NewCurrentWave                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSurvivalGameState::SetCurrentWave(int NewCurrentWave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.SetCurrentWave");

	AINSSurvivalGameState_SetCurrentWave_Params params;
	params.NewCurrentWave = NewCurrentWave;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalWaveChangedDelegate__DelegateSignature
// ()
// Parameters:
// int                            NewWave                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSurvivalGameState::OnSurvivalWaveChangedDelegate__DelegateSignature(int NewWave)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalWaveChangedDelegate__DelegateSignature");

	AINSSurvivalGameState_OnSurvivalWaveChangedDelegate__DelegateSignature_Params params;
	params.NewWave = NewWave;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalPrepareNextWaveDelegate__DelegateSignature
// ()
void AINSSurvivalGameState::OnSurvivalPrepareNextWaveDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalPrepareNextWaveDelegate__DelegateSignature");

	AINSSurvivalGameState_OnSurvivalPrepareNextWaveDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalIncomingWaveDelegate__DelegateSignature
// ()
// Parameters:
// ESurvivalWaveType              WaveType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSurvivalGameState::OnSurvivalIncomingWaveDelegate__DelegateSignature(ESurvivalWaveType WaveType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalIncomingWaveDelegate__DelegateSignature");

	AINSSurvivalGameState_OnSurvivalIncomingWaveDelegate__DelegateSignature_Params params;
	params.WaveType = WaveType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalDefendExtractionPointDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bIsDefending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSurvivalGameState::OnSurvivalDefendExtractionPointDelegate__DelegateSignature(bool bIsDefending)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSSurvivalGameState.OnSurvivalDefendExtractionPointDelegate__DelegateSignature");

	AINSSurvivalGameState_OnSurvivalDefendExtractionPointDelegate__DelegateSignature_Params params;
	params.bIsDefending = bIsDefending;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameState.OnRep_TotalWaves
// ()
void AINSSurvivalGameState::OnRep_TotalWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.OnRep_TotalWaves");

	AINSSurvivalGameState_OnRep_TotalWaves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameState.OnRep_IsDefending
// ()
void AINSSurvivalGameState::OnRep_IsDefending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.OnRep_IsDefending");

	AINSSurvivalGameState_OnRep_IsDefending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameState.OnRep_CurrentWave
// ()
void AINSSurvivalGameState::OnRep_CurrentWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.OnRep_CurrentWave");

	AINSSurvivalGameState_OnRep_CurrentWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameState.Multicast_SurvivalPrepareNextWaveEvent
// ()
void AINSSurvivalGameState::Multicast_SurvivalPrepareNextWaveEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.Multicast_SurvivalPrepareNextWaveEvent");

	AINSSurvivalGameState_Multicast_SurvivalPrepareNextWaveEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameState.Multicast_SurvivalIncomingWaveEvent
// ()
// Parameters:
// ESurvivalWaveType              NewCurrentWaveType             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSurvivalGameState::Multicast_SurvivalIncomingWaveEvent(ESurvivalWaveType NewCurrentWaveType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.Multicast_SurvivalIncomingWaveEvent");

	AINSSurvivalGameState_Multicast_SurvivalIncomingWaveEvent_Params params;
	params.NewCurrentWaveType = NewCurrentWaveType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameState.Multicast_StartHelicopterSequence
// ()
// Parameters:
// class ALevelSequenceActor*     Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AVehicleHoveringBase*    Helicopter                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSurvivalGameState::Multicast_StartHelicopterSequence(class ALevelSequenceActor* Sequence, class AVehicleHoveringBase* Helicopter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameState.Multicast_StartHelicopterSequence");

	AINSSurvivalGameState_Multicast_StartHelicopterSequence_Params params;
	params.Sequence = Sequence;
	params.Helicopter = Helicopter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSSurvivalGameState::AfterRead()
{
	AINSMultiplayerGameState::AfterRead();

}

void AINSSurvivalGameState::BeforeDelete()
{
	AINSMultiplayerGameState::BeforeDelete();

}

// Function Insurgency.INSGameMode.SwapSides
// ()
// Parameters:
// bool                           bKillAlivePlayers              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::SwapSides(bool bKillAlivePlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.SwapSides");

	AINSGameMode_SwapSides_Params params;
	params.bKillAlivePlayers = bKillAlivePlayers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.SetRestrictedAreas
// ()
// Parameters:
// bool                           bState                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::SetRestrictedAreas(bool bState, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.SetRestrictedAreas");

	AINSGameMode_SetRestrictedAreas_Params params;
	params.bState = bState;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.SetPropertyValueFromString
// ()
// Parameters:
// struct FName                   PropertyName                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 NewPropertyValue               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::SetPropertyValueFromString(const struct FName& PropertyName, const struct FString& NewPropertyValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.SetPropertyValueFromString");

	AINSGameMode_SetPropertyValueFromString_Params params;
	params.PropertyName = PropertyName;
	params.NewPropertyValue = NewPropertyValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.SetPropertyValueFromFloat
// ()
// Parameters:
// struct FName                   PropertyName                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewPropertyValue               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::SetPropertyValueFromFloat(const struct FName& PropertyName, float NewPropertyValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.SetPropertyValueFromFloat");

	AINSGameMode_SetPropertyValueFromFloat_Params params;
	params.PropertyName = PropertyName;
	params.NewPropertyValue = NewPropertyValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.RespawnTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludingAlive                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::RespawnTeam(unsigned char TeamId, bool bIncludingAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.RespawnTeam");

	AINSGameMode_RespawnTeam_Params params;
	params.TeamId = TeamId;
	params.bIncludingAlive = bIncludingAlive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.RespawnPlayers
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::RespawnPlayers(unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.RespawnPlayers");

	AINSGameMode_RespawnPlayers_Params params;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.RespawnPlayer
// ()
// Parameters:
// class AINSPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::RespawnPlayer(class AINSPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.RespawnPlayer");

	AINSGameMode_RespawnPlayer_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.RespawnBot
// ()
// Parameters:
// class AINSAISoldierController* BotController                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::RespawnBot(class AINSAISoldierController* BotController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.RespawnBot");

	AINSGameMode_RespawnBot_Params params;
	params.BotController = BotController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.RespawnAllTeams
// ()
// Parameters:
// bool                           bIncludingAlive                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::RespawnAllTeams(bool bIncludingAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.RespawnAllTeams");

	AINSGameMode_RespawnAllTeams_Params params;
	params.bIncludingAlive = bIncludingAlive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.ReinforceTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::ReinforceTeam(unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.ReinforceTeam");

	AINSGameMode_ReinforceTeam_Params params;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.ReinforceAllTeams
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::ReinforceAllTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.ReinforceAllTeams");

	AINSGameMode_ReinforceAllTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.PerformResupplyForSoldier
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRemoveCurrentItems            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::PerformResupplyForSoldier(class AINSSoldier* Player, bool bRemoveCurrentItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.PerformResupplyForSoldier");

	AINSGameMode_PerformResupplyForSoldier_Params params;
	params.Player = Player;
	params.bRemoveCurrentItems = bRemoveCurrentItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnWavesDepleted_DisableRestricted
// ()
// Parameters:
// class UReinforcementSystemComponent* Component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnWavesDepleted_DisableRestricted(class UReinforcementSystemComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnWavesDepleted_DisableRestricted");

	AINSGameMode_OnWavesDepleted_DisableRestricted_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnWaveGained_ReenableRestricted
// ()
// Parameters:
// class UReinforcementSystemComponent* Component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OldWaveCount                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnWaveGained_ReenableRestricted(class UReinforcementSystemComponent* Component, int OldWaveCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnWaveGained_ReenableRestricted");

	AINSGameMode_OnWaveGained_ReenableRestricted_Params params;
	params.Component = Component;
	params.OldWaveCount = OldWaveCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnVehicleEngineDestroyed
// ()
// Parameters:
// class UVehicleEnginePart*      EnginePart                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             KillerPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AController*>     AssisterPlayers                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnVehicleEngineDestroyed(class UVehicleEnginePart* EnginePart, class AController* KillerPlayer, TArray<class AController*> AssisterPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnVehicleEngineDestroyed");

	AINSGameMode_OnVehicleEngineDestroyed_Params params;
	params.EnginePart = EnginePart;
	params.KillerPlayer = KillerPlayer;
	params.AssisterPlayers = AssisterPlayers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnTextMessageSent
// ()
// Parameters:
// class AINSPlayerController*    Speaker                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bTeamOnly                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::OnTextMessageSent(class AINSPlayerController* Speaker, const struct FText& Message, bool bTeamOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnTextMessageSent");

	AINSGameMode_OnTextMessageSent_Params params;
	params.Speaker = Speaker;
	params.Message = Message;
	params.bTeamOnly = bTeamOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.OnSoldierTakeRadialDamage
// ()
// Parameters:
// class AINSSoldier*             SoldierPawn                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSGameMode::OnSoldierTakeRadialDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnSoldierTakeRadialDamage");

	AINSGameMode_OnSoldierTakeRadialDamage_Params params;
	params.SoldierPawn = SoldierPawn;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;
	params.Origin = Origin;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.OnSoldierTakePointDamage
// ()
// Parameters:
// class AINSSoldier*             SoldierPawn                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                 ShotFromDirection              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSGameMode::OnSoldierTakePointDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType, const struct FHitResult& HitInfo, const struct FVector& ShotFromDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnSoldierTakePointDamage");

	AINSGameMode_OnSoldierTakePointDamage_Params params;
	params.SoldierPawn = SoldierPawn;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;
	params.HitInfo = HitInfo;
	params.ShotFromDirection = ShotFromDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.OnSoldierTakeAnyDamage
// ()
// Parameters:
// class AINSSoldier*             SoldierPawn                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSGameMode::OnSoldierTakeAnyDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnSoldierTakeAnyDamage");

	AINSGameMode_OnSoldierTakeAnyDamage_Params params;
	params.SoldierPawn = SoldierPawn;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.OnScenarioSublevelLoaded
// ()
void AINSGameMode::OnScenarioSublevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnScenarioSublevelLoaded");

	AINSGameMode_OnScenarioSublevelLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnObjectiveDestroyed
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Attackers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnObjectiveDestroyed");

	AINSGameMode_OnObjectiveDestroyed_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Attackers = Attackers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnObjectiveChangeOwnership
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  PreviousOwner                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnObjectiveChangeOwnership(class AObjectiveBase* Objective, unsigned char PreviousOwner, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnObjectiveChangeOwnership");

	AINSGameMode_OnObjectiveChangeOwnership_Params params;
	params.Objective = Objective;
	params.PreviousOwner = PreviousOwner;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnObjectiveBeginRig
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Rigger                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnObjectiveBeginRig(class AObjectiveDestructible* Objective, class AINSSoldier* Rigger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnObjectiveBeginRig");

	AINSGameMode_OnObjectiveBeginRig_Params params;
	params.Objective = Objective;
	params.Rigger = Rigger;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnLoadedRulesets
// ()
void AINSGameMode::OnLoadedRulesets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnLoadedRulesets");

	AINSGameMode_OnLoadedRulesets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnLoadedMutators
// ()
void AINSGameMode::OnLoadedMutators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnLoadedMutators");

	AINSGameMode_OnLoadedMutators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnFireSupportCalled
// ()
// Parameters:
// class AFireSupportBase*        FireSupportActor               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             OfficerController              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             ObserverController             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnFireSupportCalled(class AFireSupportBase* FireSupportActor, class AController* OfficerController, class AController* ObserverController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnFireSupportCalled");

	AINSGameMode_OnFireSupportCalled_Params params;
	params.FireSupportActor = FireSupportActor;
	params.OfficerController = OfficerController;
	params.ObserverController = ObserverController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnFirearmFired
// ()
// Parameters:
// class AItemFirearm*            Firearm                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ShootDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnFirearmFired(class AItemFirearm* Firearm, const struct FVector& Origin, const struct FVector& ShootDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnFirearmFired");

	AINSGameMode_OnFirearmFired_Params params;
	params.Firearm = Firearm;
	params.Origin = Origin;
	params.ShootDir = ShootDir;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnEnterInitialMatchState
// ()
void AINSGameMode::OnEnterInitialMatchState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnEnterInitialMatchState");

	AINSGameMode_OnEnterInitialMatchState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnCaptureObjectiveStartCapture
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnCaptureObjectiveStartCapture(class AObjectiveCapturable* Objective, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnCaptureObjectiveStartCapture");

	AINSGameMode_OnCaptureObjectiveStartCapture_Params params;
	params.Objective = Objective;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnCaptureObjectiveProgressTick
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  CapturingTeamId                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamWithMostPlayersId          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Tickers                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnCaptureObjectiveProgressTick(class AObjectiveCapturable* Objective, unsigned char CapturingTeamId, unsigned char TeamWithMostPlayersId, TArray<class AINSPlayerState*> Tickers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnCaptureObjectiveProgressTick");

	AINSGameMode_OnCaptureObjectiveProgressTick_Params params;
	params.Objective = Objective;
	params.CapturingTeamId = CapturingTeamId;
	params.TeamWithMostPlayersId = TeamWithMostPlayersId;
	params.Tickers = Tickers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnCaptureObjectiveProgressReset
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Resetters                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxCaptureProgress             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnCaptureObjectiveProgressReset(class AObjectiveCapturable* Objective, TArray<class AINSPlayerState*> Resetters, float MaxCaptureProgress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnCaptureObjectiveProgressReset");

	AINSGameMode_OnCaptureObjectiveProgressReset_Params params;
	params.Objective = Objective;
	params.Resetters = Resetters;
	params.MaxCaptureProgress = MaxCaptureProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnCaptureObjectiveChangeOwnership
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSPlayerState*> Capturers                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnCaptureObjectiveChangeOwnership(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnCaptureObjectiveChangeOwnership");

	AINSGameMode_OnCaptureObjectiveChangeOwnership_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;
	params.Capturers = Capturers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnCaptureObjectiveBeginOverlap
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Overlapper                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::OnCaptureObjectiveBeginOverlap(class AObjectiveCapturable* Objective, class AINSSoldier* Overlapper)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnCaptureObjectiveBeginOverlap");

	AINSGameMode_OnCaptureObjectiveBeginOverlap_Params params;
	params.Objective = Objective;
	params.Overlapper = Overlapper;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.OnCanBeDropped
// ()
// Parameters:
// class AItemBase*               Item                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             ItemOwner                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanDrop                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::OnCanBeDropped(class AItemBase* Item, class AINSSoldier* ItemOwner, bool* bCanDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.OnCanBeDropped");

	AINSGameMode_OnCanBeDropped_Params params;
	params.Item = Item;
	params.ItemOwner = ItemOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (bCanDrop != nullptr)
		*bCanDrop = params.bCanDrop;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.NeedsBots
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::NeedsBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.NeedsBots");

	AINSGameMode_NeedsBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.IsUsingOfficialRuleset
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::IsUsingOfficialRuleset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.IsUsingOfficialRuleset");

	AINSGameMode_IsUsingOfficialRuleset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.IsNightLightingLoaded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::IsNightLightingLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.IsNightLightingLoaded");

	AINSGameMode_IsNightLightingLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.IsMutatedMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::IsMutatedMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.IsMutatedMode");

	AINSGameMode_IsMutatedMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.IsFinalObjective
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::IsFinalObjective(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.IsFinalObjective");

	AINSGameMode_IsFinalObjective_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.IsCenterObjective
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::IsCenterObjective(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.IsCenterObjective");

	AINSGameMode_IsCenterObjective_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.IsAttackDefend
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::IsAttackDefend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.IsAttackDefend");

	AINSGameMode_IsAttackDefend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.HasEnabledSpawnZones
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::HasEnabledSpawnZones(unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.HasEnabledSpawnZones");

	AINSGameMode_HasEnabledSpawnZones_Params params;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GiveSoldierInventory
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromResupply                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::GiveSoldierInventory(class AINSSoldier* Player, bool bFromResupply)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GiveSoldierInventory");

	AINSGameMode_GiveSoldierInventory_Params params;
	params.Player = Player;
	params.bFromResupply = bFromResupply;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.GetTheaterDefinition
// ()
// Parameters:
// class UTheaterDefinition*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTheaterDefinition* AINSGameMode::GetTheaterDefinition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetTheaterDefinition");

	AINSGameMode_GetTheaterDefinition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetTeam
// ()
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSGameMode::GetTeam(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetTeam");

	AINSGameMode_GetTeam_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetSquadLayoutForFaction
// ()
// Parameters:
// class UFactionDefinition*      Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USquadLayout*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USquadLayout* AINSGameMode::GetSquadLayoutForFaction(class UFactionDefinition* Faction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetSquadLayoutForFaction");

	AINSGameMode_GetSquadLayoutForFaction_Params params;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetScoringFor
// ()
// Parameters:
// struct FName                   ScoreableAction                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::GetScoringFor(const struct FName& ScoreableAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetScoringFor");

	AINSGameMode_GetScoringFor_Params params;
	params.ScoreableAction = ScoreableAction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetPropertyValueAsString
// ()
// Parameters:
// struct FName                   PropertyName                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 OutPropertyValue               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::GetPropertyValueAsString(const struct FName& PropertyName, struct FString* OutPropertyValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetPropertyValueAsString");

	AINSGameMode_GetPropertyValueAsString_Params params;
	params.PropertyName = PropertyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPropertyValue != nullptr)
		*OutPropertyValue = params.OutPropertyValue;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetPropertyValueAsFloat
// ()
// Parameters:
// struct FName                   PropertyName                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutPropertyValue               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::GetPropertyValueAsFloat(const struct FName& PropertyName, float* OutPropertyValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetPropertyValueAsFloat");

	AINSGameMode_GetPropertyValueAsFloat_Params params;
	params.PropertyName = PropertyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPropertyValue != nullptr)
		*OutPropertyValue = params.OutPropertyValue;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetObjectiveCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::GetObjectiveCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetObjectiveCount");

	AINSGameMode_GetObjectiveCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetObjective
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSGameMode::GetObjective(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetObjective");

	AINSGameMode_GetObjective_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetMutatorShortNames
// ()
// Parameters:
// TArray<struct FName>           OutNames                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::GetMutatorShortNames(TArray<struct FName>* OutNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetMutatorShortNames");

	AINSGameMode_GetMutatorShortNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutNames != nullptr)
		*OutNames = params.OutNames;

}


// Function Insurgency.INSGameMode.GetInactiveObjectives
// ()
// Parameters:
// TArray<class AObjectiveBase*>  OutObjectives                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::GetInactiveObjectives(TArray<class AObjectiveBase*>* OutObjectives)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetInactiveObjectives");

	AINSGameMode_GetInactiveObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutObjectives != nullptr)
		*OutObjectives = params.OutObjectives;

}


// Function Insurgency.INSGameMode.GetFirstObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSGameMode::GetFirstObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetFirstObjective");

	AINSGameMode_GetFirstObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetFirstActiveObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSGameMode::GetFirstActiveObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetFirstActiveObjective");

	AINSGameMode_GetFirstActiveObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetFinalObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSGameMode::GetFinalObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetFinalObjective");

	AINSGameMode_GetFinalObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetDestructibleObjective
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveDestructible*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveDestructible* AINSGameMode::GetDestructibleObjective(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetDestructibleObjective");

	AINSGameMode_GetDestructibleObjective_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetDefendingTeam
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSGameMode::GetDefendingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetDefendingTeam");

	AINSGameMode_GetDefendingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetCenterObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSGameMode::GetCenterObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetCenterObjective");

	AINSGameMode_GetCenterObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetCapturableObjective
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveCapturable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveCapturable* AINSGameMode::GetCapturableObjective(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetCapturableObjective");

	AINSGameMode_GetCapturableObjective_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetAttackingTeam
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSGameMode::GetAttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetAttackingTeam");

	AINSGameMode_GetAttackingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetAIDirector
// ()
// Parameters:
// class UINSAIDirector*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSAIDirector* AINSGameMode::GetAIDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetAIDirector");

	AINSGameMode_GetAIDirector_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.GetActiveObjectives
// ()
// Parameters:
// TArray<class AObjectiveBase*>  OutObjectives                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::GetActiveObjectives(TArray<class AObjectiveBase*>* OutObjectives)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetActiveObjectives");

	AINSGameMode_GetActiveObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutObjectives != nullptr)
		*OutObjectives = params.OutObjectives;

}


// Function Insurgency.INSGameMode.GetActiveObjectiveCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSGameMode::GetActiveObjectiveCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.GetActiveObjectiveCount");

	AINSGameMode_GetActiveObjectiveCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.DisableSpawns
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::DisableSpawns(unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.DisableSpawns");

	AINSGameMode_DisableSpawns_Params params;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.DisableAllActiveObjectives
// ()
// Parameters:
// bool                           bHideFromHud                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::DisableAllActiveObjectives(bool bHideFromHud)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.DisableAllActiveObjectives");

	AINSGameMode_DisableAllActiveObjectives_Params params;
	params.bHideFromHud = bHideFromHud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.ChangeTeam
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewTeamId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSuicideIfAlive                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::ChangeTeam(class AController* Controller, unsigned char NewTeamId, bool bForce, bool bSuicideIfAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.ChangeTeam");

	AINSGameMode_ChangeTeam_Params params;
	params.Controller = Controller;
	params.NewTeamId = NewTeamId;
	params.bForce = bForce;
	params.bSuicideIfAlive = bSuicideIfAlive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.CanUseMutator
// ()
// Parameters:
// class UClass*                  MutatorClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::CanUseMutator(class UClass* MutatorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.CanUseMutator");

	AINSGameMode_CanUseMutator_Params params;
	params.MutatorClass = MutatorClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.CancelPendingRespawns
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::CancelPendingRespawns(unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.CancelPendingRespawns");

	AINSGameMode_CancelPendingRespawns_Params params;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastTextMessageTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastTextMessageTeam(unsigned char TeamId, const struct FText& Message, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastTextMessageTeam");

	AINSGameMode_BroadcastTextMessageTeam_Params params;
	params.TeamId = TeamId;
	params.Message = Message;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastTextMessageAllPlayers
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastTextMessageAllPlayers(const struct FText& Message, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastTextMessageAllPlayers");

	AINSGameMode_BroadcastTextMessageAllPlayers_Params params;
	params.Message = Message;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastTeamResponseEvent
// ()
// Parameters:
// struct FCharacterResponseRequest Request                        (Parm, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             SpeakingSoldier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPrioritizeFirst               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastTeamResponseEvent(const struct FCharacterResponseRequest& Request, unsigned char TeamId, class AINSSoldier* SpeakingSoldier, float Delay, bool bPrioritizeFirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastTeamResponseEvent");

	AINSGameMode_BroadcastTeamResponseEvent_Params params;
	params.Request = Request;
	params.TeamId = TeamId;
	params.SpeakingSoldier = SpeakingSoldier;
	params.Delay = Delay;
	params.bPrioritizeFirst = bPrioritizeFirst;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastTeamRadioEvent
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   SubtitleText                   (Parm, NativeAccessSpecifierPublic)
// class AActor*                  AssociatedActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOnlyOfficerAndObserver        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPrioritizeFirst               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          QueuedTimeout                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastTeamRadioEvent(class UAkAudioEvent* Event, unsigned char TeamId, const struct FText& SubtitleText, class AActor* AssociatedActor, bool bInterrupt, float Delay, bool bOnlyOfficerAndObserver, bool bPrioritizeFirst, float QueuedTimeout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastTeamRadioEvent");

	AINSGameMode_BroadcastTeamRadioEvent_Params params;
	params.Event = Event;
	params.TeamId = TeamId;
	params.SubtitleText = SubtitleText;
	params.AssociatedActor = AssociatedActor;
	params.bInterrupt = bInterrupt;
	params.Delay = Delay;
	params.bOnlyOfficerAndObserver = bOnlyOfficerAndObserver;
	params.bPrioritizeFirst = bPrioritizeFirst;
	params.QueuedTimeout = QueuedTimeout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastTeamMusicEvent
// ()
// Parameters:
// EMusicEvent                    Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeSpectators             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastTeamMusicEvent(EMusicEvent Event, unsigned char TeamId, bool bIncludeSpectators)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastTeamMusicEvent");

	AINSGameMode_BroadcastTeamMusicEvent_Params params;
	params.Event = Event;
	params.TeamId = TeamId;
	params.bIncludeSpectators = bIncludeSpectators;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastStationResponse
// ()
// Parameters:
// EStationResponse               StationResponse                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  AssociatedActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOnlyOfficerAndObserver        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastStationResponse(EStationResponse StationResponse, unsigned char TeamId, class AActor* AssociatedActor, bool bInterrupt, float Delay, bool bOnlyOfficerAndObserver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastStationResponse");

	AINSGameMode_BroadcastStationResponse_Params params;
	params.StationResponse = StationResponse;
	params.TeamId = TeamId;
	params.AssociatedActor = AssociatedActor;
	params.bInterrupt = bInterrupt;
	params.Delay = Delay;
	params.bOnlyOfficerAndObserver = bOnlyOfficerAndObserver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastMusicEvent
// ()
// Parameters:
// EMusicEvent                    Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastMusicEvent(EMusicEvent Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastMusicEvent");

	AINSGameMode_BroadcastMusicEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastCenterMessageTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastCenterMessageTeam(unsigned char TeamId, const struct FText& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastCenterMessageTeam");

	AINSGameMode_BroadcastCenterMessageTeam_Params params;
	params.TeamId = TeamId;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BroadcastCenterMessageAllPlayers
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSGameMode::BroadcastCenterMessageAllPlayers(const struct FText& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BroadcastCenterMessageAllPlayers");

	AINSGameMode_BroadcastCenterMessageAllPlayers_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BlueprintOnSoldierKilled
// ()
// Parameters:
// class AINSSoldier*             SoldierPawn                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Assister                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BlueprintOnSoldierKilled(class AINSSoldier* SoldierPawn, float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AController* Assister, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BlueprintOnSoldierKilled");

	AINSGameMode_BlueprintOnSoldierKilled_Params params;
	params.SoldierPawn = SoldierPawn;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.Assister = Assister;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BlueprintOnPlayerScoreChanged
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NewScore                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            IncrementAmount                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncrementedTeam               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::BlueprintOnPlayerScoreChanged(class AINSPlayerState* PlayerState, int NewScore, int IncrementAmount, bool bIncrementedTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BlueprintOnPlayerScoreChanged");

	AINSGameMode_BlueprintOnPlayerScoreChanged_Params params;
	params.PlayerState = PlayerState;
	params.NewScore = NewScore;
	params.IncrementAmount = IncrementAmount;
	params.bIncrementedTeam = bIncrementedTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.BlueprintFactionsInitialized
// ()
void AINSGameMode::BlueprintFactionsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.BlueprintFactionsInitialized");

	AINSGameMode_BlueprintFactionsInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.AssignPawnTeam
// ()
// Parameters:
// class APawn*                   Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::AssignPawnTeam(class APawn* Soldier, class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.AssignPawnTeam");

	AINSGameMode_AssignPawnTeam_Params params;
	params.Soldier = Soldier;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.AllowObjectiveFullCapture
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          OutBlockedBy                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSGameMode::AllowObjectiveFullCapture(class AObjectiveCapturable* Objective, class AObjectiveBase** OutBlockedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.AllowObjectiveFullCapture");

	AINSGameMode_AllowObjectiveFullCapture_Params params;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutBlockedBy != nullptr)
		*OutBlockedBy = params.OutBlockedBy;


	return params.ReturnValue;
}


// Function Insurgency.INSGameMode.AdvanceSpawns
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameMode::AdvanceSpawns(unsigned char ObjectiveId, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.AdvanceSpawns");

	AINSGameMode_AdvanceSpawns_Params params;
	params.ObjectiveId = ObjectiveId;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameMode.AdjustObjectiveCaptureSpeed
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamWithMostPlayers            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            PlayerDifference               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Defenders                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSGameMode::AdjustObjectiveCaptureSpeed(class AObjectiveCapturable* Objective, unsigned char TeamWithMostPlayers, int PlayerDifference, int Defenders)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameMode.AdjustObjectiveCaptureSpeed");

	AINSGameMode_AdjustObjectiveCaptureSpeed_Params params;
	params.Objective = Objective;
	params.TeamWithMostPlayers = TeamWithMostPlayers;
	params.PlayerDifference = PlayerDifference;
	params.Defenders = Defenders;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSGameMode::AfterRead()
{
	AGameMode::AfterRead();

	READ_PTR_FULL(INSGameState, AINSGameState);
	READ_PTR_FULL(Scenario, UScenarioBase);
	READ_PTR_FULL(ScenarioDataClass, UClass);
	READ_PTR_FULL(LoadedOverrideTheaterDefinition, UTheaterDefinition);
	READ_PTR_FULL(OverrideSquadLayoutAllFactions, USquadLayout);
	READ_PTR_FULL(TeamInfoClass, UClass);
	READ_PTR_FULL(AIDirector, UINSAIDirector);
	READ_PTR_FULL(StatsManager, UStatisticsManager);
}

void AINSGameMode::BeforeDelete()
{
	AGameMode::BeforeDelete();

	DELE_PTR_FULL(INSGameState);
	DELE_PTR_FULL(Scenario);
	DELE_PTR_FULL(ScenarioDataClass);
	DELE_PTR_FULL(LoadedOverrideTheaterDefinition);
	DELE_PTR_FULL(OverrideSquadLayoutAllFactions);
	DELE_PTR_FULL(TeamInfoClass);
	DELE_PTR_FULL(AIDirector);
	DELE_PTR_FULL(StatsManager);
}

// Function Insurgency.INSMultiplayerMode.UpdateVoiceChatChannelFlagsForPlayer
// ()
// Parameters:
// class AINSPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::UpdateVoiceChatChannelFlagsForPlayer(class AINSPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.UpdateVoiceChatChannelFlagsForPlayer");

	AINSMultiplayerMode_UpdateVoiceChatChannelFlagsForPlayer_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.UpdateVoiceChatChannelFlagsForAll
// ()
void AINSMultiplayerMode::UpdateVoiceChatChannelFlagsForAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.UpdateVoiceChatChannelFlagsForAll");

	AINSMultiplayerMode_UpdateVoiceChatChannelFlagsForAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.SetTransitionTimer
// ()
// Parameters:
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::SetTransitionTimer(float Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.SetTransitionTimer");

	AINSMultiplayerMode_SetTransitionTimer_Params params;
	params.Timer = Timer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.SetSubMatchState
// ()
// Parameters:
// struct FName                   NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::SetSubMatchState(const struct FName& NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.SetSubMatchState");

	AINSMultiplayerMode_SetSubMatchState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.SetRoundTimer
// ()
// Parameters:
// int                            Timer                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::SetRoundTimer(int Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.SetRoundTimer");

	AINSMultiplayerMode_SetRoundTimer_Params params;
	params.Timer = Timer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.SetNeutralSpawnZones
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::SetNeutralSpawnZones(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.SetNeutralSpawnZones");

	AINSMultiplayerMode_SetNeutralSpawnZones_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.ScorePlayerStart
// ()
// Parameters:
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerStart*            PlayerStart                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSMultiplayerMode::ScorePlayerStart(class AController* Player, class APlayerStart* PlayerStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.ScorePlayerStart");

	AINSMultiplayerMode_ScorePlayerStart_Params params;
	params.Player = Player;
	params.PlayerStart = PlayerStart;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.INSMultiplayerMode.RoundStateChangeDelegate__DelegateSignature
// ()
void AINSMultiplayerMode::RoundStateChangeDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSMultiplayerMode.RoundStateChangeDelegate__DelegateSignature");

	AINSMultiplayerMode_RoundStateChangeDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RoundRestart
// ()
void AINSMultiplayerMode::RoundRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RoundRestart");

	AINSMultiplayerMode_RoundRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RoundReset
// ()
void AINSMultiplayerMode::RoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RoundReset");

	AINSMultiplayerMode_RoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RoundOverDraw
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::RoundOverDraw(ERoundConclusion RoundEndReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RoundOverDraw");

	AINSMultiplayerMode_RoundOverDraw_Params params;
	params.RoundEndReason = RoundEndReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RoundOverByTeam
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               TeamInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::RoundOverByTeam(ERoundConclusion RoundEndReason, class ATeamInfo* TeamInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RoundOverByTeam");

	AINSMultiplayerMode_RoundOverByTeam_Params params;
	params.RoundEndReason = RoundEndReason;
	params.TeamInfo = TeamInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RoundOver
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::RoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RoundOver");

	AINSMultiplayerMode_RoundOver_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RoundActiveTick
// ()
void AINSMultiplayerMode::RoundActiveTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RoundActiveTick");

	AINSMultiplayerMode_RoundActiveTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.RespawnAllBots
// ()
void AINSMultiplayerMode::RespawnAllBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.RespawnAllBots");

	AINSMultiplayerMode_RespawnAllBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.ResetRoundWins
// ()
// Parameters:
// bool                           bResetScores                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::ResetRoundWins(bool bResetScores)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.ResetRoundWins");

	AINSMultiplayerMode_ResetRoundWins_Params params;
	params.bResetScores = bResetScores;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.PlayObjectiveAnnouncement
// ()
// Parameters:
// class UAkAudioEvent*           Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::PlayObjectiveAnnouncement(class UAkAudioEvent* Sound, int ObjectiveId, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.PlayObjectiveAnnouncement");

	AINSMultiplayerMode_PlayObjectiveAnnouncement_Params params;
	params.Sound = Sound;
	params.ObjectiveId = ObjectiveId;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.PlayAnnouncement
// ()
// Parameters:
// class UAkAudioEvent*           Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::PlayAnnouncement(class UAkAudioEvent* Sound, unsigned char TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.PlayAnnouncement");

	AINSMultiplayerMode_PlayAnnouncement_Params params;
	params.Sound = Sound;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnUpdateServerSettings
// ()
// Parameters:
// class AINSMultiplayerGameState* InMultiplayerGameState         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnUpdateServerSettings(class AINSMultiplayerGameState* InMultiplayerGameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnUpdateServerSettings");

	AINSMultiplayerMode_OnUpdateServerSettings_Params params;
	params.InMultiplayerGameState = InMultiplayerGameState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnTeamChanged
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewTeamId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDidKillPlayer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnTeamChanged(class AController* Controller, unsigned char NewTeamId, bool bForced, bool bDidKillPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnTeamChanged");

	AINSMultiplayerMode_OnTeamChanged_Params params;
	params.Controller = Controller;
	params.NewTeamId = NewTeamId;
	params.bForced = bForced;
	params.bDidKillPlayer = bDidKillPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnRoundTimerExpired
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::OnRoundTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnRoundTimerExpired");

	AINSMultiplayerMode_OnRoundTimerExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.OnRoundStarted
// ()
void AINSMultiplayerMode::OnRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnRoundStarted");

	AINSMultiplayerMode_OnRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnRoundReset
// ()
void AINSMultiplayerMode::OnRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnRoundReset");

	AINSMultiplayerMode_OnRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSMultiplayerMode.OnRoundOverDelegate__DelegateSignature
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnRoundOverDelegate__DelegateSignature(ERoundConclusion RoundEndReason, unsigned char WinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSMultiplayerMode.OnRoundOverDelegate__DelegateSignature");

	AINSMultiplayerMode_OnRoundOverDelegate__DelegateSignature_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnRoundOver
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnRoundOver");

	AINSMultiplayerMode_OnRoundOver_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnResetObjectives
// ()
void AINSMultiplayerMode::OnResetObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnResetObjectives");

	AINSMultiplayerMode_OnResetObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnPreRoundStarted
// ()
void AINSMultiplayerMode::OnPreRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnPreRoundStarted");

	AINSMultiplayerMode_OnPreRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnPreRoundPreReset
// ()
void AINSMultiplayerMode::OnPreRoundPreReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnPreRoundPreReset");

	AINSMultiplayerMode_OnPreRoundPreReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnPlayerConfirmedLoadout
// ()
// Parameters:
// class AINSPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWasAlreadyConfirmed           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnPlayerConfirmedLoadout(class AINSPlayerController* PlayerController, bool bWasAlreadyConfirmed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnPlayerConfirmedLoadout");

	AINSMultiplayerMode_OnPlayerConfirmedLoadout_Params params;
	params.PlayerController = PlayerController;
	params.bWasAlreadyConfirmed = bWasAlreadyConfirmed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnPlayerClassAssigned
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnPlayerClassAssigned(class AController* Controller, class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnPlayerClassAssigned");

	AINSMultiplayerMode_OnPlayerClassAssigned_Params params;
	params.Controller = Controller;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnPlayerBecomeSpectator
// ()
// Parameters:
// class AINSPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::OnPlayerBecomeSpectator(class AINSPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnPlayerBecomeSpectator");

	AINSMultiplayerMode_OnPlayerBecomeSpectator_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.OnInitObjectives
// ()
void AINSMultiplayerMode::OnInitObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnInitObjectives");

	AINSMultiplayerMode_OnInitObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSMultiplayerMode.OnHeroCaptureDelegate__DelegateSignature
// ()
// Parameters:
// class AINSPlayerState*         HeroPlayer                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnHeroCaptureDelegate__DelegateSignature(class AINSPlayerState* HeroPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSMultiplayerMode.OnHeroCaptureDelegate__DelegateSignature");

	AINSMultiplayerMode_OnHeroCaptureDelegate__DelegateSignature_Params params;
	params.HeroPlayer = HeroPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.OnGameStatsRoundSubmitted
// ()
// Parameters:
// struct FGameStatsRoundRewards  Rewards                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            RoundNumber                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::OnGameStatsRoundSubmitted(const struct FGameStatsRoundRewards& Rewards, int RoundNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.OnGameStatsRoundSubmitted");

	AINSMultiplayerMode_OnGameStatsRoundSubmitted_Params params;
	params.Rewards = Rewards;
	params.RoundNumber = RoundNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.IsValidPlayerStart
// ()
// Parameters:
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerStart*            Start                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsValidPlayerStart(class AController* Player, class APlayerStart* Start)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsValidPlayerStart");

	AINSMultiplayerMode_IsValidPlayerStart_Params params;
	params.Player = Player;
	params.Start = Start;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsSingleRoundMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsSingleRoundMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsSingleRoundMode");

	AINSMultiplayerMode_IsSingleRoundMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsRoundRunning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsRoundRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsRoundRunning");

	AINSMultiplayerMode_IsRoundRunning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsRoundExpired
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsRoundExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsRoundExpired");

	AINSMultiplayerMode_IsRoundExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsPreRound
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsPreRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsPreRound");

	AINSMultiplayerMode_IsPreRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsPlayerStartEnabled
// ()
// Parameters:
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerStart*            Start                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsPlayerStartEnabled(class AController* Player, class APlayerStart* Start)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsPlayerStartEnabled");

	AINSMultiplayerMode_IsPlayerStartEnabled_Params params;
	params.Player = Player;
	params.Start = Start;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsGameOver
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsGameOver");

	AINSMultiplayerMode_IsGameOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsCoop
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsCoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsCoop");

	AINSMultiplayerMode_IsCoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.IsArcade
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::IsArcade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IsArcade");

	AINSMultiplayerMode_IsArcade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.InvalidateRoundTimer
// ()
void AINSMultiplayerMode::InvalidateRoundTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.InvalidateRoundTimer");

	AINSMultiplayerMode_InvalidateRoundTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.IncrementTeamPointsById
// ()
// Parameters:
// unsigned char                  TeamId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckWinningConditions        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::IncrementTeamPointsById(unsigned char TeamId, int Amount, bool bCheckWinningConditions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IncrementTeamPointsById");

	AINSMultiplayerMode_IncrementTeamPointsById_Params params;
	params.TeamId = TeamId;
	params.Amount = Amount;
	params.bCheckWinningConditions = bCheckWinningConditions;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.IncrementTeamPoints
// ()
// Parameters:
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckWinningConditions        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::IncrementTeamPoints(class ATeamInfo* Team, int Amount, bool bCheckWinningConditions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.IncrementTeamPoints");

	AINSMultiplayerMode_IncrementTeamPoints_Params params;
	params.Team = Team;
	params.Amount = Amount;
	params.bCheckWinningConditions = bCheckWinningConditions;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.GetVoiceChatChannelFlagsForPlayer
// ()
// Parameters:
// class AINSPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVoiceChatChannelFlags         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EVoiceChatChannelFlags AINSMultiplayerMode::GetVoiceChatChannelFlagsForPlayer(class AINSPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetVoiceChatChannelFlagsForPlayer");

	AINSMultiplayerMode_GetVoiceChatChannelFlagsForPlayer_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetTeamWithMostPoints
// ()
// Parameters:
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSMultiplayerMode::GetTeamWithMostPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetTeamWithMostPoints");

	AINSMultiplayerMode_GetTeamWithMostPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetTeamWithMajorityControl
// ()
// Parameters:
// bool                           bIncludeContested              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSMultiplayerMode::GetTeamWithMajorityControl(bool bIncludeContested)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetTeamWithMajorityControl");

	AINSMultiplayerMode_GetTeamWithMajorityControl_Params params;
	params.bIncludeContested = bIncludeContested;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetRoundTimer
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSMultiplayerMode::GetRoundTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetRoundTimer");

	AINSMultiplayerMode_GetRoundTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetRoundTimeElapsed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSMultiplayerMode::GetRoundTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetRoundTimeElapsed");

	AINSMultiplayerMode_GetRoundTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetRoundsPlayed
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSMultiplayerMode::GetRoundsPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetRoundsPlayed");

	AINSMultiplayerMode_GetRoundsPlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetRoundOverText
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningTeam                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutText                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::GetRoundOverText(ERoundConclusion RoundEndReason, unsigned char WinningTeam, struct FText* OutText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetRoundOverText");

	AINSMultiplayerMode_GetRoundOverText_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningTeam = WinningTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutText != nullptr)
		*OutText = params.OutText;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetRoundNumber
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSMultiplayerMode::GetRoundNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetRoundNumber");

	AINSMultiplayerMode_GetRoundNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetPlayerClassForBot
// ()
// Parameters:
// class AINSAISoldierController* Bot                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerClass* AINSMultiplayerMode::GetPlayerClassForBot(class AINSAISoldierController* Bot, class ATeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetPlayerClassForBot");

	AINSMultiplayerMode_GetPlayerClassForBot_Params params;
	params.Bot = Bot;
	params.Team = Team;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetNumObjectivesOwnedForTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeContested              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSMultiplayerMode::GetNumObjectivesOwnedForTeam(unsigned char TeamId, bool bIncludeContested)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetNumObjectivesOwnedForTeam");

	AINSMultiplayerMode_GetNumObjectivesOwnedForTeam_Params params;
	params.TeamId = TeamId;
	params.bIncludeContested = bIncludeContested;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetNumObjectivesContested
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSMultiplayerMode::GetNumObjectivesContested()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetNumObjectivesContested");

	AINSMultiplayerMode_GetNumObjectivesContested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetDefaultWinningTeam
// ()
// Parameters:
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSMultiplayerMode::GetDefaultWinningTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetDefaultWinningTeam");

	AINSMultiplayerMode_GetDefaultWinningTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.GetAutoAssignPlayerClass
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamInfo*               DesiredTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOutPromptLoadoutMenu          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerClass* AINSMultiplayerMode::GetAutoAssignPlayerClass(class AController* Controller, class ATeamInfo* DesiredTeam, bool* bOutPromptLoadoutMenu)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.GetAutoAssignPlayerClass");

	AINSMultiplayerMode_GetAutoAssignPlayerClass_Params params;
	params.Controller = Controller;
	params.DesiredTeam = DesiredTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (bOutPromptLoadoutMenu != nullptr)
		*bOutPromptLoadoutMenu = params.bOutPromptLoadoutMenu;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.FreezePlayers
// ()
// Parameters:
// bool                           bFrozen                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::FreezePlayers(bool bFrozen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.FreezePlayers");

	AINSMultiplayerMode_FreezePlayers_Params params;
	params.bFrozen = bFrozen;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.ExtendRoundTimer
// ()
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::ExtendRoundTimer(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.ExtendRoundTimer");

	AINSMultiplayerMode_ExtendRoundTimer_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.DefaultRoundExpiry
// ()
void AINSMultiplayerMode::DefaultRoundExpiry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.DefaultRoundExpiry");

	AINSMultiplayerMode_DefaultRoundExpiry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.ClearTransitionTimer
// ()
void AINSMultiplayerMode::ClearTransitionTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.ClearTransitionTimer");

	AINSMultiplayerMode_ClearTransitionTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.ClearPendingWaves
// ()
void AINSMultiplayerMode::ClearPendingWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.ClearPendingWaves");

	AINSMultiplayerMode_ClearPendingWaves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.ClearLastOneStanding
// ()
// Parameters:
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::ClearLastOneStanding(class ATeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.ClearLastOneStanding");

	AINSMultiplayerMode_ClearLastOneStanding_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckTeamEliminationSingleLife
// ()
void AINSMultiplayerMode::CheckTeamEliminationSingleLife()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckTeamEliminationSingleLife");

	AINSMultiplayerMode_CheckTeamEliminationSingleLife_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckSupplyReward
// ()
// Parameters:
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::CheckSupplyReward(class AINSPlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckSupplyReward");

	AINSMultiplayerMode_CheckSupplyReward_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckPointsWinningConditions
// ()
void AINSMultiplayerMode::CheckPointsWinningConditions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckPointsWinningConditions");

	AINSMultiplayerMode_CheckPointsWinningConditions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckIdlePlayers
// ()
void AINSMultiplayerMode::CheckIdlePlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckIdlePlayers");

	AINSMultiplayerMode_CheckIdlePlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckFullCapture
// ()
void AINSMultiplayerMode::CheckFullCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckFullCapture");

	AINSMultiplayerMode_CheckFullCapture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckForLastPersonStanding
// ()
// Parameters:
// class ATeamInfo*               Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::CheckForLastPersonStanding(class ATeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckForLastPersonStanding");

	AINSMultiplayerMode_CheckForLastPersonStanding_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheckEliminationRules
// ()
void AINSMultiplayerMode::CheckEliminationRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheckEliminationRules");

	AINSMultiplayerMode_CheckEliminationRules_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.CheatCaptureObjective
// ()
void AINSMultiplayerMode::CheatCaptureObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.CheatCaptureObjective");

	AINSMultiplayerMode_CheatCaptureObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.BenchmarkOnGameHealthSnapshot
// ()
void AINSMultiplayerMode::BenchmarkOnGameHealthSnapshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.BenchmarkOnGameHealthSnapshot");

	AINSMultiplayerMode_BenchmarkOnGameHealthSnapshot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.BalanceTeams
// ()
void AINSMultiplayerMode::BalanceTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.BalanceTeams");

	AINSMultiplayerMode_BalanceTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.AwardTeamSupply
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SupplyAmount                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSMultiplayerMode::AwardTeamSupply(unsigned char TeamId, int SupplyAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AwardTeamSupply");

	AINSMultiplayerMode_AwardTeamSupply_Params params;
	params.TeamId = TeamId;
	params.SupplyAmount = SupplyAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMultiplayerMode.AutoAssignTeam
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSMultiplayerMode::AutoAssignTeam(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AutoAssignTeam");

	AINSMultiplayerMode_AutoAssignTeam_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.AtWinningCondition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::AtWinningCondition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AtWinningCondition");

	AINSMultiplayerMode_AtWinningCondition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.AtOvertimeCondition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::AtOvertimeCondition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AtOvertimeCondition");

	AINSMultiplayerMode_AtOvertimeCondition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.AtGameOverCondition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::AtGameOverCondition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AtGameOverCondition");

	AINSMultiplayerMode_AtGameOverCondition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.AreTeamsCurrentlyUnbalanced
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::AreTeamsCurrentlyUnbalanced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AreTeamsCurrentlyUnbalanced");

	AINSMultiplayerMode_AreTeamsCurrentlyUnbalanced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSMultiplayerMode.AreAnyObjectivesContested
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSMultiplayerMode::AreAnyObjectivesContested()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMultiplayerMode.AreAnyObjectivesContested");

	AINSMultiplayerMode_AreAnyObjectivesContested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSMultiplayerMode::AfterRead()
{
	AINSGameMode::AfterRead();

	READ_PTR_FULL(MultiplayerGameState, AINSMultiplayerGameState);
	READ_PTR_FULL(MultiplayerScenario, UScenarioMultiplayer);
	READ_PTR_FULL(GameStatsMatchSession, UGameStatsSession);
}

void AINSMultiplayerMode::BeforeDelete()
{
	AINSGameMode::BeforeDelete();

	DELE_PTR_FULL(MultiplayerGameState);
	DELE_PTR_FULL(MultiplayerScenario);
	DELE_PTR_FULL(GameStatsMatchSession);
}

// Function Insurgency.INSCoopMode.StartAlarms
// ()
void AINSCoopMode::StartAlarms()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCoopMode.StartAlarms");

	AINSCoopMode_StartAlarms_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCoopMode.RetreatBotsFromObjective
// ()
// Parameters:
// class AObjectiveBase*          RetreatObjective               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCoopMode::RetreatBotsFromObjective(class AObjectiveBase* RetreatObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCoopMode.RetreatBotsFromObjective");

	AINSCoopMode_RetreatBotsFromObjective_Params params;
	params.RetreatObjective = RetreatObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCoopMode.OnAllHumanPlayersEliminated
// ()
void AINSCoopMode::OnAllHumanPlayersEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCoopMode.OnAllHumanPlayersEliminated");

	AINSCoopMode_OnAllHumanPlayersEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCoopMode.IsSplitScreen
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSCoopMode::IsSplitScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCoopMode.IsSplitScreen");

	AINSCoopMode_IsSplitScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCoopMode.EnableBotSenses
// ()
void AINSCoopMode::EnableBotSenses()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCoopMode.EnableBotSenses");

	AINSCoopMode_EnableBotSenses_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCoopMode.DisableBotSenses
// ()
void AINSCoopMode::DisableBotSenses()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCoopMode.DisableBotSenses");

	AINSCoopMode_DisableBotSenses_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSCoopMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(OverrideBotSquadLayoutAllFactions, USquadLayout);
	READ_PTR_FULL(PlayerInsertionVehicle, AVehicleBase);
	READ_PTR_FULL(SoloReinforcementSystem, UReinforcementSystemComponent);
}

void AINSCoopMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(OverrideBotSquadLayoutAllFactions);
	DELE_PTR_FULL(PlayerInsertionVehicle);
	DELE_PTR_FULL(SoloReinforcementSystem);
}

// Function Insurgency.INSSurvivalGameMode.SkipToExtraction
// ()
void AINSSurvivalGameMode::SkipToExtraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.SkipToExtraction");

	AINSSurvivalGameMode_SkipToExtraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameMode.SetupObjectives
// ()
void AINSSurvivalGameMode::SetupObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.SetupObjectives");

	AINSSurvivalGameMode_SetupObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameMode.PopulateHelicopterWithPlayers
// ()
void AINSSurvivalGameMode::PopulateHelicopterWithPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.PopulateHelicopterWithPlayers");

	AINSSurvivalGameMode_PopulateHelicopterWithPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSurvivalGameMode.IsFinalWave
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSurvivalGameMode::IsFinalWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.IsFinalWave");

	AINSSurvivalGameMode_IsFinalWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSurvivalGameMode.GetWaveConfig
// ()
// Parameters:
// class USurvivalWaveConfig*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USurvivalWaveConfig* AINSSurvivalGameMode::GetWaveConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.GetWaveConfig");

	AINSSurvivalGameMode_GetWaveConfig_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSurvivalGameMode.GetSurvivalScenarioData
// ()
// Parameters:
// class USurvivalScenarioData*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USurvivalScenarioData* AINSSurvivalGameMode::GetSurvivalScenarioData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.GetSurvivalScenarioData");

	AINSSurvivalGameMode_GetSurvivalScenarioData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSurvivalGameMode.FindExtractionHelicopter
// ()
// Parameters:
// class AVehicleHoveringBase*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AVehicleHoveringBase* AINSSurvivalGameMode::FindExtractionHelicopter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.FindExtractionHelicopter");

	AINSSurvivalGameMode_FindExtractionHelicopter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSurvivalGameMode.ActivateNextObjective
// ()
void AINSSurvivalGameMode::ActivateNextObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSurvivalGameMode.ActivateNextObjective");

	AINSSurvivalGameMode_ActivateNextObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSSurvivalGameMode::AfterRead()
{
	AINSCoopMode::AfterRead();

	READ_PTR_FULL(SurvivalGameState, AINSSurvivalGameState);
	READ_PTR_FULL(SurvivalWaveConfig, USurvivalWaveConfig);
	READ_PTR_FULL(SurvivalNightTimeWaveConfig, USurvivalWaveConfig);
}

void AINSSurvivalGameMode::BeforeDelete()
{
	AINSCoopMode::BeforeDelete();

	DELE_PTR_FULL(SurvivalGameState);
	DELE_PTR_FULL(SurvivalWaveConfig);
	DELE_PTR_FULL(SurvivalNightTimeWaveConfig);
}

void USurvivalWaveConfig::AfterRead()
{
	UDataAsset::AfterRead();

}

void USurvivalWaveConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.INSSpectatorPawn.ToggleAdminMenu
// ()
void AINSSpectatorPawn::ToggleAdminMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.ToggleAdminMenu");

	AINSSpectatorPawn_ToggleAdminMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.SpectatePreviousPlayer
// ()
void AINSSpectatorPawn::SpectatePreviousPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.SpectatePreviousPlayer");

	AINSSpectatorPawn_SpectatePreviousPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.SpectatePlayerOnTeam
// ()
// Parameters:
// unsigned char                  TeamIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Offset                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreDead                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSpectatorPawn::SpectatePlayerOnTeam(unsigned char TeamIndex, int Offset, bool bIgnoreDead)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.SpectatePlayerOnTeam");

	AINSSpectatorPawn_SpectatePlayerOnTeam_Params params;
	params.TeamIndex = TeamIndex;
	params.Offset = Offset;
	params.bIgnoreDead = bIgnoreDead;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.SpectateNextPlayer
// ()
void AINSSpectatorPawn::SpectateNextPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.SpectateNextPlayer");

	AINSSpectatorPawn_SpectateNextPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.SetViewTargetPlayerState
// ()
// Parameters:
// class APlayerState*            InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSpectatorPawn::SetViewTargetPlayerState(class APlayerState* InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.SetViewTargetPlayerState");

	AINSSpectatorPawn_SetViewTargetPlayerState_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.SetViewTarget
// ()
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FViewTargetTransitionParams TransitionParams               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSSpectatorPawn::SetViewTarget(class AActor* Target, const struct FViewTargetTransitionParams& TransitionParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.SetViewTarget");

	AINSSpectatorPawn_SetViewTarget_Params params;
	params.Target = Target;
	params.TransitionParams = TransitionParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.Server_AdminCheat
// ()
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSpectatorPawn::Server_AdminCheat(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.Server_AdminCheat");

	AINSSpectatorPawn_Server_AdminCheat_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.ResetCameraPosition
// ()
void AINSSpectatorPawn::ResetCameraPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.ResetCameraPosition");

	AINSSpectatorPawn_ResetCameraPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSpectatorPawn.AdminCheat
// ()
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSpectatorPawn::AdminCheat(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSpectatorPawn.AdminCheat");

	AINSSpectatorPawn_AdminCheat_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSSpectatorPawn::AfterRead()
{
	ASpectatorPawn::AfterRead();

	READ_PTR_FULL(AdminMenuWidget, UClass);
}

void AINSSpectatorPawn::BeforeDelete()
{
	ASpectatorPawn::BeforeDelete();

	DELE_PTR_FULL(AdminMenuWidget);
}

// Function Insurgency.INSCharacter.TickFireDamage
// ()
void AINSCharacter::TickFireDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.TickFireDamage");

	AINSCharacter_TickFireDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.Server_ToggleVehicleLights
// ()
void AINSCharacter::Server_ToggleVehicleLights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.Server_ToggleVehicleLights");

	AINSCharacter_Server_ToggleVehicleLights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.Server_StopHonkHorn
// ()
void AINSCharacter::Server_StopHonkHorn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.Server_StopHonkHorn");

	AINSCharacter_Server_StopHonkHorn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.Server_StopHandbreak
// ()
void AINSCharacter::Server_StopHandbreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.Server_StopHandbreak");

	AINSCharacter_Server_StopHandbreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.Server_StartHonkHorn
// ()
void AINSCharacter::Server_StartHonkHorn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.Server_StartHonkHorn");

	AINSCharacter_Server_StartHonkHorn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.Server_StartHandbreak
// ()
void AINSCharacter::Server_StartHandbreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.Server_StartHandbreak");

	AINSCharacter_Server_StartHandbreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.ResetMeshTransform
// ()
void AINSCharacter::ResetMeshTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.ResetMeshTransform");

	AINSCharacter_ResetMeshTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnRep_VehicleSeat
// ()
void AINSCharacter::OnRep_VehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnRep_VehicleSeat");

	AINSCharacter_OnRep_VehicleSeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnRep_OnFire
// ()
void AINSCharacter::OnRep_OnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnRep_OnFire");

	AINSCharacter_OnRep_OnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnRep_IsDying
// ()
void AINSCharacter::OnRep_IsDying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnRep_IsDying");

	AINSCharacter_OnRep_IsDying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnRagdollHit
// ()
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSCharacter::OnRagdollHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnRagdollHit");

	AINSCharacter_OnRagdollHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnCapsuleOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSCharacter::OnCapsuleOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnCapsuleOverlap");

	AINSCharacter_OnCapsuleOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnCapsuleHit
// ()
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSCharacter::OnCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnCapsuleHit");

	AINSCharacter_OnCapsuleHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.OnAuthoritiveDamageReaction
// ()
// Parameters:
// struct FNetHitReaction         Hit                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSCharacter::OnAuthoritiveDamageReaction(const struct FNetHitReaction& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.OnAuthoritiveDamageReaction");

	AINSCharacter_OnAuthoritiveDamageReaction_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.MulticastResetCharacterAt
// ()
// Parameters:
// struct FVector_NetQuantize100  NewLocation                    (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ResetId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCharacter::MulticastResetCharacterAt(const struct FVector_NetQuantize100& NewLocation, int ResetId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.MulticastResetCharacterAt");

	AINSCharacter_MulticastResetCharacterAt_Params params;
	params.NewLocation = NewLocation;
	params.ResetId = ResetId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.MulticastHideCharacter
// ()
// Parameters:
// int                            ResetId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCharacter::MulticastHideCharacter(int ResetId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.MulticastHideCharacter");

	AINSCharacter_MulticastHideCharacter_Params params;
	params.ResetId = ResetId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.MulticastAuthoritiveDamageReaction
// ()
// Parameters:
// struct FNetHitReaction         Hit                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSCharacter::MulticastAuthoritiveDamageReaction(const struct FNetHitReaction& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.MulticastAuthoritiveDamageReaction");

	AINSCharacter_MulticastAuthoritiveDamageReaction_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.IsAIControlled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSCharacter::IsAIControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.IsAIControlled");

	AINSCharacter_IsAIControlled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.Ignite
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCharacter::Ignite(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.Ignite");

	AINSCharacter_Ignite_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.HasRecentlySpawned
// ()
// Parameters:
// float                          Threshold                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSCharacter::HasRecentlySpawned(float Threshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.HasRecentlySpawned");

	AINSCharacter_HasRecentlySpawned_Params params;
	params.Threshold = Threshold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.GetVehicleSeatCameraLocation
// ()
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSCharacter::GetVehicleSeatCameraLocation(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.GetVehicleSeatCameraLocation");

	AINSCharacter_GetVehicleSeatCameraLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.GetVehicleSeat
// ()
// Parameters:
// class UVehicleSeatComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVehicleSeatComponent* AINSCharacter::GetVehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.GetVehicleSeat");

	AINSCharacter_GetVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.GetTimeSinceSpawn
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSCharacter::GetTimeSinceSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.GetTimeSinceSpawn");

	AINSCharacter_GetTimeSinceSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.GetSignificanceLevel
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSCharacter::GetSignificanceLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.GetSignificanceLevel");

	AINSCharacter_GetSignificanceLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.GetRepresentativeRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator AINSCharacter::GetRepresentativeRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.GetRepresentativeRotation");

	AINSCharacter_GetRepresentativeRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.GetCharacterMeshLOD
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSCharacter::GetCharacterMeshLOD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.GetCharacterMeshLOD");

	AINSCharacter_GetCharacterMeshLOD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.DoBloodSplatterEffect
// ()
// Parameters:
// struct FVector                 DecalPosition                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                DecalRotation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPhysicalSurface>  PhysicalSurface                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBloodSplatterType             BloodSplatterType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bKillShot                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBroadcast                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCharacter::DoBloodSplatterEffect(const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, TEnumAsByte<EPhysicalSurface> PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot, bool bBroadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.DoBloodSplatterEffect");

	AINSCharacter_DoBloodSplatterEffect_Params params;
	params.DecalPosition = DecalPosition;
	params.DecalRotation = DecalRotation;
	params.AttachComponent = AttachComponent;
	params.PhysicalSurface = PhysicalSurface;
	params.BloodSplatterType = BloodSplatterType;
	params.bKillShot = bKillShot;
	params.bBroadcast = bBroadcast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.CalcGenericDamageVelocityModifier
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   HitBone                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSCharacter::CalcGenericDamageVelocityModifier(float Damage, const struct FName& HitBone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.CalcGenericDamageVelocityModifier");

	AINSCharacter_CalcGenericDamageVelocityModifier_Params params;
	params.Damage = Damage;
	params.HitBone = HitBone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.CalcDamageVelocityModifier
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   HitBone                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSCharacter::CalcDamageVelocityModifier(float Damage, const struct FDamageEvent& DamageEvent, const struct FName& HitBone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.CalcDamageVelocityModifier");

	AINSCharacter_CalcDamageVelocityModifier_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.HitBone = HitBone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCharacter.BroadcastSurfaceHitReaction
// ()
// Parameters:
// class USurfaceReaction*        SurfaceReaction                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSCharacter::BroadcastSurfaceHitReaction(class USurfaceReaction* SurfaceReaction, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.BroadcastSurfaceHitReaction");

	AINSCharacter_BroadcastSurfaceHitReaction_Params params;
	params.SurfaceReaction = SurfaceReaction;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.BroadcastDeath
// ()
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitPosition                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 DamageForce                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCharacter::BroadcastDeath(float KillingDamage, class UClass* DamageType, const struct FVector& HitPosition, const struct FVector& DamageForce, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.BroadcastDeath");

	AINSCharacter_BroadcastDeath_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageType = DamageType;
	params.HitPosition = HitPosition;
	params.DamageForce = DamageForce;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCharacter.BroadcastBloodSplatterEffect
// ()
// Parameters:
// struct FVector                 DecalPosition                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                DecalRotation                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPhysicalSurface>  PhysicalSurface                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBloodSplatterType             BloodSplatterType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bKillShot                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCharacter::BroadcastBloodSplatterEffect(const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, TEnumAsByte<EPhysicalSurface> PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCharacter.BroadcastBloodSplatterEffect");

	AINSCharacter_BroadcastBloodSplatterEffect_Params params;
	params.DecalPosition = DecalPosition;
	params.DecalRotation = DecalRotation;
	params.AttachComponent = AttachComponent;
	params.PhysicalSurface = PhysicalSurface;
	params.BloodSplatterType = BloodSplatterType;
	params.bKillShot = bKillShot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSCharacter::AfterRead()
{
	ACharacter::AfterRead();

	READ_PTR_FULL(LastPossesser, AController);
	READ_PTR_FULL(DamageLogComponent, UDamageLogComponent);
	READ_PTR_FULL(CachedEventInstigator, AController);
	READ_PTR_FULL(CachedDamageCauser, AActor);
	READ_PTR_FULL(PhysicsAssetOverrideAlive, UPhysicsAsset);
	READ_PTR_FULL(PhysicsAssetOverrideDead, UPhysicsAsset);
	READ_PTR_FULL(RagdollCollisionSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(DamageSurfaceReactionDefault, USurfaceReaction);
	READ_PTR_FULL(ParticleSystemDeath, UParticleSystem);
	READ_PTR_FULL(BloodSplatterData, UBloodSplatterData);
	READ_PTR_FULL(DismembermentSet, UDismembermentSet);
	READ_PTR_FULL(BurnParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(FireAkComponent, UINSAudioComponent);
	READ_PTR_FULL(AkEventBurningStart, UAkAudioEvent);
	READ_PTR_FULL(AkEventBurningFinish, UAkAudioEvent);
	READ_PTR_FULL(VehicleSeat, UVehicleSeatComponent);
	READ_PTR_FULL(LastSeat, UVehicleSeatComponent);
	READ_PTR_FULL(LastHitActor, AActor);
}

void AINSCharacter::BeforeDelete()
{
	ACharacter::BeforeDelete();

	DELE_PTR_FULL(LastPossesser);
	DELE_PTR_FULL(DamageLogComponent);
	DELE_PTR_FULL(CachedEventInstigator);
	DELE_PTR_FULL(CachedDamageCauser);
	DELE_PTR_FULL(PhysicsAssetOverrideAlive);
	DELE_PTR_FULL(PhysicsAssetOverrideDead);
	DELE_PTR_FULL(RagdollCollisionSurfaceReaction);
	DELE_PTR_FULL(DamageSurfaceReactionDefault);
	DELE_PTR_FULL(ParticleSystemDeath);
	DELE_PTR_FULL(BloodSplatterData);
	DELE_PTR_FULL(DismembermentSet);
	DELE_PTR_FULL(BurnParticleSystemComponent);
	DELE_PTR_FULL(FireAkComponent);
	DELE_PTR_FULL(AkEventBurningStart);
	DELE_PTR_FULL(AkEventBurningFinish);
	DELE_PTR_FULL(VehicleSeat);
	DELE_PTR_FULL(LastSeat);
	DELE_PTR_FULL(LastHitActor);
}

// Function Insurgency.INSSoldier.UpdateWeightMovementParameters
// ()
void AINSSoldier::UpdateWeightMovementParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.UpdateWeightMovementParameters");

	AINSSoldier_UpdateWeightMovementParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.UpdateLocalRTPC
// ()
void AINSSoldier::UpdateLocalRTPC()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.UpdateLocalRTPC");

	AINSSoldier_UpdateLocalRTPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.UpdateFirstPersonVisibility
// ()
void AINSSoldier::UpdateFirstPersonVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.UpdateFirstPersonVisibility");

	AINSSoldier_UpdateFirstPersonVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.UnequipAllItems
// ()
// Parameters:
// class AItemEquipable*          IgnoreItem                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::UnequipAllItems(class AItemEquipable* IgnoreItem, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.UnequipAllItems");

	AINSSoldier_UnequipAllItems_Params params;
	params.IgnoreItem = IgnoreItem;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.SpawnRandomInventoryFromAvailableItems
// ()
void AINSSoldier::SpawnRandomInventoryFromAvailableItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SpawnRandomInventoryFromAvailableItems");

	AINSSoldier_SpawnRandomInventoryFromAvailableItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.SoldierPreDoorKick
// ()
// Parameters:
// bool                           KickWillSucceed                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADoor*                   Door                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::SoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SoldierPreDoorKick");

	AINSSoldier_SoldierPreDoorKick_Params params;
	params.KickWillSucceed = KickWillSucceed;
	params.Door = Door;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ShouldDealDamageInSpawnZone
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::ShouldDealDamageInSpawnZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ShouldDealDamageInSpawnZone");

	AINSSoldier_ShouldDealDamageInSpawnZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.SetWeight
// ()
// Parameters:
// float                          NewWeight                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::SetWeight(float NewWeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SetWeight");

	AINSSoldier_SetWeight_Params params;
	params.NewWeight = NewWeight;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.SetStance
// ()
// Parameters:
// ESoldierStance                 NewStance                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bClientSimulation              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::SetStance(ESoldierStance NewStance, bool bClientSimulation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SetStance");

	AINSSoldier_SetStance_Params params;
	params.NewStance = NewStance;
	params.bClientSimulation = bClientSimulation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.SetStamina
// ()
// Parameters:
// float                          NewStaminaValue                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::SetStamina(float NewStaminaValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SetStamina");

	AINSSoldier_SetStamina_Params params;
	params.NewStaminaValue = NewStaminaValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.SetInSpawnZone
// ()
// Parameters:
// bool                           bSpawnZone                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::SetInSpawnZone(bool bSpawnZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SetInSpawnZone");

	AINSSoldier_SetInSpawnZone_Params params;
	params.bSpawnZone = bSpawnZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.SetFocusMode
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::SetFocusMode(bool bNewState, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SetFocusMode");

	AINSSoldier_SetFocusMode_Params params;
	params.bNewState = bNewState;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerUse
// ()
// Parameters:
// class AActor*                  UseActor                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSSoldier::ServerUse(class AActor* UseActor, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerUse");

	AINSSoldier_ServerUse_Params params;
	params.UseActor = UseActor;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerUpdateInputLeanDirection
// ()
// Parameters:
// ELeanDirection                 NewInputLeanDirection          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerUpdateInputLeanDirection(ELeanDirection NewInputLeanDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerUpdateInputLeanDirection");

	AINSSoldier_ServerUpdateInputLeanDirection_Params params;
	params.NewInputLeanDirection = NewInputLeanDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerUpdateFreeaim
// ()
// Parameters:
// int                            CompressedAngle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerUpdateFreeaim(int CompressedAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerUpdateFreeaim");

	AINSSoldier_ServerUpdateFreeaim_Params params;
	params.CompressedAngle = CompressedAngle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerStopSlide
// ()
void AINSSoldier::ServerStopSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerStopSlide");

	AINSSoldier_ServerStopSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerSoldierPreDoorKick
// ()
// Parameters:
// bool                           KickWillSucceed                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADoor*                   Door                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerSoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerSoldierPreDoorKick");

	AINSSoldier_ServerSoldierPreDoorKick_Params params;
	params.KickWillSucceed = KickWillSucceed;
	params.Door = Door;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerSoldierDoorKick
// ()
// Parameters:
// class ADoor*                   Door                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerSoldierDoorKick(class ADoor* Door)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerSoldierDoorKick");

	AINSSoldier_ServerSoldierDoorKick_Params params;
	params.Door = Door;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerSetFocusMode
// ()
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerSetFocusMode(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerSetFocusMode");

	AINSSoldier_ServerSetFocusMode_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerSetCameraIsTargetingKillLocation
// ()
// Parameters:
// bool                           bActive                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerSetCameraIsTargetingKillLocation(bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerSetCameraIsTargetingKillLocation");

	AINSSoldier_ServerSetCameraIsTargetingKillLocation_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerOnUseReleased
// ()
void AINSSoldier::ServerOnUseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerOnUseReleased");

	AINSSoldier_ServerOnUseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerMelee
// ()
void AINSSoldier::ServerMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerMelee");

	AINSSoldier_ServerMelee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerInteractGearInSlot
// ()
// Parameters:
// EItemSlot                      GearSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerInteractGearInSlot(EItemSlot GearSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerInteractGearInSlot");

	AINSSoldier_ServerInteractGearInSlot_Params params;
	params.GearSlot = GearSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerInformBulletHit
// ()
// Parameters:
// struct FClientBulletHit        BulletHit                      (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSSoldier::ServerInformBulletHit(const struct FClientBulletHit& BulletHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerInformBulletHit");

	AINSSoldier_ServerInformBulletHit_Params params;
	params.BulletHit = BulletHit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerHandleVehicleUse
// ()
void AINSSoldier::ServerHandleVehicleUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerHandleVehicleUse");

	AINSSoldier_ServerHandleVehicleUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerEquipInventoryItem
// ()
// Parameters:
// class AItemEquipable*          Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerEquipInventoryItem(class AItemEquipable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerEquipInventoryItem");

	AINSSoldier_ServerEquipInventoryItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerBreachDoor
// ()
// Parameters:
// class ADoor*                   Door                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ServerBreachDoor(class ADoor* Door)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerBreachDoor");

	AINSSoldier_ServerBreachDoor_Params params;
	params.Door = Door;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ServerAttemptToSlide
// ()
void AINSSoldier::ServerAttemptToSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ServerAttemptToSlide");

	AINSSoldier_ServerAttemptToSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.Server_SetVehicleStance
// ()
// Parameters:
// EVehicleStance                 NewStance                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::Server_SetVehicleStance(EVehicleStance NewStance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Server_SetVehicleStance");

	AINSSoldier_Server_SetVehicleStance_Params params;
	params.NewStance = NewStance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.Server_FindWeaponForDriver
// ()
void AINSSoldier::Server_FindWeaponForDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Server_FindWeaponForDriver");

	AINSSoldier_Server_FindWeaponForDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.Server_DriverPutAwayWeapon
// ()
void AINSSoldier::Server_DriverPutAwayWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Server_DriverPutAwayWeapon");

	AINSSoldier_Server_DriverPutAwayWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.SelectInventorySlot
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::SelectInventorySlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SelectInventorySlot");

	AINSSoldier_SelectInventorySlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.SelectFirstAvailableInventoryItem
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::SelectFirstAvailableInventoryItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.SelectFirstAvailableInventoryItem");

	AINSSoldier_SelectFirstAvailableInventoryItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.Revive
// ()
void AINSSoldier::Revive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Revive");

	AINSSoldier_Revive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.Resupply
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::Resupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Resupply");

	AINSSoldier_Resupply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.ResetResupplyCooldown
// ()
void AINSSoldier::ResetResupplyCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ResetResupplyCooldown");

	AINSSoldier_ResetResupplyCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.RemoveMagazine
// ()
// Parameters:
// class UClass*                  AmmoType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NumToRemove                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::RemoveMagazine(class UClass* AmmoType, int NumToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RemoveMagazine");

	AINSSoldier_RemoveMagazine_Params params;
	params.AmmoType = AmmoType;
	params.NumToRemove = NumToRemove;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.RemoveInventoryItems
// ()
// Parameters:
// bool                           bForce                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::RemoveInventoryItems(bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RemoveInventoryItems");

	AINSSoldier_RemoveInventoryItems_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.RemoveFromInventory
// ()
// Parameters:
// class AItemBase*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::RemoveFromInventory(class AItemBase* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RemoveFromInventory");

	AINSSoldier_RemoveFromInventory_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.RemoveCosmetics
// ()
void AINSSoldier::RemoveCosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RemoveCosmetics");

	AINSSoldier_RemoveCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.RefreshFirstPersonCosmeticVisibility
// ()
void AINSSoldier::RefreshFirstPersonCosmeticVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RefreshFirstPersonCosmeticVisibility");

	AINSSoldier_RefreshFirstPersonCosmeticVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ReequipWeapon
// ()
// Parameters:
// bool                           bFallbackSelectFirst           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::ReequipWeapon(bool bFallbackSelectFirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ReequipWeapon");

	AINSSoldier_ReequipWeapon_Params params;
	params.bFallbackSelectFirst = bFallbackSelectFirst;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.RecoverStamina
// ()
// Parameters:
// float                          Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::RecoverStamina(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RecoverStamina");

	AINSSoldier_RecoverStamina_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.RecalculateWeight
// ()
void AINSSoldier::RecalculateWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.RecalculateWeight");

	AINSSoldier_RecalculateWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlaySurfaceReactionPair
// ()
// Parameters:
// struct FSurfaceReactionPair    Pair                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FHitResult              Trace                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSSoldier::PlaySurfaceReactionPair(const struct FSurfaceReactionPair& Pair, const struct FHitResult& Trace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlaySurfaceReactionPair");

	AINSSoldier_PlaySurfaceReactionPair_Params params;
	params.Pair = Pair;
	params.Trace = Trace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlaySurfaceReactionGround
// ()
// Parameters:
// struct FSurfaceReactionPair    Pair                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void AINSSoldier::PlaySurfaceReactionGround(const struct FSurfaceReactionPair& Pair)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlaySurfaceReactionGround");

	AINSSoldier_PlaySurfaceReactionGround_Params params;
	params.Pair = Pair;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlaySurfaceReaction
// ()
// Parameters:
// struct FSurfaceReactionPair    Pair                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FHitResult              Trace                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FWWiseData              CustomAudioData                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSSoldier::PlaySurfaceReaction(const struct FSurfaceReactionPair& Pair, const struct FHitResult& Trace, const struct FWWiseData& CustomAudioData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlaySurfaceReaction");

	AINSSoldier_PlaySurfaceReaction_Params params;
	params.Pair = Pair;
	params.Trace = Trace;
	params.CustomAudioData = CustomAudioData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayQueuedResponse
// ()
void AINSSoldier::PlayQueuedResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayQueuedResponse");

	AINSSoldier_PlayQueuedResponse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayPainSound
// ()
// Parameters:
// class UINSDamageType*          DamageType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWasFriendlyFire               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHeadshot                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::PlayPainSound(class UINSDamageType* DamageType, float Damage, bool bWasFriendlyFire, bool bHeadshot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayPainSound");

	AINSSoldier_PlayPainSound_Params params;
	params.DamageType = DamageType;
	params.Damage = Damage;
	params.bWasFriendlyFire = bWasFriendlyFire;
	params.bHeadshot = bHeadshot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayObserverThank
// ()
void AINSSoldier::PlayObserverThank()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayObserverThank");

	AINSSoldier_PlayObserverThank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayGenericSoundEventMulticast
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::PlayGenericSoundEventMulticast(class UAkAudioEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayGenericSoundEventMulticast");

	AINSSoldier_PlayGenericSoundEventMulticast_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayGenericParticleEffectMulticast
// ()
// Parameters:
// class UParticleSystem*         Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::PlayGenericParticleEffectMulticast(class UParticleSystem* Event, const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayGenericParticleEffectMulticast");

	AINSSoldier_PlayGenericParticleEffectMulticast_Params params;
	params.Event = Event;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayFallDamageMulticast
// ()
void AINSSoldier::PlayFallDamageMulticast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayFallDamageMulticast");

	AINSSoldier_PlayFallDamageMulticast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PlayDialogue
// ()
// Parameters:
// struct FCharacterResponseRequest SpeakRequest                   (Parm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::PlayDialogue(const struct FCharacterResponseRequest& SpeakRequest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayDialogue");

	AINSSoldier_PlayDialogue_Params params;
	params.SpeakRequest = SpeakRequest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.PlayCharacterSoundEvent
// ()
// Parameters:
// class UAkAudioEvent*           FirstPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*           ThirdPersonEvent               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::PlayCharacterSoundEvent(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PlayCharacterSoundEvent");

	AINSSoldier_PlayCharacterSoundEvent_Params params;
	params.FirstPersonEvent = FirstPersonEvent;
	params.ThirdPersonEvent = ThirdPersonEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.PerformResupply
// ()
void AINSSoldier::PerformResupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.PerformResupply");

	AINSSoldier_PerformResupply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnSoundscapeUpdate
// ()
// Parameters:
// struct FSoundscapeStateRepl    State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSSoldier::OnSoundscapeUpdate(const struct FSoundscapeStateRepl& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnSoundscapeUpdate");

	AINSSoldier_OnSoundscapeUpdate_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnSlideStopped
// ()
// Parameters:
// float                          SlideTransitionDuration        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::OnSlideStopped(float SlideTransitionDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnSlideStopped");

	AINSSoldier_OnSlideStopped_Params params;
	params.SlideTransitionDuration = SlideTransitionDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnResponseSpoken
// ()
// Parameters:
// ECharacterResponse             Response                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::OnResponseSpoken(ECharacterResponse Response)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnResponseSpoken");

	AINSSoldier_OnResponseSpoken_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnResponseInterrupted
// ()
// Parameters:
// ECharacterResponse             Response                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::OnResponseInterrupted(ECharacterResponse Response)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnResponseInterrupted");

	AINSSoldier_OnResponseInterrupted_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnReserveAmmoUpdated
// ()
void AINSSoldier::OnReserveAmmoUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnReserveAmmoUpdated");

	AINSSoldier_OnReserveAmmoUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_Weight
// ()
void AINSSoldier::OnRep_Weight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_Weight");

	AINSSoldier_OnRep_Weight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_VehicleStance
// ()
void AINSSoldier::OnRep_VehicleStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_VehicleStance");

	AINSSoldier_OnRep_VehicleStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_Vaulting
// ()
void AINSSoldier::OnRep_Vaulting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_Vaulting");

	AINSSoldier_OnRep_Vaulting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_TeamId
// ()
void AINSSoldier::OnRep_TeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_TeamId");

	AINSSoldier_OnRep_TeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_Stamina
// ()
void AINSSoldier::OnRep_Stamina()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_Stamina");

	AINSSoldier_OnRep_Stamina_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_ReplicatedStance
// ()
void AINSSoldier::OnRep_ReplicatedStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_ReplicatedStance");

	AINSSoldier_OnRep_ReplicatedStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_ReplicatedFreeaim
// ()
void AINSSoldier::OnRep_ReplicatedFreeaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_ReplicatedFreeaim");

	AINSSoldier_OnRep_ReplicatedFreeaim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_ReplicatedDesiredStance
// ()
void AINSSoldier::OnRep_ReplicatedDesiredStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_ReplicatedDesiredStance");

	AINSSoldier_OnRep_ReplicatedDesiredStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_PlayerClass
// ()
void AINSSoldier::OnRep_PlayerClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_PlayerClass");

	AINSSoldier_OnRep_PlayerClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_PendingWeapon
// ()
void AINSSoldier::OnRep_PendingWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_PendingWeapon");

	AINSSoldier_OnRep_PendingWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_KilledBy
// ()
void AINSSoldier::OnRep_KilledBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_KilledBy");

	AINSSoldier_OnRep_KilledBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_KickInProgress
// ()
void AINSSoldier::OnRep_KickInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_KickInProgress");

	AINSSoldier_OnRep_KickInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_IsAI
// ()
void AINSSoldier::OnRep_IsAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_IsAI");

	AINSSoldier_OnRep_IsAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_Inventory
// ()
void AINSSoldier::OnRep_Inventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_Inventory");

	AINSSoldier_OnRep_Inventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_Incapacitated
// ()
void AINSSoldier::OnRep_Incapacitated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_Incapacitated");

	AINSSoldier_OnRep_Incapacitated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_FocusMode
// ()
void AINSSoldier::OnRep_FocusMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_FocusMode");

	AINSSoldier_OnRep_FocusMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_DialogueDictionary
// ()
void AINSSoldier::OnRep_DialogueDictionary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_DialogueDictionary");

	AINSSoldier_OnRep_DialogueDictionary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_CurrentWeapon
// ()
void AINSSoldier::OnRep_CurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_CurrentWeapon");

	AINSSoldier_OnRep_CurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_CurrentHeldUsableActor
// ()
void AINSSoldier::OnRep_CurrentHeldUsableActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_CurrentHeldUsableActor");

	AINSSoldier_OnRep_CurrentHeldUsableActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnRep_Ammo
// ()
void AINSSoldier::OnRep_Ammo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnRep_Ammo");

	AINSSoldier_OnRep_Ammo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnFireSupportFinishedSuccesfully
// ()
// Parameters:
// class AFireSupportBase*        FireSupport                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::OnFireSupportFinishedSuccesfully(class AFireSupportBase* FireSupport)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnFireSupportFinishedSuccesfully");

	AINSSoldier_OnFireSupportFinishedSuccesfully_Params params;
	params.FireSupport = FireSupport;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.OnCharacterMovementChanged
// ()
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OldLocation                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OldVelocity                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::OnCharacterMovementChanged(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.OnCharacterMovementChanged");

	AINSSoldier_OnCharacterMovementChanged_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.OldLocation = OldLocation;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastSpeakPlayDialogue
// ()
// Parameters:
// struct FCharacterResponseRequest SpeakRequest                   (Parm, NativeAccessSpecifierPublic)
// uint32_t                       Seed                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastSpeakPlayDialogue(const struct FCharacterResponseRequest& SpeakRequest, uint32_t Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastSpeakPlayDialogue");

	AINSSoldier_MulticastSpeakPlayDialogue_Params params;
	params.SpeakRequest = SpeakRequest;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastSoldierPreDoorKick
// ()
// Parameters:
// bool                           KickWillSucceed                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADoor*                   Door                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastSoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastSoldierPreDoorKick");

	AINSSoldier_MulticastSoldierPreDoorKick_Params params;
	params.KickWillSucceed = KickWillSucceed;
	params.Door = Door;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastScavenge
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastScavenge(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastScavenge");

	AINSSoldier_MulticastScavenge_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastOnUseActorInteracted
// ()
// Parameters:
// class AActor*                  UsingActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUseItem                       Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastOnUseActorInteracted(class AActor* UsingActor, EUseItem Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastOnUseActorInteracted");

	AINSSoldier_MulticastOnUseActorInteracted_Params params;
	params.UsingActor = UsingActor;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastMelee
// ()
void AINSSoldier::MulticastMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastMelee");

	AINSSoldier_MulticastMelee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastLanded
// ()
// Parameters:
// struct FWWiseData              AudioData                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHitResult              GroundTrace                    (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastLanded(const struct FWWiseData& AudioData, const struct FHitResult& GroundTrace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastLanded");

	AINSSoldier_MulticastLanded_Params params;
	params.AudioData = AudioData;
	params.GroundTrace = GroundTrace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastIncrementSuppression
// ()
// Parameters:
// float                          Increment                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESuppressionContext            InSuppressionContext           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistToSrc                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastIncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastIncrementSuppression");

	AINSSoldier_MulticastIncrementSuppression_Params params;
	params.Increment = Increment;
	params.HoldTime = HoldTime;
	params.InSuppressionContext = InSuppressionContext;
	params.DistToSrc = DistToSrc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastIncrementRecoil
// ()
// Parameters:
// struct FRotator                RecoilIncrement                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 RecoilViewIncrement            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AimPunchFrac                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RecoilPunchAdditiveFactor      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeOwner                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastIncrementRecoil(const struct FRotator& RecoilIncrement, const struct FVector& RecoilViewIncrement, float AimPunchFrac, float RecoilPunchAdditiveFactor, bool bIncludeOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastIncrementRecoil");

	AINSSoldier_MulticastIncrementRecoil_Params params;
	params.RecoilIncrement = RecoilIncrement;
	params.RecoilViewIncrement = RecoilViewIncrement;
	params.AimPunchFrac = AimPunchFrac;
	params.RecoilPunchAdditiveFactor = RecoilPunchAdditiveFactor;
	params.bIncludeOwner = bIncludeOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastBlind
// ()
// Parameters:
// float                          BlindHoldTime                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BlindFadeTime                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BlindAlpha                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SuppressionIncrement           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FlashSuppressionHoldTime       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastBlind(float BlindHoldTime, float BlindFadeTime, float BlindAlpha, float SuppressionIncrement, float FlashSuppressionHoldTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastBlind");

	AINSSoldier_MulticastBlind_Params params;
	params.BlindHoldTime = BlindHoldTime;
	params.BlindFadeTime = BlindFadeTime;
	params.BlindAlpha = BlindAlpha;
	params.SuppressionIncrement = SuppressionIncrement;
	params.FlashSuppressionHoldTime = FlashSuppressionHoldTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.MulticastApplyStun
// ()
// Parameters:
// float                          InStunDuration                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::MulticastApplyStun(float InStunDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.MulticastApplyStun");

	AINSSoldier_MulticastApplyStun_Params params;
	params.InStunDuration = InStunDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.LoadSelectedCosmetics
// ()
void AINSSoldier::LoadSelectedCosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.LoadSelectedCosmetics");

	AINSSoldier_LoadSelectedCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ItemCapacityForSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::ItemCapacityForSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ItemCapacityForSlot");

	AINSSoldier_ItemCapacityForSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsWeaponRestricted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsWeaponRestricted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsWeaponRestricted");

	AINSSoldier_IsWeaponRestricted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsViewTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsViewTarget");

	AINSSoldier_IsViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsUsingGamepad
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsUsingGamepad");

	AINSSoldier_IsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsUseProgressInTapTime
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsUseProgressInTapTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsUseProgressInTapTime");

	AINSSoldier_IsUseProgressInTapTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsUseInProgress
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsUseInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsUseInProgress");

	AINSSoldier_IsUseInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsStunned
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsStunned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsStunned");

	AINSSoldier_IsStunned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsStanding
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsStanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsStanding");

	AINSSoldier_IsStanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsSprinting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsSprinting");

	AINSSoldier_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsSpecialPlayerClass
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsSpecialPlayerClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsSpecialPlayerClass");

	AINSSoldier_IsSpecialPlayerClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsRestricted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsRestricted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsRestricted");

	AINSSoldier_IsRestricted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsReloading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsReloading");

	AINSSoldier_IsReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsProne
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsProne()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsProne");

	AINSSoldier_IsProne_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsPressingWeaponInteractionKey
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsPressingWeaponInteractionKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsPressingWeaponInteractionKey");

	AINSSoldier_IsPressingWeaponInteractionKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsOutsidePlayableArea
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsOutsidePlayableArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsOutsidePlayableArea");

	AINSSoldier_IsOutsidePlayableArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsOfficer
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsOfficer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsOfficer");

	AINSSoldier_IsOfficer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsObserver
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsObserver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsObserver");

	AINSSoldier_IsObserver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsNearSupplyCrate
// ()
// Parameters:
// float                          Tolerance                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsNearSupplyCrate(float Tolerance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsNearSupplyCrate");

	AINSSoldier_IsNearSupplyCrate_Params params;
	params.Tolerance = Tolerance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsMoving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsMoving");

	AINSSoldier_IsMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsLeaning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsLeaning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsLeaning");

	AINSSoldier_IsLeaning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsInProneTransition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsInProneTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsInProneTransition");

	AINSSoldier_IsInProneTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsFullyCrawling
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsFullyCrawling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsFullyCrawling");

	AINSSoldier_IsFullyCrawling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsFocusing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsFocusing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsFocusing");

	AINSSoldier_IsFocusing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsFirstPersonViewTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsFirstPersonViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsFirstPersonViewTarget");

	AINSSoldier_IsFirstPersonViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsDoorKickInProgress
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsDoorKickInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsDoorKickInProgress");

	AINSSoldier_IsDoorKickInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsCurrentlySliding
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsCurrentlySliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsCurrentlySliding");

	AINSSoldier_IsCurrentlySliding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsCrouching
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsCrouching()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsCrouching");

	AINSSoldier_IsCrouching_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsCrawling
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsCrawling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsCrawling");

	AINSSoldier_IsCrawling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsCompletelyBlind
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsCompletelyBlind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsCompletelyBlind");

	AINSSoldier_IsCompletelyBlind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsClimbing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsClimbing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsClimbing");

	AINSSoldier_IsClimbing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsClientUpdating
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsClientUpdating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsClientUpdating");

	AINSSoldier_IsClientUpdating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsBusy
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsBusy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsBusy");

	AINSSoldier_IsBusy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsBlind
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsBlind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsBlind");

	AINSSoldier_IsBlind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsAtSprintingSpeed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsAtSprintingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsAtSprintingSpeed");

	AINSSoldier_IsAtSprintingSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IsAimingDownSights
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IsAimingDownSights");

	AINSSoldier_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.InvalidatePlayerAppearance
// ()
// Parameters:
// bool                           bClearCosmeticCache            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::InvalidatePlayerAppearance(bool bClearCosmeticCache)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InvalidatePlayerAppearance");

	AINSSoldier_InvalidatePlayerAppearance_Params params;
	params.bClearCosmeticCache = bClearCosmeticCache;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractWeaponUpgrade
// ()
// Parameters:
// EWeaponUpgradeSlot             InSlot                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::InteractWeaponUpgrade(EWeaponUpgradeSlot InSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractWeaponUpgrade");

	AINSSoldier_InteractWeaponUpgrade_Params params;
	params.InSlot = InSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractWeaponUnderbarrelUpgrade
// ()
void AINSSoldier::InteractWeaponUnderbarrelUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractWeaponUnderbarrelUpgrade");

	AINSSoldier_InteractWeaponUnderbarrelUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractWeaponStockUpgrade
// ()
void AINSSoldier::InteractWeaponStockUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractWeaponStockUpgrade");

	AINSSoldier_InteractWeaponStockUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractWeaponSiderailUpgrade
// ()
void AINSSoldier::InteractWeaponSiderailUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractWeaponSiderailUpgrade");

	AINSSoldier_InteractWeaponSiderailUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractWeaponOpticUpgrade
// ()
void AINSSoldier::InteractWeaponOpticUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractWeaponOpticUpgrade");

	AINSSoldier_InteractWeaponOpticUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractGearInSlot
// ()
// Parameters:
// EItemSlot                      GearSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFallbackEquipable             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::InteractGearInSlot(EItemSlot GearSlot, bool bFallbackEquipable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractGearInSlot");

	AINSSoldier_InteractGearInSlot_Params params;
	params.GearSlot = GearSlot;
	params.bFallbackEquipable = bFallbackEquipable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractGearAccessoryCycleOptic
// ()
void AINSSoldier::InteractGearAccessoryCycleOptic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractGearAccessoryCycleOptic");

	AINSSoldier_InteractGearAccessoryCycleOptic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InteractGearAccessory
// ()
void AINSSoldier::InteractGearAccessory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InteractGearAccessory");

	AINSSoldier_InteractGearAccessory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.InStanceTransition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::InStanceTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InStanceTransition");

	AINSSoldier_InStanceTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.InSpawnZone
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::InSpawnZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.InSpawnZone");

	AINSSoldier_InSpawnZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.IncrementSuppression
// ()
// Parameters:
// float                          Increment                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESuppressionContext            InSuppressionContext           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistToSrc                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::IncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IncrementSuppression");

	AINSSoldier_IncrementSuppression_Params params;
	params.Increment = Increment;
	params.HoldTime = HoldTime;
	params.InSuppressionContext = InSuppressionContext;
	params.DistToSrc = DistToSrc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.IncrementScore
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::IncrementScore(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IncrementScore");

	AINSSoldier_IncrementScore_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.IncrementRecoil
// ()
// Parameters:
// struct FRotator                RecoilIncrement                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 RecoilViewIncrement            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AimPunchFrac                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RecoilPunchAdditiveFactor      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::IncrementRecoil(const struct FRotator& RecoilIncrement, const struct FVector& RecoilViewIncrement, float AimPunchFrac, float RecoilPunchAdditiveFactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IncrementRecoil");

	AINSSoldier_IncrementRecoil_Params params;
	params.RecoilIncrement = RecoilIncrement;
	params.RecoilViewIncrement = RecoilViewIncrement;
	params.AimPunchFrac = AimPunchFrac;
	params.RecoilPunchAdditiveFactor = RecoilPunchAdditiveFactor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.IncrementFreeaim
// ()
// Parameters:
// struct FRotator                Amount                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void AINSSoldier::IncrementFreeaim(const struct FRotator& Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.IncrementFreeaim");

	AINSSoldier_IncrementFreeaim_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.Incapacitate
// ()
void AINSSoldier::Incapacitate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Incapacitate");

	AINSSoldier_Incapacitate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.HasTeamInfoReplicated
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::HasTeamInfoReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.HasTeamInfoReplicated");

	AINSSoldier_HasTeamInfoReplicated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.HasRadio
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::HasRadio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.HasRadio");

	AINSSoldier_HasRadio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.HasNearbyRadio
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::HasNearbyRadio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.HasNearbyRadio");

	AINSSoldier_HasNearbyRadio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.HasJustLandedJump
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::HasJustLandedJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.HasJustLandedJump");

	AINSSoldier_HasJustLandedJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.HasJumped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::HasJumped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.HasJumped");

	AINSSoldier_HasJumped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.HasInventoryItem
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::HasInventoryItem(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.HasInventoryItem");

	AINSSoldier_HasInventoryItem_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GiveInventoryItems
// ()
// Parameters:
// bool                           bSelectFirstItem               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::GiveInventoryItems(bool bSelectFirstItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GiveInventoryItems");

	AINSSoldier_GiveInventoryItems_Params params;
	params.bSelectFirstItem = bSelectFirstItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.GiveAmmoFromStoredAmmo
// ()
// Parameters:
// TArray<struct FStoredAmmo>     StoredAmmo                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::GiveAmmoFromStoredAmmo(TArray<struct FStoredAmmo> StoredAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GiveAmmoFromStoredAmmo");

	AINSSoldier_GiveAmmoFromStoredAmmo_Params params;
	params.StoredAmmo = StoredAmmo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.GiveAmmoForWeapon
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::GiveAmmoForWeapon(class AItemWeapon* Weapon, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GiveAmmoForWeapon");

	AINSSoldier_GiveAmmoForWeapon_Params params;
	params.Weapon = Weapon;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.GiveAmmo
// ()
// Parameters:
// class UClass*                  AmmoType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  AmmoTypeOverride               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            MaxCarryOverride               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::GiveAmmo(class UClass* AmmoType, int Amount, class UClass* AmmoTypeOverride, int MaxCarryOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GiveAmmo");

	AINSSoldier_GiveAmmo_Params params;
	params.AmmoType = AmmoType;
	params.Amount = Amount;
	params.AmmoTypeOverride = AmmoTypeOverride;
	params.MaxCarryOverride = MaxCarryOverride;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.GetWeight
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetWeight");

	AINSSoldier_GetWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetWeaponMesh1P
// ()
// Parameters:
// class UINSSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSSkeletalMeshComponent* AINSSoldier::GetWeaponMesh1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetWeaponMesh1P");

	AINSSoldier_GetWeaponMesh1P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetWalkingFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetWalkingFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetWalkingFrac");

	AINSSoldier_GetWalkingFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetUseProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetUseProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetUseProgress");

	AINSSoldier_GetUseProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetUseElapsedTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetUseElapsedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetUseElapsedTime");

	AINSSoldier_GetUseElapsedTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetTopSpeedFraction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetTopSpeedFraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetTopSpeedFraction");

	AINSSoldier_GetTopSpeedFraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetTopSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetTopSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetTopSpeed");

	AINSSoldier_GetTopSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetToleranceForNonSprintingFire
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetToleranceForNonSprintingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetToleranceForNonSprintingFire");

	AINSSoldier_GetToleranceForNonSprintingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetTimeSinceLastRenderTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetTimeSinceLastRenderTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetTimeSinceLastRenderTime");

	AINSSoldier_GetTimeSinceLastRenderTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetTimeOutsidePlayableArea
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetTimeOutsidePlayableArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetTimeOutsidePlayableArea");

	AINSSoldier_GetTimeOutsidePlayableArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetTeamId
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSSoldier::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetTeamId");

	AINSSoldier_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetTeam
// ()
// Parameters:
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSSoldier::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetTeam");

	AINSSoldier_GetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetStaminaFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetStaminaFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetStaminaFrac");

	AINSSoldier_GetStaminaFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetStamina
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetStamina()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetStamina");

	AINSSoldier_GetStamina_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetSprintAlpha
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetSprintAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetSprintAlpha");

	AINSSoldier_GetSprintAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetSortedEquipableItems
// ()
// Parameters:
// TArray<class AItemEquipable*>  OutEquipables                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::GetSortedEquipableItems(TArray<class AItemEquipable*>* OutEquipables)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetSortedEquipableItems");

	AINSSoldier_GetSortedEquipableItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutEquipables != nullptr)
		*OutEquipables = params.OutEquipables;

}


// Function Insurgency.INSSoldier.GetShootAngles
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator AINSSoldier::GetShootAngles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetShootAngles");

	AINSSoldier_GetShootAngles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetSharedCosmeticState
// ()
// Parameters:
// class USharedCosmeticState*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USharedCosmeticState* AINSSoldier::GetSharedCosmeticState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetSharedCosmeticState");

	AINSSoldier_GetSharedCosmeticState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetSensingComponent
// ()
// Parameters:
// class UINSPawnSensingComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSPawnSensingComponent* AINSSoldier::GetSensingComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetSensingComponent");

	AINSSoldier_GetSensingComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetReserveAmmoForWeapon
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetReserveAmmoForWeapon(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetReserveAmmoForWeapon");

	AINSSoldier_GetReserveAmmoForWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetReserveAmmo
// ()
// Parameters:
// class UClass*                  AmmoType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetReserveAmmo(class UClass* AmmoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetReserveAmmo");

	AINSSoldier_GetReserveAmmo_Params params;
	params.AmmoType = AmmoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetRemoteViewPitch
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetRemoteViewPitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetRemoteViewPitch");

	AINSSoldier_GetRemoteViewPitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetRelativeMeshZForStance
// ()
// Parameters:
// ESoldierStance                 NewStance                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetRelativeMeshZForStance(ESoldierStance NewStance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetRelativeMeshZForStance");

	AINSSoldier_GetRelativeMeshZForStance_Params params;
	params.NewStance = NewStance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetRelativeMeshZForCurrentStance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetRelativeMeshZForCurrentStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetRelativeMeshZForCurrentStance");

	AINSSoldier_GetRelativeMeshZForCurrentStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetRecentMaxVelocity
// ()
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetRecentMaxVelocity(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetRecentMaxVelocity");

	AINSSoldier_GetRecentMaxVelocity_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetRecentLocalVelocity
// ()
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AINSSoldier::GetRecentLocalVelocity(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetRecentLocalVelocity");

	AINSSoldier_GetRecentLocalVelocity_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetRadioSignalQuality
// ()
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetRadioSignalQuality(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetRadioSignalQuality");

	AINSSoldier_GetRadioSignalQuality_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetPreviousItemInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          CurrentItem                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFallbackToLast                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreCanEquip                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* AINSSoldier::GetPreviousItemInSlot(EItemSlot Slot, class AItemEquipable* CurrentItem, bool bFallbackToLast, bool bIgnoreCanEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetPreviousItemInSlot");

	AINSSoldier_GetPreviousItemInSlot_Params params;
	params.Slot = Slot;
	params.CurrentItem = CurrentItem;
	params.bFallbackToLast = bFallbackToLast;
	params.bIgnoreCanEquip = bIgnoreCanEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetPlayerSpeedClassification
// ()
// Parameters:
// EPlayerSpeedClassification     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EPlayerSpeedClassification AINSSoldier::GetPlayerSpeedClassification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetPlayerSpeedClassification");

	AINSSoldier_GetPlayerSpeedClassification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetPlayerController
// ()
// Parameters:
// class AINSPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSPlayerController* AINSSoldier::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetPlayerController");

	AINSSoldier_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetPendingOrActiveItem
// ()
// Parameters:
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* AINSSoldier::GetPendingOrActiveItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetPendingOrActiveItem");

	AINSSoldier_GetPendingOrActiveItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetPendingItem
// ()
// Parameters:
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* AINSSoldier::GetPendingItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetPendingItem");

	AINSSoldier_GetPendingItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetNumNearbyTeammates
// ()
// Parameters:
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetNumNearbyTeammates(float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetNumNearbyTeammates");

	AINSSoldier_GetNumNearbyTeammates_Params params;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetNextMagazine
// ()
// Parameters:
// class UClass*                  AmmoType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoredMagazine         OutMagazine                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::GetNextMagazine(class UClass* AmmoType, struct FStoredMagazine* OutMagazine)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetNextMagazine");

	AINSSoldier_GetNextMagazine_Params params;
	params.AmmoType = AmmoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMagazine != nullptr)
		*OutMagazine = params.OutMagazine;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetNextItemInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          CurrentItem                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFallbackToFirst               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreCanEquip                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* AINSSoldier::GetNextItemInSlot(EItemSlot Slot, class AItemEquipable* CurrentItem, bool bFallbackToFirst, bool bIgnoreCanEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetNextItemInSlot");

	AINSSoldier_GetNextItemInSlot_Params params;
	params.Slot = Slot;
	params.CurrentItem = CurrentItem;
	params.bFallbackToFirst = bFallbackToFirst;
	params.bIgnoreCanEquip = bIgnoreCanEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetNextBulletId
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetNextBulletId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetNextBulletId");

	AINSSoldier_GetNextBulletId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetNearbySupplyCrate
// ()
// Parameters:
// float                          Tolerance                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASupplyCrate*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASupplyCrate* AINSSoldier::GetNearbySupplyCrate(float Tolerance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetNearbySupplyCrate");

	AINSSoldier_GetNearbySupplyCrate_Params params;
	params.Tolerance = Tolerance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetNearbyRadios
// ()
// Parameters:
// TArray<class AItemRadio*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class AItemRadio*> AINSSoldier::GetNearbyRadios()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetNearbyRadios");

	AINSSoldier_GetNearbyRadios_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetMovingFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetMovingFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetMovingFrac");

	AINSSoldier_GetMovingFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetMergedMesh
// ()
// Parameters:
// class UCosmeticItem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCosmeticItem* AINSSoldier::GetMergedMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetMergedMesh");

	AINSSoldier_GetMergedMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetMeleeStaminaFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetMeleeStaminaFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetMeleeStaminaFrac");

	AINSSoldier_GetMeleeStaminaFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetMaxLeaningViewXOffset
// ()
// Parameters:
// ELeanDirection                 NewInputLeanDirection          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bMoving                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetMaxLeaningViewXOffset(ELeanDirection NewInputLeanDirection, bool bMoving)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetMaxLeaningViewXOffset");

	AINSSoldier_GetMaxLeaningViewXOffset_Params params;
	params.NewInputLeanDirection = NewInputLeanDirection;
	params.bMoving = bMoving;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetMaxAmmoForWeapon
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetMaxAmmoForWeapon(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetMaxAmmoForWeapon");

	AINSSoldier_GetMaxAmmoForWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetMaxAmmo
// ()
// Parameters:
// class UClass*                  AmmoContainer                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetMaxAmmo(class UClass* AmmoContainer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetMaxAmmo");

	AINSSoldier_GetMaxAmmo_Params params;
	params.AmmoContainer = AmmoContainer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetLeaningViewYOffset
// ()
// Parameters:
// float                          DesiredLeanAmount              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetLeaningViewYOffset(float DesiredLeanAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetLeaningViewYOffset");

	AINSSoldier_GetLeaningViewYOffset_Params params;
	params.DesiredLeanAmount = DesiredLeanAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetLeaningViewXOffset
// ()
// Parameters:
// float                          DesiredLeanAmount              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetLeaningViewXOffset(float DesiredLeanAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetLeaningViewXOffset");

	AINSSoldier_GetLeaningViewXOffset_Params params;
	params.DesiredLeanAmount = DesiredLeanAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetLastMovementTimeServer
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetLastMovementTimeServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetLastMovementTimeServer");

	AINSSoldier_GetLastMovementTimeServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetItemInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemBase*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemBase* AINSSoldier::GetItemInSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetItemInSlot");

	AINSSoldier_GetItemInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetItemInInventory
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemBase*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemBase* AINSSoldier::GetItemInInventory(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetItemInInventory");

	AINSSoldier_GetItemInInventory_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetItemEquippedCountByClass
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetItemEquippedCountByClass(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetItemEquippedCountByClass");

	AINSSoldier_GetItemEquippedCountByClass_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetItemEquippedCount
// ()
// Parameters:
// class AItemBase*               ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetItemEquippedCount(class AItemBase* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetItemEquippedCount");

	AINSSoldier_GetItemEquippedCount_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetGroundLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AINSSoldier::GetGroundLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetGroundLocation");

	AINSSoldier_GetGroundLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetGrenadeInInventory
// ()
// Parameters:
// bool                           bLethal                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemGrenade*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemGrenade* AINSSoldier::GetGrenadeInInventory(bool bLethal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetGrenadeInInventory");

	AINSSoldier_GetGrenadeInInventory_Params params;
	params.bLethal = bLethal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetGearInSlot
// ()
// Parameters:
// EItemSlot                      GearSlot                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemGear*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemGear* AINSSoldier::GetGearInSlot(EItemSlot GearSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetGearInSlot");

	AINSSoldier_GetGearInSlot_Params params;
	params.GearSlot = GearSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetFirearmInCategory
// ()
// Parameters:
// EFirearmCategory               Category                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludingNonConsumingItems    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemFirearm*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemFirearm* AINSSoldier::GetFirearmInCategory(EFirearmCategory Category, bool bIncludingNonConsumingItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetFirearmInCategory");

	AINSSoldier_GetFirearmInCategory_Params params;
	params.Category = Category;
	params.bIncludingNonConsumingItems = bIncludingNonConsumingItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetFirearmCategoryEquipLimit
// ()
// Parameters:
// EFirearmCategory               Category                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetFirearmCategoryEquipLimit(EFirearmCategory Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetFirearmCategoryEquipLimit");

	AINSSoldier_GetFirearmCategoryEquipLimit_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetFactionDefinition
// ()
// Parameters:
// class UFactionDefinition*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UFactionDefinition* AINSSoldier::GetFactionDefinition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetFactionDefinition");

	AINSSoldier_GetFactionDefinition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetEquippedItemSlotsMask
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetEquippedItemSlotsMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetEquippedItemSlotsMask");

	AINSSoldier_GetEquippedItemSlotsMask_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetEquippedCountInFirearmCategory
// ()
// Parameters:
// EFirearmCategory               Category                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludingNonConsumingItems    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetEquippedCountInFirearmCategory(EFirearmCategory Category, bool bIncludingNonConsumingItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetEquippedCountInFirearmCategory");

	AINSSoldier_GetEquippedCountInFirearmCategory_Params params;
	params.Category = Category;
	params.bIncludingNonConsumingItems = bIncludingNonConsumingItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetEquipableItems
// ()
// Parameters:
// TArray<class AItemEquipable*>  OutEquipables                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::GetEquipableItems(TArray<class AItemEquipable*>* OutEquipables)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetEquipableItems");

	AINSSoldier_GetEquipableItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutEquipables != nullptr)
		*OutEquipables = params.OutEquipables;

}


// Function Insurgency.INSSoldier.GetEquipableInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* AINSSoldier::GetEquipableInSlot(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetEquipableInSlot");

	AINSSoldier_GetEquipableInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetDesiredStance
// ()
// Parameters:
// ESoldierStance                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESoldierStance AINSSoldier::GetDesiredStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetDesiredStance");

	AINSSoldier_GetDesiredStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetCurrentWeaponSwitch
// ()
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FName AINSSoldier::GetCurrentWeaponSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetCurrentWeaponSwitch");

	AINSSoldier_GetCurrentWeaponSwitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetCurrentWeapon
// ()
// Parameters:
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* AINSSoldier::GetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetCurrentWeapon");

	AINSSoldier_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetCurrentUseActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* AINSSoldier::GetCurrentUseActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetCurrentUseActor");

	AINSSoldier_GetCurrentUseActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetCrawlingAlpha
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetCrawlingAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetCrawlingAlpha");

	AINSSoldier_GetCrawlingAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetComplexGroundTrace
// ()
// Parameters:
// struct FHitResult              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
struct FHitResult AINSSoldier::GetComplexGroundTrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetComplexGroundTrace");

	AINSSoldier_GetComplexGroundTrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetClosestRadioSupportPawn
// ()
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APawn* AINSSoldier::GetClosestRadioSupportPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetClosestRadioSupportPawn");

	AINSSoldier_GetClosestRadioSupportPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetClosestOfficerPawn
// ()
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APawn* AINSSoldier::GetClosestOfficerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetClosestOfficerPawn");

	AINSSoldier_GetClosestOfficerPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetBodyMesh1P
// ()
// Parameters:
// class UINSSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSSkeletalMeshComponent* AINSSoldier::GetBodyMesh1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetBodyMesh1P");

	AINSSoldier_GetBodyMesh1P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetBlindFrac
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::GetBlindFrac()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetBlindFrac");

	AINSSoldier_GetBlindFrac_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetArmMesh1P
// ()
// Parameters:
// class UINSSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSSkeletalMeshComponent* AINSSoldier::GetArmMesh1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetArmMesh1P");

	AINSSoldier_GetArmMesh1P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetAmmo
// ()
// Parameters:
// class UClass*                  AmmoType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoredAmmo             ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FStoredAmmo AINSSoldier::GetAmmo(class UClass* AmmoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetAmmo");

	AINSSoldier_GetAmmo_Params params;
	params.AmmoType = AmmoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetAISquad
// ()
// Parameters:
// class UINSAISquad*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSAISquad* AINSSoldier::GetAISquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetAISquad");

	AINSSoldier_GetAISquad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetAIController
// ()
// Parameters:
// class AINSAISoldierController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSAISoldierController* AINSSoldier::GetAIController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetAIController");

	AINSSoldier_GetAIController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetAdditionalAmmoForWeapon
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::GetAdditionalAmmoForWeapon(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetAdditionalAmmoForWeapon");

	AINSSoldier_GetAdditionalAmmoForWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetActiveObjectiveId
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSSoldier::GetActiveObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetActiveObjectiveId");

	AINSSoldier_GetActiveObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.GetActiveObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSSoldier::GetActiveObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.GetActiveObjective");

	AINSSoldier_GetActiveObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.FinishObserverResponse
// ()
void AINSSoldier::FinishObserverResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.FinishObserverResponse");

	AINSSoldier_FinishObserverResponse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.FindUseActors
// ()
// Parameters:
// TArray<struct FUsableActor>    OutUsableActors                (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistanceOverride               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RadiusOverride                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::FindUseActors(TArray<struct FUsableActor>* OutUsableActors, float DistanceOverride, float RadiusOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.FindUseActors");

	AINSSoldier_FindUseActors_Params params;
	params.DistanceOverride = DistanceOverride;
	params.RadiusOverride = RadiusOverride;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUsableActors != nullptr)
		*OutUsableActors = params.OutUsableActors;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.FindUseActor
// ()
// Parameters:
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* AINSSoldier::FindUseActor(struct FHitResult* OutHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.FindUseActor");

	AINSSoldier_FindUseActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.FindDoor
// ()
// Parameters:
// class ADoor*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ADoor* AINSSoldier::FindDoor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.FindDoor");

	AINSSoldier_FindDoor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.EquipInventoryItem
// ()
// Parameters:
// class AItemEquipable*          Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromServer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::EquipInventoryItem(class AItemEquipable* Item, bool bFromServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.EquipInventoryItem");

	AINSSoldier_EquipInventoryItem_Params params;
	params.Item = Item;
	params.bFromServer = bFromServer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.DropWeapons
// ()
void AINSSoldier::DropWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.DropWeapons");

	AINSSoldier_DropWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.DrainStamina
// ()
// Parameters:
// float                          Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::DrainStamina(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.DrainStamina");

	AINSSoldier_DrainStamina_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.CountItemsInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludingNonConsumingItems    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSoldier::CountItemsInSlot(EItemSlot Slot, bool bIncludingNonConsumingItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CountItemsInSlot");

	AINSSoldier_CountItemsInSlot_Params params;
	params.Slot = Slot;
	params.bIncludingNonConsumingItems = bIncludingNonConsumingItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.ClientSetHeldUsableActor
// ()
// Parameters:
// struct FTimedUsableActor       UsableActorInfo                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSSoldier::ClientSetHeldUsableActor(const struct FTimedUsableActor& UsableActorInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ClientSetHeldUsableActor");

	AINSSoldier_ClientSetHeldUsableActor_Params params;
	params.UsableActorInfo = UsableActorInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ClientIncrementSuppression
// ()
// Parameters:
// float                          Increment                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESuppressionContext            InSuppressionContext           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistToSrc                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ClientIncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc, const struct FVector& Origin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ClientIncrementSuppression");

	AINSSoldier_ClientIncrementSuppression_Params params;
	params.Increment = Increment;
	params.HoldTime = HoldTime;
	params.InSuppressionContext = InSuppressionContext;
	params.DistToSrc = DistToSrc;
	params.Origin = Origin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ClientEquipInventoryItem
// ()
// Parameters:
// class AItemEquipable*          Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          Previous                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ClientEquipInventoryItem(class AItemEquipable* Item, class AItemEquipable* Previous)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ClientEquipInventoryItem");

	AINSSoldier_ClientEquipInventoryItem_Params params;
	params.Item = Item;
	params.Previous = Previous;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.CenterFreeaim
// ()
// Parameters:
// float                          Fraction                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::CenterFreeaim(float Fraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CenterFreeaim");

	AINSSoldier_CenterFreeaim_Params params;
	params.Fraction = Fraction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.CanShowCosmeticEffects
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::CanShowCosmeticEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CanShowCosmeticEffects");

	AINSSoldier_CanShowCosmeticEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.CanScore
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::CanScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CanScore");

	AINSSoldier_CanScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.CanChangeStance
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::CanChangeStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CanChangeStance");

	AINSSoldier_CanChangeStance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.CancelUse
// ()
void AINSSoldier::CancelUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CancelUse");

	AINSSoldier_CancelUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.CancelSprint
// ()
void AINSSoldier::CancelSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CancelSprint");

	AINSSoldier_CancelSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.CalcViewLocation
// ()
// Parameters:
// bool                           bApplyLeanOffset               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplyViewBob                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AINSSoldier::CalcViewLocation(bool bApplyLeanOffset, bool bApplyViewBob)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CalcViewLocation");

	AINSSoldier_CalcViewLocation_Params params;
	params.bApplyLeanOffset = bApplyLeanOffset;
	params.bApplyViewBob = bApplyViewBob;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.CalcRecoilOffset
// ()
// Parameters:
// struct FVector                 Position                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Angles                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                OriginalAngles                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void AINSSoldier::CalcRecoilOffset(struct FVector* Position, struct FRotator* Angles, const struct FRotator& OriginalAngles)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CalcRecoilOffset");

	AINSSoldier_CalcRecoilOffset_Params params;
	params.OriginalAngles = OriginalAngles;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Position != nullptr)
		*Position = params.Position;
	if (Angles != nullptr)
		*Angles = params.Angles;

}


// Function Insurgency.INSSoldier.CalcFocusFraction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSSoldier::CalcFocusFraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.CalcFocusFraction");

	AINSSoldier_CalcFocusFraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.BlueprintUpdateFirstPersonVisibility
// ()
// Parameters:
// bool                           bIsFirstPersonVisible          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.BlueprintUpdateFirstPersonVisibility");

	AINSSoldier_BlueprintUpdateFirstPersonVisibility_Params params;
	params.bIsFirstPersonVisible = bIsFirstPersonVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.BlueprintOnStanceChanged
// ()
// Parameters:
// ESoldierStance                 OldStance                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::BlueprintOnStanceChanged(ESoldierStance OldStance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.BlueprintOnStanceChanged");

	AINSSoldier_BlueprintOnStanceChanged_Params params;
	params.OldStance = OldStance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.BlueprintCalcCamera
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InLocation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                InRotation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          InFOV                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          OutFOV                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.BlueprintCalcCamera");

	AINSSoldier_BlueprintCalcCamera_Params params;
	params.DeltaTime = DeltaTime;
	params.InLocation = InLocation;
	params.InRotation = InRotation;
	params.InFOV = InFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
	if (OutFOV != nullptr)
		*OutFOV = params.OutFOV;

}


// Function Insurgency.INSSoldier.Blind
// ()
// Parameters:
// float                          BlindHoldTime                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BlindFadeTime                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BlindAlpha                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SuppressionIncrement           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FlashSuppressionHoldTime       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::Blind(float BlindHoldTime, float BlindFadeTime, float BlindAlpha, float SuppressionIncrement, float FlashSuppressionHoldTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.Blind");

	AINSSoldier_Blind_Params params;
	params.BlindHoldTime = BlindHoldTime;
	params.BlindFadeTime = BlindFadeTime;
	params.BlindAlpha = BlindAlpha;
	params.SuppressionIncrement = SuppressionIncrement;
	params.FlashSuppressionHoldTime = FlashSuppressionHoldTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.BeginObserverResponse
// ()
void AINSSoldier::BeginObserverResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.BeginObserverResponse");

	AINSSoldier_BeginObserverResponse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ApplyStun
// ()
// Parameters:
// float                          InStunDuration                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::ApplyStun(float InStunDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ApplyStun");

	AINSSoldier_ApplyStun_Params params;
	params.InStunDuration = InStunDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.ApplyAttributes
// ()
// Parameters:
// struct FPlayerClassAttributes  Attributes                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSSoldier::ApplyAttributes(const struct FPlayerClassAttributes& Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.ApplyAttributes");

	AINSSoldier_ApplyAttributes_Params params;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.AllowWeaponReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowWeaponReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowWeaponReload");

	AINSSoldier_AllowWeaponReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowWeaponFocus
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowWeaponFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowWeaponFocus");

	AINSSoldier_AllowWeaponFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowWeaponFire
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowWeaponFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowWeaponFire");

	AINSSoldier_AllowWeaponFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowUseInVehicle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowUseInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowUseInVehicle");

	AINSSoldier_AllowUseInVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowSprint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowSprint");

	AINSSoldier_AllowSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowRun
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowRun");

	AINSSoldier_AllowRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowResupply
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowResupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowResupply");

	AINSSoldier_AllowResupply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowMove
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowMove");

	AINSSoldier_AllowMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowJumpShoot
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowJumpShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowJumpShoot");

	AINSSoldier_AllowJumpShoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowFreeaim
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowFreeaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowFreeaim");

	AINSSoldier_AllowFreeaim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowFiremodeToggle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowFiremodeToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowFiremodeToggle");

	AINSSoldier_AllowFiremodeToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowEquipmentPhysics
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowEquipmentPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowEquipmentPhysics");

	AINSSoldier_AllowEquipmentPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AllowAimDownSights
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AllowAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AllowAimDownSights");

	AINSSoldier_AllowAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AddWeight
// ()
// Parameters:
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::AddWeight(float Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AddWeight");

	AINSSoldier_AddWeight_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.AddViewPunchRotator
// ()
// Parameters:
// struct FRotator                ViewPunchIncrement             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void AINSSoldier::AddViewPunchRotator(const struct FRotator& ViewPunchIncrement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AddViewPunchRotator");

	AINSSoldier_AddViewPunchRotator_Params params;
	params.ViewPunchIncrement = ViewPunchIncrement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.AddViewPunch
// ()
// Parameters:
// float                          Pitch                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Roll                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::AddViewPunch(float Pitch, float Yaw, float Roll)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AddViewPunch");

	AINSSoldier_AddViewPunch_Params params;
	params.Pitch = Pitch;
	params.Yaw = Yaw;
	params.Roll = Roll;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSoldier.AddToInventory
// ()
// Parameters:
// class AItemBase*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSoldier::AddToInventory(class AItemBase* Item, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AddToInventory");

	AINSSoldier_AddToInventory_Params params;
	params.Item = Item;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSoldier.AddCosmetic
// ()
// Parameters:
// struct FSelectedCosmetic       Cosmetic                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bDeferInit                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSSoldier::AddCosmetic(const struct FSelectedCosmetic& Cosmetic, bool bDeferInit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSoldier.AddCosmetic");

	AINSSoldier_AddCosmetic_Params params;
	params.Cosmetic = Cosmetic;
	params.bDeferInit = bDeferInit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSSoldier::AfterRead()
{
	AINSCharacter::AfterRead();

	READ_PTR_FULL(FallbackSharedCosmeticState, USharedCosmeticState);
	READ_PTR_FULL(PlaceholderCharacterMesh, USkeletalMesh);
	READ_PTR_FULL(PlaceholderCosmeticFaction, UFactionDefinition);
	READ_PTR_FULL(PlayerClass, UPlayerClass);
	READ_PTR_FULL(PlayerClassComponent, UPlayerClassComponent);
	READ_PTR_FULL(ArmMesh1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(WeaponMesh1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(BodyMesh1P, UINSSkeletalMeshComponent);
	READ_PTR_FULL(PawnSensing, UINSPawnSensingComponent);
	READ_PTR_FULL(PawnNoiseEmitter, UPawnNoiseEmitterComponent);
	READ_PTR_FULL(CurrentWeapon, AItemEquipable);
	READ_PTR_FULL(PreviousWeapon, AItemEquipable);
	READ_PTR_FULL(PendingWeapon, AItemEquipable);
	READ_PTR_FULL(SimulatedPendingWeapon, AItemEquipable);
	READ_PTR_FULL(CurrentPrimaryWeapon, AItemEquipable);
	READ_PTR_FULL(DoorToKick, ADoor);
	READ_PTR_FULL(MeshPitchOffsetCurve1P, UCurveVector);
	READ_PTR_FULL(INSPlayerState, AINSPlayerState);
	READ_PTR_FULL(KilledBy, AController);
	READ_PTR_FULL(ParticleSystemHeadshot, UParticleSystem);
	READ_PTR_FULL(AkEventHeadshot, UAkAudioEvent);
	READ_PTR_FULL(AkEventBulletShot, UAkAudioEvent);
	READ_PTR_FULL(AISquad, UINSAISquad);
	READ_PTR_FULL(AkComponent, UINSAudioComponent);
	READ_PTR_FULL(StaminaAkComponent, UINSAudioComponent);
	READ_PTR_FULL(AkTempComponent, UINSAudioComponent);
	READ_PTR_FULL(AkEventStaminaBreathing, UAkAudioEvent);
	READ_PTR_FULL(AkEventLeanOutFP, UAkAudioEvent);
	READ_PTR_FULL(AkEventLeanInFP, UAkAudioEvent);
	READ_PTR_FULL(AkEventLeanOutTP, UAkAudioEvent);
	READ_PTR_FULL(AkEventLeanInTP, UAkAudioEvent);
	READ_PTR_FULL(AkEventLadderSlide, UAkAudioEvent);
	READ_PTR_FULL(AkEventLadderSlideOff, UAkAudioEvent);
	READ_PTR_FULL(AkEventLadderSlideOn, UAkAudioEvent);
	READ_PTR_FULL(AkEventFallDamage, UAkAudioEvent);
	READ_PTR_FULL(CharacterDialogueComponent, UCharacterDialogueComponent);
	READ_PTR_FULL(DialogueDictionary, UCharacterDialogueDictionary);
	READ_PTR_FULL(FoliageInteractionComponent, UFoliageInteractionComponent);
	READ_PTR_FULL(SoundscapeComponent, USoundscapeComponent);
	READ_PTR_FULL(FootstepSurfaceReaction_1P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_3P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Sprinting_1P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Sprinting_3P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Crawling_1P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Crawling_3P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Layered, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Sliding_1P, USurfaceReaction);
	READ_PTR_FULL(FootstepSurfaceReaction_Sliding_3P, USurfaceReaction);
	READ_PTR_FULL(BloodMaterial, UPhysicalMaterial);
	READ_PTR_FULL(FootprintSurfaceLeft, UPhysicalMaterial);
	READ_PTR_FULL(FootprintSurfaceRight, UPhysicalMaterial);
	READ_PTR_FULL(LagCompensationComponent, ULagCompensationComponent);
	READ_PTR_FULL(AKScavengeEvent, UAkAudioEvent);
	READ_PTR_FULL(PlayerCollection, UMaterialParameterCollection);
	READ_PTR_FULL(LowVaultCameraOffset, UCurveVector);
	READ_PTR_FULL(LowClimbCameraOffset, UCurveVector);
	READ_PTR_FULL(HighVaultCameraOffset, UCurveVector);
	READ_PTR_FULL(HighClimbCameraOffset, UCurveVector);
	READ_PTR_FULL(AimAssistTarget, UAimAssistTargetComponent);
	READ_PTR_FULL(BreathParticleSystem, UParticleSystem);
	READ_PTR_FULL(SpectatorParticle, UParticleSystem);
	READ_PTR_FULL(SpawnedSpectatorParticle, UParticleSystemComponent);
}

void AINSSoldier::BeforeDelete()
{
	AINSCharacter::BeforeDelete();

	DELE_PTR_FULL(FallbackSharedCosmeticState);
	DELE_PTR_FULL(PlaceholderCharacterMesh);
	DELE_PTR_FULL(PlaceholderCosmeticFaction);
	DELE_PTR_FULL(PlayerClass);
	DELE_PTR_FULL(PlayerClassComponent);
	DELE_PTR_FULL(ArmMesh1P);
	DELE_PTR_FULL(WeaponMesh1P);
	DELE_PTR_FULL(BodyMesh1P);
	DELE_PTR_FULL(PawnSensing);
	DELE_PTR_FULL(PawnNoiseEmitter);
	DELE_PTR_FULL(CurrentWeapon);
	DELE_PTR_FULL(PreviousWeapon);
	DELE_PTR_FULL(PendingWeapon);
	DELE_PTR_FULL(SimulatedPendingWeapon);
	DELE_PTR_FULL(CurrentPrimaryWeapon);
	DELE_PTR_FULL(DoorToKick);
	DELE_PTR_FULL(MeshPitchOffsetCurve1P);
	DELE_PTR_FULL(INSPlayerState);
	DELE_PTR_FULL(KilledBy);
	DELE_PTR_FULL(ParticleSystemHeadshot);
	DELE_PTR_FULL(AkEventHeadshot);
	DELE_PTR_FULL(AkEventBulletShot);
	DELE_PTR_FULL(AISquad);
	DELE_PTR_FULL(AkComponent);
	DELE_PTR_FULL(StaminaAkComponent);
	DELE_PTR_FULL(AkTempComponent);
	DELE_PTR_FULL(AkEventStaminaBreathing);
	DELE_PTR_FULL(AkEventLeanOutFP);
	DELE_PTR_FULL(AkEventLeanInFP);
	DELE_PTR_FULL(AkEventLeanOutTP);
	DELE_PTR_FULL(AkEventLeanInTP);
	DELE_PTR_FULL(AkEventLadderSlide);
	DELE_PTR_FULL(AkEventLadderSlideOff);
	DELE_PTR_FULL(AkEventLadderSlideOn);
	DELE_PTR_FULL(AkEventFallDamage);
	DELE_PTR_FULL(CharacterDialogueComponent);
	DELE_PTR_FULL(DialogueDictionary);
	DELE_PTR_FULL(FoliageInteractionComponent);
	DELE_PTR_FULL(SoundscapeComponent);
	DELE_PTR_FULL(FootstepSurfaceReaction_1P);
	DELE_PTR_FULL(FootstepSurfaceReaction_3P);
	DELE_PTR_FULL(FootstepSurfaceReaction_Sprinting_1P);
	DELE_PTR_FULL(FootstepSurfaceReaction_Sprinting_3P);
	DELE_PTR_FULL(FootstepSurfaceReaction_Crawling_1P);
	DELE_PTR_FULL(FootstepSurfaceReaction_Crawling_3P);
	DELE_PTR_FULL(FootstepSurfaceReaction_Layered);
	DELE_PTR_FULL(FootstepSurfaceReaction_Sliding_1P);
	DELE_PTR_FULL(FootstepSurfaceReaction_Sliding_3P);
	DELE_PTR_FULL(BloodMaterial);
	DELE_PTR_FULL(FootprintSurfaceLeft);
	DELE_PTR_FULL(FootprintSurfaceRight);
	DELE_PTR_FULL(LagCompensationComponent);
	DELE_PTR_FULL(AKScavengeEvent);
	DELE_PTR_FULL(PlayerCollection);
	DELE_PTR_FULL(LowVaultCameraOffset);
	DELE_PTR_FULL(LowClimbCameraOffset);
	DELE_PTR_FULL(HighVaultCameraOffset);
	DELE_PTR_FULL(HighClimbCameraOffset);
	DELE_PTR_FULL(AimAssistTarget);
	DELE_PTR_FULL(BreathParticleSystem);
	DELE_PTR_FULL(SpectatorParticle);
	DELE_PTR_FULL(SpawnedSpectatorParticle);
}

// Function Insurgency.INSSkirmishGameMode.GetTotalActiveObjectives
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSkirmishGameMode::GetTotalActiveObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkirmishGameMode.GetTotalActiveObjectives");

	AINSSkirmishGameMode_GetTotalActiveObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSkirmishGameMode.GetNumActiveObjectivesOwnedForTeam
// ()
// Parameters:
// unsigned char                  TeamId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeContested              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSSkirmishGameMode::GetNumActiveObjectivesOwnedForTeam(unsigned char TeamId, bool bIncludeContested)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkirmishGameMode.GetNumActiveObjectivesOwnedForTeam");

	AINSSkirmishGameMode_GetNumActiveObjectivesOwnedForTeam_Params params;
	params.TeamId = TeamId;
	params.bIncludeContested = bIncludeContested;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSkirmishGameMode.CheckWinConditions
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSSkirmishGameMode::CheckWinConditions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkirmishGameMode.CheckWinConditions");

	AINSSkirmishGameMode_CheckWinConditions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSkirmishGameMode.CheckCustomEliminationRules
// ()
void AINSSkirmishGameMode::CheckCustomEliminationRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkirmishGameMode.CheckCustomEliminationRules");

	AINSSkirmishGameMode_CheckCustomEliminationRules_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSkirmishGameMode.CheckAllPointsSecure
// ()
void AINSSkirmishGameMode::CheckAllPointsSecure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkirmishGameMode.CheckAllPointsSecure");

	AINSSkirmishGameMode_CheckAllPointsSecure_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSSkirmishGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(FactionOneReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(FactionTwoReinforcementSystem, UReinforcementSystemComponent);
}

void AINSSkirmishGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(FactionOneReinforcementSystem);
	DELE_PTR_FULL(FactionTwoReinforcementSystem);
}

// Function Insurgency.INSSkeletalMeshMerge.Tick
// ()
void UINSSkeletalMeshMerge::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkeletalMeshMerge.Tick");

	UINSSkeletalMeshMerge_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSSkeletalMeshMerge::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Cache, UCosmeticCache);
}

void UINSSkeletalMeshMerge::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Cache);
}

// Function Insurgency.INSSkeletalMeshComponent.UsesCustomFOV
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSSkeletalMeshComponent::UsesCustomFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkeletalMeshComponent.UsesCustomFOV");

	UINSSkeletalMeshComponent_UsesCustomFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSSkeletalMeshComponent.ReprojectTransform
// ()
// Parameters:
// struct FTransform              InOutTransform                 (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UINSSkeletalMeshComponent::ReprojectTransform(struct FTransform* InOutTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkeletalMeshComponent.ReprojectTransform");

	UINSSkeletalMeshComponent_ReprojectTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutTransform != nullptr)
		*InOutTransform = params.InOutTransform;

}


// Function Insurgency.INSSkeletalMeshComponent.ReprojectMatrix
// ()
// Parameters:
// struct FMatrix                 InMatrix                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UINSSkeletalMeshComponent::ReprojectMatrix(struct FMatrix* InMatrix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkeletalMeshComponent.ReprojectMatrix");

	UINSSkeletalMeshComponent_ReprojectMatrix_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InMatrix != nullptr)
		*InMatrix = params.InMatrix;

}


// Function Insurgency.INSSkeletalMeshComponent.OnSkeletalMeshLoaded
// ()
void UINSSkeletalMeshComponent::OnSkeletalMeshLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkeletalMeshComponent.OnSkeletalMeshLoaded");

	UINSSkeletalMeshComponent_OnSkeletalMeshLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSkeletalMeshComponent.GetCustomFOV
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSSkeletalMeshComponent::GetCustomFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSkeletalMeshComponent.GetCustomFOV");

	UINSSkeletalMeshComponent_GetCustomFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UINSSkeletalMeshComponent::AfterRead()
{
	USkeletalMeshComponent::AfterRead();

}

void UINSSkeletalMeshComponent::BeforeDelete()
{
	USkeletalMeshComponent::BeforeDelete();

}

void UINSSignificanceManager::AfterRead()
{
	USignificanceManager::AfterRead();

}

void UINSSignificanceManager::BeforeDelete()
{
	USignificanceManager::BeforeDelete();

}

void UINSSessionHelper::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(BeaconClientClass, UClass);
	READ_PTR_FULL(PartyBeaconClient, AINSMatchBeaconClient);
}

void UINSSessionHelper::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(BeaconClientClass);
	DELE_PTR_FULL(PartyBeaconClient);
}

// Function Insurgency.INSJoinSessionCallbackProxy.JoinSession
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintFindSessionResult SearchResult                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ServerPassword                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSJoinSessionCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSJoinSessionCallbackProxy* UINSJoinSessionCallbackProxy::JoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FBlueprintFindSessionResult& SearchResult, const struct FString& ServerPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSJoinSessionCallbackProxy.JoinSession");

	UINSJoinSessionCallbackProxy_JoinSession_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.SearchResult = SearchResult;
	params.ServerPassword = ServerPassword;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UINSJoinSessionCallbackProxy::AfterRead()
{
	UOnlineBlueprintCallProxyBase::AfterRead();

}

void UINSJoinSessionCallbackProxy::BeforeDelete()
{
	UOnlineBlueprintCallProxyBase::BeforeDelete();

}

// Function Insurgency.INSFindSessionCallbackProxy.SortServerListEntries
// ()
// Parameters:
// TArray<class UServerListEntry*> ServerList                     (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerListSortType            SortType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInverse                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSFindSessionCallbackProxy::SortServerListEntries(TArray<class UServerListEntry*>* ServerList, EServerListSortType SortType, bool bInverse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.SortServerListEntries");

	UINSFindSessionCallbackProxy_SortServerListEntries_Params params;
	params.SortType = SortType;
	params.bInverse = bInverse;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ServerList != nullptr)
		*ServerList = params.ServerList;

}


// Function Insurgency.INSFindSessionCallbackProxy.OnCompleted
// ()
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSFindSessionCallbackProxy::OnCompleted(bool bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.OnCompleted");

	UINSFindSessionCallbackProxy_OnCompleted_Params params;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSFindSessionCallbackProxy.MakeServerListEntry
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UServerListEntry*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UServerListEntry* UINSFindSessionCallbackProxy::MakeServerListEntry(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.MakeServerListEntry");

	UINSFindSessionCallbackProxy_MakeServerListEntry_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.MakeDummyServerListEntry
// ()
// Parameters:
// struct FText                   Name                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   Map                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   Mode                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            Players                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            MaxPlayers                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Ping                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPassworded                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOfficialRuleset               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRanked                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bModded                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintFindSessionResult ServerToJoin                   (Parm, NativeAccessSpecifierPublic)
// class UServerListEntry*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UServerListEntry* UINSFindSessionCallbackProxy::MakeDummyServerListEntry(const struct FText& Name, const struct FText& Map, const struct FText& Mode, int Players, int MaxPlayers, int Ping, bool bPassworded, bool bOfficialRuleset, bool bRanked, bool bModded, const struct FBlueprintFindSessionResult& ServerToJoin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.MakeDummyServerListEntry");

	UINSFindSessionCallbackProxy_MakeDummyServerListEntry_Params params;
	params.Name = Name;
	params.Map = Map;
	params.Mode = Mode;
	params.Players = Players;
	params.MaxPlayers = MaxPlayers;
	params.Ping = Ping;
	params.bPassworded = bPassworded;
	params.bOfficialRuleset = bOfficialRuleset;
	params.bRanked = bRanked;
	params.bModded = bModded;
	params.ServerToJoin = ServerToJoin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.JoinSession
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ServerPassword                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSFindSessionCallbackProxy::JoinSession(class UObject* WorldContextObject, int LocalUserNum, const struct FBlueprintFindSessionResult& Result, const struct FString& ServerPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.JoinSession");

	UINSFindSessionCallbackProxy_JoinSession_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LocalUserNum = LocalUserNum;
	params.Result = Result;
	params.ServerPassword = ServerPassword;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSFindSessionCallbackProxy.IsVersusServer
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsVersusServer(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsVersusServer");

	UINSFindSessionCallbackProxy_IsVersusServer_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.IsUsingOfficialRuleset
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsUsingOfficialRuleset(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsUsingOfficialRuleset");

	UINSFindSessionCallbackProxy_IsUsingOfficialRuleset_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.IsRunningMutators
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsRunningMutators(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsRunningMutators");

	UINSFindSessionCallbackProxy_IsRunningMutators_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.IsRunningMods
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsRunningMods(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsRunningMods");

	UINSFindSessionCallbackProxy_IsRunningMods_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.IsRankedServer
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsRankedServer(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsRankedServer");

	UINSFindSessionCallbackProxy_IsRankedServer_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.IsPasswordProtected
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsPasswordProtected(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsPasswordProtected");

	UINSFindSessionCallbackProxy_IsPasswordProtected_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.IsCoopServer
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSFindSessionCallbackProxy::IsCoopServer(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.IsCoopServer");

	UINSFindSessionCallbackProxy_IsCoopServer_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetServerName
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSFindSessionCallbackProxy::GetServerName(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetServerName");

	UINSFindSessionCallbackProxy_GetServerName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetServerEntryType
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EServerEntryType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EServerEntryType UINSFindSessionCallbackProxy::GetServerEntryType(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetServerEntryType");

	UINSFindSessionCallbackProxy_GetServerEntryType_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetPingInMs
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSFindSessionCallbackProxy::GetPingInMs(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetPingInMs");

	UINSFindSessionCallbackProxy_GetPingInMs_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetMaxPlayers
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSFindSessionCallbackProxy::GetMaxPlayers(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetMaxPlayers");

	UINSFindSessionCallbackProxy_GetMaxPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetLevel
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSFindSessionCallbackProxy::GetLevel(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetLevel");

	UINSFindSessionCallbackProxy_GetLevel_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetGamemode
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSFindSessionCallbackProxy::GetGamemode(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetGamemode");

	UINSFindSessionCallbackProxy_GetGamemode_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.GetCurrentPlayers
// ()
// Parameters:
// struct FBlueprintFindSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSFindSessionCallbackProxy::GetCurrentPlayers(const struct FBlueprintFindSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.GetCurrentPlayers");

	UINSFindSessionCallbackProxy_GetCurrentPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.FindServerSessionsFiltered
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            MaxResults                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUseLAN                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUseFavorite                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerBrowserPreferences Filters                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UINSSingleRequestQueryQueue* Queue                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSFindSessionCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSFindSessionCallbackProxy* UINSFindSessionCallbackProxy::FindServerSessionsFiltered(class UObject* WorldContextObject, class APlayerController* PlayerController, int MaxResults, bool bUseLAN, bool bUseFavorite, const struct FServerBrowserPreferences& Filters, class UINSSingleRequestQueryQueue* Queue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.FindServerSessionsFiltered");

	UINSFindSessionCallbackProxy_FindServerSessionsFiltered_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.MaxResults = MaxResults;
	params.bUseLAN = bUseLAN;
	params.bUseFavorite = bUseFavorite;
	params.Filters = Filters;
	params.Queue = Queue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSFindSessionCallbackProxy.FindServerSessions
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            MaxResults                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUseLAN                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCoopSearch                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bVersusSearch                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSSingleRequestQueryQueue* Queue                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSFindSessionCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSFindSessionCallbackProxy* UINSFindSessionCallbackProxy::FindServerSessions(class UObject* WorldContextObject, class APlayerController* PlayerController, int MaxResults, bool bUseLAN, bool bCoopSearch, bool bVersusSearch, class UINSSingleRequestQueryQueue* Queue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFindSessionCallbackProxy.FindServerSessions");

	UINSFindSessionCallbackProxy_FindServerSessions_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.MaxResults = MaxResults;
	params.bUseLAN = bUseLAN;
	params.bCoopSearch = bCoopSearch;
	params.bVersusSearch = bVersusSearch;
	params.Queue = Queue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UINSFindSessionCallbackProxy::AfterRead()
{
	UOnlineBlueprintCallProxyBase::AfterRead();

}

void UINSFindSessionCallbackProxy::BeforeDelete()
{
	UOnlineBlueprintCallProxyBase::BeforeDelete();

}

// Function Insurgency.INSSingleRequestQueryQueue.OnComplete
// ()
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSSingleRequestQueryQueue::OnComplete(bool bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSingleRequestQueryQueue.OnComplete");

	UINSSingleRequestQueryQueue_OnComplete_Params params;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSSingleRequestQueryQueue.OnCancelFindComplete
// ()
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSSingleRequestQueryQueue::OnCancelFindComplete(bool bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSSingleRequestQueryQueue.OnCancelFindComplete");

	UINSSingleRequestQueryQueue_OnCancelFindComplete_Params params;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSSingleRequestQueryQueue::AfterRead()
{
	UObject::AfterRead();

}

void UINSSingleRequestQueryQueue::BeforeDelete()
{
	UObject::BeforeDelete();

}

void AINSSandboxGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

}

void AINSSandboxGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

}

void URichPresenceManager::AfterRead()
{
	UGameInstanceSubsystem::AfterRead();

}

void URichPresenceManager::BeforeDelete()
{
	UGameInstanceSubsystem::BeforeDelete();

}

// Function Insurgency.INSRangeMode.SetPlayerAndBotTeam
// ()
// Parameters:
// unsigned char                  NewPlayerTeam                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewBotTeam                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSRangeMode::SetPlayerAndBotTeam(unsigned char NewPlayerTeam, unsigned char NewBotTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSRangeMode.SetPlayerAndBotTeam");

	AINSRangeMode_SetPlayerAndBotTeam_Params params;
	params.NewPlayerTeam = NewPlayerTeam;
	params.NewBotTeam = NewBotTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSRangeMode.ResetRange
// ()
void AINSRangeMode::ResetRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSRangeMode.ResetRange");

	AINSRangeMode_ResetRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSRangeMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

}

void AINSRangeMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

}

// Function Insurgency.INSPushGameMode.RespawnAttackingTeamPostObjective
// ()
void AINSPushGameMode::RespawnAttackingTeamPostObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPushGameMode.RespawnAttackingTeamPostObjective");

	AINSPushGameMode_RespawnAttackingTeamPostObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPushGameMode.OnWavesDepleted_DisableAutoBalance
// ()
// Parameters:
// class UReinforcementSystemComponent* Component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPushGameMode::OnWavesDepleted_DisableAutoBalance(class UReinforcementSystemComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPushGameMode.OnWavesDepleted_DisableAutoBalance");

	AINSPushGameMode_OnWavesDepleted_DisableAutoBalance_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPushGameMode.OnWaveGained_ReenableAutoBalance
// ()
// Parameters:
// class UReinforcementSystemComponent* Component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OldWaveCount                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPushGameMode::OnWaveGained_ReenableAutoBalance(class UReinforcementSystemComponent* Component, int OldWaveCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPushGameMode.OnWaveGained_ReenableAutoBalance");

	AINSPushGameMode_OnWaveGained_ReenableAutoBalance_Params params;
	params.Component = Component;
	params.OldWaveCount = OldWaveCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPushGameMode.OnLastStandDelegate__DelegateSignature
// ()
void AINSPushGameMode::OnLastStandDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPushGameMode.OnLastStandDelegate__DelegateSignature");

	AINSPushGameMode_OnLastStandDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPushGameMode.LastStandDeferredSetup
// ()
void AINSPushGameMode::LastStandDeferredSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPushGameMode.LastStandDeferredSetup");

	AINSPushGameMode_LastStandDeferredSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPushGameMode.DisableInitialSpawnZones
// ()
void AINSPushGameMode::DisableInitialSpawnZones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPushGameMode.DisableInitialSpawnZones");

	AINSPushGameMode_DisableInitialSpawnZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPushGameMode.AdvanceAttackerSpawns
// ()
void AINSPushGameMode::AdvanceAttackerSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPushGameMode.AdvanceAttackerSpawns");

	AINSPushGameMode_AdvanceAttackerSpawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSPushGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(ActiveObjective, AObjectiveBase);
	READ_PTR_FULL(AttackerReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(DefenderReinforcementSystem, UReinforcementSystemComponent);
}

void AINSPushGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(ActiveObjective);
	DELE_PTR_FULL(AttackerReinforcementSystem);
	DELE_PTR_FULL(DefenderReinforcementSystem);
}

void UINSProjectileMovementComponent::AfterRead()
{
	UProjectileMovementComponent::AfterRead();

	READ_PTR_FULL(OuterProjectile, AProjectileBase);
}

void UINSProjectileMovementComponent::BeforeDelete()
{
	UProjectileMovementComponent::BeforeDelete();

	DELE_PTR_FULL(OuterProjectile);
}

// Function Insurgency.INSPlayerState.SetIsPlaying
// ()
// Parameters:
// bool                           InIsPlaying                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::SetIsPlaying(bool InIsPlaying)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.SetIsPlaying");

	AINSPlayerState_SetIsPlaying_Params params;
	params.InIsPlaying = InIsPlaying;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ResetRoundStats
// ()
void AINSPlayerState::ResetRoundStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ResetRoundStats");

	AINSPlayerState_ResetRoundStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.PreLoadCosmetics
// ()
void AINSPlayerState::PreLoadCosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.PreLoadCosmetics");

	AINSPlayerState_PreLoadCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_TeamId
// ()
void AINSPlayerState::OnRep_TeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_TeamId");

	AINSPlayerState_OnRep_TeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_ScoreboardBadge
// ()
void AINSPlayerState::OnRep_ScoreboardBadge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_ScoreboardBadge");

	AINSPlayerState_OnRep_ScoreboardBadge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_PlayerExperience
// ()
void AINSPlayerState::OnRep_PlayerExperience()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_PlayerExperience");

	AINSPlayerState_OnRep_PlayerExperience_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_PlayerClass
// ()
void AINSPlayerState::OnRep_PlayerClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_PlayerClass");

	AINSPlayerState_OnRep_PlayerClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_HasDeveloperTag
// ()
void AINSPlayerState::OnRep_HasDeveloperTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_HasDeveloperTag");

	AINSPlayerState_OnRep_HasDeveloperTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_Cosmetics
// ()
void AINSPlayerState::OnRep_Cosmetics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_Cosmetics");

	AINSPlayerState_OnRep_Cosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnRep_ActiveObjectiveId
// ()
void AINSPlayerState::OnRep_ActiveObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnRep_ActiveObjectiveId");

	AINSPlayerState_OnRep_ActiveObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.OnKilledOther
// ()
// Parameters:
// struct FSoldierKillInfo        SoldierKillInfo                (Parm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerState::OnKilledOther(const struct FSoldierKillInfo& SoldierKillInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.OnKilledOther");

	AINSPlayerState_OnKilledOther_Params params;
	params.SoldierKillInfo = SoldierKillInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.IsSpectatingSpectator
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::IsSpectatingSpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.IsSpectatingSpectator");

	AINSPlayerState_IsSpectatingSpectator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.IsFactionValid
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::IsFactionValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.IsFactionValid");

	AINSPlayerState_IsFactionValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.IsDedicatedSpectator
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::IsDedicatedSpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.IsDedicatedSpectator");

	AINSPlayerState_IsDedicatedSpectator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.IncrementScore
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncrementTeam                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EScoreType                     ScoreType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::IncrementScore(int Amount, bool bIncrementTeam, EScoreType ScoreType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.IncrementScore");

	AINSPlayerState_IncrementScore_Params params;
	params.Amount = Amount;
	params.bIncrementTeam = bIncrementTeam;
	params.ScoreType = ScoreType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.HasSelectedOfficer
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::HasSelectedOfficer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.HasSelectedOfficer");

	AINSPlayerState_HasSelectedOfficer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.HasSelectedObserver
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::HasSelectedObserver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.HasSelectedObserver");

	AINSPlayerState_HasSelectedObserver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetUniqueNetId
// ()
// Parameters:
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FUniqueNetIdRepl AINSPlayerState::GetUniqueNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetUniqueNetId");

	AINSPlayerState_GetUniqueNetId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetUniqueIdStringWithPlatform
// ()
// Parameters:
// struct FString                 OutUniqueId                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::GetUniqueIdStringWithPlatform(struct FString* OutUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetUniqueIdStringWithPlatform");

	AINSPlayerState_GetUniqueIdStringWithPlatform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUniqueId != nullptr)
		*OutUniqueId = params.OutUniqueId;

}


// Function Insurgency.INSPlayerState.GetUniqueIdString
// ()
// Parameters:
// struct FString                 OutUniqueId                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::GetUniqueIdString(struct FString* OutUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetUniqueIdString");

	AINSPlayerState_GetUniqueIdString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUniqueId != nullptr)
		*OutUniqueId = params.OutUniqueId;

}


// Function Insurgency.INSPlayerState.GetUniqueIdPlatform
// ()
// Parameters:
// struct FName                   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FName AINSPlayerState::GetUniqueIdPlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetUniqueIdPlatform");

	AINSPlayerState_GetUniqueIdPlatform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetTeamInfo
// ()
// Parameters:
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSPlayerState::GetTeamInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetTeamInfo");

	AINSPlayerState_GetTeamInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetTeamId
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSPlayerState::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetTeamId");

	AINSPlayerState_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetSharedCosmeticState
// ()
// Parameters:
// class USharedCosmeticState*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USharedCosmeticState* AINSPlayerState::GetSharedCosmeticState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetSharedCosmeticState");

	AINSPlayerState_GetSharedCosmeticState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetPreviousTeamInfo
// ()
// Parameters:
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSPlayerState::GetPreviousTeamInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetPreviousTeamInfo");

	AINSPlayerState_GetPreviousTeamInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetNemesisStatsForCopy
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNemesisStats           OutStats                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::GetNemesisStatsForCopy(class AINSPlayerState* PlayerState, struct FNemesisStats* OutStats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetNemesisStatsForCopy");

	AINSPlayerState_GetNemesisStatsForCopy_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutStats != nullptr)
		*OutStats = params.OutStats;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetIsPlaying
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerState::GetIsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetIsPlaying");

	AINSPlayerState_GetIsPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.GetColor
// ()
// Parameters:
// class AINSPlayerState*         RelativePlayer                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor AINSPlayerState::GetColor(class AINSPlayerState* RelativePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.GetColor");

	AINSPlayerState_GetColor_Params params;
	params.RelativePlayer = RelativePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.FindSoldier
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* AINSPlayerState::FindSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.FindSoldier");

	AINSPlayerState_FindSoldier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerState.ClientUpdateSoldierPosition
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanLean                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientUpdateSoldierPosition(class AINSSoldier* Soldier, bool bCanLean)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientUpdateSoldierPosition");

	AINSPlayerState_ClientUpdateSoldierPosition_Params params;
	params.Soldier = Soldier;
	params.bCanLean = bCanLean;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientUpdateLastRoundMostUsed
// ()
// Parameters:
// struct FPlayerRoundSummary     RoundSummary                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientUpdateLastRoundMostUsed(const struct FPlayerRoundSummary& RoundSummary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientUpdateLastRoundMostUsed");

	AINSPlayerState_ClientUpdateLastRoundMostUsed_Params params;
	params.RoundSummary = RoundSummary;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientUpdateLastRoundExperience
// ()
// Parameters:
// struct FPlayerRoundExpSummary  ExpResult                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientUpdateLastRoundExperience(const struct FPlayerRoundExpSummary& ExpResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientUpdateLastRoundExperience");

	AINSPlayerState_ClientUpdateLastRoundExperience_Params params;
	params.ExpResult = ExpResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientScoreObjectiveReset
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientScoreObjectiveReset(class AObjectiveCapturable* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientScoreObjectiveReset");

	AINSPlayerState_ClientScoreObjectiveReset_Params params;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientScoreObjectiveCaptured
// ()
// Parameters:
// class AObjectiveCapturable*    Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  OldOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientScoreObjectiveCaptured(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientScoreObjectiveCaptured");

	AINSPlayerState_ClientScoreObjectiveCaptured_Params params;
	params.Objective = Objective;
	params.OldOwners = OldOwners;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnSight
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnSight(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnSight");

	AINSPlayerState_ClientOnSight_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnSeatTakenOver
// ()
// Parameters:
// class AINSCharacter*           OldCharacter                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnSeatTakenOver(class AINSCharacter* OldCharacter, class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnSeatTakenOver");

	AINSPlayerState_ClientOnSeatTakenOver_Params params;
	params.OldCharacter = OldCharacter;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnReload
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSpeedReload                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnReload(class AItemWeapon* Weapon, bool bSpeedReload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnReload");

	AINSPlayerState_ClientOnReload_Params params;
	params.Weapon = Weapon;
	params.bSpeedReload = bSpeedReload;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnPlayerSpawned
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnPlayerSpawned(class AINSSoldier* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnPlayerSpawned");

	AINSPlayerState_ClientOnPlayerSpawned_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnOpenDoor
// ()
// Parameters:
// class ADoor*                   Door                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bKicked                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnOpenDoor(class ADoor* Door, bool bKicked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnOpenDoor");

	AINSPlayerState_ClientOnOpenDoor_Params params;
	params.Door = Door;
	params.bKicked = bKicked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnObserverCalledFireSupport
// ()
void AINSPlayerState::ClientOnObserverCalledFireSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnObserverCalledFireSupport");

	AINSPlayerState_ClientOnObserverCalledFireSupport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnMeleeAttack
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnMeleeAttack(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnMeleeAttack");

	AINSPlayerState_ClientOnMeleeAttack_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnKilledOtherInVehicle
// ()
// Parameters:
// struct FSoldierKillInfo        SoldierKillInfo                (Parm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnKilledOtherInVehicle(const struct FSoldierKillInfo& SoldierKillInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnKilledOtherInVehicle");

	AINSPlayerState_ClientOnKilledOtherInVehicle_Params params;
	params.SoldierKillInfo = SoldierKillInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnFirstBlood
// ()
void AINSPlayerState::ClientOnFirstBlood()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnFirstBlood");

	AINSPlayerState_ClientOnFirstBlood_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnFire
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnFire(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnFire");

	AINSPlayerState_ClientOnFire_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnEquip
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnEquip(class AINSSoldier* Soldier, class AItemEquipable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnEquip");

	AINSPlayerState_ClientOnEquip_Params params;
	params.Soldier = Soldier;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnDryFire
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnDryFire(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnDryFire");

	AINSPlayerState_ClientOnDryFire_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnDownedFireSupport
// ()
void AINSPlayerState::ClientOnDownedFireSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnDownedFireSupport");

	AINSPlayerState_ClientOnDownedFireSupport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnBeginOverlapObjective
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnBeginOverlapObjective(class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnBeginOverlapObjective");

	AINSPlayerState_ClientOnBeginOverlapObjective_Params params;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientOnAmmoCheck
// ()
// Parameters:
// class AItemWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientOnAmmoCheck(class AItemWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientOnAmmoCheck");

	AINSPlayerState_ClientOnAmmoCheck_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClientObjectiveDestroyed
// ()
// Parameters:
// class AObjectiveDestructible*  Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromRig                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ClientObjectiveDestroyed(class AObjectiveDestructible* Objective, bool bFromRig)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClientObjectiveDestroyed");

	AINSPlayerState_ClientObjectiveDestroyed_Params params;
	params.Objective = Objective;
	params.bFromRig = bFromRig;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ClearSharedCosmeticState
// ()
void AINSPlayerState::ClearSharedCosmeticState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ClearSharedCosmeticState");

	AINSPlayerState_ClearSharedCosmeticState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.ChangePlayerClass
// ()
// Parameters:
// class UPlayerClass*            NewPlayerClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::ChangePlayerClass(class UPlayerClass* NewPlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.ChangePlayerClass");

	AINSPlayerState_ChangePlayerClass_Params params;
	params.NewPlayerClass = NewPlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.AwardTaglineWithFloatContext
// ()
// Parameters:
// class UClass*                  TaglineClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ContextValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAsPercentage                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::AwardTaglineWithFloatContext(class UClass* TaglineClass, float ContextValue, bool bAsPercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.AwardTaglineWithFloatContext");

	AINSPlayerState_AwardTaglineWithFloatContext_Params params;
	params.TaglineClass = TaglineClass;
	params.ContextValue = ContextValue;
	params.bAsPercentage = bAsPercentage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.AwardTaglineWithContext
// ()
// Parameters:
// class UClass*                  TaglineClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ContextValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::AwardTaglineWithContext(class UClass* TaglineClass, int ContextValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.AwardTaglineWithContext");

	AINSPlayerState_AwardTaglineWithContext_Params params;
	params.TaglineClass = TaglineClass;
	params.ContextValue = ContextValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.AwardTagline
// ()
// Parameters:
// class UClass*                  TaglineClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerState::AwardTagline(class UClass* TaglineClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.AwardTagline");

	AINSPlayerState_AwardTagline_Params params;
	params.TaglineClass = TaglineClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerState.AddTagline
// ()
// Parameters:
// struct FPlayerAwardedTagline   TaglineAward                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerState::AddTagline(const struct FPlayerAwardedTagline& TaglineAward)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerState.AddTagline");

	AINSPlayerState_AddTagline_Params params;
	params.TaglineAward = TaglineAward;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSPlayerState::AfterRead()
{
	APlayerState::AfterRead();

	READ_PTR_FULL(PlayerClass, UPlayerClass);
	READ_PTR_FULL(ActiveObjective, AObjectiveBase);
	READ_PTR_FULL(KilledOnObjective, AObjectiveBase);
	READ_PTR_FULL(CosmeticsCache, UCosmeticCache);
	READ_PTR_FULL(SharedCosmeticState, USharedCosmeticState);
	READ_PTR_FULL(GameStats, USandstormStatsCollectionComponent);
}

void AINSPlayerState::BeforeDelete()
{
	APlayerState::BeforeDelete();

	DELE_PTR_FULL(PlayerClass);
	DELE_PTR_FULL(ActiveObjective);
	DELE_PTR_FULL(KilledOnObjective);
	DELE_PTR_FULL(CosmeticsCache);
	DELE_PTR_FULL(SharedCosmeticState);
	DELE_PTR_FULL(GameStats);
}

// Function Insurgency.INSPlayerStart.SetAssociatedSpawnZone
// ()
// Parameters:
// class ASpawnZone*              Zone                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerStart::SetAssociatedSpawnZone(class ASpawnZone* Zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerStart.SetAssociatedSpawnZone");

	AINSPlayerStart_SetAssociatedSpawnZone_Params params;
	params.Zone = Zone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerStart.GetSpawnLocation
// ()
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerStart::GetSpawnLocation(struct FVector* OutLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerStart.GetSpawnLocation");

	AINSPlayerStart_GetSpawnLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;

}


void AINSPlayerStart::AfterRead()
{
	APlayerStart::AfterRead();

	READ_PTR_FULL(AssociatedSpawnZone, ASpawnZone);
	READ_PTR_FULL(SoundscapeOverride, USoundscapeDefinition);
}

void AINSPlayerStart::BeforeDelete()
{
	APlayerStart::BeforeDelete();

	DELE_PTR_FULL(AssociatedSpawnZone);
	DELE_PTR_FULL(SoundscapeOverride);
}

// Function Insurgency.INSPlayerLocalProfile.UpdateServerBrowserPreferences
// ()
// Parameters:
// struct FServerBrowserPreferences NewPreferences                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::UpdateServerBrowserPreferences(const struct FServerBrowserPreferences& NewPreferences)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.UpdateServerBrowserPreferences");

	UINSPlayerLocalProfile_UpdateServerBrowserPreferences_Params params;
	params.NewPreferences = NewPreferences;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.UpdatePlayerClassDefaultLoadout
// ()
// Parameters:
// TArray<struct FBasicLoadoutItem> Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::UpdatePlayerClassDefaultLoadout(TArray<struct FBasicLoadoutItem> Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.UpdatePlayerClassDefaultLoadout");

	UINSPlayerLocalProfile_UpdatePlayerClassDefaultLoadout_Params params;
	params.Items = Items;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.UpdateOpticPreference
// ()
// Parameters:
// int                            Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::UpdateOpticPreference(int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.UpdateOpticPreference");

	UINSPlayerLocalProfile_UpdateOpticPreference_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.UpdateFiremodePreference
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::UpdateFiremodePreference(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.UpdateFiremodePreference");

	UINSPlayerLocalProfile_UpdateFiremodePreference_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ShouldHideReplayFromHistory
// ()
// Parameters:
// int                            ReplayID                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::ShouldHideReplayFromHistory(int ReplayID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ShouldHideReplayFromHistory");

	UINSPlayerLocalProfile_ShouldHideReplayFromHistory_Params params;
	params.ReplayID = ReplayID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.SetUseScopeSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNewSetting                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetUseScopeSensitivityScale(bool bGamepad, bool bNewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetUseScopeSensitivityScale");

	UINSPlayerLocalProfile_SetUseScopeSensitivityScale_Params params;
	params.bGamepad = bGamepad;
	params.bNewSetting = bNewSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetToDefaults
// ()
void UINSPlayerLocalProfile::SetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetToDefaults");

	UINSPlayerLocalProfile_SetToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetSensitivityScaleForOpticZoom
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOpticZoomLevel                ZoomLevel                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewVal                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetSensitivityScaleForOpticZoom(bool bGamepad, EOpticZoomLevel ZoomLevel, float NewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetSensitivityScaleForOpticZoom");

	UINSPlayerLocalProfile_SetSensitivityScaleForOpticZoom_Params params;
	params.bGamepad = bGamepad;
	params.ZoomLevel = ZoomLevel;
	params.NewVal = NewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetScoreboardBadgeFromItemId
// ()
// Parameters:
// int                            NewScoreboardBadgeItemId       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetScoreboardBadgeFromItemId(int NewScoreboardBadgeItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetScoreboardBadgeFromItemId");

	UINSPlayerLocalProfile_SetScoreboardBadgeFromItemId_Params params;
	params.NewScoreboardBadgeItemId = NewScoreboardBadgeItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetScoreboardBadge
// ()
// Parameters:
// int                            NewScoreboardBadge             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetScoreboardBadge(int NewScoreboardBadge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetScoreboardBadge");

	UINSPlayerLocalProfile_SetScoreboardBadge_Params params;
	params.NewScoreboardBadge = NewScoreboardBadge;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetScopeSensitivityScaleUsesWorldFOV
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNewSetting                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetScopeSensitivityScaleUsesWorldFOV(bool bGamepad, bool bNewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetScopeSensitivityScaleUsesWorldFOV");

	UINSPlayerLocalProfile_SetScopeSensitivityScaleUsesWorldFOV_Params params;
	params.bGamepad = bGamepad;
	params.bNewSetting = bNewSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetScopeSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewSetting                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetScopeSensitivityScale(bool bGamepad, float NewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetScopeSensitivityScale");

	UINSPlayerLocalProfile_SetScopeSensitivityScale_Params params;
	params.bGamepad = bGamepad;
	params.NewSetting = NewSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetRadialToggle
// ()
// Parameters:
// bool                           bSetting                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetRadialToggle(bool bSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetRadialToggle");

	UINSPlayerLocalProfile_SetRadialToggle_Params params;
	params.bSetting = bSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetPreferredFirearm
// ()
void UINSPlayerLocalProfile::SetPreferredFirearm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetPreferredFirearm");

	UINSPlayerLocalProfile_SetPreferredFirearm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetPreferredFaction
// ()
// Parameters:
// struct FName                   FactionPref                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetPreferredFaction(const struct FName& FactionPref)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetPreferredFaction");

	UINSPlayerLocalProfile_SetPreferredFaction_Params params;
	params.FactionPref = FactionPref;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetPlaylistSelected
// ()
// Parameters:
// EPlaylistType                  Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaylist*               Playlist                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSelected                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetPlaylistSelected(EPlaylistType Type, class UPlaylist* Playlist, bool bSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetPlaylistSelected");

	UINSPlayerLocalProfile_SetPlaylistSelected_Params params;
	params.Type = Type;
	params.Playlist = Playlist;
	params.bSelected = bSelected;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetMouseSensitivity
// ()
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetMouseSensitivity(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetMouseSensitivity");

	UINSPlayerLocalProfile_SetMouseSensitivity_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetManualBipod
// ()
// Parameters:
// bool                           bSetting                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetManualBipod(bool bSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetManualBipod");

	UINSPlayerLocalProfile_SetManualBipod_Params params;
	params.bSetting = bSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetKeyBindingsToDefaults
// ()
void UINSPlayerLocalProfile::SetKeyBindingsToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetKeyBindingsToDefaults");

	UINSPlayerLocalProfile_SetKeyBindingsToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetInvertedYAxisMouse
// ()
// Parameters:
// bool                           bSetting                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetInvertedYAxisMouse(bool bSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetInvertedYAxisMouse");

	UINSPlayerLocalProfile_SetInvertedYAxisMouse_Params params;
	params.bSetting = bSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetInvertedYAxis
// ()
// Parameters:
// bool                           bSetting                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetInvertedYAxis(bool bSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetInvertedYAxis");

	UINSPlayerLocalProfile_SetInvertedYAxis_Params params;
	params.bSetting = bSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetGamepadYSensitivity
// ()
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetGamepadYSensitivity(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetGamepadYSensitivity");

	UINSPlayerLocalProfile_SetGamepadYSensitivity_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetGamepadXSensitivity
// ()
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetGamepadXSensitivity(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetGamepadXSensitivity");

	UINSPlayerLocalProfile_SetGamepadXSensitivity_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetGamepadDampeningSettings
// ()
// Parameters:
// float                          NewDampeningStrength           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewDampeningSize               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewDampeningEaseIn             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetGamepadDampeningSettings(float NewDampeningStrength, float NewDampeningSize, float NewDampeningEaseIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetGamepadDampeningSettings");

	UINSPlayerLocalProfile_SetGamepadDampeningSettings_Params params;
	params.NewDampeningStrength = NewDampeningStrength;
	params.NewDampeningSize = NewDampeningSize;
	params.NewDampeningEaseIn = NewDampeningEaseIn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetGamepadAimSensitivityCurve
// ()
// Parameters:
// EGamepadSensitivityCurve       NewCurve                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetGamepadAimSensitivityCurve(EGamepadSensitivityCurve NewCurve)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetGamepadAimSensitivityCurve");

	UINSPlayerLocalProfile_SetGamepadAimSensitivityCurve_Params params;
	params.NewCurve = NewCurve;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetGamepadAccelerationSettings
// ()
// Parameters:
// float                          NewTimeThreshold               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewTimeToReachMax              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewMaxMultiplier               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetGamepadAccelerationSettings(float NewTimeThreshold, float NewTimeToReachMax, float NewMaxMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetGamepadAccelerationSettings");

	UINSPlayerLocalProfile_SetGamepadAccelerationSettings_Params params;
	params.NewTimeThreshold = NewTimeThreshold;
	params.NewTimeToReachMax = NewTimeToReachMax;
	params.NewMaxMultiplier = NewMaxMultiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetGamepadAccelerationEnabled
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetGamepadAccelerationEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetGamepadAccelerationEnabled");

	UINSPlayerLocalProfile_SetGamepadAccelerationEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetFreeaimDeadzoneScale
// ()
// Parameters:
// float                          NewScale                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetFreeaimDeadzoneScale(float NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetFreeaimDeadzoneScale");

	UINSPlayerLocalProfile_SetFreeaimDeadzoneScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetFreeaimDeadzoneMinimumSensitivity
// ()
// Parameters:
// float                          NewSensitivity                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetFreeaimDeadzoneMinimumSensitivity(float NewSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetFreeaimDeadzoneMinimumSensitivity");

	UINSPlayerLocalProfile_SetFreeaimDeadzoneMinimumSensitivity_Params params;
	params.NewSensitivity = NewSensitivity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetFreeaimDeadzoneEnabled
// ()
// Parameters:
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetFreeaimDeadzoneEnabled(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetFreeaimDeadzoneEnabled");

	UINSPlayerLocalProfile_SetFreeaimDeadzoneEnabled_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetFOVSensitivityScaling
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNewSetting                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetFOVSensitivityScaling(bool bGamepad, bool bNewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetFOVSensitivityScaling");

	UINSPlayerLocalProfile_SetFOVSensitivityScaling_Params params;
	params.bGamepad = bGamepad;
	params.bNewSetting = bNewSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetForceFeedbackIntensity
// ()
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetForceFeedbackIntensity(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetForceFeedbackIntensity");

	UINSPlayerLocalProfile_SetForceFeedbackIntensity_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetFocusSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetFocusSensitivityScale(bool bGamepad, float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetFocusSensitivityScale");

	UINSPlayerLocalProfile_SetFocusSensitivityScale_Params params;
	params.bGamepad = bGamepad;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetControlSettingsToDefaults
// ()
void UINSPlayerLocalProfile::SetControlSettingsToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetControlSettingsToDefaults");

	UINSPlayerLocalProfile_SetControlSettingsToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetControllerLayoutName
// ()
// Parameters:
// struct FString                 InName                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetControllerLayoutName(const struct FString& InName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetControllerLayoutName");

	UINSPlayerLocalProfile_SetControllerLayoutName_Params params;
	params.InName = InName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetControllerLayout
// ()
// Parameters:
// class UControllerLayout*       Layout                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetControllerLayout(class UControllerLayout* Layout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetControllerLayout");

	UINSPlayerLocalProfile_SetControllerLayout_Params params;
	params.Layout = Layout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetAutoLean
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetAutoLean(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetAutoLean");

	UINSPlayerLocalProfile_SetAutoLean_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SetAimingSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewSetting                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SetAimingSensitivityScale(bool bGamepad, float NewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SetAimingSensitivityScale");

	UINSPlayerLocalProfile_SetAimingSensitivityScale_Params params;
	params.bGamepad = bGamepad;
	params.NewSetting = NewSetting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SaveToCloud
// ()
void UINSPlayerLocalProfile::SaveToCloud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveToCloud");

	UINSPlayerLocalProfile_SaveToCloud_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SaveProfileBlockToCloud
// ()
// Parameters:
// struct FProfileSaveBlock       ProfileBlock                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SaveProfileBlockToCloud(const struct FProfileSaveBlock& ProfileBlock)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveProfileBlockToCloud");

	UINSPlayerLocalProfile_SaveProfileBlockToCloud_Params params;
	params.ProfileBlock = ProfileBlock;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SaveProfileBlock
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bToCloud                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SaveProfileBlock(EProfileBlockType Type, bool bToCloud)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveProfileBlock");

	UINSPlayerLocalProfile_SaveProfileBlock_Params params;
	params.Type = Type;
	params.bToCloud = bToCloud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SavePlayerClassLoadout
// ()
// Parameters:
// struct FText                   LoadoutName                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FBasicLoadoutItem> Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::SavePlayerClassLoadout(const struct FText& LoadoutName, TArray<struct FBasicLoadoutItem> Items, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SavePlayerClassLoadout");

	UINSPlayerLocalProfile_SavePlayerClassLoadout_Params params;
	params.LoadoutName = LoadoutName;
	params.Items = Items;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.SaveLocalProfileIfDirty
// ()
void UINSPlayerLocalProfile::SaveLocalProfileIfDirty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveLocalProfileIfDirty");

	UINSPlayerLocalProfile_SaveLocalProfileIfDirty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SaveLocalProfile
// ()
void UINSPlayerLocalProfile::SaveLocalProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveLocalProfile");

	UINSPlayerLocalProfile_SaveLocalProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.SaveActivePresetIndex
// ()
// Parameters:
// int                            ActivePresetIndex              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::SaveActivePresetIndex(int ActivePresetIndex, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveActivePresetIndex");

	UINSPlayerLocalProfile_SaveActivePresetIndex_Params params;
	params.ActivePresetIndex = ActivePresetIndex;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.SaveAchievementPercent
// ()
// Parameters:
// struct FString                 AchType                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::SaveAchievementPercent(const struct FString& AchType, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.SaveAchievementPercent");

	UINSPlayerLocalProfile_SaveAchievementPercent_Params params;
	params.AchType = AchType;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ResetServerBrowserPreferences
// ()
void UINSPlayerLocalProfile::ResetServerBrowserPreferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ResetServerBrowserPreferences");

	UINSPlayerLocalProfile_ResetServerBrowserPreferences_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ResetLessons
// ()
void UINSPlayerLocalProfile::ResetLessons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ResetLessons");

	UINSPlayerLocalProfile_ResetLessons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ResetLastMatchStats
// ()
void UINSPlayerLocalProfile::ResetLastMatchStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ResetLastMatchStats");

	UINSPlayerLocalProfile_ResetLastMatchStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ResetFavoritedServers
// ()
void UINSPlayerLocalProfile::ResetFavoritedServers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ResetFavoritedServers");

	UINSPlayerLocalProfile_ResetFavoritedServers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ReplaceActionMappings
// ()
// Parameters:
// struct FName                   OldBinding                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   NewBinding                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::ReplaceActionMappings(const struct FName& OldBinding, const struct FName& NewBinding)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ReplaceActionMappings");

	UINSPlayerLocalProfile_ReplaceActionMappings_Params params;
	params.OldBinding = OldBinding;
	params.NewBinding = NewBinding;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ReplaceActionMappingKey
// ()
// Parameters:
// struct FName                   MatchingBinding                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    OldKey                         (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    NewKey                         (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::ReplaceActionMappingKey(const struct FName& MatchingBinding, const struct FKey& OldKey, const struct FKey& NewKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ReplaceActionMappingKey");

	UINSPlayerLocalProfile_ReplaceActionMappingKey_Params params;
	params.MatchingBinding = MatchingBinding;
	params.OldKey = OldKey;
	params.NewKey = NewKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ReplaceActionMapping
// ()
// Parameters:
// struct FName                   OldBinding                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   NewBinding                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    Key                            (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::ReplaceActionMapping(const struct FName& OldBinding, const struct FName& NewBinding, const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ReplaceActionMapping");

	UINSPlayerLocalProfile_ReplaceActionMapping_Params params;
	params.OldBinding = OldBinding;
	params.NewBinding = NewBinding;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.RenameSavedLoadout
// ()
// Parameters:
// int                            PresetIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   NewName                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::RenameSavedLoadout(int PresetIndex, const struct FText& NewName, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.RenameSavedLoadout");

	UINSPlayerLocalProfile_RenameSavedLoadout_Params params;
	params.PresetIndex = PresetIndex;
	params.NewName = NewName;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.RemoveFavoritedServer
// ()
// Parameters:
// struct FBlueprintFindSessionResult NewRemovedServer               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::RemoveFavoritedServer(const struct FBlueprintFindSessionResult& NewRemovedServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.RemoveFavoritedServer");

	UINSPlayerLocalProfile_RemoveFavoritedServer_Params params;
	params.NewRemovedServer = NewRemovedServer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.RemoveCloudDelegates
// ()
void UINSPlayerLocalProfile::RemoveCloudDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.RemoveCloudDelegates");

	UINSPlayerLocalProfile_RemoveCloudDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.RemoveActionMapping
// ()
// Parameters:
// struct FInputActionKeyMapping  KeyMapping                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::RemoveActionMapping(struct FInputActionKeyMapping* KeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.RemoveActionMapping");

	UINSPlayerLocalProfile_RemoveActionMapping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (KeyMapping != nullptr)
		*KeyMapping = params.KeyMapping;

}


// Function Insurgency.INSPlayerLocalProfile.ReceiveLessonHint
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::ReceiveLessonHint(class UClass* Lesson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ReceiveLessonHint");

	UINSPlayerLocalProfile_ReceiveLessonHint_Params params;
	params.Lesson = Lesson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.OnUserConfirmedLicenseAgreement
// ()
void UINSPlayerLocalProfile::OnUserConfirmedLicenseAgreement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.OnUserConfirmedLicenseAgreement");

	UINSPlayerLocalProfile_OnUserConfirmedLicenseAgreement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerLocalProfile.OnUIOptionChangedDelegate__DelegateSignature
// ()
void UINSPlayerLocalProfile::OnUIOptionChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerLocalProfile.OnUIOptionChangedDelegate__DelegateSignature");

	UINSPlayerLocalProfile_OnUIOptionChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerLocalProfile.OnProfileBlockSavedDelegate__DelegateSignature
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::OnProfileBlockSavedDelegate__DelegateSignature(EProfileBlockType Type)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerLocalProfile.OnProfileBlockSavedDelegate__DelegateSignature");

	UINSPlayerLocalProfile_OnProfileBlockSavedDelegate__DelegateSignature_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerLocalProfile.OnProfileBlockLoadedDelegate__DelegateSignature
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromCloud                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::OnProfileBlockLoadedDelegate__DelegateSignature(EProfileBlockType Type, bool bFromCloud)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerLocalProfile.OnProfileBlockLoadedDelegate__DelegateSignature");

	UINSPlayerLocalProfile_OnProfileBlockLoadedDelegate__DelegateSignature_Params params;
	params.Type = Type;
	params.bFromCloud = bFromCloud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.MarkDirty
// ()
void UINSPlayerLocalProfile::MarkDirty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.MarkDirty");

	UINSPlayerLocalProfile_MarkDirty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.LoadProfileBlock
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromCloud                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::LoadProfileBlock(EProfileBlockType Type, bool bFromCloud)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.LoadProfileBlock");

	UINSPlayerLocalProfile_LoadProfileBlock_Params params;
	params.Type = Type;
	params.bFromCloud = bFromCloud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.LoadFromCloud
// ()
void UINSPlayerLocalProfile::LoadFromCloud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.LoadFromCloud");

	UINSPlayerLocalProfile_LoadFromCloud_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.IsRadialToggle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::IsRadialToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.IsRadialToggle");

	UINSPlayerLocalProfile_IsRadialToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.IsPlaylistSelected
// ()
// Parameters:
// EPlaylistType                  Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaylist*               Playlist                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::IsPlaylistSelected(EPlaylistType Type, class UPlaylist* Playlist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.IsPlaylistSelected");

	UINSPlayerLocalProfile_IsPlaylistSelected_Params params;
	params.Type = Type;
	params.Playlist = Playlist;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.IsManualBipod
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::IsManualBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.IsManualBipod");

	UINSPlayerLocalProfile_IsManualBipod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.IsFavoritedServer
// ()
// Parameters:
// struct FBlueprintFindSessionResult CheckServer                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::IsFavoritedServer(const struct FBlueprintFindSessionResult& CheckServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.IsFavoritedServer");

	UINSPlayerLocalProfile_IsFavoritedServer_Params params;
	params.CheckServer = CheckServer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.IsDirty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::IsDirty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.IsDirty");

	UINSPlayerLocalProfile_IsDirty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.IncrementNewHighlights
// ()
void UINSPlayerLocalProfile::IncrementNewHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.IncrementNewHighlights");

	UINSPlayerLocalProfile_IncrementNewHighlights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.HideReplayFromHistory
// ()
// Parameters:
// int                            ReplayID                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::HideReplayFromHistory(int ReplayID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HideReplayFromHistory");

	UINSPlayerLocalProfile_HideReplayFromHistory_Params params;
	params.ReplayID = ReplayID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.HasUserConfirmedLicenseAgreement
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::HasUserConfirmedLicenseAgreement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasUserConfirmedLicenseAgreement");

	UINSPlayerLocalProfile_HasUserConfirmedLicenseAgreement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.HasPreviewedCosmeticItem
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::HasPreviewedCosmeticItem(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasPreviewedCosmeticItem");

	UINSPlayerLocalProfile_HasPreviewedCosmeticItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.HasPlayerClassLoadoutNamed
// ()
// Parameters:
// struct FText                   LoadoutName                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSPlayerLocalProfile::HasPlayerClassLoadoutNamed(const struct FText& LoadoutName, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasPlayerClassLoadoutNamed");

	UINSPlayerLocalProfile_HasPlayerClassLoadoutNamed_Params params;
	params.LoadoutName = LoadoutName;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.HasEquippedUpgrade
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::HasEquippedUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasEquippedUpgrade");

	UINSPlayerLocalProfile_HasEquippedUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.HasEquippedItem
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::HasEquippedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasEquippedItem");

	UINSPlayerLocalProfile_HasEquippedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.HasCosmeticPresetForFaction
// ()
// Parameters:
// struct FString                 InFactionString                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::HasCosmeticPresetForFaction(const struct FString& InFactionString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasCosmeticPresetForFaction");

	UINSPlayerLocalProfile_HasCosmeticPresetForFaction_Params params;
	params.InFactionString = InFactionString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.HasCompletedLessonHint
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::HasCompletedLessonHint(class UClass* Lesson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.HasCompletedLessonHint");

	UINSPlayerLocalProfile_HasCompletedLessonHint_Params params;
	params.Lesson = Lesson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetUseScopeSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetUseScopeSensitivityScale(bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetUseScopeSensitivityScale");

	UINSPlayerLocalProfile_GetUseScopeSensitivityScale_Params params;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetSensitivityScaleForOpticZoom
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOpticZoomLevel                ZoomLevel                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetSensitivityScaleForOpticZoom(bool bGamepad, EOpticZoomLevel ZoomLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetSensitivityScaleForOpticZoom");

	UINSPlayerLocalProfile_GetSensitivityScaleForOpticZoom_Params params;
	params.bGamepad = bGamepad;
	params.ZoomLevel = ZoomLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetScopeSensitivityScaleUsesWorldFOV
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetScopeSensitivityScaleUsesWorldFOV(bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetScopeSensitivityScaleUsesWorldFOV");

	UINSPlayerLocalProfile_GetScopeSensitivityScaleUsesWorldFOV_Params params;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetScopeSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetScopeSensitivityScale(bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetScopeSensitivityScale");

	UINSPlayerLocalProfile_GetScopeSensitivityScale_Params params;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetSavedLoadouts
// ()
// Parameters:
// TArray<struct FSavedLoadout>   OutSavedLoadouts               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetSavedLoadouts(TArray<struct FSavedLoadout>* OutSavedLoadouts, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetSavedLoadouts");

	UINSPlayerLocalProfile_GetSavedLoadouts_Params params;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSavedLoadouts != nullptr)
		*OutSavedLoadouts = params.OutSavedLoadouts;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetSavedLoadoutNames
// ()
// Parameters:
// TArray<struct FText>           OutLoadoutNames                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetSavedLoadoutNames(TArray<struct FText>* OutLoadoutNames, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetSavedLoadoutNames");

	UINSPlayerLocalProfile_GetSavedLoadoutNames_Params params;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLoadoutNames != nullptr)
		*OutLoadoutNames = params.OutLoadoutNames;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetSavedActivePresetIndex
// ()
// Parameters:
// int                            ActivePresetIndex              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetSavedActivePresetIndex(int* ActivePresetIndex, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetSavedActivePresetIndex");

	UINSPlayerLocalProfile_GetSavedActivePresetIndex_Params params;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ActivePresetIndex != nullptr)
		*ActivePresetIndex = params.ActivePresetIndex;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetMouseSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetMouseSensitivity");

	UINSPlayerLocalProfile_GetMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetItemsForSavedLoadout
// ()
// Parameters:
// int                            PresetIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBasicLoadoutItem> Items                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetItemsForSavedLoadout(int PresetIndex, TArray<struct FBasicLoadoutItem>* Items, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetItemsForSavedLoadout");

	UINSPlayerLocalProfile_GetItemsForSavedLoadout_Params params;
	params.PresetIndex = PresetIndex;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetInvertedYAxisMouse
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetInvertedYAxisMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetInvertedYAxisMouse");

	UINSPlayerLocalProfile_GetInvertedYAxisMouse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetInvertedYAxis
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetInvertedYAxis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetInvertedYAxis");

	UINSPlayerLocalProfile_GetInvertedYAxis_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetGamepadYSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetGamepadYSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetGamepadYSensitivity");

	UINSPlayerLocalProfile_GetGamepadYSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetGamepadXSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetGamepadXSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetGamepadXSensitivity");

	UINSPlayerLocalProfile_GetGamepadXSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetGamepadDampeningSettings
// ()
// Parameters:
// float                          OutDampeningStrength           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutDampeningSize               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutDampeningEaseIn             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::GetGamepadDampeningSettings(float* OutDampeningStrength, float* OutDampeningSize, float* OutDampeningEaseIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetGamepadDampeningSettings");

	UINSPlayerLocalProfile_GetGamepadDampeningSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDampeningStrength != nullptr)
		*OutDampeningStrength = params.OutDampeningStrength;
	if (OutDampeningSize != nullptr)
		*OutDampeningSize = params.OutDampeningSize;
	if (OutDampeningEaseIn != nullptr)
		*OutDampeningEaseIn = params.OutDampeningEaseIn;

}


// Function Insurgency.INSPlayerLocalProfile.GetGamepadAimSensitivityCurve
// ()
// Parameters:
// EGamepadSensitivityCurve       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EGamepadSensitivityCurve UINSPlayerLocalProfile::GetGamepadAimSensitivityCurve()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetGamepadAimSensitivityCurve");

	UINSPlayerLocalProfile_GetGamepadAimSensitivityCurve_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetGamepadAccelerationSettings
// ()
// Parameters:
// float                          TimeThreshold                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TimeToReachMax                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxMultiplier                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::GetGamepadAccelerationSettings(float* TimeThreshold, float* TimeToReachMax, float* MaxMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetGamepadAccelerationSettings");

	UINSPlayerLocalProfile_GetGamepadAccelerationSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TimeThreshold != nullptr)
		*TimeThreshold = params.TimeThreshold;
	if (TimeToReachMax != nullptr)
		*TimeToReachMax = params.TimeToReachMax;
	if (MaxMultiplier != nullptr)
		*MaxMultiplier = params.MaxMultiplier;

}


// Function Insurgency.INSPlayerLocalProfile.GetGamepadAccelerationEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetGamepadAccelerationEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetGamepadAccelerationEnabled");

	UINSPlayerLocalProfile_GetGamepadAccelerationEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetFreeaimDeadzoneScale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetFreeaimDeadzoneScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetFreeaimDeadzoneScale");

	UINSPlayerLocalProfile_GetFreeaimDeadzoneScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetFreeaimDeadzoneMinimumSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetFreeaimDeadzoneMinimumSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetFreeaimDeadzoneMinimumSensitivity");

	UINSPlayerLocalProfile_GetFreeaimDeadzoneMinimumSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetFreeaimDeadzoneEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetFreeaimDeadzoneEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetFreeaimDeadzoneEnabled");

	UINSPlayerLocalProfile_GetFreeaimDeadzoneEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetFOVSensitivityScaling
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetFOVSensitivityScaling(bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetFOVSensitivityScaling");

	UINSPlayerLocalProfile_GetFOVSensitivityScaling_Params params;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetForceFeedbackIntensity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetForceFeedbackIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetForceFeedbackIntensity");

	UINSPlayerLocalProfile_GetForceFeedbackIntensity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetFocusSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetFocusSensitivityScale(bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetFocusSensitivityScale");

	UINSPlayerLocalProfile_GetFocusSensitivityScale_Params params;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticStateForPreferredFaction
// ()
// Parameters:
// struct FProfileCharacterCosmeticState ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FProfileCharacterCosmeticState UINSPlayerLocalProfile::GetCurrentCosmeticStateForPreferredFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticStateForPreferredFaction");

	UINSPlayerLocalProfile_GetCurrentCosmeticStateForPreferredFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticStateForFaction
// ()
// Parameters:
// struct FName                   FactionName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfileCharacterCosmeticState ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FProfileCharacterCosmeticState UINSPlayerLocalProfile::GetCurrentCosmeticStateForFaction(const struct FName& FactionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticStateForFaction");

	UINSPlayerLocalProfile_GetCurrentCosmeticStateForFaction_Params params;
	params.FactionName = FactionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticShoppingCartForPreferredFaction
// ()
// Parameters:
// struct FProfileCharacterCosmeticState ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FProfileCharacterCosmeticState UINSPlayerLocalProfile::GetCurrentCosmeticShoppingCartForPreferredFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticShoppingCartForPreferredFaction");

	UINSPlayerLocalProfile_GetCurrentCosmeticShoppingCartForPreferredFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticShoppingCartForFaction
// ()
// Parameters:
// struct FName                   FactionName                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfileCharacterCosmeticState ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FProfileCharacterCosmeticState UINSPlayerLocalProfile::GetCurrentCosmeticShoppingCartForFaction(struct FName* FactionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetCurrentCosmeticShoppingCartForFaction");

	UINSPlayerLocalProfile_GetCurrentCosmeticShoppingCartForFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (FactionName != nullptr)
		*FactionName = params.FactionName;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetControlsActionMappings
// ()
// Parameters:
// TArray<struct FInputActionKeyMapping> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FInputActionKeyMapping> UINSPlayerLocalProfile::GetControlsActionMappings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetControlsActionMappings");

	UINSPlayerLocalProfile_GetControlsActionMappings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetControllerLayoutName
// ()
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSPlayerLocalProfile::GetControllerLayoutName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetControllerLayoutName");

	UINSPlayerLocalProfile_GetControllerLayoutName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetControllerLayout
// ()
// Parameters:
// class UControllerLayout*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UControllerLayout* UINSPlayerLocalProfile::GetControllerLayout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetControllerLayout");

	UINSPlayerLocalProfile_GetControllerLayout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetAutoLean
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::GetAutoLean()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetAutoLean");

	UINSPlayerLocalProfile_GetAutoLean_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.GetAimingSensitivityScale
// ()
// Parameters:
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSPlayerLocalProfile::GetAimingSensitivityScale(bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.GetAimingSensitivityScale");

	UINSPlayerLocalProfile_GetAimingSensitivityScale_Params params;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.ForwardControlSettings
// ()
void UINSPlayerLocalProfile::ForwardControlSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ForwardControlSettings");

	UINSPlayerLocalProfile_ForwardControlSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.FindPlayerClassDefaultLoadout
// ()
// Parameters:
// TArray<struct FBasicLoadoutItem> OutItems                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::FindPlayerClassDefaultLoadout(TArray<struct FBasicLoadoutItem>* OutItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.FindPlayerClassDefaultLoadout");

	UINSPlayerLocalProfile_FindPlayerClassDefaultLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutItems != nullptr)
		*OutItems = params.OutItems;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.DeletePlayerClassLoadout
// ()
// Parameters:
// int                            LoadoutIndex                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNightMode                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSPlayerLocalProfile::DeletePlayerClassLoadout(int LoadoutIndex, bool bNightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.DeletePlayerClassLoadout");

	UINSPlayerLocalProfile_DeletePlayerClassLoadout_Params params;
	params.LoadoutIndex = LoadoutIndex;
	params.bNightMode = bNightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerLocalProfile.CompleteLesson
// ()
// Parameters:
// class UClass*                  Lesson                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::CompleteLesson(class UClass* Lesson)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.CompleteLesson");

	UINSPlayerLocalProfile_CompleteLesson_Params params;
	params.Lesson = Lesson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ClearNewHighlights
// ()
void UINSPlayerLocalProfile::ClearNewHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ClearNewHighlights");

	UINSPlayerLocalProfile_ClearNewHighlights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ClearItemIdFromUnviewedItems
// ()
// Parameters:
// int                            ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::ClearItemIdFromUnviewedItems(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ClearItemIdFromUnviewedItems");

	UINSPlayerLocalProfile_ClearItemIdFromUnviewedItems_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.ClearHighlights
// ()
void UINSPlayerLocalProfile::ClearHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.ClearHighlights");

	UINSPlayerLocalProfile_ClearHighlights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddPreviewedCosmeticItem
// ()
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::AddPreviewedCosmeticItem(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddPreviewedCosmeticItem");

	UINSPlayerLocalProfile_AddPreviewedCosmeticItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddFavoritedServer
// ()
// Parameters:
// struct FBlueprintFindSessionResult NewFavoritedServer             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::AddFavoritedServer(const struct FBlueprintFindSessionResult& NewFavoritedServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddFavoritedServer");

	UINSPlayerLocalProfile_AddFavoritedServer_Params params;
	params.NewFavoritedServer = NewFavoritedServer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddEquippedUpgrade
// ()
void UINSPlayerLocalProfile::AddEquippedUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddEquippedUpgrade");

	UINSPlayerLocalProfile_AddEquippedUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddEquippedItem
// ()
void UINSPlayerLocalProfile::AddEquippedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddEquippedItem");

	UINSPlayerLocalProfile_AddEquippedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddCloudDelegates
// ()
void UINSPlayerLocalProfile::AddCloudDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddCloudDelegates");

	UINSPlayerLocalProfile_AddCloudDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddAxisMappingIfNotExisting
// ()
// Parameters:
// struct FName                   NewBinding                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    DefaultKey                     (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewScale                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::AddAxisMappingIfNotExisting(const struct FName& NewBinding, const struct FKey& DefaultKey, float NewScale, bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddAxisMappingIfNotExisting");

	UINSPlayerLocalProfile_AddAxisMappingIfNotExisting_Params params;
	params.NewBinding = NewBinding;
	params.DefaultKey = DefaultKey;
	params.NewScale = NewScale;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddActionMappingIfNotExisting
// ()
// Parameters:
// struct FName                   NewBinding                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    DefaultKey                     (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bGamepad                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::AddActionMappingIfNotExisting(const struct FName& NewBinding, const struct FKey& DefaultKey, bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddActionMappingIfNotExisting");

	UINSPlayerLocalProfile_AddActionMappingIfNotExisting_Params params;
	params.NewBinding = NewBinding;
	params.DefaultKey = DefaultKey;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerLocalProfile.AddActionMapping
// ()
// Parameters:
// struct FInputActionKeyMapping  KeyMapping                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSPlayerLocalProfile::AddActionMapping(struct FInputActionKeyMapping* KeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerLocalProfile.AddActionMapping");

	UINSPlayerLocalProfile_AddActionMapping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (KeyMapping != nullptr)
		*KeyMapping = params.KeyMapping;

}


void UINSPlayerLocalProfile::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ControllerLayout, UControllerLayout);
}

void UINSPlayerLocalProfile::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ControllerLayout);
}

void UINSPlayerInput::AfterRead()
{
	UPlayerInput::AfterRead();

}

void UINSPlayerInput::BeforeDelete()
{
	UPlayerInput::BeforeDelete();

}

// Function Insurgency.INSPlayerController.UpdateVoiceChatChannels
// ()
void AINSPlayerController::UpdateVoiceChatChannels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.UpdateVoiceChatChannels");

	AINSPlayerController_UpdateVoiceChatChannels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.UpdateOpticPreference
// ()
// Parameters:
// int                            Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::UpdateOpticPreference(int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.UpdateOpticPreference");

	AINSPlayerController_UpdateOpticPreference_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.UpdateOpticDelegate__DelegateSignature
// ()
// Parameters:
// int                            Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::UpdateOpticDelegate__DelegateSignature(int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.UpdateOpticDelegate__DelegateSignature");

	AINSPlayerController_UpdateOpticDelegate__DelegateSignature_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.UpdateFiremodePreference
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::UpdateFiremodePreference(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.UpdateFiremodePreference");

	AINSPlayerController_UpdateFiremodePreference_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.UpdateFiremodeDelegate__DelegateSignature
// ()
// Parameters:
// EFirearmFiremode               Firemode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::UpdateFiremodeDelegate__DelegateSignature(EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.UpdateFiremodeDelegate__DelegateSignature");

	AINSPlayerController_UpdateFiremodeDelegate__DelegateSignature_Params params;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ToggleLoadoutMenu
// ()
void AINSPlayerController::ToggleLoadoutMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ToggleLoadoutMenu");

	AINSPlayerController_ToggleLoadoutMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ToggleInGameMenu
// ()
// Parameters:
// EIngameMenuType                Menu                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ToggleInGameMenu(EIngameMenuType Menu)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ToggleInGameMenu");

	AINSPlayerController_ToggleInGameMenu_Params params;
	params.Menu = Menu;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.StopShellShock
// ()
// Parameters:
// bool                           bTerminate                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::StopShellShock(bool bTerminate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.StopShellShock");

	AINSPlayerController_StopShellShock_Params params;
	params.bTerminate = bTerminate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.StopDeafen
// ()
// Parameters:
// bool                           bTerminate                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::StopDeafen(bool bTerminate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.StopDeafen");

	AINSPlayerController_StopDeafen_Params params;
	params.bTerminate = bTerminate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SpotEnemy
// ()
void AINSPlayerController::SpotEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SpotEnemy");

	AINSPlayerController_SpotEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SpectatePlayer
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::SpectatePlayer(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SpectatePlayer");

	AINSPlayerController_SpectatePlayer_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.ShowPlayerExperienceDelegate__DelegateSignature
// ()
void AINSPlayerController::ShowPlayerExperienceDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.ShowPlayerExperienceDelegate__DelegateSignature");

	AINSPlayerController_ShowPlayerExperienceDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.ShowKillerInfoDelegate__DelegateSignature
// ()
// Parameters:
// struct FPlayerKillNotice       Notice                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FNemesisStats           NemesisStats                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::ShowKillerInfoDelegate__DelegateSignature(const struct FPlayerKillNotice& Notice, const struct FNemesisStats& NemesisStats)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.ShowKillerInfoDelegate__DelegateSignature");

	AINSPlayerController_ShowKillerInfoDelegate__DelegateSignature_Params params;
	params.Notice = Notice;
	params.NemesisStats = NemesisStats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ShowInGameMenu
// ()
// Parameters:
// EIngameMenuType                Menu                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIngameMenuEntryState          FromState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ShowInGameMenu(EIngameMenuType Menu, EIngameMenuEntryState FromState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ShowInGameMenu");

	AINSPlayerController_ShowInGameMenu_Params params;
	params.Menu = Menu;
	params.FromState = FromState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ShowGenericWidget
// ()
// Parameters:
// class UClass*                  NewWidget                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bConsumesInput                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* AINSPlayerController::ShowGenericWidget(class UClass* NewWidget, bool bConsumesInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ShowGenericWidget");

	AINSPlayerController_ShowGenericWidget_Params params;
	params.NewWidget = NewWidget;
	params.bConsumesInput = bConsumesInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.ShowFireSupportMenu
// ()
void AINSPlayerController::ShowFireSupportMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ShowFireSupportMenu");

	AINSPlayerController_ShowFireSupportMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ShowCustomRadial
// ()
// Parameters:
// class UUserWidget*             CustomRadialWidget             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ShowCustomRadial(class UUserWidget* CustomRadialWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ShowCustomRadial");

	AINSPlayerController_ShowCustomRadial_Params params;
	params.CustomRadialWidget = CustomRadialWidget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ShowCommsMenu
// ()
void AINSPlayerController::ShowCommsMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ShowCommsMenu");

	AINSPlayerController_ShowCommsMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.ShowAmmoDisplayDelegate__DelegateSignature
// ()
void AINSPlayerController::ShowAmmoDisplayDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.ShowAmmoDisplayDelegate__DelegateSignature");

	AINSPlayerController_ShowAmmoDisplayDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ShowAmmoDisplay
// ()
void AINSPlayerController::ShowAmmoDisplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ShowAmmoDisplay");

	AINSPlayerController_ShowAmmoDisplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SetSelectedFireSupport
// ()
// Parameters:
// class UFireSupportDefinition*  FireSupportClass               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::SetSelectedFireSupport(class UFireSupportDefinition* FireSupportClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SetSelectedFireSupport");

	AINSPlayerController_SetSelectedFireSupport_Params params;
	params.FireSupportClass = FireSupportClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SetCameraForUI
// ()
// Parameters:
// bool                           SoldierCamera                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TransitionTime                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::SetCameraForUI(bool SoldierCamera, float TransitionTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SetCameraForUI");

	AINSPlayerController_SetCameraForUI_Params params;
	params.SoldierCamera = SoldierCamera;
	params.TransitionTime = TransitionTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerVoiceChatLoggedIn
// ()
void AINSPlayerController::ServerVoiceChatLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerVoiceChatLoggedIn");

	AINSPlayerController_ServerVoiceChatLoggedIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerUpdateShowDevTag
// ()
// Parameters:
// bool                           bNewShowDevTag                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerUpdateShowDevTag(bool bNewShowDevTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerUpdateShowDevTag");

	AINSPlayerController_ServerUpdateShowDevTag_Params params;
	params.bNewShowDevTag = bNewShowDevTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerUpdateScoreboardBadge
// ()
// Parameters:
// int                            NewScoreboardBadge             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerUpdateScoreboardBadge(int NewScoreboardBadge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerUpdateScoreboardBadge");

	AINSPlayerController_ServerUpdateScoreboardBadge_Params params;
	params.NewScoreboardBadge = NewScoreboardBadge;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerUpdateFactionCosmetics
// ()
// Parameters:
// struct FString                 FactionName                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int>                    Cosmetics                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerUpdateFactionCosmetics(const struct FString& FactionName, TArray<int> Cosmetics)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerUpdateFactionCosmetics");

	AINSPlayerController_ServerUpdateFactionCosmetics_Params params;
	params.FactionName = FactionName;
	params.Cosmetics = Cosmetics;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerSpectatePlayer
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerSpectatePlayer(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerSpectatePlayer");

	AINSPlayerController_ServerSpectatePlayer_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerSetTalkingOverRadio
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerSetTalkingOverRadio(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerSetTalkingOverRadio");

	AINSPlayerController_ServerSetTalkingOverRadio_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerSetMapVoteSelection
// ()
// Parameters:
// EMapVoteSelection              VoteIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerSetMapVoteSelection(EMapVoteSelection VoteIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerSetMapVoteSelection");

	AINSPlayerController_ServerSetMapVoteSelection_Params params;
	params.VoteIndex = VoteIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerSendFireSupportRadialCommand
// ()
// Parameters:
// ERadialMenuDirection           Direction                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerSendFireSupportRadialCommand(ERadialMenuDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerSendFireSupportRadialCommand");

	AINSPlayerController_ServerSendFireSupportRadialCommand_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerSendCommsRadialCommand
// ()
// Parameters:
// ERadialMenuDirection           Direction                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerSendCommsRadialCommand(ERadialMenuDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerSendCommsRadialCommand");

	AINSPlayerController_ServerSendCommsRadialCommand_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerSendChatMessage
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bTeamOnly                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerSendChatMessage(const struct FText& Message, bool bTeamOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerSendChatMessage");

	AINSPlayerController_ServerSendChatMessage_Params params;
	params.Message = Message;
	params.bTeamOnly = bTeamOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerRequestViewTarget
// ()
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FViewTargetTransitionParams TransitionParams               (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerRequestViewTarget(class AActor* Target, const struct FViewTargetTransitionParams& TransitionParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerRequestViewTarget");

	AINSPlayerController_ServerRequestViewTarget_Params params;
	params.Target = Target;
	params.TransitionParams = TransitionParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerRequestSelectedFireSupport
// ()
void AINSPlayerController::ServerRequestSelectedFireSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerRequestSelectedFireSupport");

	AINSPlayerController_ServerRequestSelectedFireSupport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerRequestGameChannelToken
// ()
// Parameters:
// struct FString                 Channel                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerRequestGameChannelToken(const struct FString& Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerRequestGameChannelToken");

	AINSPlayerController_ServerRequestGameChannelToken_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerPossessViewTarget
// ()
void AINSPlayerController::ServerPossessViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerPossessViewTarget");

	AINSPlayerController_ServerPossessViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerKill
// ()
void AINSPlayerController::ServerKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerKill");

	AINSPlayerController_ServerKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerJoinSpectators
// ()
void AINSPlayerController::ServerJoinSpectators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerJoinSpectators");

	AINSPlayerController_ServerJoinSpectators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerJoinPlayerClass
// ()
// Parameters:
// class UPlayerClass*            DesiredClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerJoinPlayerClass(class UPlayerClass* DesiredClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerJoinPlayerClass");

	AINSPlayerController_ServerJoinPlayerClass_Params params;
	params.DesiredClass = DesiredClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerJoinFaction
// ()
// Parameters:
// unsigned char                  FactionId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerJoinFaction(unsigned char FactionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerJoinFaction");

	AINSPlayerController_ServerJoinFaction_Params params;
	params.FactionId = FactionId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerEjectToSpectator
// ()
void AINSPlayerController::ServerEjectToSpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerEjectToSpectator");

	AINSPlayerController_ServerEjectToSpectator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerConfirmLoadout
// ()
void AINSPlayerController::ServerConfirmLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerConfirmLoadout");

	AINSPlayerController_ServerConfirmLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerChangeFaction
// ()
// Parameters:
// unsigned char                  NewFactionId                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerChangeFaction(unsigned char NewFactionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerChangeFaction");

	AINSPlayerController_ServerChangeFaction_Params params;
	params.NewFactionId = NewFactionId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerCastVote
// ()
// Parameters:
// int                            ChoiceIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTeamOnlyVote                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerCastVote(int ChoiceIndex, bool bTeamOnlyVote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerCastVote");

	AINSPlayerController_ServerCastVote_Params params;
	params.ChoiceIndex = ChoiceIndex;
	params.bTeamOnlyVote = bTeamOnlyVote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerCallVote
// ()
// Parameters:
// class UClass*                  Issue                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Option                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*            TargetPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTeamOnlyVote                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerCallVote(class UClass* Issue, const struct FString& Option, class APlayerState* TargetPlayer, bool bTeamOnlyVote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerCallVote");

	AINSPlayerController_ServerCallVote_Params params;
	params.Issue = Issue;
	params.Option = Option;
	params.TargetPlayer = TargetPlayer;
	params.bTeamOnlyVote = bTeamOnlyVote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ServerAckScenarioAssetsLoaded
// ()
// Parameters:
// TArray<struct FSoftObjectPath> LoadedByClient                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ServerAckScenarioAssetsLoaded(TArray<struct FSoftObjectPath> LoadedByClient)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ServerAckScenarioAssetsLoaded");

	AINSPlayerController_ServerAckScenarioAssetsLoaded_Params params;
	params.LoadedByClient = LoadedByClient;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SendFireSupportRadialCommand
// ()
// Parameters:
// ERadialMenuDirection           Direction                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::SendFireSupportRadialCommand(ERadialMenuDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SendFireSupportRadialCommand");

	AINSPlayerController_SendFireSupportRadialCommand_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SendCurrentCosmeticPreset
// ()
void AINSPlayerController::SendCurrentCosmeticPreset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SendCurrentCosmeticPreset");

	AINSPlayerController_SendCurrentCosmeticPreset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SendCommsRadialCommand
// ()
// Parameters:
// ERadialMenuDirection           Direction                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::SendCommsRadialCommand(ERadialMenuDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SendCommsRadialCommand");

	AINSPlayerController_SendCommsRadialCommand_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.SavePlayerClassLoadout
// ()
// Parameters:
// struct FText                   LoadoutName                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::SavePlayerClassLoadout(const struct FText& LoadoutName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SavePlayerClassLoadout");

	AINSPlayerController_SavePlayerClassLoadout_Params params;
	params.LoadoutName = LoadoutName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.SaveCurrentLoadout
// ()
void AINSPlayerController::SaveCurrentLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.SaveCurrentLoadout");

	AINSPlayerController_SaveCurrentLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ResetCameraFocus
// ()
// Parameters:
// bool                           bShouldAttemptToViewPlayer     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ResetCameraFocus(bool bShouldAttemptToViewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ResetCameraFocus");

	AINSPlayerController_ResetCameraFocus_Params params;
	params.bShouldAttemptToViewPlayer = bShouldAttemptToViewPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.RenewTutorialPause
// ()
void AINSPlayerController::RenewTutorialPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.RenewTutorialPause");

	AINSPlayerController_RenewTutorialPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ReleaseCommsMenu
// ()
void AINSPlayerController::ReleaseCommsMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ReleaseCommsMenu");

	AINSPlayerController_ReleaseCommsMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.QueueHQObjectiveAnnouncement
// ()
// Parameters:
// class UAkAudioEvent*           AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::QueueHQObjectiveAnnouncement(class UAkAudioEvent* AudioEvent, int ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.QueueHQObjectiveAnnouncement");

	AINSPlayerController_QueueHQObjectiveAnnouncement_Params params;
	params.AudioEvent = AudioEvent;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.QueueHQAnnouncement
// ()
// Parameters:
// class UAkAudioEvent*           AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::QueueHQAnnouncement(class UAkAudioEvent* AudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.QueueHQAnnouncement");

	AINSPlayerController_QueueHQAnnouncement_Params params;
	params.AudioEvent = AudioEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.QAGetPos
// ()
// Parameters:
// bool                           bCopyToClipboard               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::QAGetPos(bool bCopyToClipboard)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.QAGetPos");

	AINSPlayerController_QAGetPos_Params params;
	params.bCopyToClipboard = bCopyToClipboard;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.PressCommsMenu
// ()
void AINSPlayerController::PressCommsMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.PressCommsMenu");

	AINSPlayerController_PressCommsMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.PossessViewTarget
// ()
void AINSPlayerController::PossessViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.PossessViewTarget");

	AINSPlayerController_PossessViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.PlayShellShock
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::PlayShellShock(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.PlayShellShock");

	AINSPlayerController_PlayShellShock_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.PlayingMusicUpdated__DelegateSignature
// ()
// Parameters:
// struct FPlayingMusic           NewMusic                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::PlayingMusicUpdated__DelegateSignature(const struct FPlayingMusic& NewMusic)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.PlayingMusicUpdated__DelegateSignature");

	AINSPlayerController_PlayingMusicUpdated__DelegateSignature_Params params;
	params.NewMusic = NewMusic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.PlayerClassChangedDelegate__DelegateSignature
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::PlayerClassChangedDelegate__DelegateSignature(class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.PlayerClassChangedDelegate__DelegateSignature");

	AINSPlayerController_PlayerClassChangedDelegate__DelegateSignature_Params params;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.PlayDeafen
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::PlayDeafen(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.PlayDeafen");

	AINSPlayerController_PlayDeafen_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.PendingMenuActionChangedDelegate__DelegateSignature
// ()
void AINSPlayerController::PendingMenuActionChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.PendingMenuActionChangedDelegate__DelegateSignature");

	AINSPlayerController_PendingMenuActionChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnUpdatedLocalProfileHUDPreferences
// ()
void AINSPlayerController::OnUpdatedLocalProfileHUDPreferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnUpdatedLocalProfileHUDPreferences");

	AINSPlayerController_OnUpdatedLocalProfileHUDPreferences_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnUpdatedHUDPreferences
// ()
void AINSPlayerController::OnUpdatedHUDPreferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnUpdatedHUDPreferences");

	AINSPlayerController_OnUpdatedHUDPreferences_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnStopShellShock
// ()
void AINSPlayerController::OnStopShellShock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnStopShellShock");

	AINSPlayerController_OnStopShellShock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnStopDeafen
// ()
void AINSPlayerController::OnStopDeafen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnStopDeafen");

	AINSPlayerController_OnStopDeafen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnSpawnZoneDelegate__DelegateSignature
// ()
void AINSPlayerController::OnSpawnZoneDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnSpawnZoneDelegate__DelegateSignature");

	AINSPlayerController_OnSpawnZoneDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnSoldierSpawnDelegate__DelegateSignature
// ()
void AINSPlayerController::OnSoldierSpawnDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnSoldierSpawnDelegate__DelegateSignature");

	AINSPlayerController_OnSoldierSpawnDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnShowRadialMenuDelegate__DelegateSignature
// ()
// Parameters:
// class UUserWidget*             ShownRadial                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::OnShowRadialMenuDelegate__DelegateSignature(class UUserWidget* ShownRadial)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnShowRadialMenuDelegate__DelegateSignature");

	AINSPlayerController_OnShowRadialMenuDelegate__DelegateSignature_Params params;
	params.ShownRadial = ShownRadial;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnRep_PlayingMusic
// ()
void AINSPlayerController::OnRep_PlayingMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnRep_PlayingMusic");

	AINSPlayerController_OnRep_PlayingMusic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnRep_PendingMenuActions
// ()
void AINSPlayerController::OnRep_PendingMenuActions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnRep_PendingMenuActions");

	AINSPlayerController_OnRep_PendingMenuActions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnPlayerMapVotingStart__DelegateSignature
// ()
void AINSPlayerController::OnPlayerMapVotingStart__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnPlayerMapVotingStart__DelegateSignature");

	AINSPlayerController_OnPlayerMapVotingStart__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnMenuWidgetOpenedDelegate__DelegateSignature
// ()
// Parameters:
// EIngameMenuType                Entered                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::OnMenuWidgetOpenedDelegate__DelegateSignature(EIngameMenuType Entered)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnMenuWidgetOpenedDelegate__DelegateSignature");

	AINSPlayerController_OnMenuWidgetOpenedDelegate__DelegateSignature_Params params;
	params.Entered = Entered;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnMenuWidgetExitDelegate__DelegateSignature
// ()
void AINSPlayerController::OnMenuWidgetExitDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnMenuWidgetExitDelegate__DelegateSignature");

	AINSPlayerController_OnMenuWidgetExitDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnInventorySelectActiveDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bNewInventorySelectActive      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::OnInventorySelectActiveDelegate__DelegateSignature(bool bNewInventorySelectActive)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnInventorySelectActiveDelegate__DelegateSignature");

	AINSPlayerController_OnInventorySelectActiveDelegate__DelegateSignature_Params params;
	params.bNewInventorySelectActive = bNewInventorySelectActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnInventoryMenuVisibleDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bNewInventorySelectActive      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUsingGamepad                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::OnInventoryMenuVisibleDelegate__DelegateSignature(bool bNewInventorySelectActive, bool bUsingGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnInventoryMenuVisibleDelegate__DelegateSignature");

	AINSPlayerController_OnInventoryMenuVisibleDelegate__DelegateSignature_Params params;
	params.bNewInventorySelectActive = bNewInventorySelectActive;
	params.bUsingGamepad = bUsingGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnInGameMenuVisibleDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bNewVisibility                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::OnInGameMenuVisibleDelegate__DelegateSignature(bool bNewVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnInGameMenuVisibleDelegate__DelegateSignature");

	AINSPlayerController_OnInGameMenuVisibleDelegate__DelegateSignature_Params params;
	params.bNewVisibility = bNewVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnHQAnnouncementFinished
// ()
void AINSPlayerController::OnHQAnnouncementFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnHQAnnouncementFinished");

	AINSPlayerController_OnHQAnnouncementFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnHideRadialMenuDelegate__DelegateSignature
// ()
// Parameters:
// class UUserWidget*             HiddenRadial                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::OnHideRadialMenuDelegate__DelegateSignature(class UUserWidget* HiddenRadial)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnHideRadialMenuDelegate__DelegateSignature");

	AINSPlayerController_OnHideRadialMenuDelegate__DelegateSignature_Params params;
	params.HiddenRadial = HiddenRadial;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnFireSupportPersonalCooldownElapsed
// ()
void AINSPlayerController::OnFireSupportPersonalCooldownElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnFireSupportPersonalCooldownElapsed");

	AINSPlayerController_OnFireSupportPersonalCooldownElapsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.OnFireSupportConfirmedDelegate__DelegateSignature
// ()
// Parameters:
// struct FFireSupportRequest     Request                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::OnFireSupportConfirmedDelegate__DelegateSignature(const struct FFireSupportRequest& Request)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.OnFireSupportConfirmedDelegate__DelegateSignature");

	AINSPlayerController_OnFireSupportConfirmedDelegate__DelegateSignature_Params params;
	params.Request = Request;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.OnFadeFinished
// ()
void AINSPlayerController::OnFadeFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.OnFadeFinished");

	AINSPlayerController_OnFadeFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.NotifyOfUsingMultiplayerFeatures
// ()
// Parameters:
// bool                           bIsUsingMP                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::NotifyOfUsingMultiplayerFeatures(bool bIsUsingMP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.NotifyOfUsingMultiplayerFeatures");

	AINSPlayerController_NotifyOfUsingMultiplayerFeatures_Params params;
	params.bIsUsingMP = bIsUsingMP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.LocalProfileSaveOpportunity
// ()
void AINSPlayerController::LocalProfileSaveOpportunity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.LocalProfileSaveOpportunity");

	AINSPlayerController_LocalProfileSaveOpportunity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.LoadInventoryItem
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::LoadInventoryItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.LoadInventoryItem");

	AINSPlayerController_LoadInventoryItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.Kill
// ()
void AINSPlayerController::Kill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.Kill");

	AINSPlayerController_Kill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.JoinSpectators
// ()
void AINSPlayerController::JoinSpectators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.JoinSpectators");

	AINSPlayerController_JoinSpectators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.JoinPlayerClass
// ()
// Parameters:
// class UPlayerClass*            DesiredClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::JoinPlayerClass(class UPlayerClass* DesiredClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.JoinPlayerClass");

	AINSPlayerController_JoinPlayerClass_Params params;
	params.DesiredClass = DesiredClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.JoinFaction
// ()
// Parameters:
// unsigned char                  FactionId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::JoinFaction(unsigned char FactionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.JoinFaction");

	AINSPlayerController_JoinFaction_Params params;
	params.FactionId = FactionId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.JoinClassBySlot
// ()
// Parameters:
// int                            ClassSlotIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::JoinClassBySlot(int ClassSlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.JoinClassBySlot");

	AINSPlayerController_JoinClassBySlot_Params params;
	params.ClassSlotIndex = ClassSlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.IsVaultKeyBound
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsVaultKeyBound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsVaultKeyBound");

	AINSPlayerController_IsVaultKeyBound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsTextChatOnCooldown
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsTextChatOnCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsTextChatOnCooldown");

	AINSPlayerController_IsTextChatOnCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsPlayingShellShock
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsPlayingShellShock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsPlayingShellShock");

	AINSPlayerController_IsPlayingShellShock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsPlayerAudioInProximity
// ()
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsPlayerAudioInProximity(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsPlayerAudioInProximity");

	AINSPlayerController_IsPlayerAudioInProximity_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsInTutorialSession
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsInTutorialSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsInTutorialSession");

	AINSPlayerController_IsInTutorialSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsInSpectatorFaction
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsInSpectatorFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsInSpectatorFaction");

	AINSPlayerController_IsInSpectatorFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsFireSupportOnCooldown
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsFireSupportOnCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsFireSupportOnCooldown");

	AINSPlayerController_IsFireSupportOnCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsFadingInOrOut
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsFadingInOrOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsFadingInOrOut");

	AINSPlayerController_IsFadingInOrOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.IsDeafened
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::IsDeafened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.IsDeafened");

	AINSPlayerController_IsDeafened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.InventorySelectReleased
// ()
void AINSPlayerController::InventorySelectReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.InventorySelectReleased");

	AINSPlayerController_InventorySelectReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.InventorySelectPressed
// ()
void AINSPlayerController::InventorySelectPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.InventorySelectPressed");

	AINSPlayerController_InventorySelectPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.InventoryItemLoaded__DelegateSignature
// ()
void AINSPlayerController::InventoryItemLoaded__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.InventoryItemLoaded__DelegateSignature");

	AINSPlayerController_InventoryItemLoaded__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.InitAchievements
// ()
void AINSPlayerController::InitAchievements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.InitAchievements");

	AINSPlayerController_InitAchievements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.HideInGameMenu
// ()
void AINSPlayerController::HideInGameMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HideInGameMenu");

	AINSPlayerController_HideInGameMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.HideGenericWidget
// ()
void AINSPlayerController::HideGenericWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HideGenericWidget");

	AINSPlayerController_HideGenericWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.HideFireSupportMenu
// ()
void AINSPlayerController::HideFireSupportMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HideFireSupportMenu");

	AINSPlayerController_HideFireSupportMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.HideCommsMenu
// ()
void AINSPlayerController::HideCommsMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HideCommsMenu");

	AINSPlayerController_HideCommsMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.HideActiveRadialWidget
// ()
void AINSPlayerController::HideActiveRadialWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HideActiveRadialWidget");

	AINSPlayerController_HideActiveRadialWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.HasPendingMenuAction
// ()
// Parameters:
// EPendingMenuAction             Action                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::HasPendingMenuAction(EPendingMenuAction Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HasPendingMenuAction");

	AINSPlayerController_HasPendingMenuAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.HasLocalProfile
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::HasLocalProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HasLocalProfile");

	AINSPlayerController_HasLocalProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.HasConfirmedLoadout
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::HasConfirmedLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HasConfirmedLoadout");

	AINSPlayerController_HasConfirmedLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.HasAlivePawn
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::HasAlivePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.HasAlivePawn");

	AINSPlayerController_HasAlivePawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetVoteIssues
// ()
// Parameters:
// TArray<struct FVotableIssue>   OutVotableIssues               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTeamOnlyVote                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::GetVoteIssues(TArray<struct FVotableIssue>* OutVotableIssues, bool bTeamOnlyVote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetVoteIssues");

	AINSPlayerController_GetVoteIssues_Params params;
	params.bTeamOnlyVote = bTeamOnlyVote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutVotableIssues != nullptr)
		*OutVotableIssues = params.OutVotableIssues;

}


// Function Insurgency.INSPlayerController.GetTimeUntilPersonalCooldownFinished
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSPlayerController::GetTimeUntilPersonalCooldownFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetTimeUntilPersonalCooldownFinished");

	AINSPlayerController_GetTimeUntilPersonalCooldownFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetTimeSinceLastChatMessage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSPlayerController::GetTimeSinceLastChatMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetTimeSinceLastChatMessage");

	AINSPlayerController_GetTimeSinceLastChatMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetTeamId
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSPlayerController::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetTeamId");

	AINSPlayerController_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetTeam
// ()
// Parameters:
// class ATeamInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ATeamInfo* AINSPlayerController::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetTeam");

	AINSPlayerController_GetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetSelectedFireSupport
// ()
// Parameters:
// class UFireSupportDefinition*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UFireSupportDefinition* AINSPlayerController::GetSelectedFireSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetSelectedFireSupport");

	AINSPlayerController_GetSelectedFireSupport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetKeysForActionUsingInputMethod
// ()
// Parameters:
// struct FName                   Action                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping> OutKeys                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::GetKeysForActionUsingInputMethod(const struct FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys, bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetKeysForActionUsingInputMethod");

	AINSPlayerController_GetKeysForActionUsingInputMethod_Params params;
	params.Action = Action;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutKeys != nullptr)
		*OutKeys = params.OutKeys;

}


// Function Insurgency.INSPlayerController.GetKeysForActionActiveInputMethod
// ()
// Parameters:
// struct FName                   Action                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping> OutKeys                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::GetKeysForActionActiveInputMethod(const struct FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetKeysForActionActiveInputMethod");

	AINSPlayerController_GetKeysForActionActiveInputMethod_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutKeys != nullptr)
		*OutKeys = params.OutKeys;

}


// Function Insurgency.INSPlayerController.GetKeysForAction
// ()
// Parameters:
// struct FName                   Action                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping> OutKeys                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::GetKeysForAction(const struct FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetKeysForAction");

	AINSPlayerController_GetKeysForAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutKeys != nullptr)
		*OutKeys = params.OutKeys;

}


// Function Insurgency.INSPlayerController.GetFireSupportPersonalCooldownDuration
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSPlayerController::GetFireSupportPersonalCooldownDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetFireSupportPersonalCooldownDuration");

	AINSPlayerController_GetFireSupportPersonalCooldownDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetFactionDefinition
// ()
// Parameters:
// class UFactionDefinition*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UFactionDefinition* AINSPlayerController::GetFactionDefinition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetFactionDefinition");

	AINSPlayerController_GetFactionDefinition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.GetCurrentPlayerClass
// ()
// Parameters:
// bool                           bUseCurrentPawnClass           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPlayerClass* AINSPlayerController::GetCurrentPlayerClass(bool bUseCurrentPawnClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.GetCurrentPlayerClass");

	AINSPlayerController_GetCurrentPlayerClass_Params params;
	params.bUseCurrentPawnClass = bUseCurrentPawnClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.ForwardInventoryPreferences
// ()
void AINSPlayerController::ForwardInventoryPreferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ForwardInventoryPreferences");

	AINSPlayerController_ForwardInventoryPreferences_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.EquipableItemSelectedDelegate__DelegateSignature
// ()
// Parameters:
// class AItemEquipable*          NewItem                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          PreviousItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::EquipableItemSelectedDelegate__DelegateSignature(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.EquipableItemSelectedDelegate__DelegateSignature");

	AINSPlayerController_EquipableItemSelectedDelegate__DelegateSignature_Params params;
	params.NewItem = NewItem;
	params.PreviousItem = PreviousItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.DPadUpPressed
// ()
void AINSPlayerController::DPadUpPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.DPadUpPressed");

	AINSPlayerController_DPadUpPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.DPadRightPressed
// ()
void AINSPlayerController::DPadRightPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.DPadRightPressed");

	AINSPlayerController_DPadRightPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.DPadLeftPressed
// ()
void AINSPlayerController::DPadLeftPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.DPadLeftPressed");

	AINSPlayerController_DPadLeftPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.DPadDownPressed
// ()
void AINSPlayerController::DPadDownPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.DPadDownPressed");

	AINSPlayerController_DPadDownPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.DelegateClientScenarioAssetsLoaded
// ()
void AINSPlayerController::DelegateClientScenarioAssetsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.DelegateClientScenarioAssetsLoaded");

	AINSPlayerController_DelegateClientScenarioAssetsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.DebugFireSupportRadialMenu
// ()
void AINSPlayerController::DebugFireSupportRadialMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.DebugFireSupportRadialMenu");

	AINSPlayerController_DebugFireSupportRadialMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.CycleDebugCamera
// ()
void AINSPlayerController::CycleDebugCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CycleDebugCamera");

	AINSPlayerController_CycleDebugCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.CreateIndividualAchievement
// ()
// Parameters:
// class UClass*                  AchievementClass               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::CreateIndividualAchievement(class UClass* AchievementClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CreateIndividualAchievement");

	AINSPlayerController_CreateIndividualAchievement_Params params;
	params.AchievementClass = AchievementClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.CreateCustomRadial
// ()
// Parameters:
// class UClass*                  NewWidget                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* AINSPlayerController::CreateCustomRadial(class UClass* NewWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CreateCustomRadial");

	AINSPlayerController_CreateCustomRadial_Params params;
	params.NewWidget = NewWidget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.ConfirmLoadout
// ()
void AINSPlayerController::ConfirmLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ConfirmLoadout");

	AINSPlayerController_ConfirmLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientVoteResult
// ()
// Parameters:
// ECallVoteResult                Result                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTeamOnlyVote                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientVoteResult(ECallVoteResult Result, bool bTeamOnlyVote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientVoteResult");

	AINSPlayerController_ClientVoteResult_Params params;
	params.Result = Result;
	params.bTeamOnlyVote = bTeamOnlyVote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientStartOnlineGame
// ()
void AINSPlayerController::ClientStartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientStartOnlineGame");

	AINSPlayerController_ClientStartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientShowMapVoteScreen
// ()
// Parameters:
// TArray<struct FMapVoteOption>  Maps                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          EndTime                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanVoteRefresh                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientShowMapVoteScreen(TArray<struct FMapVoteOption> Maps, float EndTime, bool bCanVoteRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientShowMapVoteScreen");

	AINSPlayerController_ClientShowMapVoteScreen_Params params;
	params.Maps = Maps;
	params.EndTime = EndTime;
	params.bCanVoteRefresh = bCanVoteRefresh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientShowKillerInfo
// ()
// Parameters:
// struct FPlayerKillNotice       Notice                         (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FNemesisStats           NemesisStats                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientShowKillerInfo(const struct FPlayerKillNotice& Notice, const struct FNemesisStats& NemesisStats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientShowKillerInfo");

	AINSPlayerController_ClientShowKillerInfo_Params params;
	params.Notice = Notice;
	params.NemesisStats = NemesisStats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientSetVoiceState
// ()
// Parameters:
// int                            PlayerId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAudibleProximity              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAudibleRadio                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsEnemy                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRadioFilter                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientSetVoiceState(int PlayerId, bool bAudibleProximity, bool bAudibleRadio, bool bIsEnemy, bool bRadioFilter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientSetVoiceState");

	AINSPlayerController_ClientSetVoiceState_Params params;
	params.PlayerId = PlayerId;
	params.bAudibleProximity = bAudibleProximity;
	params.bAudibleRadio = bAudibleRadio;
	params.bIsEnemy = bIsEnemy;
	params.bRadioFilter = bRadioFilter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientSetMapVoteWinner
// ()
// Parameters:
// EMapVoteSelection              Selection                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientSetMapVoteWinner(EMapVoteSelection Selection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientSetMapVoteWinner");

	AINSPlayerController_ClientSetMapVoteWinner_Params params;
	params.Selection = Selection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientSetMapVoteCount
// ()
// Parameters:
// TArray<struct FMapVoteCount>   Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientSetMapVoteCount(TArray<struct FMapVoteCount> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientSetMapVoteCount");

	AINSPlayerController_ClientSetMapVoteCount_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientSetDeathFade
// ()
// Parameters:
// float                          FadeTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bApplyHeadshotSwitch           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientSetDeathFade(float FadeTime, bool bApplyHeadshotSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientSetDeathFade");

	AINSPlayerController_ClientSetDeathFade_Params params;
	params.FadeTime = FadeTime;
	params.bApplyHeadshotSwitch = bApplyHeadshotSwitch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientReturnToQueueFromMatch
// ()
void AINSPlayerController::ClientReturnToQueueFromMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientReturnToQueueFromMatch");

	AINSPlayerController_ClientReturnToQueueFromMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientReceiveScenarioAssets
// ()
// Parameters:
// TArray<struct FSoftObjectPath> AssetsToLoad                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientReceiveScenarioAssets(TArray<struct FSoftObjectPath> AssetsToLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientReceiveScenarioAssets");

	AINSPlayerController_ClientReceiveScenarioAssets_Params params;
	params.AssetsToLoad = AssetsToLoad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientReceivedGameChannelToken
// ()
// Parameters:
// struct FString                 Channel                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 JoinToken                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientReceivedGameChannelToken(const struct FString& Channel, const struct FString& JoinToken)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientReceivedGameChannelToken");

	AINSPlayerController_ClientReceivedGameChannelToken_Params params;
	params.Channel = Channel;
	params.JoinToken = JoinToken;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientQueueHQObjectiveAnnouncement
// ()
// Parameters:
// class UAkAudioEvent*           AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientQueueHQObjectiveAnnouncement(class UAkAudioEvent* AudioEvent, int ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientQueueHQObjectiveAnnouncement");

	AINSPlayerController_ClientQueueHQObjectiveAnnouncement_Params params;
	params.AudioEvent = AudioEvent;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientQueueHQAnnouncement
// ()
// Parameters:
// class UAkAudioEvent*           AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientQueueHQAnnouncement(class UAkAudioEvent* AudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientQueueHQAnnouncement");

	AINSPlayerController_ClientQueueHQAnnouncement_Params params;
	params.AudioEvent = AudioEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientPromptTeamMenu
// ()
void AINSPlayerController::ClientPromptTeamMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientPromptTeamMenu");

	AINSPlayerController_ClientPromptTeamMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientPromptLoadout
// ()
void AINSPlayerController::ClientPromptLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientPromptLoadout");

	AINSPlayerController_ClientPromptLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientPromptCosmeticsMenuIfNeeded
// ()
void AINSPlayerController::ClientPromptCosmeticsMenuIfNeeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientPromptCosmeticsMenuIfNeeded");

	AINSPlayerController_ClientPromptCosmeticsMenuIfNeeded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientProfileSaveOpportunity
// ()
void AINSPlayerController::ClientProfileSaveOpportunity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientProfileSaveOpportunity");

	AINSPlayerController_ClientProfileSaveOpportunity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientOnPlayerResupplied
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientOnPlayerResupplied(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientOnPlayerResupplied");

	AINSPlayerController_ClientOnPlayerResupplied_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientIdleKickWarning
// ()
// Parameters:
// int                            SecondsRemaining               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientIdleKickWarning(int SecondsRemaining)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientIdleKickWarning");

	AINSPlayerController_ClientIdleKickWarning_Params params;
	params.SecondsRemaining = SecondsRemaining;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientFadeOut
// ()
// Parameters:
// struct FColor                  FadeColor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientFadeOut(const struct FColor& FadeColor, float FadeTime, float HoldTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientFadeOut");

	AINSPlayerController_ClientFadeOut_Params params;
	params.FadeColor = FadeColor;
	params.FadeTime = FadeTime;
	params.HoldTime = HoldTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientFadeIn
// ()
// Parameters:
// struct FColor                  FadeColor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientFadeIn(const struct FColor& FadeColor, float FadeTime, float HoldTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientFadeIn");

	AINSPlayerController_ClientFadeIn_Params params;
	params.FadeColor = FadeColor;
	params.FadeTime = FadeTime;
	params.HoldTime = HoldTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientEnterMatchTransitionState
// ()
// Parameters:
// struct FGuid                   TicketId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Scenario                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Options                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientEnterMatchTransitionState(const struct FGuid& TicketId, const struct FString& Scenario, const struct FString& Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientEnterMatchTransitionState");

	AINSPlayerController_ClientEnterMatchTransitionState_Params params;
	params.TicketId = TicketId;
	params.Scenario = Scenario;
	params.Options = Options;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientEndOnlineRatedMatch
// ()
// Parameters:
// bool                           bHasRatingUpdate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchScoreChange       PlayerChange                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientEndOnlineRatedMatch(bool bHasRatingUpdate, const struct FMatchScoreChange& PlayerChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientEndOnlineRatedMatch");

	AINSPlayerController_ClientEndOnlineRatedMatch_Params params;
	params.bHasRatingUpdate = bHasRatingUpdate;
	params.PlayerChange = PlayerChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientConnectVoiceChat
// ()
// Parameters:
// struct FString                 VoiceSessionId                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ConnectToken                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientConnectVoiceChat(const struct FString& VoiceSessionId, const struct FString& ConnectToken)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientConnectVoiceChat");

	AINSPlayerController_ClientConnectVoiceChat_Params params;
	params.VoiceSessionId = VoiceSessionId;
	params.ConnectToken = ConnectToken;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientConfirmScenarioAssetsLoaded
// ()
void AINSPlayerController::ClientConfirmScenarioAssetsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientConfirmScenarioAssetsLoaded");

	AINSPlayerController_ClientConfirmScenarioAssetsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientConfirmMapVoteSelection
// ()
// Parameters:
// EMapVoteSelection              VotedIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientConfirmMapVoteSelection(EMapVoteSelection VotedIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientConfirmMapVoteSelection");

	AINSPlayerController_ClientConfirmMapVoteSelection_Params params;
	params.VotedIndex = VotedIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientClearDeathFade
// ()
// Parameters:
// float                          FadeTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientClearDeathFade(float FadeTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientClearDeathFade");

	AINSPlayerController_ClientClearDeathFade_Params params;
	params.FadeTime = FadeTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientChangeVoiceChatChannels
// ()
// Parameters:
// unsigned char                  TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVoiceChatChannelFlags         Flags                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientChangeVoiceChatChannels(unsigned char TeamId, EVoiceChatChannelFlags Flags)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientChangeVoiceChatChannels");

	AINSPlayerController_ClientChangeVoiceChatChannels_Params params;
	params.TeamId = TeamId;
	params.Flags = Flags;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientCastVoteResult
// ()
// Parameters:
// ECastVoteResult                Result                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTeamOnlyVote                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientCastVoteResult(ECastVoteResult Result, bool bTeamOnlyVote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientCastVoteResult");

	AINSPlayerController_ClientCastVoteResult_Params params;
	params.Result = Result;
	params.bTeamOnlyVote = bTeamOnlyVote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientBroadcastPendingMenuAction
// ()
void AINSPlayerController::ClientBroadcastPendingMenuAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientBroadcastPendingMenuAction");

	AINSPlayerController_ClientBroadcastPendingMenuAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ClientAddCompassMarker
// ()
// Parameters:
// struct FVector_NetQuantize     WorldLocation                  (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  FollowActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECompassMarkerType             MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ClientAddCompassMarker(const struct FVector_NetQuantize& WorldLocation, class AActor* FollowActor, ECompassMarkerType MarkerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ClientAddCompassMarker");

	AINSPlayerController_ClientAddCompassMarker_Params params;
	params.WorldLocation = WorldLocation;
	params.FollowActor = FollowActor;
	params.MarkerType = MarkerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ChoosePlayerClassLoadout
// ()
// Parameters:
// int                            LoadoutIndex                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ChoosePlayerClassLoadout(int LoadoutIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ChoosePlayerClassLoadout");

	AINSPlayerController_ChoosePlayerClassLoadout_Params params;
	params.LoadoutIndex = LoadoutIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.CheckInventorySelectType
// ()
void AINSPlayerController::CheckInventorySelectType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CheckInventorySelectType");

	AINSPlayerController_CheckInventorySelectType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.ChangeFaction
// ()
// Parameters:
// unsigned char                  NewFactionId                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::ChangeFaction(unsigned char NewFactionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.ChangeFaction");

	AINSPlayerController_ChangeFaction_Params params;
	params.NewFactionId = NewFactionId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.CastVoteChecked
// ()
// Parameters:
// int                            ChoiceIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTeamOnlyVote                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::CastVoteChecked(int ChoiceIndex, bool bTeamOnlyVote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CastVoteChecked");

	AINSPlayerController_CastVoteChecked_Params params;
	params.ChoiceIndex = ChoiceIndex;
	params.bTeamOnlyVote = bTeamOnlyVote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.CanRequestSelectedFireSupport
// ()
// Parameters:
// struct FVector                 RequestLocation                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFireSupportRequestResult ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FFireSupportRequestResult AINSPlayerController::CanRequestSelectedFireSupport(const struct FVector& RequestLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CanRequestSelectedFireSupport");

	AINSPlayerController_CanRequestSelectedFireSupport_Params params;
	params.RequestLocation = RequestLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.CanCallVote
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSPlayerController::CanCallVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.CanCallVote");

	AINSPlayerController_CanCallVote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSPlayerController.BroadcastMenuStateChange
// ()
// Parameters:
// EIngameMenuType                EnteredState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::BroadcastMenuStateChange(EIngameMenuType EnteredState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.BroadcastMenuStateChange");

	AINSPlayerController_BroadcastMenuStateChange_Params params;
	params.EnteredState = EnteredState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.BreakTutorialPause
// ()
void AINSPlayerController::BreakTutorialPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.BreakTutorialPause");

	AINSPlayerController_BreakTutorialPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.BindToggleMenuInsteadToggleLessons
// ()
void AINSPlayerController::BindToggleMenuInsteadToggleLessons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.BindToggleMenuInsteadToggleLessons");

	AINSPlayerController_BindToggleMenuInsteadToggleLessons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.BindToggleLessonsInsteadToggleMenu
// ()
void AINSPlayerController::BindToggleLessonsInsteadToggleMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.BindToggleLessonsInsteadToggleMenu");

	AINSPlayerController_BindToggleLessonsInsteadToggleMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.BenchmarkStart
// ()
void AINSPlayerController::BenchmarkStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.BenchmarkStart");

	AINSPlayerController_BenchmarkStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.BeginQueuedFadeIn
// ()
// Parameters:
// struct FColor                  Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TargetAlpha                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::BeginQueuedFadeIn(const struct FColor& Color, float Duration, float TargetAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.BeginQueuedFadeIn");

	AINSPlayerController_BeginQueuedFadeIn_Params params;
	params.Color = Color;
	params.Duration = Duration;
	params.TargetAlpha = TargetAlpha;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.AmmoUpdatedDelegate__DelegateSignature
// ()
void AINSPlayerController::AmmoUpdatedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.AmmoUpdatedDelegate__DelegateSignature");

	AINSPlayerController_AmmoUpdatedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.AddHQAnnouncement
// ()
// Parameters:
// struct FAudioAnnouncementCue   Cue                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void AINSPlayerController::AddHQAnnouncement(const struct FAudioAnnouncementCue& Cue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.AddHQAnnouncement");

	AINSPlayerController_AddHQAnnouncement_Params params;
	params.Cue = Cue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.AddCompassMarkerOnActor
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECompassMarkerType             MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::AddCompassMarkerOnActor(class AActor* Actor, ECompassMarkerType MarkerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.AddCompassMarkerOnActor");

	AINSPlayerController_AddCompassMarkerOnActor_Params params;
	params.Actor = Actor;
	params.MarkerType = MarkerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSPlayerController.AddCompassMarkerDelegate__DelegateSignature
// ()
// Parameters:
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  FollowActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECompassMarkerType             MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::AddCompassMarkerDelegate__DelegateSignature(const struct FVector& WorldLocation, class AActor* FollowActor, ECompassMarkerType MarkerType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSPlayerController.AddCompassMarkerDelegate__DelegateSignature");

	AINSPlayerController_AddCompassMarkerDelegate__DelegateSignature_Params params;
	params.WorldLocation = WorldLocation;
	params.FollowActor = FollowActor;
	params.MarkerType = MarkerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSPlayerController.AddCompassMarker
// ()
// Parameters:
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECompassMarkerType             MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSPlayerController::AddCompassMarker(const struct FVector& WorldLocation, ECompassMarkerType MarkerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSPlayerController.AddCompassMarker");

	AINSPlayerController_AddCompassMarker_Params params;
	params.WorldLocation = WorldLocation;
	params.MarkerType = MarkerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSPlayerController::AfterRead()
{
	AINSBasePlayerController::AfterRead();

	READ_PTR_FULL(LocalAudioComponent, UINSAudioComponent);
	READ_PTR_FULL(InventoryComponent, UPlayerInventoryComponent);
	READ_PTR_FULL(SelectedFireSupportDefinition, UFireSupportDefinition);
	READ_PTR_FULL(InGameMenuInstance, UInGameMenuWidget);
	READ_PTR_FULL(InGameMenuWidget, UClass);
	READ_PTR_FULL(FireSupportRadialWidgetClass, UClass);
	READ_PTR_FULL(FireSupportRadialWidget, UUserWidget);
	READ_PTR_FULL(CommsRadialWidgetClass, UClass);
	READ_PTR_FULL(CommsRadialWidget, UUserWidget);
	READ_PTR_FULL(MapVoteWidget, UClass);
	READ_PTR_FULL(ActiveRadialWidget, UUserWidget);
	READ_PTR_FULL(ActiveGenericWidget, UUserWidget);
	READ_PTR_FULL(ActiveMapVoteWidget, UMapVoteWidget);
	READ_PTR_FULL(MusicManagerComponent, UMusicManagerComponent);
	READ_PTR_FULL(AchievementLists, UAchievementDataAsset);
	READ_PTR_FULL(CachedPawn, AINSSoldier);
	READ_PTR_FULL(StatsCollection, USandstormStatsCollectionComponent);
}

void AINSPlayerController::BeforeDelete()
{
	AINSBasePlayerController::BeforeDelete();

	DELE_PTR_FULL(LocalAudioComponent);
	DELE_PTR_FULL(InventoryComponent);
	DELE_PTR_FULL(SelectedFireSupportDefinition);
	DELE_PTR_FULL(InGameMenuInstance);
	DELE_PTR_FULL(InGameMenuWidget);
	DELE_PTR_FULL(FireSupportRadialWidgetClass);
	DELE_PTR_FULL(FireSupportRadialWidget);
	DELE_PTR_FULL(CommsRadialWidgetClass);
	DELE_PTR_FULL(CommsRadialWidget);
	DELE_PTR_FULL(MapVoteWidget);
	DELE_PTR_FULL(ActiveRadialWidget);
	DELE_PTR_FULL(ActiveGenericWidget);
	DELE_PTR_FULL(ActiveMapVoteWidget);
	DELE_PTR_FULL(MusicManagerComponent);
	DELE_PTR_FULL(AchievementLists);
	DELE_PTR_FULL(CachedPawn);
	DELE_PTR_FULL(StatsCollection);
}

void UINSPawnSensingComponent::AfterRead()
{
	UPawnSensingComponent::AfterRead();

}

void UINSPawnSensingComponent::BeforeDelete()
{
	UPawnSensingComponent::BeforeDelete();

}

void AINSPatrolArea::AfterRead()
{
	AActor::AfterRead();

}

void AINSPatrolArea::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Insurgency.INSParty.StartLateJoinQueue
// ()
void UINSParty::StartLateJoinQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.StartLateJoinQueue");

	UINSParty_StartLateJoinQueue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSParty.PromoteToPartyLeader
// ()
// Parameters:
// struct FString                 PlatformId                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSParty::PromoteToPartyLeader(const struct FString& PlatformId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.PromoteToPartyLeader");

	UINSParty_PromoteToPartyLeader_Params params;
	params.PlatformId = PlatformId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSParty.OpenInviteInterface
// ()
void UINSParty::OpenInviteInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.OpenInviteInterface");

	UINSParty_OpenInviteInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSParty.LeaveParty
// ()
void UINSParty::LeaveParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.LeaveParty");

	UINSParty_LeaveParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSParty.IsPartyInGame
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSParty::IsPartyInGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.IsPartyInGame");

	UINSParty_IsPartyInGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSParty.IsLocalPlayerLeader
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSParty::IsLocalPlayerLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.IsLocalPlayerLeader");

	UINSParty_IsLocalPlayerLeader_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSParty.IsLateJoinPossible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSParty::IsLateJoinPossible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.IsLateJoinPossible");

	UINSParty_IsLateJoinPossible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSParty.IsInParty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSParty::IsInParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.IsInParty");

	UINSParty_IsInParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Insurgency.INSParty.INSPartyStateUpdate__DelegateSignature
// ()
// Parameters:
// struct FINSPartyState          State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FPartySettings          Settings                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSParty::INSPartyStateUpdate__DelegateSignature(const struct FINSPartyState& State, const struct FPartySettings& Settings)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSParty.INSPartyStateUpdate__DelegateSignature");

	UINSParty_INSPartyStateUpdate__DelegateSignature_Params params;
	params.State = State;
	params.Settings = Settings;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSParty.INSPartyLeft__DelegateSignature
// ()
void UINSParty::INSPartyLeft__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSParty.INSPartyLeft__DelegateSignature");

	UINSParty_INSPartyLeft__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSParty.INSPartyJoined__DelegateSignature
// ()
// Parameters:
// struct FINSPartyState          State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSParty::INSPartyJoined__DelegateSignature(const struct FINSPartyState& State)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSParty.INSPartyJoined__DelegateSignature");

	UINSParty_INSPartyJoined__DelegateSignature_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSParty.Delegate_OnMatchmakerStateChange
// ()
// Parameters:
// TEnumAsByte<EMatchmakingState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EMatchmakingState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSParty::Delegate_OnMatchmakerStateChange(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.Delegate_OnMatchmakerStateChange");

	UINSParty_Delegate_OnMatchmakerStateChange_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSParty.CreateParty
// ()
void UINSParty::CreateParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSParty.CreateParty");

	UINSParty_CreateParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSParty::AfterRead()
{
	UObject::AfterRead();

}

void UINSParty::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.INSOutpostGameState.SetCurrentWave
// ()
// Parameters:
// int                            NewCurrentWave                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSOutpostGameState::SetCurrentWave(int NewCurrentWave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameState.SetCurrentWave");

	AINSOutpostGameState_SetCurrentWave_Params params;
	params.NewCurrentWave = NewCurrentWave;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSOutpostGameState.OnRep_TotalWaves
// ()
void AINSOutpostGameState::OnRep_TotalWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameState.OnRep_TotalWaves");

	AINSOutpostGameState_OnRep_TotalWaves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSOutpostGameState.OnRep_CurrentWave
// ()
void AINSOutpostGameState::OnRep_CurrentWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameState.OnRep_CurrentWave");

	AINSOutpostGameState_OnRep_CurrentWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSOutpostGameState.OnOutpostWaveChangedDelegate__DelegateSignature
// ()
// Parameters:
// int                            NewWave                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSOutpostGameState::OnOutpostWaveChangedDelegate__DelegateSignature(int NewWave)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSOutpostGameState.OnOutpostWaveChangedDelegate__DelegateSignature");

	AINSOutpostGameState_OnOutpostWaveChangedDelegate__DelegateSignature_Params params;
	params.NewWave = NewWave;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSOutpostGameState.OnOutpostPrepareNextWaveDelegate__DelegateSignature
// ()
void AINSOutpostGameState::OnOutpostPrepareNextWaveDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSOutpostGameState.OnOutpostPrepareNextWaveDelegate__DelegateSignature");

	AINSOutpostGameState_OnOutpostPrepareNextWaveDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSOutpostGameState.OnOutpostLostObjectiveDelegate__DelegateSignature
// ()
void AINSOutpostGameState::OnOutpostLostObjectiveDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSOutpostGameState.OnOutpostLostObjectiveDelegate__DelegateSignature");

	AINSOutpostGameState_OnOutpostLostObjectiveDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSOutpostGameState.OnOutpostIncomingWaveDelegate__DelegateSignature
// ()
// Parameters:
// EOutpostWaveType               WaveType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSOutpostGameState::OnOutpostIncomingWaveDelegate__DelegateSignature(EOutpostWaveType WaveType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSOutpostGameState.OnOutpostIncomingWaveDelegate__DelegateSignature");

	AINSOutpostGameState_OnOutpostIncomingWaveDelegate__DelegateSignature_Params params;
	params.WaveType = WaveType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSOutpostGameState.Multicast_OutpostPrepareNextWaveEvent
// ()
void AINSOutpostGameState::Multicast_OutpostPrepareNextWaveEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameState.Multicast_OutpostPrepareNextWaveEvent");

	AINSOutpostGameState_Multicast_OutpostPrepareNextWaveEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSOutpostGameState.Multicast_OutpostLostObjectiveEvent
// ()
void AINSOutpostGameState::Multicast_OutpostLostObjectiveEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameState.Multicast_OutpostLostObjectiveEvent");

	AINSOutpostGameState_Multicast_OutpostLostObjectiveEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSOutpostGameState.Multicast_OutpostIncomingWaveEvent
// ()
// Parameters:
// EOutpostWaveType               NewCurrentWaveType             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSOutpostGameState::Multicast_OutpostIncomingWaveEvent(EOutpostWaveType NewCurrentWaveType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameState.Multicast_OutpostIncomingWaveEvent");

	AINSOutpostGameState_Multicast_OutpostIncomingWaveEvent_Params params;
	params.NewCurrentWaveType = NewCurrentWaveType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSOutpostGameState::AfterRead()
{
	AINSMultiplayerGameState::AfterRead();

}

void AINSOutpostGameState::BeforeDelete()
{
	AINSMultiplayerGameState::BeforeDelete();

}

// Function Insurgency.INSOutpostGameMode.IsFinalWave
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSOutpostGameMode::IsFinalWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameMode.IsFinalWave");

	AINSOutpostGameMode_IsFinalWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSOutpostGameMode.GetRemainingWaves
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int AINSOutpostGameMode::GetRemainingWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameMode.GetRemainingWaves");

	AINSOutpostGameMode_GetRemainingWaves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSOutpostGameMode.ForceRetreat
// ()
void AINSOutpostGameMode::ForceRetreat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOutpostGameMode.ForceRetreat");

	AINSOutpostGameMode_ForceRetreat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSOutpostGameMode::AfterRead()
{
	AINSCoopMode::AfterRead();

	READ_PTR_FULL(OutpostGameState, AINSOutpostGameState);
	READ_PTR_FULL(OutpostWaveConfig, UOutpostWaveConfig);
}

void AINSOutpostGameMode::BeforeDelete()
{
	AINSCoopMode::BeforeDelete();

	DELE_PTR_FULL(OutpostGameState);
	DELE_PTR_FULL(OutpostWaveConfig);
}

void UOutpostWaveConfig::AfterRead()
{
	UDataAsset::AfterRead();

}

void UOutpostWaveConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.INSOperationGameMode.SpawnPlayerTeam
// ()
void AINSOperationGameMode::SpawnPlayerTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOperationGameMode.SpawnPlayerTeam");

	AINSOperationGameMode_SpawnPlayerTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSOperationGameMode.EvacSuccessful
// ()
void AINSOperationGameMode::EvacSuccessful()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOperationGameMode.EvacSuccessful");

	AINSOperationGameMode_EvacSuccessful_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSOperationGameMode::AfterRead()
{
	AINSCoopMode::AfterRead();

	READ_PTR_FULL(ActiveObjective, AObjectiveBase);
	READ_PTR_FULL(ActiveEvacObj, AObjectiveCapturable);
	READ_PTR_FULL(DefendingSquad, UINSAISquad);
	READ_PTR_FULL(EvacHelicopter, AVehicleHoveringBase);
	READ_PTR_FULL(EvacDestination, AActor);
}

void AINSOperationGameMode::BeforeDelete()
{
	AINSCoopMode::BeforeDelete();

	DELE_PTR_FULL(ActiveObjective);
	DELE_PTR_FULL(ActiveEvacObj);
	DELE_PTR_FULL(DefendingSquad);
	DELE_PTR_FULL(EvacHelicopter);
	DELE_PTR_FULL(EvacDestination);
}

// Function Insurgency.INSOccupyGameMode.ShouldDeductReinforcementWave
// ()
// Parameters:
// class UReinforcementSystemComponent* ReinforcementSystemComponent   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSOccupyGameMode::ShouldDeductReinforcementWave(class UReinforcementSystemComponent* ReinforcementSystemComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSOccupyGameMode.ShouldDeductReinforcementWave");

	AINSOccupyGameMode_ShouldDeductReinforcementWave_Params params;
	params.ReinforcementSystemComponent = ReinforcementSystemComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSOccupyGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(FactionOneReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(FactionTwoReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(HillObjective, AObjectiveBase);
}

void AINSOccupyGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(FactionOneReinforcementSystem);
	DELE_PTR_FULL(FactionTwoReinforcementSystem);
	DELE_PTR_FULL(HillObjective);
}

void AINSMultiplayerTestGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

}

void AINSMultiplayerTestGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

}

void AINSMatchmakingServerMode::AfterRead()
{
	AGameMode::AfterRead();

}

void AINSMatchmakingServerMode::BeforeDelete()
{
	AGameMode::BeforeDelete();

}

// DelegateFunction Insurgency.INSMatchmaking.OnMatchmakerSuccess__DelegateSignature
// ()
void UINSMatchmaking::OnMatchmakerSuccess__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSMatchmaking.OnMatchmakerSuccess__DelegateSignature");

	UINSMatchmaking_OnMatchmakerSuccess__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSMatchmaking.OnMatchmakerStateChange__DelegateSignature
// ()
// Parameters:
// TEnumAsByte<EMatchmakingState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EMatchmakingState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSMatchmaking::OnMatchmakerStateChange__DelegateSignature(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSMatchmaking.OnMatchmakerStateChange__DelegateSignature");

	UINSMatchmaking_OnMatchmakerStateChange__DelegateSignature_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSMatchmaking.OnMatchmakerFailure__DelegateSignature
// ()
// Parameters:
// TEnumAsByte<EMatchmakingFailure> Error                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSMatchmaking::OnMatchmakerFailure__DelegateSignature(TEnumAsByte<EMatchmakingFailure> Error)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSMatchmaking.OnMatchmakerFailure__DelegateSignature");

	UINSMatchmaking_OnMatchmakerFailure__DelegateSignature_Params params;
	params.Error = Error;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMatchmaking.IsMatchmakingLateJoin
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSMatchmaking::IsMatchmakingLateJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMatchmaking.IsMatchmakingLateJoin");

	UINSMatchmaking_IsMatchmakingLateJoin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UINSMatchmaking::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(SessionHelper, UINSSessionHelper);
}

void UINSMatchmaking::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(SessionHelper);
}

void UINSMatchBeaconState::AfterRead()
{
	UPartyBeaconState::AfterRead();

}

void UINSMatchBeaconState::BeforeDelete()
{
	UPartyBeaconState::BeforeDelete();

}

void AINSMatchBeaconHost::AfterRead()
{
	APartyBeaconHost::AfterRead();

}

void AINSMatchBeaconHost::BeforeDelete()
{
	APartyBeaconHost::BeforeDelete();

}

// Function Insurgency.INSMatchBeaconClient.ClientAllowedToProceedFromReservationTimeout
// ()
void AINSMatchBeaconClient::ClientAllowedToProceedFromReservationTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMatchBeaconClient.ClientAllowedToProceedFromReservationTimeout");

	AINSMatchBeaconClient_ClientAllowedToProceedFromReservationTimeout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSMatchBeaconClient.ClientAllowedToProceedFromReservation
// ()
void AINSMatchBeaconClient::ClientAllowedToProceedFromReservation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSMatchBeaconClient.ClientAllowedToProceedFromReservation");

	AINSMatchBeaconClient_ClientAllowedToProceedFromReservation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSMatchBeaconClient::AfterRead()
{
	APartyBeaconClient::AfterRead();

}

void AINSMatchBeaconClient::BeforeDelete()
{
	APartyBeaconClient::BeforeDelete();

}

// Function Insurgency.INSLocalPlayer.UpdatePoolCounts
// ()
void UINSLocalPlayer::UpdatePoolCounts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.UpdatePoolCounts");

	UINSLocalPlayer_UpdatePoolCounts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.UpdatePlayerProfile
// ()
// Parameters:
// bool                           bForceUpdate                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::UpdatePlayerProfile(bool bForceUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.UpdatePlayerProfile");

	UINSLocalPlayer_UpdatePlayerProfile_Params params;
	params.bForceUpdate = bForceUpdate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.UpdateMatchHistory
// ()
void UINSLocalPlayer::UpdateMatchHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.UpdateMatchHistory");

	UINSLocalPlayer_UpdateMatchHistory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.UpdateArmorAndCarrierLevels
// ()
// Parameters:
// struct FName                   ArmorLevel                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   CarrierLevel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::UpdateArmorAndCarrierLevels(const struct FName& ArmorLevel, const struct FName& CarrierLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.UpdateArmorAndCarrierLevels");

	UINSLocalPlayer_UpdateArmorAndCarrierLevels_Params params;
	params.ArmorLevel = ArmorLevel;
	params.CarrierLevel = CarrierLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.SetNextJoinPassword
// ()
// Parameters:
// struct FString                 Password                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::SetNextJoinPassword(const struct FString& Password)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.SetNextJoinPassword");

	UINSLocalPlayer_SetNextJoinPassword_Params params;
	params.Password = Password;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.RequestPostMatchStats
// ()
void UINSLocalPlayer::RequestPostMatchStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.RequestPostMatchStats");

	UINSLocalPlayer_RequestPostMatchStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.RequestPlayerProfile
// ()
void UINSLocalPlayer::RequestPlayerProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.RequestPlayerProfile");

	UINSLocalPlayer_RequestPlayerProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.RequestPlayerGames
// ()
// Parameters:
// int                            CurrentPage                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            CountPerPage                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::RequestPlayerGames(int CurrentPage, int CountPerPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.RequestPlayerGames");

	UINSLocalPlayer_RequestPlayerGames_Params params;
	params.CurrentPage = CurrentPage;
	params.CountPerPage = CountPerPage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.QueryAchievements
// ()
// Parameters:
// bool                           bRefresh                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::QueryAchievements(bool bRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.QueryAchievements");

	UINSLocalPlayer_QueryAchievements_Params params;
	params.bRefresh = bRefresh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnUsingControllerUpdate__DelegateSignature
// ()
// Parameters:
// bool                           UsingController                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EeInputIconType                NewIconType                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnUsingControllerUpdate__DelegateSignature(bool UsingController, EeInputIconType NewIconType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnUsingControllerUpdate__DelegateSignature");

	UINSLocalPlayer_OnUsingControllerUpdate__DelegateSignature_Params params;
	params.UsingController = UsingController;
	params.NewIconType = NewIconType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnUpdateProfileBlockLoadedDelegate__DelegateSignature
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromCloud                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnUpdateProfileBlockLoadedDelegate__DelegateSignature(EProfileBlockType Type, bool bFromCloud)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnUpdateProfileBlockLoadedDelegate__DelegateSignature");

	UINSLocalPlayer_OnUpdateProfileBlockLoadedDelegate__DelegateSignature_Params params;
	params.Type = Type;
	params.bFromCloud = bFromCloud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.OnTutorialComplete
// ()
void UINSLocalPlayer::OnTutorialComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.OnTutorialComplete");

	UINSLocalPlayer_OnTutorialComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.OnTaglinesLoaded
// ()
void UINSLocalPlayer::OnTaglinesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.OnTaglinesLoaded");

	UINSLocalPlayer_OnTaglinesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnRequestPlayerProfileUpdated__DelegateSignature
// ()
void UINSLocalPlayer::OnRequestPlayerProfileUpdated__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnRequestPlayerProfileUpdated__DelegateSignature");

	UINSLocalPlayer_OnRequestPlayerProfileUpdated__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnRequestPlayerGamesUpdated__DelegateSignature
// ()
void UINSLocalPlayer::OnRequestPlayerGamesUpdated__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnRequestPlayerGamesUpdated__DelegateSignature");

	UINSLocalPlayer_OnRequestPlayerGamesUpdated__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnQueryAchievementsComplete__DelegateSignature
// ()
void UINSLocalPlayer::OnQueryAchievementsComplete__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnQueryAchievementsComplete__DelegateSignature");

	UINSLocalPlayer_OnQueryAchievementsComplete__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.OnProfileBlockLoaded
// ()
// Parameters:
// EProfileBlockType              Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromCloud                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnProfileBlockLoaded(EProfileBlockType Type, bool bFromCloud)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.OnProfileBlockLoaded");

	UINSLocalPlayer_OnProfileBlockLoaded_Params params;
	params.Type = Type;
	params.bFromCloud = bFromCloud;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnPostMatchStatsUpdated__DelegateSignature
// ()
void UINSLocalPlayer::OnPostMatchStatsUpdated__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnPostMatchStatsUpdated__DelegateSignature");

	UINSLocalPlayer_OnPostMatchStatsUpdated__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.OnPoolCountsUpdatedCallback
// ()
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQueryPoolCountResults  Results                        (Parm, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnPoolCountsUpdatedCallback(bool bSuccess, const struct FQueryPoolCountResults& Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.OnPoolCountsUpdatedCallback");

	UINSLocalPlayer_OnPoolCountsUpdatedCallback_Params params;
	params.bSuccess = bSuccess;
	params.Results = Results;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnPoolCountsUpdated__DelegateSignature
// ()
// Parameters:
// struct FQueryPoolCountResults  Counts                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnPoolCountsUpdated__DelegateSignature(const struct FQueryPoolCountResults& Counts)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnPoolCountsUpdated__DelegateSignature");

	UINSLocalPlayer_OnPoolCountsUpdated__DelegateSignature_Params params;
	params.Counts = Counts;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnPlayerRatingUpdated__DelegateSignature
// ()
// Parameters:
// struct FCompetitiveRating      Rating                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnPlayerRatingUpdated__DelegateSignature(const struct FCompetitiveRating& Rating)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnPlayerRatingUpdated__DelegateSignature");

	UINSLocalPlayer_OnPlayerRatingUpdated__DelegateSignature_Params params;
	params.Rating = Rating;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnPlayerProfileUpdated__DelegateSignature
// ()
// Parameters:
// struct FSandstormPlayerProfile NewData                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnPlayerProfileUpdated__DelegateSignature(const struct FSandstormPlayerProfile& NewData)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnPlayerProfileUpdated__DelegateSignature");

	UINSLocalPlayer_OnPlayerProfileUpdated__DelegateSignature_Params params;
	params.NewData = NewData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnPlayerGearLevelChanged__DelegateSignature
// ()
// Parameters:
// struct FName                   ArmorLevel                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   CarrierLevel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnPlayerGearLevelChanged__DelegateSignature(const struct FName& ArmorLevel, const struct FName& CarrierLevel)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnPlayerGearLevelChanged__DelegateSignature");

	UINSLocalPlayer_OnPlayerGearLevelChanged__DelegateSignature_Params params;
	params.ArmorLevel = ArmorLevel;
	params.CarrierLevel = CarrierLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnPlayerAvatarLoaded__DelegateSignature
// ()
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnPlayerAvatarLoaded__DelegateSignature(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnPlayerAvatarLoaded__DelegateSignature");

	UINSLocalPlayer_OnPlayerAvatarLoaded__DelegateSignature_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnMatchHistoryUpdated__DelegateSignature
// ()
// Parameters:
// struct FMatchHistory           NewHistory                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnMatchHistoryUpdated__DelegateSignature(const struct FMatchHistory& NewHistory)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnMatchHistoryUpdated__DelegateSignature");

	UINSLocalPlayer_OnMatchHistoryUpdated__DelegateSignature_Params params;
	params.NewHistory = NewHistory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.OnExperienceUpdated
// ()
// Parameters:
// int64_t                        NewExperience                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnExperienceUpdated(int64_t NewExperience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.OnExperienceUpdated");

	UINSLocalPlayer_OnExperienceUpdated_Params params;
	params.NewExperience = NewExperience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnAccountStatusUpdatedDelegate__DelegateSignature
// ()
// Parameters:
// struct FGetAccountStatusResult Status                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSLocalPlayer::OnAccountStatusUpdatedDelegate__DelegateSignature(const struct FGetAccountStatusResult& Status)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnAccountStatusUpdatedDelegate__DelegateSignature");

	UINSLocalPlayer_OnAccountStatusUpdatedDelegate__DelegateSignature_Params params;
	params.Status = Status;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSLocalPlayer.OnAbandonedMatchUpdate__DelegateSignature
// ()
void UINSLocalPlayer::OnAbandonedMatchUpdate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSLocalPlayer.OnAbandonedMatchUpdate__DelegateSignature");

	UINSLocalPlayer_OnAbandonedMatchUpdate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.LoadPlayerAvatar
// ()
void UINSLocalPlayer::LoadPlayerAvatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.LoadPlayerAvatar");

	UINSLocalPlayer_LoadPlayerAvatar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.HasAbandonedMatchInPool
// ()
// Parameters:
// struct FString                 PoolName                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSLocalPlayer::HasAbandonedMatchInPool(const struct FString& PoolName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.HasAbandonedMatchInPool");

	UINSLocalPlayer_HasAbandonedMatchInPool_Params params;
	params.PoolName = PoolName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSLocalPlayer.GetVoiceInputDevices
// ()
// Parameters:
// TArray<struct FVoiceChatAvailableDevice> OutInputDevices                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::GetVoiceInputDevices(TArray<struct FVoiceChatAvailableDevice>* OutInputDevices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetVoiceInputDevices");

	UINSLocalPlayer_GetVoiceInputDevices_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutInputDevices != nullptr)
		*OutInputDevices = params.OutInputDevices;

}


// Function Insurgency.INSLocalPlayer.GetTaglinesCount
// ()
// Parameters:
// TMap<struct FString, int>      TaglineCountMap                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSLocalPlayer::GetTaglinesCount(TMap<struct FString, int>* TaglineCountMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetTaglinesCount");

	UINSLocalPlayer_GetTaglinesCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TaglineCountMap != nullptr)
		*TaglineCountMap = params.TaglineCountMap;

}


// Function Insurgency.INSLocalPlayer.GetTaglineClassPtr
// ()
// Parameters:
// struct FString                 ClassName                      (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::GetTaglineClassPtr(struct FString* ClassName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetTaglineClassPtr");

	UINSLocalPlayer_GetTaglineClassPtr_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ClassName != nullptr)
		*ClassName = params.ClassName;

}


// Function Insurgency.INSLocalPlayer.GetPlayerProfile
// ()
// Parameters:
// class UStatisticsProfile*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UStatisticsProfile* UINSLocalPlayer::GetPlayerProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetPlayerProfile");

	UINSLocalPlayer_GetPlayerProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSLocalPlayer.GetLocalProfile
// ()
// Parameters:
// class UINSPlayerLocalProfile*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSPlayerLocalProfile* UINSLocalPlayer::GetLocalProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetLocalProfile");

	UINSLocalPlayer_GetLocalProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSLocalPlayer.GetEntitledScoreboardBadgeIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSLocalPlayer::GetEntitledScoreboardBadgeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetEntitledScoreboardBadgeIndex");

	UINSLocalPlayer_GetEntitledScoreboardBadgeIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSLocalPlayer.GetControllerIconType
// ()
// Parameters:
// EeInputIconType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EeInputIconType UINSLocalPlayer::GetControllerIconType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetControllerIconType");

	UINSLocalPlayer_GetControllerIconType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSLocalPlayer.GetAchievementsCount
// ()
// Parameters:
// int                            AchievementsAchieved           (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            AchievementsTotal              (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::GetAchievementsCount(int* AchievementsAchieved, int* AchievementsTotal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.GetAchievementsCount");

	UINSLocalPlayer_GetAchievementsCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AchievementsAchieved != nullptr)
		*AchievementsAchieved = params.AchievementsAchieved;
	if (AchievementsTotal != nullptr)
		*AchievementsTotal = params.AchievementsTotal;

}


// Function Insurgency.INSLocalPlayer.CreateCustomGame
// ()
// Parameters:
// bool                           bLocal                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Scenario                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSLocalPlayer::CreateCustomGame(bool bLocal, const struct FString& Scenario)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.CreateCustomGame");

	UINSLocalPlayer_CreateCustomGame_Params params;
	params.bLocal = bLocal;
	params.Scenario = Scenario;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSLocalPlayer.BroadcastKeyIconUpdate
// ()
void UINSLocalPlayer::BroadcastKeyIconUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSLocalPlayer.BroadcastKeyIconUpdate");

	UINSLocalPlayer_BroadcastKeyIconUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSLocalPlayer::AfterRead()
{
	ULocalPlayer::AfterRead();

	READ_PTR_FULL(RenderTargetController, URenderTargetController);
	READ_PTR_FULL(LoadedLocalProfile, UINSPlayerLocalProfile);
	READ_PTR_FULL(PlayerProfile, UStatisticsProfile);
	READ_PTR_FULL(UserAvatar, UTexture2D);
}

void UINSLocalPlayer::BeforeDelete()
{
	ULocalPlayer::BeforeDelete();

	DELE_PTR_FULL(RenderTargetController);
	DELE_PTR_FULL(LoadedLocalProfile);
	DELE_PTR_FULL(PlayerProfile);
	DELE_PTR_FULL(UserAvatar);
}

void AINSLevelScriptActor::AfterRead()
{
	ALevelScriptActor::AfterRead();

}

void AINSLevelScriptActor::BeforeDelete()
{
	ALevelScriptActor::BeforeDelete();

}

// Function Insurgency.INSGameViewportClient.SSForceKeyboardId
// ()
// Parameters:
// int                            NewControllerId                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameViewportClient::SSForceKeyboardId(int NewControllerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameViewportClient.SSForceKeyboardId");

	UINSGameViewportClient_SSForceKeyboardId_Params params;
	params.NewControllerId = NewControllerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameViewportClient.SSForceGamepadId
// ()
// Parameters:
// int                            NewControllerId                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameViewportClient::SSForceGamepadId(int NewControllerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameViewportClient.SSForceGamepadId");

	UINSGameViewportClient_SSForceGamepadId_Params params;
	params.NewControllerId = NewControllerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSGameViewportClient::AfterRead()
{
	UGameViewportClient::AfterRead();

	READ_PTR_FULL(WatermarkFontAsset, UFont);
}

void UINSGameViewportClient::BeforeDelete()
{
	UGameViewportClient::BeforeDelete();

	DELE_PTR_FULL(WatermarkFontAsset);
}

// Function Insurgency.INSGameUserSettings.UpdateLastAnnouncementPanelDate
// ()
// Parameters:
// struct FDateTime               CurrentAnnouncementDateTime    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::UpdateLastAnnouncementPanelDate(const struct FDateTime& CurrentAnnouncementDateTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.UpdateLastAnnouncementPanelDate");

	UINSGameUserSettings_UpdateLastAnnouncementPanelDate_Params params;
	params.CurrentAnnouncementDateTime = CurrentAnnouncementDateTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.ShouldShowAnnouncementPopup
// ()
// Parameters:
// struct FDateTime               CurrentAnnouncementDateTime    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::ShouldShowAnnouncementPopup(const struct FDateTime& CurrentAnnouncementDateTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.ShouldShowAnnouncementPopup");

	UINSGameUserSettings_ShouldShowAnnouncementPopup_Params params;
	params.CurrentAnnouncementDateTime = CurrentAnnouncementDateTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.SetVoiceVolume
// ()
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetVoiceVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetVoiceVolume");

	UINSGameUserSettings_SetVoiceVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetVoiceInputGain
// ()
// Parameters:
// float                          NewInputGain                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetVoiceInputGain(float NewInputGain)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetVoiceInputGain");

	UINSGameUserSettings_SetVoiceInputGain_Params params;
	params.NewInputGain = NewInputGain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetVoiceInputDevice
// ()
// Parameters:
// struct FString                 NewDevice                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetVoiceInputDevice(const struct FString& NewDevice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetVoiceInputDevice");

	UINSGameUserSettings_SetVoiceInputDevice_Params params;
	params.NewDevice = NewDevice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetViewBobEnabled
// ()
// Parameters:
// bool                           bVal                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetViewBobEnabled(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetViewBobEnabled");

	UINSGameUserSettings_SetViewBobEnabled_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetToDefaultsVideoSettings
// ()
void UINSGameUserSettings::SetToDefaultsVideoSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetToDefaultsVideoSettings");

	UINSGameUserSettings_SetToDefaultsVideoSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetToDefaultsGameSettings
// ()
void UINSGameUserSettings::SetToDefaultsGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetToDefaultsGameSettings");

	UINSGameUserSettings_SetToDefaultsGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetToDefaultsControlSettings
// ()
void UINSGameUserSettings::SetToDefaultsControlSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetToDefaultsControlSettings");

	UINSGameUserSettings_SetToDefaultsControlSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetToDefaultsAudioSettings
// ()
void UINSGameUserSettings::SetToDefaultsAudioSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetToDefaultsAudioSettings");

	UINSGameUserSettings_SetToDefaultsAudioSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetTeammateIndicatorOpacity
// ()
// Parameters:
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetTeammateIndicatorOpacity(float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetTeammateIndicatorOpacity");

	UINSGameUserSettings_SetTeammateIndicatorOpacity_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetSpectatorXrayTailsPlayerOnlyEnabled
// ()
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetSpectatorXrayTailsPlayerOnlyEnabled(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetSpectatorXrayTailsPlayerOnlyEnabled");

	UINSGameUserSettings_SetSpectatorXrayTailsPlayerOnlyEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetSpectatorXrayTailsEnabled
// ()
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetSpectatorXrayTailsEnabled(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetSpectatorXrayTailsEnabled");

	UINSGameUserSettings_SetSpectatorXrayTailsEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetSpectatorXrayEnabled
// ()
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetSpectatorXrayEnabled(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetSpectatorXrayEnabled");

	UINSGameUserSettings_SetSpectatorXrayEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetSpectatorControlHintsEnabled
// ()
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetSpectatorControlHintsEnabled(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetSpectatorControlHintsEnabled");

	UINSGameUserSettings_SetSpectatorControlHintsEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetSoundInBackground
// ()
// Parameters:
// bool                           bEnabledInBG                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetSoundInBackground(bool bEnabledInBG)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetSoundInBackground");

	UINSGameUserSettings_SetSoundInBackground_Params params;
	params.bEnabledInBG = bEnabledInBG;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetSoldierFOV
// ()
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetSoldierFOV(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetSoldierFOV");

	UINSGameUserSettings_SetSoldierFOV_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShowFPS
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShowFPS(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShowFPS");

	UINSGameUserSettings_SetShowFPS_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShowDevTag
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShowDevTag(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShowDevTag");

	UINSGameUserSettings_SetShowDevTag_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShowContextualVaultHints
// ()
// Parameters:
// bool                           bNewVal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShowContextualVaultHints(bool bNewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShowContextualVaultHints");

	UINSGameUserSettings_SetShowContextualVaultHints_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShowContextualKeyHints
// ()
// Parameters:
// bool                           bNewVal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShowContextualKeyHints(bool bNewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShowContextualKeyHints");

	UINSGameUserSettings_SetShowContextualKeyHints_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShowContextualCycleOpticsHint
// ()
// Parameters:
// bool                           bNewVal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShowContextualCycleOpticsHint(bool bNewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShowContextualCycleOpticsHint");

	UINSGameUserSettings_SetShowContextualCycleOpticsHint_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShoutcasterTeamScoresEnabled
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShoutcasterTeamScoresEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShoutcasterTeamScoresEnabled");

	UINSGameUserSettings_SetShoutcasterTeamScoresEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShoutcasterPlayerVitalsEnabled
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShoutcasterPlayerVitalsEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShoutcasterPlayerVitalsEnabled");

	UINSGameUserSettings_SetShoutcasterPlayerVitalsEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetShoutcasterMinimapEnabled
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetShoutcasterMinimapEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetShoutcasterMinimapEnabled");

	UINSGameUserSettings_SetShoutcasterMinimapEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetScreenPercentage
// ()
// Parameters:
// float                          ScreenPercentage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetScreenPercentage(float ScreenPercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetScreenPercentage");

	UINSGameUserSettings_SetScreenPercentage_Params params;
	params.ScreenPercentage = ScreenPercentage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetRespawnStatusLocationSetting
// ()
// Parameters:
// unsigned char                  RespawnLocationIndex           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetRespawnStatusLocationSetting(unsigned char RespawnLocationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetRespawnStatusLocationSetting");

	UINSGameUserSettings_SetRespawnStatusLocationSetting_Params params;
	params.RespawnLocationIndex = RespawnLocationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetRelativeTeamColors
// ()
// Parameters:
// bool                           bVal                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetRelativeTeamColors(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetRelativeTeamColors");

	UINSGameUserSettings_SetRelativeTeamColors_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetQualityPreset
// ()
// Parameters:
// int                            Quality                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetQualityPreset(int Quality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetQualityPreset");

	UINSGameUserSettings_SetQualityPreset_Params params;
	params.Quality = Quality;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetProfanityFilterEnabled
// ()
// Parameters:
// bool                           bVal                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetProfanityFilterEnabled(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetProfanityFilterEnabled");

	UINSGameUserSettings_SetProfanityFilterEnabled_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetPanningRule
// ()
// Parameters:
// unsigned char                  Rule                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetPanningRule(unsigned char Rule)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetPanningRule");

	UINSGameUserSettings_SetPanningRule_Params params;
	params.Rule = Rule;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetOverrideVideoOption
// ()
// Parameters:
// struct FName                   ConsoleVariableName            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bMakeDefault                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetOverrideVideoOption(const struct FName& ConsoleVariableName, int Value, bool bMakeDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetOverrideVideoOption");

	UINSGameUserSettings_SetOverrideVideoOption_Params params;
	params.ConsoleVariableName = ConsoleVariableName;
	params.Value = Value;
	params.bMakeDefault = bMakeDefault;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetObjectiveIndicatorOpacity
// ()
// Parameters:
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetObjectiveIndicatorOpacity(float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetObjectiveIndicatorOpacity");

	UINSGameUserSettings_SetObjectiveIndicatorOpacity_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMuteVOTransmitBeep
// ()
// Parameters:
// bool                           bNewMute                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMuteVOTransmitBeep(bool bNewMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMuteVOTransmitBeep");

	UINSGameUserSettings_SetMuteVOTransmitBeep_Params params;
	params.bNewMute = bNewMute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMuteTinitusEffect
// ()
// Parameters:
// bool                           bNewMute                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMuteTinitusEffect(bool bNewMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMuteTinitusEffect");

	UINSGameUserSettings_SetMuteTinitusEffect_Params params;
	params.bNewMute = bNewMute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMuteRadioTransmitBeep
// ()
// Parameters:
// bool                           bNewMute                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMuteRadioTransmitBeep(bool bNewMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMuteRadioTransmitBeep");

	UINSGameUserSettings_SetMuteRadioTransmitBeep_Params params;
	params.bNewMute = bNewMute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMusicVolume
// ()
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMusicVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMusicVolume");

	UINSGameUserSettings_SetMusicVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMouseSmoothing
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMouseSmoothing(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMouseSmoothing");

	UINSGameUserSettings_SetMouseSmoothing_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMatchRegionEnabled
// ()
// Parameters:
// struct FName                   Mode                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMatchRegionEnabled(const struct FName& Mode, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMatchRegionEnabled");

	UINSGameUserSettings_SetMatchRegionEnabled_Params params;
	params.Mode = Mode;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMatchGamemodeEnabled
// ()
// Parameters:
// struct FName                   GameModeName                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMatchGamemodeEnabled(const struct FName& GameModeName, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMatchGamemodeEnabled");

	UINSGameUserSettings_SetMatchGamemodeEnabled_Params params;
	params.GameModeName = GameModeName;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetMasterVolume
// ()
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetMasterVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetMasterVolume");

	UINSGameUserSettings_SetMasterVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetHasSelectedRegions
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetHasSelectedRegions(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetHasSelectedRegions");

	UINSGameUserSettings_SetHasSelectedRegions_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetFrameRateSmoothing
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetFrameRateSmoothing(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetFrameRateSmoothing");

	UINSGameUserSettings_SetFrameRateSmoothing_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetFrameLimit
// ()
// Parameters:
// int                            FPS                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetFrameLimit(int FPS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetFrameLimit");

	UINSGameUserSettings_SetFrameLimit_Params params;
	params.FPS = FPS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetEnableObjectiveBriefing
// ()
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetEnableObjectiveBriefing(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetEnableObjectiveBriefing");

	UINSGameUserSettings_SetEnableObjectiveBriefing_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetEnableNVIDIAHighlights
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetEnableNVIDIAHighlights(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetEnableNVIDIAHighlights");

	UINSGameUserSettings_SetEnableNVIDIAHighlights_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetEnableHUD
// ()
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetEnableHUD(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetEnableHUD");

	UINSGameUserSettings_SetEnableHUD_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetEffectsVolume
// ()
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetEffectsVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetEffectsVolume");

	UINSGameUserSettings_SetEffectsVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetDisplayGamma
// ()
// Parameters:
// float                          Gamma                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetDisplayGamma(float Gamma)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetDisplayGamma");

	UINSGameUserSettings_SetDisplayGamma_Params params;
	params.Gamma = Gamma;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetDefaultColorScheme
// ()
void UINSGameUserSettings::SetDefaultColorScheme()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetDefaultColorScheme");

	UINSGameUserSettings_SetDefaultColorScheme_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetDeathCameraEnabled
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetDeathCameraEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetDeathCameraEnabled");

	UINSGameUserSettings_SetDeathCameraEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCustomNeutralLinearColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCustomNeutralLinearColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomNeutralLinearColor");

	UINSGameUserSettings_SetCustomNeutralLinearColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCustomNeutralColor
// ()
// Parameters:
// float                          R                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          G                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCustomNeutralColor(float R, float G, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomNeutralColor");

	UINSGameUserSettings_SetCustomNeutralColor_Params params;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCustomLanguage
// ()
// Parameters:
// struct FString                 InValue                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSaveToConfig                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::SetCustomLanguage(const struct FString& InValue, bool bSaveToConfig)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomLanguage");

	UINSGameUserSettings_SetCustomLanguage_Params params;
	params.InValue = InValue;
	params.bSaveToConfig = bSaveToConfig;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.SetCustomFriendlyLinearColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCustomFriendlyLinearColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomFriendlyLinearColor");

	UINSGameUserSettings_SetCustomFriendlyLinearColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCustomFriendlyColor
// ()
// Parameters:
// float                          R                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          G                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCustomFriendlyColor(float R, float G, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomFriendlyColor");

	UINSGameUserSettings_SetCustomFriendlyColor_Params params;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCustomEnemyLinearColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCustomEnemyLinearColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomEnemyLinearColor");

	UINSGameUserSettings_SetCustomEnemyLinearColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCustomEnemyColor
// ()
// Parameters:
// float                          R                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          G                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCustomEnemyColor(float R, float G, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCustomEnemyColor");

	UINSGameUserSettings_SetCustomEnemyColor_Params params;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetConnectionStatusLocationSetting
// ()
// Parameters:
// unsigned char                  ConnectionLocationIndex        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetConnectionStatusLocationSetting(unsigned char ConnectionLocationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetConnectionStatusLocationSetting");

	UINSGameUserSettings_SetConnectionStatusLocationSetting_Params params;
	params.ConnectionLocationIndex = ConnectionLocationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCommanderObserverLinearColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCommanderObserverLinearColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCommanderObserverLinearColor");

	UINSGameUserSettings_SetCommanderObserverLinearColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCommanderObserverColor
// ()
// Parameters:
// float                          R                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          G                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCommanderObserverColor(float R, float G, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCommanderObserverColor");

	UINSGameUserSettings_SetCommanderObserverColor_Params params;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetColorSchemeSetting
// ()
// Parameters:
// unsigned char                  ColorSchemeIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetColorSchemeSetting(unsigned char ColorSchemeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetColorSchemeSetting");

	UINSGameUserSettings_SetColorSchemeSetting_Params params;
	params.ColorSchemeIndex = ColorSchemeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetClientStatsOverlayEnabled
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetClientStatsOverlayEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetClientStatsOverlayEnabled");

	UINSGameUserSettings_SetClientStatsOverlayEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetClientStatLocation
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetClientStatLocation(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetClientStatLocation");

	UINSGameUserSettings_SetClientStatLocation_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetCameraAnimationEnabled
// ()
// Parameters:
// bool                           bVal                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetCameraAnimationEnabled(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetCameraAnimationEnabled");

	UINSGameUserSettings_SetCameraAnimationEnabled_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetBuddyOverridesCommanderObserverColor
// ()
// Parameters:
// bool                           bVal                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetBuddyOverridesCommanderObserverColor(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetBuddyOverridesCommanderObserverColor");

	UINSGameUserSettings_SetBuddyOverridesCommanderObserverColor_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetBuddyLinearColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetBuddyLinearColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetBuddyLinearColor");

	UINSGameUserSettings_SetBuddyLinearColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetBuddyColor
// ()
// Parameters:
// float                          R                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          G                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetBuddyColor(float R, float G, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetBuddyColor");

	UINSGameUserSettings_SetBuddyColor_Params params;
	params.R = R;
	params.G = G;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetBackgroundVolumeMultiplier
// ()
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetBackgroundVolumeMultiplier(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetBackgroundVolumeMultiplier");

	UINSGameUserSettings_SetBackgroundVolumeMultiplier_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetAlwaysShowFiremode
// ()
// Parameters:
// bool                           bNewVal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetAlwaysShowFiremode(bool bNewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetAlwaysShowFiremode");

	UINSGameUserSettings_SetAlwaysShowFiremode_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetAlwaysShowCosmeticSelection
// ()
// Parameters:
// bool                           bNewVal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetAlwaysShowCosmeticSelection(bool bNewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetAlwaysShowCosmeticSelection");

	UINSGameUserSettings_SetAlwaysShowCosmeticSelection_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetAlwaysShowCompass
// ()
// Parameters:
// bool                           bNewVal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetAlwaysShowCompass(bool bNewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetAlwaysShowCompass");

	UINSGameUserSettings_SetAlwaysShowCompass_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.SetAllowIngameLessons
// ()
// Parameters:
// bool                           bVal                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::SetAllowIngameLessons(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.SetAllowIngameLessons");

	UINSGameUserSettings_SetAllowIngameLessons_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.ResetOverrideVideoOptions
// ()
// Parameters:
// bool                           bPartialRefresh                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::ResetOverrideVideoOptions(bool bPartialRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.ResetOverrideVideoOptions");

	UINSGameUserSettings_ResetOverrideVideoOptions_Params params;
	params.bPartialRefresh = bPartialRefresh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.ResetOverrideVideoOption
// ()
// Parameters:
// struct FName                   ConsoleVariableName            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::ResetOverrideVideoOption(const struct FName& ConsoleVariableName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.ResetOverrideVideoOption");

	UINSGameUserSettings_ResetOverrideVideoOption_Params params;
	params.ConsoleVariableName = ConsoleVariableName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.RefreshOverrideVideoOptions
// ()
void UINSGameUserSettings::RefreshOverrideVideoOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.RefreshOverrideVideoOptions");

	UINSGameUserSettings_RefreshOverrideVideoOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnVoiceChatInputDeviceChanged__DelegateSignature
// ()
// Parameters:
// struct FString                 NewInputDevice                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::OnVoiceChatInputDeviceChanged__DelegateSignature(const struct FString& NewInputDevice)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnVoiceChatInputDeviceChanged__DelegateSignature");

	UINSGameUserSettings_OnVoiceChatInputDeviceChanged__DelegateSignature_Params params;
	params.NewInputDevice = NewInputDevice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnVoiceChatGainSettingChanged__DelegateSignature
// ()
// Parameters:
// float                          NewGain                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::OnVoiceChatGainSettingChanged__DelegateSignature(float NewGain)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnVoiceChatGainSettingChanged__DelegateSignature");

	UINSGameUserSettings_OnVoiceChatGainSettingChanged__DelegateSignature_Params params;
	params.NewGain = NewGain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnSettingsUpdated__DelegateSignature
// ()
void UINSGameUserSettings::OnSettingsUpdated__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnSettingsUpdated__DelegateSignature");

	UINSGameUserSettings_OnSettingsUpdated__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnRespawnStatusLocationSettingUpdated__DelegateSignature
// ()
// Parameters:
// unsigned char                  NewIndex                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::OnRespawnStatusLocationSettingUpdated__DelegateSignature(unsigned char NewIndex)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnRespawnStatusLocationSettingUpdated__DelegateSignature");

	UINSGameUserSettings_OnRespawnStatusLocationSettingUpdated__DelegateSignature_Params params;
	params.NewIndex = NewIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnNVIDIAHighlightPreferencesChanged__DelegateSignature
// ()
void UINSGameUserSettings::OnNVIDIAHighlightPreferencesChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnNVIDIAHighlightPreferencesChanged__DelegateSignature");

	UINSGameUserSettings_OnNVIDIAHighlightPreferencesChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnMatchRegionsChanged__DelegateSignature
// ()
void UINSGameUserSettings::OnMatchRegionsChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnMatchRegionsChanged__DelegateSignature");

	UINSGameUserSettings_OnMatchRegionsChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnMatchGamemodesChanged__DelegateSignature
// ()
void UINSGameUserSettings::OnMatchGamemodesChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnMatchGamemodesChanged__DelegateSignature");

	UINSGameUserSettings_OnMatchGamemodesChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnLanguageChanged__DelegateSignature
// ()
void UINSGameUserSettings::OnLanguageChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnLanguageChanged__DelegateSignature");

	UINSGameUserSettings_OnLanguageChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnHUDDisplayOptionChanged__DelegateSignature
// ()
void UINSGameUserSettings::OnHUDDisplayOptionChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnHUDDisplayOptionChanged__DelegateSignature");

	UINSGameUserSettings_OnHUDDisplayOptionChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnConnectionStatusLocationSettingUpdated__DelegateSignature
// ()
// Parameters:
// unsigned char                  NewIndex                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::OnConnectionStatusLocationSettingUpdated__DelegateSignature(unsigned char NewIndex)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnConnectionStatusLocationSettingUpdated__DelegateSignature");

	UINSGameUserSettings_OnConnectionStatusLocationSettingUpdated__DelegateSignature_Params params;
	params.NewIndex = NewIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameUserSettings.OnClientStatLocationChanged__DelegateSignature
// ()
void UINSGameUserSettings::OnClientStatLocationChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameUserSettings.OnClientStatLocationChanged__DelegateSignature");

	UINSGameUserSettings_OnClientStatLocationChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.MarkMenuPromptAsSeen
// ()
// Parameters:
// struct FString                 Prompt                         (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::MarkMenuPromptAsSeen(struct FString* Prompt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.MarkMenuPromptAsSeen");

	UINSGameUserSettings_MarkMenuPromptAsSeen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Prompt != nullptr)
		*Prompt = params.Prompt;

}


// Function Insurgency.INSGameUserSettings.MarkEventAsConfirmed
// ()
// Parameters:
// EConfirmableEvent              Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPersistIfUpdated              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::MarkEventAsConfirmed(EConfirmableEvent Event, bool bPersistIfUpdated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.MarkEventAsConfirmed");

	UINSGameUserSettings_MarkEventAsConfirmed_Params params;
	params.Event = Event;
	params.bPersistIfUpdated = bPersistIfUpdated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsViewBobEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsViewBobEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsViewBobEnabled");

	UINSGameUserSettings_IsViewBobEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsProfanityFilterEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsProfanityFilterEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsProfanityFilterEnabled");

	UINSGameUserSettings_IsProfanityFilterEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsObjectiveBriefingEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsObjectiveBriefingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsObjectiveBriefingEnabled");

	UINSGameUserSettings_IsObjectiveBriefingEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsHUDEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsHUDEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsHUDEnabled");

	UINSGameUserSettings_IsHUDEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsFrameRateSmoothingEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsFrameRateSmoothingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsFrameRateSmoothingEnabled");

	UINSGameUserSettings_IsFrameRateSmoothingEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsFirstTimeSaving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsFirstTimeSaving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsFirstTimeSaving");

	UINSGameUserSettings_IsFirstTimeSaving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsDeathCameraEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsDeathCameraEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsDeathCameraEnabled");

	UINSGameUserSettings_IsDeathCameraEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.IsCameraAnimationEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::IsCameraAnimationEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.IsCameraAnimationEnabled");

	UINSGameUserSettings_IsCameraAnimationEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.HasSeenMenuPrompt
// ()
// Parameters:
// struct FString                 Prompt                         (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::HasSeenMenuPrompt(struct FString* Prompt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.HasSeenMenuPrompt");

	UINSGameUserSettings_HasSeenMenuPrompt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Prompt != nullptr)
		*Prompt = params.Prompt;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.HasConfirmedEvent
// ()
// Parameters:
// EConfirmableEvent              Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::HasConfirmedEvent(EConfirmableEvent Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.HasConfirmedEvent");

	UINSGameUserSettings_HasConfirmedEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetVoiceVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetVoiceVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetVoiceVolume");

	UINSGameUserSettings_GetVoiceVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetVoiceInputGain
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetVoiceInputGain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetVoiceInputGain");

	UINSGameUserSettings_GetVoiceInputGain_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetVoiceInputDevice
// ()
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSGameUserSettings::GetVoiceInputDevice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetVoiceInputDevice");

	UINSGameUserSettings_GetVoiceInputDevice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetSpectatorXrayTailsPlayerOnlyEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetSpectatorXrayTailsPlayerOnlyEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetSpectatorXrayTailsPlayerOnlyEnabled");

	UINSGameUserSettings_GetSpectatorXrayTailsPlayerOnlyEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetSpectatorXrayTailsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetSpectatorXrayTailsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetSpectatorXrayTailsEnabled");

	UINSGameUserSettings_GetSpectatorXrayTailsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetSpectatorXrayEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetSpectatorXrayEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetSpectatorXrayEnabled");

	UINSGameUserSettings_GetSpectatorXrayEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetSpectatorControlHintsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetSpectatorControlHintsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetSpectatorControlHintsEnabled");

	UINSGameUserSettings_GetSpectatorControlHintsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetSoundInBackground
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetSoundInBackground()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetSoundInBackground");

	UINSGameUserSettings_GetSoundInBackground_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetSoldierFOV
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetSoldierFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetSoldierFOV");

	UINSGameUserSettings_GetSoldierFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShowFPS
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShowFPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShowFPS");

	UINSGameUserSettings_GetShowFPS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShowDevTag
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShowDevTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShowDevTag");

	UINSGameUserSettings_GetShowDevTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShowContextualVaultHints
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShowContextualVaultHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShowContextualVaultHints");

	UINSGameUserSettings_GetShowContextualVaultHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShowContextualKeyHints
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShowContextualKeyHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShowContextualKeyHints");

	UINSGameUserSettings_GetShowContextualKeyHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShowContextualCycleOpticsHint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShowContextualCycleOpticsHint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShowContextualCycleOpticsHint");

	UINSGameUserSettings_GetShowContextualCycleOpticsHint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShoutcasterTeamScoresEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShoutcasterTeamScoresEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShoutcasterTeamScoresEnabled");

	UINSGameUserSettings_GetShoutcasterTeamScoresEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShoutcasterPlayerVitalsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShoutcasterPlayerVitalsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShoutcasterPlayerVitalsEnabled");

	UINSGameUserSettings_GetShoutcasterPlayerVitalsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetShoutcasterMinimapEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetShoutcasterMinimapEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetShoutcasterMinimapEnabled");

	UINSGameUserSettings_GetShoutcasterMinimapEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetScreenPercentage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetScreenPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetScreenPercentage");

	UINSGameUserSettings_GetScreenPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetResolutionScaleInformationSane
// ()
// Parameters:
// float                          CurrentScaleNormalized         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          CurrentScaleValue              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinScaleValue                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxScaleValue                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::GetResolutionScaleInformationSane(float* CurrentScaleNormalized, float* CurrentScaleValue, float* MinScaleValue, float* MaxScaleValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetResolutionScaleInformationSane");

	UINSGameUserSettings_GetResolutionScaleInformationSane_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (CurrentScaleNormalized != nullptr)
		*CurrentScaleNormalized = params.CurrentScaleNormalized;
	if (CurrentScaleValue != nullptr)
		*CurrentScaleValue = params.CurrentScaleValue;
	if (MinScaleValue != nullptr)
		*MinScaleValue = params.MinScaleValue;
	if (MaxScaleValue != nullptr)
		*MaxScaleValue = params.MaxScaleValue;

}


// Function Insurgency.INSGameUserSettings.GetRelativeTeamColors
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetRelativeTeamColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetRelativeTeamColors");

	UINSGameUserSettings_GetRelativeTeamColors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetQualityPreset
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSGameUserSettings::GetQualityPreset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetQualityPreset");

	UINSGameUserSettings_GetQualityPreset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetPanningRule
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char UINSGameUserSettings::GetPanningRule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetPanningRule");

	UINSGameUserSettings_GetPanningRule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetNVIDIAHighlightEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetNVIDIAHighlightEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetNVIDIAHighlightEnabled");

	UINSGameUserSettings_GetNVIDIAHighlightEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetMuteVOTransmitBeep
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetMuteVOTransmitBeep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMuteVOTransmitBeep");

	UINSGameUserSettings_GetMuteVOTransmitBeep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetMuteTinitusEffect
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetMuteTinitusEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMuteTinitusEffect");

	UINSGameUserSettings_GetMuteTinitusEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetMuteRadioTransmitBeep
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetMuteRadioTransmitBeep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMuteRadioTransmitBeep");

	UINSGameUserSettings_GetMuteRadioTransmitBeep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetMusicVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetMusicVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMusicVolume");

	UINSGameUserSettings_GetMusicVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetMouseSmoothing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetMouseSmoothing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMouseSmoothing");

	UINSGameUserSettings_GetMouseSmoothing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetMatchRegions
// ()
// Parameters:
// TArray<struct FName>           Regions                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           EnabledRegions                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::GetMatchRegions(TArray<struct FName>* Regions, TArray<struct FName>* EnabledRegions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMatchRegions");

	UINSGameUserSettings_GetMatchRegions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Regions != nullptr)
		*Regions = params.Regions;
	if (EnabledRegions != nullptr)
		*EnabledRegions = params.EnabledRegions;

}


// Function Insurgency.INSGameUserSettings.GetMatchGamemodes
// ()
// Parameters:
// bool                           bCoop                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           Modes                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           EnabledModes                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::GetMatchGamemodes(bool bCoop, TArray<struct FName>* Modes, TArray<struct FName>* EnabledModes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMatchGamemodes");

	UINSGameUserSettings_GetMatchGamemodes_Params params;
	params.bCoop = bCoop;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Modes != nullptr)
		*Modes = params.Modes;
	if (EnabledModes != nullptr)
		*EnabledModes = params.EnabledModes;

}


// Function Insurgency.INSGameUserSettings.GetMasterVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetMasterVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetMasterVolume");

	UINSGameUserSettings_GetMasterVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetInsurgencyGameUserSettings
// ()
// Parameters:
// class UINSGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSGameUserSettings* UINSGameUserSettings::GetInsurgencyGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetInsurgencyGameUserSettings");

	UINSGameUserSettings_GetInsurgencyGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetHasSelectedRegions
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetHasSelectedRegions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetHasSelectedRegions");

	UINSGameUserSettings_GetHasSelectedRegions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetFrameLimit
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSGameUserSettings::GetFrameLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetFrameLimit");

	UINSGameUserSettings_GetFrameLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetExcludedMatchRegions
// ()
// Parameters:
// TArray<struct FName>           Regions                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::GetExcludedMatchRegions(TArray<struct FName>* Regions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetExcludedMatchRegions");

	UINSGameUserSettings_GetExcludedMatchRegions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Regions != nullptr)
		*Regions = params.Regions;

}


// Function Insurgency.INSGameUserSettings.GetExcludedMatchGamemodes
// ()
// Parameters:
// TArray<struct FName>           Modes                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::GetExcludedMatchGamemodes(TArray<struct FName>* Modes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetExcludedMatchGamemodes");

	UINSGameUserSettings_GetExcludedMatchGamemodes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Modes != nullptr)
		*Modes = params.Modes;

}


// Function Insurgency.INSGameUserSettings.GetEffectsVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetEffectsVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetEffectsVolume");

	UINSGameUserSettings_GetEffectsVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetDisplayGamma
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetDisplayGamma()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetDisplayGamma");

	UINSGameUserSettings_GetDisplayGamma_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetCustomLanguage
// ()
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSGameUserSettings::GetCustomLanguage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetCustomLanguage");

	UINSGameUserSettings_GetCustomLanguage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetColorScheme
// ()
// Parameters:
// unsigned char                  ColorSchemeIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColorScheme            OutColorScheme                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetColorScheme(unsigned char ColorSchemeIndex, struct FColorScheme* OutColorScheme)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetColorScheme");

	UINSGameUserSettings_GetColorScheme_Params params;
	params.ColorSchemeIndex = ColorSchemeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutColorScheme != nullptr)
		*OutColorScheme = params.OutColorScheme;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetClientStatsOverlayEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetClientStatsOverlayEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetClientStatsOverlayEnabled");

	UINSGameUserSettings_GetClientStatsOverlayEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetClientStatLocation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetClientStatLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetClientStatLocation");

	UINSGameUserSettings_GetClientStatLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetBackgroundVolumeMultiplier
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameUserSettings::GetBackgroundVolumeMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetBackgroundVolumeMultiplier");

	UINSGameUserSettings_GetBackgroundVolumeMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetAlwaysShowFiremode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetAlwaysShowFiremode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetAlwaysShowFiremode");

	UINSGameUserSettings_GetAlwaysShowFiremode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetAlwaysShowCosmeticSelection
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetAlwaysShowCosmeticSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetAlwaysShowCosmeticSelection");

	UINSGameUserSettings_GetAlwaysShowCosmeticSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetAlwaysShowCompass
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetAlwaysShowCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetAlwaysShowCompass");

	UINSGameUserSettings_GetAlwaysShowCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.GetAllowIngameLessons
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameUserSettings::GetAllowIngameLessons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.GetAllowIngameLessons");

	UINSGameUserSettings_GetAllowIngameLessons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameUserSettings.CreateOverrideVideoOption
// ()
// Parameters:
// struct FName                   ConsoleVariableName            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::CreateOverrideVideoOption(const struct FName& ConsoleVariableName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.CreateOverrideVideoOption");

	UINSGameUserSettings_CreateOverrideVideoOption_Params params;
	params.ConsoleVariableName = ConsoleVariableName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameUserSettings.ClearEventConfirmedState
// ()
// Parameters:
// EConfirmableEvent              Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPersistIfUpdated              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameUserSettings::ClearEventConfirmedState(EConfirmableEvent Event, bool bPersistIfUpdated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameUserSettings.ClearEventConfirmedState");

	UINSGameUserSettings_ClearEventConfirmedState_Params params;
	params.Event = Event;
	params.bPersistIfUpdated = bPersistIfUpdated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSGameUserSettings::AfterRead()
{
	UGameUserSettings::AfterRead();

}

void UINSGameUserSettings::BeforeDelete()
{
	UGameUserSettings::BeforeDelete();

}

// Function Insurgency.INSGameSession.OnGameStatsServerLoginChanged
// ()
// Parameters:
// bool                           bLoggedIn                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSGameSession::OnGameStatsServerLoginChanged(bool bLoggedIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameSession.OnGameStatsServerLoginChanged");

	AINSGameSession_OnGameStatsServerLoginChanged_Params params;
	params.bLoggedIn = bLoggedIn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSGameSession::AfterRead()
{
	AGameSession::AfterRead();

}

void AINSGameSession::BeforeDelete()
{
	AGameSession::BeforeDelete();

}

void AINSGameSessionMatchmaking::AfterRead()
{
	AINSGameSession::AfterRead();

	READ_PTR_FULL(ReservationBeaconHostClass, UClass);
	READ_PTR_FULL(QosBeaconHostClass, UClass);
	READ_PTR_FULL(ReservationBeaconHost, AINSMatchBeaconHost);
	READ_PTR_FULL(QosBeaconHost, AQosBeaconHost);
}

void AINSGameSessionMatchmaking::BeforeDelete()
{
	AINSGameSession::BeforeDelete();

	DELE_PTR_FULL(ReservationBeaconHostClass);
	DELE_PTR_FULL(QosBeaconHostClass);
	DELE_PTR_FULL(ReservationBeaconHost);
	DELE_PTR_FULL(QosBeaconHost);
}

// Function Insurgency.INSGameInstance.UpdateRealtimeMultiplayAndUpdateUserPrivilege
// ()
// Parameters:
// bool                           RealtimeMultiplay              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           UpdateUserPrivilege            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::UpdateRealtimeMultiplayAndUpdateUserPrivilege(bool RealtimeMultiplay, bool UpdateUserPrivilege)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.UpdateRealtimeMultiplayAndUpdateUserPrivilege");

	UINSGameInstance_UpdateRealtimeMultiplayAndUpdateUserPrivilege_Params params;
	params.RealtimeMultiplay = RealtimeMultiplay;
	params.UpdateUserPrivilege = UpdateUserPrivilege;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.TimerCheckModSubscriptions
// ()
void UINSGameInstance::TimerCheckModSubscriptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.TimerCheckModSubscriptions");

	UINSGameInstance_TimerCheckModSubscriptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.ShowAccountPicker
// ()
void UINSGameInstance::ShowAccountPicker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.ShowAccountPicker");

	UINSGameInstance_ShowAccountPicker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.SeamlessLoadingScreen
// ()
void UINSGameInstance::SeamlessLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.SeamlessLoadingScreen");

	UINSGameInstance_SeamlessLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.ReturnToMainMenu
// ()
void UINSGameInstance::ReturnToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.ReturnToMainMenu");

	UINSGameInstance_ReturnToMainMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.RemoveViewportLoadingScreenWidget
// ()
void UINSGameInstance::RemoveViewportLoadingScreenWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.RemoveViewportLoadingScreenWidget");

	UINSGameInstance_RemoveViewportLoadingScreenWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.PlayReplayByName
// ()
// Parameters:
// struct FString                 InName                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHttp                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::PlayReplayByName(const struct FString& InName, bool bHttp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.PlayReplayByName");

	UINSGameInstance_PlayReplayByName_Params params;
	params.InName = InName;
	params.bHttp = bHttp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnTaglinesLoaded
// ()
void UINSGameInstance::OnTaglinesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnTaglinesLoaded");

	UINSGameInstance_OnTaglinesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnReadyCheckUpdate__DelegateSignature
// ()
// Parameters:
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLocalReady                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnReadyCheckUpdate__DelegateSignature(bool bActive, bool bLocalReady)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnReadyCheckUpdate__DelegateSignature");

	UINSGameInstance_OnReadyCheckUpdate__DelegateSignature_Params params;
	params.bActive = bActive;
	params.bLocalReady = bLocalReady;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnPreLoadMap
// ()
// Parameters:
// struct FString                 LevelName                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnPreLoadMap(const struct FString& LevelName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnPreLoadMap");

	UINSGameInstance_OnPreLoadMap_Params params;
	params.LevelName = LevelName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnPreClientTravel
// ()
// Parameters:
// struct FString                 PendingURL                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<ETravelType>       TravelType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsSeamlessTravel              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnPreClientTravel(const struct FString& PendingURL, TEnumAsByte<ETravelType> TravelType, bool bIsSeamlessTravel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnPreClientTravel");

	UINSGameInstance_OnPreClientTravel_Params params;
	params.PendingURL = PendingURL;
	params.TravelType = TravelType;
	params.bIsSeamlessTravel = bIsSeamlessTravel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnPostLoadMapWithWorld
// ()
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnPostLoadMapWithWorld(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnPostLoadMapWithWorld");

	UINSGameInstance_OnPostLoadMapWithWorld_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnPlatformConnectionStatusChanged__DelegateSignature
// ()
// Parameters:
// bool                           bConnected                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnPlatformConnectionStatusChanged__DelegateSignature(bool bConnected)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnPlatformConnectionStatusChanged__DelegateSignature");

	UINSGameInstance_OnPlatformConnectionStatusChanged__DelegateSignature_Params params;
	params.bConnected = bConnected;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnNetTimingOutUpdateDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bTimingOut                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnNetTimingOutUpdateDelegate__DelegateSignature(bool bTimingOut)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnNetTimingOutUpdateDelegate__DelegateSignature");

	UINSGameInstance_OnNetTimingOutUpdateDelegate__DelegateSignature_Params params;
	params.bTimingOut = bTimingOut;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnNetStatsUpdated__DelegateSignature
// ()
// Parameters:
// struct FClientNetStats         Stats                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UINSGameInstance::OnNetStatsUpdated__DelegateSignature(const struct FClientNetStats& Stats)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnNetStatsUpdated__DelegateSignature");

	UINSGameInstance_OnNetStatsUpdated__DelegateSignature_Params params;
	params.Stats = Stats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnNetStatEnabled__DelegateSignature
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnNetStatEnabled__DelegateSignature(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnNetStatEnabled__DelegateSignature");

	UINSGameInstance_OnNetStatEnabled__DelegateSignature_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnMatchmakingSearchBegin__DelegateSignature
// ()
void UINSGameInstance::OnMatchmakingSearchBegin__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnMatchmakingSearchBegin__DelegateSignature");

	UINSGameInstance_OnMatchmakingSearchBegin__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnMatchmakingError__DelegateSignature
// ()
// Parameters:
// struct FText                   Error                          (Parm, NativeAccessSpecifierPublic)
// TEnumAsByte<EMatchmakingFailure> MatchmakingFailureType         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnMatchmakingError__DelegateSignature(const struct FText& Error, TEnumAsByte<EMatchmakingFailure> MatchmakingFailureType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnMatchmakingError__DelegateSignature");

	UINSGameInstance_OnMatchmakingError__DelegateSignature_Params params;
	params.Error = Error;
	params.MatchmakingFailureType = MatchmakingFailureType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnMatchmakerStateChanged
// ()
// Parameters:
// TEnumAsByte<EMatchmakingState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EMatchmakingState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnMatchmakerStateChanged(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnMatchmakerStateChanged");

	UINSGameInstance_OnMatchmakerStateChanged_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnMatchmakerFailed
// ()
// Parameters:
// TEnumAsByte<EMatchmakingFailure> Reason                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnMatchmakerFailed(TEnumAsByte<EMatchmakingFailure> Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnMatchmakerFailed");

	UINSGameInstance_OnMatchmakerFailed_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnForceLogout
// ()
// Parameters:
// int                            LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnForceLogout(int LocalUserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnForceLogout");

	UINSGameInstance_OnForceLogout_Params params;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnCheckHasAbandonedGameComplete
// ()
// Parameters:
// bool                           bSuccessful                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Data                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::OnCheckHasAbandonedGameComplete(bool bSuccessful, const struct FString& Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnCheckHasAbandonedGameComplete");

	UINSGameInstance_OnCheckHasAbandonedGameComplete_Params params;
	params.bSuccessful = bSuccessful;
	params.Data = Data;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSGameInstance.OnAvailablePlaylistUpdated__DelegateSignature
// ()
// Parameters:
// struct FAvailablePlaylists     Data                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UINSGameInstance::OnAvailablePlaylistUpdated__DelegateSignature(const struct FAvailablePlaylists& Data)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSGameInstance.OnAvailablePlaylistUpdated__DelegateSignature");

	UINSGameInstance_OnAvailablePlaylistUpdated__DelegateSignature_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.OnAvailablePlaylistsFetched
// ()
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQueryOpenPoolsResults  Results                        (Parm, NativeAccessSpecifierPublic)
void UINSGameInstance::OnAvailablePlaylistsFetched(bool bSuccess, const struct FQueryOpenPoolsResults& Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.OnAvailablePlaylistsFetched");

	UINSGameInstance_OnAvailablePlaylistsFetched_Params params;
	params.bSuccess = bSuccess;
	params.Results = Results;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.MountPaksInDirectory
// ()
// Parameters:
// struct FString                 Directory                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::MountPaksInDirectory(const struct FString& Directory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.MountPaksInDirectory");

	UINSGameInstance_MountPaksInDirectory_Params params;
	params.Directory = Directory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.MountPak
// ()
// Parameters:
// struct FString                 PakPath                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::MountPak(const struct FString& PakPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.MountPak");

	UINSGameInstance_MountPak_Params params;
	params.PakPath = PakPath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.MountMod
// ()
// Parameters:
// struct FString                 PluginName                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Path                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::MountMod(const struct FString& PluginName, const struct FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.MountMod");

	UINSGameInstance_MountMod_Params params;
	params.PluginName = PluginName;
	params.Path = Path;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.MatchmakingRequeue
// ()
void UINSGameInstance::MatchmakingRequeue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.MatchmakingRequeue");

	UINSGameInstance_MatchmakingRequeue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.MatchmakingAcceptReadyCheck
// ()
void UINSGameInstance::MatchmakingAcceptReadyCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.MatchmakingAcceptReadyCheck");

	UINSGameInstance_MatchmakingAcceptReadyCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.JoinSearchResult
// ()
// Parameters:
// class ULocalPlayer*            LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintFindSessionResult SearchResult                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ServerPassword                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::JoinSearchResult(class ULocalPlayer* LocalPlayer, const struct FBlueprintFindSessionResult& SearchResult, const struct FString& ServerPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.JoinSearchResult");

	UINSGameInstance_JoinSearchResult_Params params;
	params.LocalPlayer = LocalPlayer;
	params.SearchResult = SearchResult;
	params.ServerPassword = ServerPassword;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IsMatchmakingInPool
// ()
// Parameters:
// struct FString                 PoolName                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::IsMatchmakingInPool(const struct FString& PoolName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IsMatchmakingInPool");

	UINSGameInstance_IsMatchmakingInPool_Params params;
	params.PoolName = PoolName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IsMatchmaking
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::IsMatchmaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IsMatchmaking");

	UINSGameInstance_IsMatchmaking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IsLoggedInNewWorld
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::IsLoggedInNewWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IsLoggedInNewWorld");

	UINSGameInstance_IsLoggedInNewWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IsConnectedToOnlineServices
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::IsConnectedToOnlineServices()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IsConnectedToOnlineServices");

	UINSGameInstance_IsConnectedToOnlineServices_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IsClientNetStatsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::IsClientNetStatsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IsClientNetStatsEnabled");

	UINSGameInstance_IsClientNetStatsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IsAboutToJoinMatch
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::IsAboutToJoinMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IsAboutToJoinMatch");

	UINSGameInstance_IsAboutToJoinMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.IndicateGameLoaded
// ()
void UINSGameInstance::IndicateGameLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.IndicateGameLoaded");

	UINSGameInstance_IndicateGameLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.HostGame
// ()
// Parameters:
// class ULocalPlayer*            LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InTravelURL                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::HostGame(class ULocalPlayer* LocalPlayer, const struct FString& InTravelURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.HostGame");

	UINSGameInstance_HostGame_Params params;
	params.LocalPlayer = LocalPlayer;
	params.InTravelURL = InTravelURL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.HasAllMapsDownloaded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::HasAllMapsDownloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.HasAllMapsDownloaded");

	UINSGameInstance_HasAllMapsDownloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetThumbnailTextureForLevel
// ()
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 LightingName                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::GetThumbnailTextureForLevel(const struct FString& Name, const struct FString& LightingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetThumbnailTextureForLevel");

	UINSGameInstance_GetThumbnailTextureForLevel_Params params;
	params.Name = Name;
	params.LightingName = LightingName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.GetState
// ()
// Parameters:
// struct FName                   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FName UINSGameInstance::GetState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetState");

	UINSGameInstance_GetState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetNetPacketLoss
// ()
// Parameters:
// float                          InPacketLoss                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutPacketLoss                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::GetNetPacketLoss(float* InPacketLoss, float* OutPacketLoss)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetNetPacketLoss");

	UINSGameInstance_GetNetPacketLoss_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InPacketLoss != nullptr)
		*InPacketLoss = params.InPacketLoss;
	if (OutPacketLoss != nullptr)
		*OutPacketLoss = params.OutPacketLoss;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetMatchmakingTimer
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSGameInstance::GetMatchmakingTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetMatchmakingTimer");

	UINSGameInstance_GetMatchmakingTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetMatchmakingProgressText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UINSGameInstance::GetMatchmakingProgressText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetMatchmakingProgressText");

	UINSGameInstance_GetMatchmakingProgressText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetMatchmakingEstimatedTimer
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSGameInstance::GetMatchmakingEstimatedTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetMatchmakingEstimatedTimer");

	UINSGameInstance_GetMatchmakingEstimatedTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetMapCycleTravelUrl
// ()
// Parameters:
// struct FString                 TravelUrl                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::GetMapCycleTravelUrl(struct FString* TravelUrl)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetMapCycleTravelUrl");

	UINSGameInstance_GetMapCycleTravelUrl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TravelUrl != nullptr)
		*TravelUrl = params.TravelUrl;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetLeaverBanTimer
// ()
// Parameters:
// float                          Minutes                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Seconds                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::GetLeaverBanTimer(float* Minutes, float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetLeaverBanTimer");

	UINSGameInstance_GetLeaverBanTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Minutes != nullptr)
		*Minutes = params.Minutes;
	if (Seconds != nullptr)
		*Seconds = params.Seconds;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetLeaverBanText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UINSGameInstance::GetLeaverBanText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetLeaverBanText");

	UINSGameInstance_GetLeaverBanText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.GetAppId
// ()
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSGameInstance::GetAppId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.GetAppId");

	UINSGameInstance_GetAppId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.ForceStopFPSChart
// ()
void UINSGameInstance::ForceStopFPSChart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.ForceStopFPSChart");

	UINSGameInstance_ForceStopFPSChart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.ForceStartFPSChart
// ()
void UINSGameInstance::ForceStartFPSChart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.ForceStartFPSChart");

	UINSGameInstance_ForceStartFPSChart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.FadeLoadingScreen
// ()
void UINSGameInstance::FadeLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.FadeLoadingScreen");

	UINSGameInstance_FadeLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.EndLoadingScreen
// ()
void UINSGameInstance::EndLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.EndLoadingScreen");

	UINSGameInstance_EndLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.DoesContainProfaneWord
// ()
// Parameters:
// struct FString                 inString                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 OutString                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::DoesContainProfaneWord(const struct FString& inString, struct FString* OutString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.DoesContainProfaneWord");

	UINSGameInstance_DoesContainProfaneWord_Params params;
	params.inString = inString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutString != nullptr)
		*OutString = params.OutString;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.DirectConnectToIP
// ()
// Parameters:
// struct FString                 IpPort                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Password                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::DirectConnectToIP(const struct FString& IpPort, const struct FString& Password)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.DirectConnectToIP");

	UINSGameInstance_DirectConnectToIP_Params params;
	params.IpPort = IpPort;
	params.Password = Password;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.CanJoinQueue
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSGameInstance::CanJoinQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.CanJoinQueue");

	UINSGameInstance_CanJoinQueue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSGameInstance.CancelMatchRequeue
// ()
void UINSGameInstance::CancelMatchRequeue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.CancelMatchRequeue");

	UINSGameInstance_CancelMatchRequeue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.CancelMatchmakingSearch
// ()
void UINSGameInstance::CancelMatchmakingSearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.CancelMatchmakingSearch");

	UINSGameInstance_CancelMatchmakingSearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.BeginMatchmakingForPlaylists
// ()
// Parameters:
// TArray<class UPlaylist*>       Playlist                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::BeginMatchmakingForPlaylists(TArray<class UPlaylist*> Playlist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.BeginMatchmakingForPlaylists");

	UINSGameInstance_BeginMatchmakingForPlaylists_Params params;
	params.Playlist = Playlist;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.BeginLoadingScreenURL
// ()
// Parameters:
// struct FString                 URL                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSeamless                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bMatchTransition               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::BeginLoadingScreenURL(const struct FString& URL, bool bSeamless, bool bMatchTransition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.BeginLoadingScreenURL");

	UINSGameInstance_BeginLoadingScreenURL_Params params;
	params.URL = URL;
	params.bSeamless = bSeamless;
	params.bMatchTransition = bMatchTransition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSGameInstance.BeginLoadingScreen
// ()
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Mode                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Scenario                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 LightingName                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSeamless                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bMatchTransition               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSGameInstance::BeginLoadingScreen(const struct FString& Name, const struct FString& Mode, const struct FString& Scenario, const struct FString& LightingName, bool bSeamless, bool bMatchTransition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSGameInstance.BeginLoadingScreen");

	UINSGameInstance_BeginLoadingScreen_Params params;
	params.Name = Name;
	params.Mode = Mode;
	params.Scenario = Scenario;
	params.LightingName = LightingName;
	params.bSeamless = bSeamless;
	params.bMatchTransition = bMatchTransition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSGameInstance::AfterRead()
{
	UGameInstance::AfterRead();

	READ_PTR_FULL(WidgetModDownload, UUserWidget);
	READ_PTR_FULL(TransitionLoadingScreenWidget, UUserWidget);
	READ_PTR_FULL(Matchmaker, UINSMatchmaking);
	READ_PTR_FULL(MusicDirectorInstance, UMusicDirector);
	READ_PTR_FULL(Party, UINSParty);
	READ_PTR_FULL(WelcomeMenuWidget, UWelcomeMenuWidget);
	READ_PTR_FULL(ClassWelcomeScreenWidget, UClass);
}

void UINSGameInstance::BeforeDelete()
{
	UGameInstance::BeforeDelete();

	DELE_PTR_FULL(WidgetModDownload);
	DELE_PTR_FULL(TransitionLoadingScreenWidget);
	DELE_PTR_FULL(Matchmaker);
	DELE_PTR_FULL(MusicDirectorInstance);
	DELE_PTR_FULL(Party);
	DELE_PTR_FULL(WelcomeMenuWidget);
	DELE_PTR_FULL(ClassWelcomeScreenWidget);
}

void UINSGameEngine::AfterRead()
{
	UGameEngine::AfterRead();

}

void UINSGameEngine::BeforeDelete()
{
	UGameEngine::BeforeDelete();

}

// Function Insurgency.INSFrontlineGameMode.OnWavesDepleted_DisableAutoBalance
// ()
// Parameters:
// class UReinforcementSystemComponent* Component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSFrontlineGameMode::OnWavesDepleted_DisableAutoBalance(class UReinforcementSystemComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFrontlineGameMode.OnWavesDepleted_DisableAutoBalance");

	AINSFrontlineGameMode_OnWavesDepleted_DisableAutoBalance_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSFrontlineGameMode.OnWaveGained_ReenableAutoBalance
// ()
// Parameters:
// class UReinforcementSystemComponent* Component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OldWaveCount                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSFrontlineGameMode::OnWaveGained_ReenableAutoBalance(class UReinforcementSystemComponent* Component, int OldWaveCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFrontlineGameMode.OnWaveGained_ReenableAutoBalance");

	AINSFrontlineGameMode_OnWaveGained_ReenableAutoBalance_Params params;
	params.Component = Component;
	params.OldWaveCount = OldWaveCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSFrontlineGameMode.LastStandDisableSpawns
// ()
void AINSFrontlineGameMode::LastStandDisableSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSFrontlineGameMode.LastStandDisableSpawns");

	AINSFrontlineGameMode_LastStandDisableSpawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSFrontlineGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(Team1ReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(Team2ReinforcementSystem, UReinforcementSystemComponent);
}

void AINSFrontlineGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(Team1ReinforcementSystem);
	DELE_PTR_FULL(Team2ReinforcementSystem);
}

void AINSFirefightGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

}

void AINSFirefightGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

}

void AINSMissionGameMode::AfterRead()
{
	AINSCoopMode::AfterRead();

	READ_PTR_FULL(MissionScenario, UScenarioMission);
	READ_PTR_FULL(ActiveObjective, AObjectiveBase);
	READ_PTR_FULL(EvacHelicopter, AVehicleHoveringBase);
	READ_PTR_FULL(EvacDestination, AActor);
	READ_PTR_FULL(DefendingSquad, UINSAISquad);
}

void AINSMissionGameMode::BeforeDelete()
{
	AINSCoopMode::BeforeDelete();

	DELE_PTR_FULL(MissionScenario);
	DELE_PTR_FULL(ActiveObjective);
	DELE_PTR_FULL(EvacHelicopter);
	DELE_PTR_FULL(EvacDestination);
	DELE_PTR_FULL(DefendingSquad);
}

void AINSFilmingGameMode::AfterRead()
{
	AINSMissionGameMode::AfterRead();

}

void AINSFilmingGameMode::BeforeDelete()
{
	AINSMissionGameMode::BeforeDelete();

}

// Function Insurgency.INSDemoSpectator.TogglePauseReplay
// ()
void AINSDemoSpectator::TogglePauseReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.TogglePauseReplay");

	AINSDemoSpectator_TogglePauseReplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.ToggleInGameMenu
// ()
void AINSDemoSpectator::ToggleInGameMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.ToggleInGameMenu");

	AINSDemoSpectator_ToggleInGameMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.SpectatePreviousPlayer
// ()
void AINSDemoSpectator::SpectatePreviousPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.SpectatePreviousPlayer");

	AINSDemoSpectator_SpectatePreviousPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.SpectateNextPlayer
// ()
void AINSDemoSpectator::SpectateNextPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.SpectateNextPlayer");

	AINSDemoSpectator_SpectateNextPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.ShowInGameMenu
// ()
void AINSDemoSpectator::ShowInGameMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.ShowInGameMenu");

	AINSDemoSpectator_ShowInGameMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.SetViewTargetPlayerState
// ()
// Parameters:
// class APlayerState*            InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSDemoSpectator::SetViewTargetPlayerState(class APlayerState* InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.SetViewTargetPlayerState");

	AINSDemoSpectator_SetViewTargetPlayerState_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.ScrubToTime
// ()
// Parameters:
// float                          TimeSeconds                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSDemoSpectator::ScrubToTime(float TimeSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.ScrubToTime");

	AINSDemoSpectator_ScrubToTime_Params params;
	params.TimeSeconds = TimeSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.PauseReplay
// ()
// Parameters:
// bool                           bPaused                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSDemoSpectator::PauseReplay(bool bPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.PauseReplay");

	AINSDemoSpectator_PauseReplay_Params params;
	params.bPaused = bPaused;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSDemoSpectator.OnScrubToTimeComplete__DelegateSignature
// ()
// Parameters:
// bool                           bSuccessful                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSDemoSpectator::OnScrubToTimeComplete__DelegateSignature(bool bSuccessful)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSDemoSpectator.OnScrubToTimeComplete__DelegateSignature");

	AINSDemoSpectator_OnScrubToTimeComplete__DelegateSignature_Params params;
	params.bSuccessful = bSuccessful;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.INSDemoSpectator.OnScrubbingStateChangedDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bIsScrubbing                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSDemoSpectator::OnScrubbingStateChangedDelegate__DelegateSignature(bool bIsScrubbing)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSDemoSpectator.OnScrubbingStateChangedDelegate__DelegateSignature");

	AINSDemoSpectator_OnScrubbingStateChangedDelegate__DelegateSignature_Params params;
	params.bIsScrubbing = bIsScrubbing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.IsReplayPaused
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSDemoSpectator::IsReplayPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.IsReplayPaused");

	AINSDemoSpectator_IsReplayPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSDemoSpectator.IncreasePlaybackSpeed
// ()
void AINSDemoSpectator::IncreasePlaybackSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.IncreasePlaybackSpeed");

	AINSDemoSpectator_IncreasePlaybackSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.HideInGameMenu
// ()
void AINSDemoSpectator::HideInGameMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.HideInGameMenu");

	AINSDemoSpectator_HideInGameMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.GetDemoTimeTotal
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSDemoSpectator::GetDemoTimeTotal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.GetDemoTimeTotal");

	AINSDemoSpectator_GetDemoTimeTotal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSDemoSpectator.GetDemoTimeCurrent
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSDemoSpectator::GetDemoTimeCurrent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.GetDemoTimeCurrent");

	AINSDemoSpectator_GetDemoTimeCurrent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSDemoSpectator.GetCurrentPlaybackSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSDemoSpectator::GetCurrentPlaybackSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.GetCurrentPlaybackSpeed");

	AINSDemoSpectator_GetCurrentPlaybackSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSDemoSpectator.DecreasePlaybackSpeed
// ()
void AINSDemoSpectator::DecreasePlaybackSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.DecreasePlaybackSpeed");

	AINSDemoSpectator_DecreasePlaybackSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSDemoSpectator.CheckScenarioLoad
// ()
void AINSDemoSpectator::CheckScenarioLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSDemoSpectator.CheckScenarioLoad");

	AINSDemoSpectator_CheckScenarioLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSDemoSpectator::AfterRead()
{
	AINSBasePlayerController::AfterRead();

	READ_PTR_FULL(ReplayHud, AHUDReplay);
	READ_PTR_FULL(MultiplayerHud, AHUDMultiplayer);
	READ_PTR_FULL(InGameMenuInstance, UInGameMenuWidget);
}

void AINSDemoSpectator::BeforeDelete()
{
	AINSBasePlayerController::BeforeDelete();

	DELE_PTR_FULL(ReplayHud);
	DELE_PTR_FULL(MultiplayerHud);
	DELE_PTR_FULL(InGameMenuInstance);
}

void UINSDemoNetDriver::AfterRead()
{
	UDemoNetDriver::AfterRead();

}

void UINSDemoNetDriver::BeforeDelete()
{
	UDemoNetDriver::BeforeDelete();

}

void UINSDamageType::AfterRead()
{
	UDamageType::AfterRead();

	READ_PTR_FULL(DamageTypeIcon, UTexture2D);
}

void UINSDamageType::BeforeDelete()
{
	UDamageType::BeforeDelete();

	DELE_PTR_FULL(DamageTypeIcon);
}

void UINSDamageTypeCheat::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UINSDamageTypeCheat::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void AINSConvoyGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(AttackerReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(DefenderReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(ActiveObjective, AObjectiveBase);
}

void AINSConvoyGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(AttackerReinforcementSystem);
	DELE_PTR_FULL(DefenderReinforcementSystem);
	DELE_PTR_FULL(ActiveObjective);
}

// Function Insurgency.INSCheckpointGameMode.TryPlaceBotsInSpawnedVehicle
// ()
// Parameters:
// class AVehicleBase*            Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSCheckpointGameMode::TryPlaceBotsInSpawnedVehicle(class AVehicleBase* Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.TryPlaceBotsInSpawnedVehicle");

	AINSCheckpointGameMode_TryPlaceBotsInSpawnedVehicle_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCheckpointGameMode.RespawnBotTeamPostObjective
// ()
void AINSCheckpointGameMode::RespawnBotTeamPostObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.RespawnBotTeamPostObjective");

	AINSCheckpointGameMode_RespawnBotTeamPostObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.PlayCounterAttackResponse
// ()
void AINSCheckpointGameMode::PlayCounterAttackResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.PlayCounterAttackResponse");

	AINSCheckpointGameMode_PlayCounterAttackResponse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.OnStartDefending
// ()
void AINSCheckpointGameMode::OnStartDefending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.OnStartDefending");

	AINSCheckpointGameMode_OnStartDefending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.OnFinishRetreat
// ()
void AINSCheckpointGameMode::OnFinishRetreat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.OnFinishRetreat");

	AINSCheckpointGameMode_OnFinishRetreat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.OnFinishDefending
// ()
void AINSCheckpointGameMode::OnFinishDefending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.OnFinishDefending");

	AINSCheckpointGameMode_OnFinishDefending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.GetActiveObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* AINSCheckpointGameMode::GetActiveObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.GetActiveObjective");

	AINSCheckpointGameMode_GetActiveObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCheckpointGameMode.CheatRespawnBotsRandomCounterAttackClass
// ()
void AINSCheckpointGameMode::CheatRespawnBotsRandomCounterAttackClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.CheatRespawnBotsRandomCounterAttackClass");

	AINSCheckpointGameMode_CheatRespawnBotsRandomCounterAttackClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.CheatFinishCounterAttack
// ()
void AINSCheckpointGameMode::CheatFinishCounterAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.CheatFinishCounterAttack");

	AINSCheckpointGameMode_CheatFinishCounterAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheckpointGameMode.CheatCounterAttack
// ()
void AINSCheckpointGameMode::CheatCounterAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointGameMode.CheatCounterAttack");

	AINSCheckpointGameMode_CheatCounterAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSCheckpointGameMode::AfterRead()
{
	AINSCoopMode::AfterRead();

	READ_PTR_FULL(OverrideCounterAttackType, UCheckpointCounterAttackTypes);
	READ_PTR_FULL(ActiveObjective, AObjectiveBase);
}

void AINSCheckpointGameMode::BeforeDelete()
{
	AINSCoopMode::BeforeDelete();

	DELE_PTR_FULL(OverrideCounterAttackType);
	DELE_PTR_FULL(ActiveObjective);
}

// Function Insurgency.INSCheckpointTutorialGameMode.ForceEnemyBotsToObjective
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSCheckpointTutorialGameMode::ForceEnemyBotsToObjective(class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheckpointTutorialGameMode.ForceEnemyBotsToObjective");

	AINSCheckpointTutorialGameMode_ForceEnemyBotsToObjective_Params params;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSCheckpointTutorialGameMode::AfterRead()
{
	AINSCheckpointGameMode::AfterRead();

	READ_PTR_FULL(ForcedBotObjective, AObjectiveBase);
}

void AINSCheckpointTutorialGameMode::BeforeDelete()
{
	AINSCheckpointGameMode::BeforeDelete();

	DELE_PTR_FULL(ForcedBotObjective);
}

void AINSCheckpointHardcoreGameMode::AfterRead()
{
	AINSCheckpointGameMode::AfterRead();

	READ_PTR_FULL(RandomSupplyCrate, ASupplyCrate);
	READ_PTR_FULL(RespawnLoadoutsDataAsset, UCheckpointHardcoreLoadouts);
}

void AINSCheckpointHardcoreGameMode::BeforeDelete()
{
	AINSCheckpointGameMode::BeforeDelete();

	DELE_PTR_FULL(RandomSupplyCrate);
	DELE_PTR_FULL(RespawnLoadoutsDataAsset);
}

void UCheckpointHardcoreLoadouts::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCheckpointHardcoreLoadouts::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCheckpointCounterAttackTypes::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCheckpointCounterAttackTypes::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.INSCheatManager.TestNavSpawning
// ()
void UINSCheatManager::TestNavSpawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.TestNavSpawning");

	UINSCheatManager_TestNavSpawning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.TeleportToObjective
// ()
// Parameters:
// int                            ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::TeleportToObjective(int ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.TeleportToObjective");

	UINSCheatManager_TeleportToObjective_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.SuppressMe
// ()
// Parameters:
// float                          Suppression                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HoldTime                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::SuppressMe(float Suppression, float HoldTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.SuppressMe");

	UINSCheatManager_SuppressMe_Params params;
	params.Suppression = Suppression;
	params.HoldTime = HoldTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.SpewSpawnZones
// ()
void UINSCheatManager::SpewSpawnZones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.SpewSpawnZones");

	UINSCheatManager_SpewSpawnZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.SpawnFireSupport
// ()
// Parameters:
// struct FString                 FireSupportClassName           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnemy                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::SpawnFireSupport(struct FString* FireSupportClassName, bool bEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.SpawnFireSupport");

	UINSCheatManager_SpawnFireSupport_Params params;
	params.bEnemy = bEnemy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (FireSupportClassName != nullptr)
		*FireSupportClassName = params.FireSupportClassName;

}


// Function Insurgency.INSCheatManager.SetRoundTimer
// ()
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::SetRoundTimer(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.SetRoundTimer");

	UINSCheatManager_SetRoundTimer_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.SetExperience
// ()
// Parameters:
// int                            Experience                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::SetExperience(int Experience)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.SetExperience");

	UINSCheatManager_SetExperience_Params params;
	params.Experience = Experience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.SABER_SetMapDownloadSpeed
// ()
// Parameters:
// int                            SpeedType                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::SABER_SetMapDownloadSpeed(int SpeedType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.SABER_SetMapDownloadSpeed");

	UINSCheatManager_SABER_SetMapDownloadSpeed_Params params;
	params.SpeedType = SpeedType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.RevertConfirmableEvents
// ()
void UINSCheatManager::RevertConfirmableEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.RevertConfirmableEvents");

	UINSCheatManager_RevertConfirmableEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.ResupplyNow
// ()
void UINSCheatManager::ResupplyNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.ResupplyNow");

	UINSCheatManager_ResupplyNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.RespawnMe
// ()
void UINSCheatManager::RespawnMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.RespawnMe");

	UINSCheatManager_RespawnMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.RemoveWeaponUpgrade
// ()
// Parameters:
// struct FString                 UpgradeClass                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::RemoveWeaponUpgrade(struct FString* UpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.RemoveWeaponUpgrade");

	UINSCheatManager_RemoveWeaponUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (UpgradeClass != nullptr)
		*UpgradeClass = params.UpgradeClass;

}


// DelegateFunction Insurgency.INSCheatManager.OnDisplayLicenseAgreementDialog__DelegateSignature
// ()
void UINSCheatManager::OnDisplayLicenseAgreementDialog__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.INSCheatManager.OnDisplayLicenseAgreementDialog__DelegateSignature");

	UINSCheatManager_OnDisplayLicenseAgreementDialog__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.Noclip
// ()
void UINSCheatManager::Noclip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.Noclip");

	UINSCheatManager_Noclip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.InstaCap
// ()
void UINSCheatManager::InstaCap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.InstaCap");

	UINSCheatManager_InstaCap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.IgnoreRoundOver
// ()
// Parameters:
// bool                           bIgnoreRoundOver               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::IgnoreRoundOver(bool bIgnoreRoundOver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.IgnoreRoundOver");

	UINSCheatManager_IgnoreRoundOver_Params params;
	params.bIgnoreRoundOver = bIgnoreRoundOver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.HurtMe
// ()
// Parameters:
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::HurtMe(float DamageAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.HurtMe");

	UINSCheatManager_HurtMe_Params params;
	params.DamageAmount = DamageAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.GoToLocation
// ()
// Parameters:
// struct FString                 Location                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::GoToLocation(struct FString* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GoToLocation");

	UINSCheatManager_GoToLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;

}


// Function Insurgency.INSCheatManager.GodMode
// ()
void UINSCheatManager::GodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GodMode");

	UINSCheatManager_GodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.GiveWeaponUpgrade
// ()
// Parameters:
// struct FString                 UpgradeClass                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::GiveWeaponUpgrade(struct FString* UpgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GiveWeaponUpgrade");

	UINSCheatManager_GiveWeaponUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (UpgradeClass != nullptr)
		*UpgradeClass = params.UpgradeClass;

}


// Function Insurgency.INSCheatManager.GiveWeapon
// ()
// Parameters:
// struct FString                 WeaponClass                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::GiveWeapon(struct FString* WeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GiveWeapon");

	UINSCheatManager_GiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;

}


// Function Insurgency.INSCheatManager.GiveSupplyPoints
// ()
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::GiveSupplyPoints(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GiveSupplyPoints");

	UINSCheatManager_GiveSupplyPoints_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.GiveItem
// ()
// Parameters:
// struct FString                 ItemClass                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::GiveItem(struct FString* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GiveItem");

	UINSCheatManager_GiveItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ItemClass != nullptr)
		*ItemClass = params.ItemClass;

}


// Function Insurgency.INSCheatManager.GiveAmmo
// ()
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::GiveAmmo(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GiveAmmo");

	UINSCheatManager_GiveAmmo_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.GetOuterSoldier
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* UINSCheatManager::GetOuterSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.GetOuterSoldier");

	UINSCheatManager_GetOuterSoldier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSCheatManager.ForceObjectiveCapture
// ()
void UINSCheatManager::ForceObjectiveCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.ForceObjectiveCapture");

	UINSCheatManager_ForceObjectiveCapture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.Debug_UpdateAchievementProgress
// ()
// Parameters:
// struct FString                 ID                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::Debug_UpdateAchievementProgress(const struct FString& ID, float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.Debug_UpdateAchievementProgress");

	UINSCheatManager_Debug_UpdateAchievementProgress_Params params;
	params.ID = ID;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.BlindMe
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Suppression                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::BlindMe(float Duration, float FadeTime, float Suppression)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.BlindMe");

	UINSCheatManager_BlindMe_Params params;
	params.Duration = Duration;
	params.FadeTime = FadeTime;
	params.Suppression = Suppression;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIToggle
// ()
void UINSCheatManager::AIToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIToggle");

	UINSCheatManager_AIToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AISpawn
// ()
void UINSCheatManager::AISpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AISpawn");

	UINSCheatManager_AISpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AISetBotsAmount
// ()
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::AISetBotsAmount(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AISetBotsAmount");

	UINSCheatManager_AISetBotsAmount_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIRespawnFriendlyBots
// ()
void UINSCheatManager::AIRespawnFriendlyBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIRespawnFriendlyBots");

	UINSCheatManager_AIRespawnFriendlyBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIRespawnEnemyBots
// ()
void UINSCheatManager::AIRespawnEnemyBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIRespawnEnemyBots");

	UINSCheatManager_AIRespawnEnemyBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIRespawnBots
// ()
void UINSCheatManager::AIRespawnBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIRespawnBots");

	UINSCheatManager_AIRespawnBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIPurgeFriendly
// ()
void UINSCheatManager::AIPurgeFriendly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIPurgeFriendly");

	UINSCheatManager_AIPurgeFriendly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIPurgeEnemy
// ()
void UINSCheatManager::AIPurgeEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIPurgeEnemy");

	UINSCheatManager_AIPurgeEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIPurge
// ()
void UINSCheatManager::AIPurge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIPurge");

	UINSCheatManager_AIPurge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AiPerceptionToggle
// ()
void UINSCheatManager::AiPerceptionToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AiPerceptionToggle");

	UINSCheatManager_AiPerceptionToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AINoTargetPlayer
// ()
void UINSCheatManager::AINoTargetPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AINoTargetPlayer");

	UINSCheatManager_AINoTargetPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIModifyMorale
// ()
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::AIModifyMorale(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIModifyMorale");

	UINSCheatManager_AIModifyMorale_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIDifficulty
// ()
// Parameters:
// float                          NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSCheatManager::AIDifficulty(float NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIDifficulty");

	UINSCheatManager_AIDifficulty_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIDebugThreats
// ()
void UINSCheatManager::AIDebugThreats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIDebugThreats");

	UINSCheatManager_AIDebugThreats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIDebugHUDSpectate
// ()
void UINSCheatManager::AIDebugHUDSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIDebugHUDSpectate");

	UINSCheatManager_AIDebugHUDSpectate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AIDebugHUD
// ()
void UINSCheatManager::AIDebugHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AIDebugHUD");

	UINSCheatManager_AIDebugHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSCheatManager.AddCompassTestMarker
// ()
void UINSCheatManager::AddCompassTestMarker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCheatManager.AddCompassTestMarker");

	UINSCheatManager_AddCompassTestMarker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSCheatManager::AfterRead()
{
	UCheatManager::AfterRead();

	READ_PTR_FULL(DebugAIController, AINSAISoldierController);
}

void UINSCheatManager::BeforeDelete()
{
	UCheatManager::BeforeDelete();

	DELE_PTR_FULL(DebugAIController);
}

// Function Insurgency.INSCaptureTheBaseGameMode.CheckCustomEliminationRules
// ()
void AINSCaptureTheBaseGameMode::CheckCustomEliminationRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSCaptureTheBaseGameMode.CheckCustomEliminationRules");

	AINSCaptureTheBaseGameMode_CheckCustomEliminationRules_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSCaptureTheBaseGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

	READ_PTR_FULL(Team1ReinforcementSystem, UReinforcementSystemComponent);
	READ_PTR_FULL(Team2ReinforcementSystem, UReinforcementSystemComponent);
}

void AINSCaptureTheBaseGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

	DELE_PTR_FULL(Team1ReinforcementSystem);
	DELE_PTR_FULL(Team2ReinforcementSystem);
}

// Function Insurgency.INSBlueprintLibrary.WWiseGetListenerPositions
// ()
// Parameters:
// TArray<struct FVector>         Positions                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::WWiseGetListenerPositions(TArray<struct FVector>* Positions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.WWiseGetListenerPositions");

	UINSBlueprintLibrary_WWiseGetListenerPositions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Positions != nullptr)
		*Positions = params.Positions;

}


// Function Insurgency.INSBlueprintLibrary.UpdateInertialEasing
// ()
// Parameters:
// struct FInertialEasingContainer1D Easing                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::UpdateInertialEasing(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.UpdateInertialEasing");

	UINSBlueprintLibrary_UpdateInertialEasing_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;

}


// Function Insurgency.INSBlueprintLibrary.UpdateDampingEasing
// ()
// Parameters:
// struct FDampingEasingContainer3D Easing                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::UpdateDampingEasing(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.UpdateDampingEasing");

	UINSBlueprintLibrary_UpdateDampingEasing_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;

}


// Function Insurgency.INSBlueprintLibrary.StringLessThan
// ()
// Parameters:
// struct FString                 Left                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Right                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::StringLessThan(const struct FString& Left, const struct FString& Right)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.StringLessThan");

	UINSBlueprintLibrary_StringLessThan_Params params;
	params.Left = Left;
	params.Right = Right;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.SoftLimitVector
// ()
// Parameters:
// struct FVector                 X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 LimitStart                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 LimitEnd                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UINSBlueprintLibrary::SoftLimitVector(const struct FVector& X, const struct FVector& LimitStart, const struct FVector& LimitEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.SoftLimitVector");

	UINSBlueprintLibrary_SoftLimitVector_Params params;
	params.X = X;
	params.LimitStart = LimitStart;
	params.LimitEnd = LimitEnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.SoftLimitFloat
// ()
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          LimitStart                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          LimitEnd                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSBlueprintLibrary::SoftLimitFloat(float X, float LimitStart, float LimitEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.SoftLimitFloat");

	UINSBlueprintLibrary_SoftLimitFloat_Params params;
	params.X = X;
	params.LimitStart = LimitStart;
	params.LimitEnd = LimitEnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.SimpleAssetUnload
// ()
// Parameters:
// struct FSoftObjectPath         AssetToUnload                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::SimpleAssetUnload(const struct FSoftObjectPath& AssetToUnload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.SimpleAssetUnload");

	UINSBlueprintLibrary_SimpleAssetUnload_Params params;
	params.AssetToUnload = AssetToUnload;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBlueprintLibrary.SimpleAssetSyncLoad
// ()
void UINSBlueprintLibrary::SimpleAssetSyncLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.SimpleAssetSyncLoad");

	UINSBlueprintLibrary_SimpleAssetSyncLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBlueprintLibrary.SetInertialEasingTarget
// ()
// Parameters:
// struct FInertialEasingContainer1D Easing                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewTarget                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::SetInertialEasingTarget(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject, float NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.SetInertialEasingTarget");

	UINSBlueprintLibrary_SetInertialEasingTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;

}


// Function Insurgency.INSBlueprintLibrary.SetDampingEasingTarget
// ()
// Parameters:
// struct FDampingEasingContainer3D Easing                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NewTarget                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::SetDampingEasingTarget(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject, const struct FVector& NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.SetDampingEasingTarget");

	UINSBlueprintLibrary_SetDampingEasingTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;

}


// Function Insurgency.INSBlueprintLibrary.RotatorAngularDistance
// ()
// Parameters:
// struct FRotator                rotatorA                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                rotatorB                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSBlueprintLibrary::RotatorAngularDistance(const struct FRotator& rotatorA, const struct FRotator& rotatorB)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.RotatorAngularDistance");

	UINSBlueprintLibrary_RotatorAngularDistance_Params params;
	params.rotatorA = rotatorA;
	params.rotatorB = rotatorB;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.PlayWorldShellShock
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Epicenter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerRadius                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterRadius                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InnerDuration                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OuterDuration                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::PlayWorldShellShock(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.PlayWorldShellShock");

	UINSBlueprintLibrary_PlayWorldShellShock_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Epicenter = Epicenter;
	params.InnerRadius = InnerRadius;
	params.OuterRadius = OuterRadius;
	params.InnerDuration = InnerDuration;
	params.OuterDuration = OuterDuration;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSBlueprintLibrary.MakeFromColorTemperature
// ()
// Parameters:
// float                          Temperature                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor UINSBlueprintLibrary::MakeFromColorTemperature(float Temperature)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.MakeFromColorTemperature");

	UINSBlueprintLibrary_MakeFromColorTemperature_Params params;
	params.Temperature = Temperature;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.IsGamePadConnected
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::IsGamePadConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.IsGamePadConnected");

	UINSBlueprintLibrary_IsGamePadConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.IsFreeWeekendUser
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::IsFreeWeekendUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.IsFreeWeekendUser");

	UINSBlueprintLibrary_IsFreeWeekendUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.IsConsolePlatform
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::IsConsolePlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.IsConsolePlatform");

	UINSBlueprintLibrary_IsConsolePlatform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetTotalPlayableArea
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Center                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                    Extents                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::GetTotalPlayableArea(class UObject* WorldContextObject, struct FVector* Center, struct FBox* Extents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetTotalPlayableArea");

	UINSBlueprintLibrary_GetTotalPlayableArea_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Center != nullptr)
		*Center = params.Center;
	if (Extents != nullptr)
		*Extents = params.Extents;

}


// Function Insurgency.INSBlueprintLibrary.GetPenetrationPower
// ()
// Parameters:
// class UClass*                  AmmoClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          EvaluationVelocity             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSBlueprintLibrary::GetPenetrationPower(class UClass* AmmoClass, float EvaluationVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetPenetrationPower");

	UINSBlueprintLibrary_GetPenetrationPower_Params params;
	params.AmmoClass = AmmoClass;
	params.EvaluationVelocity = EvaluationVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetPartyManager
// ()
// Parameters:
// class UINSParty*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSParty* UINSBlueprintLibrary::GetPartyManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetPartyManager");

	UINSBlueprintLibrary_GetPartyManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetOverviewAreaScenario
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Center                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                    Extents                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::GetOverviewAreaScenario(class UObject* WorldContextObject, struct FVector* Center, struct FBox* Extents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetOverviewAreaScenario");

	UINSBlueprintLibrary_GetOverviewAreaScenario_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Center != nullptr)
		*Center = params.Center;
	if (Extents != nullptr)
		*Extents = params.Extents;

}


// Function Insurgency.INSBlueprintLibrary.GetLocalizedTextForCharacterResponse
// ()
// Parameters:
// ECharacterResponse             Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UINSBlueprintLibrary::GetLocalizedTextForCharacterResponse(ECharacterResponse Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetLocalizedTextForCharacterResponse");

	UINSBlueprintLibrary_GetLocalizedTextForCharacterResponse_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetLastMatchScoreChange
// ()
// Parameters:
// struct FMatchScoreChange       ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FMatchScoreChange UINSBlueprintLibrary::GetLastMatchScoreChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetLastMatchScoreChange");

	UINSBlueprintLibrary_GetLastMatchScoreChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetFirstLocalPlayerController
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APlayerController* UINSBlueprintLibrary::GetFirstLocalPlayerController(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetFirstLocalPlayerController");

	UINSBlueprintLibrary_GetFirstLocalPlayerController_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetAllScenariosForMaps
// ()
// Parameters:
// TArray<struct FString>         MapNames                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FScenarioAssetInfo> OutScenarioNames               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::GetAllScenariosForMaps(TArray<struct FString> MapNames, TArray<struct FScenarioAssetInfo>* OutScenarioNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetAllScenariosForMaps");

	UINSBlueprintLibrary_GetAllScenariosForMaps_Params params;
	params.MapNames = MapNames;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutScenarioNames != nullptr)
		*OutScenarioNames = params.OutScenarioNames;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetAllScenariosForMap
// ()
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FScenarioAssetInfo> OutScenarioNames               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::GetAllScenariosForMap(const struct FString& MapName, TArray<struct FScenarioAssetInfo>* OutScenarioNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetAllScenariosForMap");

	UINSBlueprintLibrary_GetAllScenariosForMap_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutScenarioNames != nullptr)
		*OutScenarioNames = params.OutScenarioNames;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.GetAllMapNames
// ()
// Parameters:
// TArray<struct FString>         OutMapNames                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::GetAllMapNames(TArray<struct FString>* OutMapNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.GetAllMapNames");

	UINSBlueprintLibrary_GetAllMapNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapNames != nullptr)
		*OutMapNames = params.OutMapNames;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.FirearmHasFiremode
// ()
// Parameters:
// class UClass*                  FirearmClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFirearmFiremode               Firemode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::FirearmHasFiremode(class UClass* FirearmClass, EFirearmFiremode Firemode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.FirearmHasFiremode");

	UINSBlueprintLibrary_FirearmHasFiremode_Params params;
	params.FirearmClass = FirearmClass;
	params.Firemode = Firemode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.CheckFirstPerson
// ()
// Parameters:
// class UObject*                 Target                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintLibrary::CheckFirstPerson(class UObject* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.CheckFirstPerson");

	UINSBlueprintLibrary_CheckFirstPerson_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintLibrary.CalcInertialEasing
// ()
// Parameters:
// struct FInertialEasingContainer1D Easing                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Position                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Velocity                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::CalcInertialEasing(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject, float* Position, float* Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.CalcInertialEasing");

	UINSBlueprintLibrary_CalcInertialEasing_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;
	if (Position != nullptr)
		*Position = params.Position;
	if (Velocity != nullptr)
		*Velocity = params.Velocity;

}


// Function Insurgency.INSBlueprintLibrary.CalcDampingEasing
// ()
// Parameters:
// struct FDampingEasingContainer3D Easing                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Position                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSBlueprintLibrary::CalcDampingEasing(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject, struct FVector* Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintLibrary.CalcDampingEasing");

	UINSBlueprintLibrary_CalcDampingEasing_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;
	if (Position != nullptr)
		*Position = params.Position;

}


void UINSBlueprintLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UINSBlueprintLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.INSBlueprintBuildMetadata.IsCTE
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSBlueprintBuildMetadata::IsCTE()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintBuildMetadata.IsCTE");

	UINSBlueprintBuildMetadata_IsCTE_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintBuildMetadata.GetGameVersion
// ()
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UINSBlueprintBuildMetadata::GetGameVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintBuildMetadata.GetGameVersion");

	UINSBlueprintBuildMetadata_GetGameVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSBlueprintBuildMetadata.GetChangelist
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSBlueprintBuildMetadata::GetChangelist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSBlueprintBuildMetadata.GetChangelist");

	UINSBlueprintBuildMetadata_GetChangelist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UINSBlueprintBuildMetadata::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UINSBlueprintBuildMetadata::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.INSAIBlueprintLibrary.IsWithEditor
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIBlueprintLibrary::IsWithEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIBlueprintLibrary.IsWithEditor");

	UINSAIBlueprintLibrary_IsWithEditor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIBlueprintLibrary.GetNavAreaClassAtLocation
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Extents                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* UINSAIBlueprintLibrary::GetNavAreaClassAtLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIBlueprintLibrary.GetNavAreaClassAtLocation");

	UINSAIBlueprintLibrary_GetNavAreaClassAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.Extents = Extents;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIBlueprintLibrary.GetAIDirector
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSAIDirector*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSAIDirector* UINSAIBlueprintLibrary::GetAIDirector(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIBlueprintLibrary.GetAIDirector");

	UINSAIBlueprintLibrary_GetAIDirector_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIBlueprintLibrary.ChangeNavAreaAtLocation
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Extents                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  NewAreaClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIBlueprintLibrary::ChangeNavAreaAtLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extents, class UClass* NewAreaClass, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIBlueprintLibrary.ChangeNavAreaAtLocation");

	UINSAIBlueprintLibrary_ChangeNavAreaAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.Extents = Extents;
	params.NewAreaClass = NewAreaClass;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSAIBlueprintLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UINSAIBlueprintLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UINSAudioComponent::AfterRead()
{
	UAkComponent::AfterRead();

}

void UINSAudioComponent::BeforeDelete()
{
	UAkComponent::BeforeDelete();

}

void UINSAssetManager::AfterRead()
{
	UAssetManager::AfterRead();

}

void UINSAssetManager::BeforeDelete()
{
	UAssetManager::BeforeDelete();

}

// Function Insurgency.INSAIVehicleController.IsStuck
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAIVehicleController::IsStuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIVehicleController.IsStuck");

	AINSAIVehicleController_IsStuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIVehicleController.GetVehicle
// ()
// Parameters:
// class AVehicleBase*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AVehicleBase* AINSAIVehicleController::GetVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIVehicleController.GetVehicle");

	AINSAIVehicleController_GetVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIVehicleController.GetAISquad
// ()
// Parameters:
// class UINSAISquad*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSAISquad* AINSAIVehicleController::GetAISquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIVehicleController.GetAISquad");

	AINSAIVehicleController_GetAISquad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSAIVehicleController::AfterRead()
{
	AAIController::AfterRead();

	READ_PTR_FULL(ConvoyVehicleAhead, AVehicleBase);
	READ_PTR_FULL(AISquad, UINSAISquad);
}

void AINSAIVehicleController::BeforeDelete()
{
	AAIController::BeforeDelete();

	DELE_PTR_FULL(ConvoyVehicleAhead);
	DELE_PTR_FULL(AISquad);
}

// Function Insurgency.INSAISquad.RemovePawnFromSquad
// ()
// Parameters:
// class AINSSoldier*             RemovedMember                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWasDeath                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAISquad::RemovePawnFromSquad(class AINSSoldier* RemovedMember, bool bWasDeath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.RemovePawnFromSquad");

	UINSAISquad_RemovePawnFromSquad_Params params;
	params.RemovedMember = RemovedMember;
	params.bWasDeath = bWasDeath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.PurgeInvestigation
// ()
// Parameters:
// class UBotInvestigation*       Investigation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAISquad::PurgeInvestigation(class UBotInvestigation* Investigation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.PurgeInvestigation");

	UINSAISquad_PurgeInvestigation_Params params;
	params.Investigation = Investigation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISquad.IsSquadMemberPlayingDialogue
// ()
// Parameters:
// ECharacterResponse             Response                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAISquad::IsSquadMemberPlayingDialogue(ECharacterResponse Response)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.IsSquadMemberPlayingDialogue");

	UINSAISquad_IsSquadMemberPlayingDialogue_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetTeamId
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSAISquad::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetTeamId");

	UINSAISquad_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetTargetObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* UINSAISquad::GetTargetObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetTargetObjective");

	UINSAISquad_GetTargetObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetSquadPosition
// ()
// Parameters:
// class AINSSoldier*             Member                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSAISquad::GetSquadPosition(class AINSSoldier* Member)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetSquadPosition");

	UINSAISquad_GetSquadPosition_Params params;
	params.Member = Member;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetSquadMembers
// ()
// Parameters:
// TArray<class AINSSoldier*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class AINSSoldier*> UINSAISquad::GetSquadMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetSquadMembers");

	UINSAISquad_GetSquadMembers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetSquadLeader
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* UINSAISquad::GetSquadLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetSquadLeader");

	UINSAISquad_GetSquadLeader_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetRoleForSoldier
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAISquadRole                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EAISquadRole UINSAISquad::GetRoleForSoldier(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetRoleForSoldier");

	UINSAISquad_GetRoleForSoldier_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetPointsToObjective
// ()
// Parameters:
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FVector> UINSAISquad::GetPointsToObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetPointsToObjective");

	UINSAISquad_GetPointsToObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetPendingInvestigations
// ()
// Parameters:
// TArray<class UBotInvestigation*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UBotInvestigation*> UINSAISquad::GetPendingInvestigations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetPendingInvestigations");

	UINSAISquad_GetPendingInvestigations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetMovementGroup
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AINSSoldier*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class AINSSoldier*> UINSAISquad::GetMovementGroup(class AINSSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetMovementGroup");

	UINSAISquad_GetMovementGroup_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetMaxSquadSize
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSAISquad::GetMaxSquadSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetMaxSquadSize");

	UINSAISquad_GetMaxSquadSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetContestedObjective
// ()
// Parameters:
// class AINSSoldier*             Investigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBotInvestigation*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotInvestigation* UINSAISquad::GetContestedObjective(class AINSSoldier* Investigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetContestedObjective");

	UINSAISquad_GetContestedObjective_Params params;
	params.Investigator = Investigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.GetActiveInvestigation
// ()
// Parameters:
// class UBotInvestigation*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotInvestigation* UINSAISquad::GetActiveInvestigation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.GetActiveInvestigation");

	UINSAISquad_GetActiveInvestigation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.CountSquadMembers
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UINSAISquad::CountSquadMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.CountSquadMembers");

	UINSAISquad_CountSquadMembers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.CenterPosition
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UINSAISquad::CenterPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.CenterPosition");

	UINSAISquad_CenterPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISquad.ArriveAtObjective
// ()
void UINSAISquad::ArriveAtObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.ArriveAtObjective");

	UINSAISquad_ArriveAtObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISquad.AddPawnToSquad
// ()
// Parameters:
// class AINSSoldier*             NewMember                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsLeader                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAISquad::AddPawnToSquad(class AINSSoldier* NewMember, bool bIsLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISquad.AddPawnToSquad");

	UINSAISquad_AddPawnToSquad_Params params;
	params.NewMember = NewMember;
	params.bIsLeader = bIsLeader;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UINSAISquad::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ActiveInvestigation, UBotInvestigation);
	READ_PTR_FULL(TargetObjective, AObjectiveBase);
	READ_PTR_FULL(Path, UNavigationPath);
}

void UINSAISquad::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ActiveInvestigation);
	DELE_PTR_FULL(TargetObjective);
	DELE_PTR_FULL(Path);
}

// Function Insurgency.INSAISoldierController.ToggleMovement
// ()
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::ToggleMovement(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.ToggleMovement");

	AINSAISoldierController_ToggleMovement_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.StopFiring
// ()
void AINSAISoldierController::StopFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.StopFiring");

	AINSAISoldierController_StopFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.StartFiringAtFocalPoint
// ()
void AINSAISoldierController::StartFiringAtFocalPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.StartFiringAtFocalPoint");

	AINSAISoldierController_StartFiringAtFocalPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.Sidestep
// ()
// Parameters:
// float                          Cooldown                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::Sidestep(float Cooldown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.Sidestep");

	AINSAISoldierController_Sidestep_Params params;
	params.Cooldown = Cooldown;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.SetDesiredStance
// ()
// Parameters:
// ESoldierStance                 NewStance                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::SetDesiredStance(ESoldierStance NewStance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.SetDesiredStance");

	AINSAISoldierController_SetDesiredStance_Params params;
	params.NewStance = NewStance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.SetAIEnabled
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::SetAIEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.SetAIEnabled");

	AINSAISoldierController_SetAIEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.SeePawn
// ()
// Parameters:
// class APawn*                   OtherPawn                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::SeePawn(class APawn* OtherPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.SeePawn");

	AINSAISoldierController_SeePawn_Params params;
	params.OtherPawn = OtherPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnTargetSpotted
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::OnTargetSpotted(class UBotKnownTargetMemory* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnTargetSpotted");

	AINSAISoldierController_OnTargetSpotted_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnTargetLostLOS
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::OnTargetLostLOS(class UBotKnownTargetMemory* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnTargetLostLOS");

	AINSAISoldierController_OnTargetLostLOS_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnTargetKilled
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::OnTargetKilled(class UBotKnownTargetMemory* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnTargetKilled");

	AINSAISoldierController_OnTargetKilled_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnTargetGainedLOS
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::OnTargetGainedLOS(class UBotKnownTargetMemory* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnTargetGainedLOS");

	AINSAISoldierController_OnTargetGainedLOS_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnSquadMemberKilled
// ()
// Parameters:
// class AINSSoldier*             KilledSoldier                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWasSquadLeader                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::OnSquadMemberKilled(class AINSSoldier* KilledSoldier, bool bWasSquadLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnSquadMemberKilled");

	AINSAISoldierController_OnSquadMemberKilled_Params params;
	params.KilledSoldier = KilledSoldier;
	params.bWasSquadLeader = bWasSquadLeader;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnFriendlyLeftFiringAngle
// ()
void AINSAISoldierController::OnFriendlyLeftFiringAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnFriendlyLeftFiringAngle");

	AINSAISoldierController_OnFriendlyLeftFiringAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnFriendlyInFiringAngle
// ()
void AINSAISoldierController::OnFriendlyInFiringAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnFriendlyInFiringAngle");

	AINSAISoldierController_OnFriendlyInFiringAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnFinishedPatrol
// ()
void AINSAISoldierController::OnFinishedPatrol()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnFinishedPatrol");

	AINSAISoldierController_OnFinishedPatrol_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.OnAIStateChange
// ()
// Parameters:
// TEnumAsByte<EAIControllerState> OldState                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EAIControllerState> NewState                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::OnAIStateChange(TEnumAsByte<EAIControllerState>* OldState, TEnumAsByte<EAIControllerState>* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.OnAIStateChange");

	AINSAISoldierController_OnAIStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OldState != nullptr)
		*OldState = params.OldState;
	if (NewState != nullptr)
		*NewState = params.NewState;

}


// Function Insurgency.INSAISoldierController.MoveToOverride
// ()
// Parameters:
// struct FVector                 Destination                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIDesiredLocomotion           MoveType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESoldierStance                 Stance                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIDesiredLocomotionPriority   Priority                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreDeathAreas              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AcceptRadius                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAllowPartialPath              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPathFollowingRequestResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TEnumAsByte<EPathFollowingRequestResult> AINSAISoldierController::MoveToOverride(const struct FVector& Destination, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.MoveToOverride");

	AINSAISoldierController_MoveToOverride_Params params;
	params.Destination = Destination;
	params.MoveType = MoveType;
	params.Stance = Stance;
	params.Priority = Priority;
	params.bIgnoreDeathAreas = bIgnoreDeathAreas;
	params.AcceptRadius = AcceptRadius;
	params.bAllowPartialPath = bAllowPartialPath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.MoveToLocationSafe
// ()
// Parameters:
// struct FVector                 Destination                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIDesiredLocomotion           MoveType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESoldierStance                 Stance                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIDesiredLocomotionPriority   Priority                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreDeathAreas              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AcceptRadius                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAllowPartialPath              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPathFollowingRequestResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TEnumAsByte<EPathFollowingRequestResult> AINSAISoldierController::MoveToLocationSafe(const struct FVector& Destination, const struct FString& Reason, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.MoveToLocationSafe");

	AINSAISoldierController_MoveToLocationSafe_Params params;
	params.Destination = Destination;
	params.Reason = Reason;
	params.MoveType = MoveType;
	params.Stance = Stance;
	params.Priority = Priority;
	params.bIgnoreDeathAreas = bIgnoreDeathAreas;
	params.AcceptRadius = AcceptRadius;
	params.bAllowPartialPath = bAllowPartialPath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.MoveToActorSafe
// ()
// Parameters:
// class AActor*                  DestinationActor               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIDesiredLocomotion           MoveType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESoldierStance                 Stance                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIDesiredLocomotionPriority   Priority                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreDeathAreas              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AcceptRadius                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAllowPartialPath              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPathFollowingRequestResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TEnumAsByte<EPathFollowingRequestResult> AINSAISoldierController::MoveToActorSafe(class AActor* DestinationActor, const struct FString& Reason, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.MoveToActorSafe");

	AINSAISoldierController_MoveToActorSafe_Params params;
	params.DestinationActor = DestinationActor;
	params.Reason = Reason;
	params.MoveType = MoveType;
	params.Stance = Stance;
	params.Priority = Priority;
	params.bIgnoreDeathAreas = bIgnoreDeathAreas;
	params.AcceptRadius = AcceptRadius;
	params.bAllowPartialPath = bAllowPartialPath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.LookAtLocation
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EAIDesiredLookAtPriority> Priority                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 LookReason                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::LookAtLocation(const struct FVector& Location, TEnumAsByte<EAIDesiredLookAtPriority> Priority, const struct FString& LookReason, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.LookAtLocation");

	AINSAISoldierController_LookAtLocation_Params params;
	params.Location = Location;
	params.Priority = Priority;
	params.LookReason = LookReason;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.LookAtActor
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EAIDesiredLookAtPriority> Priority                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 LookReason                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::LookAtActor(class AActor* Actor, TEnumAsByte<EAIDesiredLookAtPriority> Priority, const struct FString& LookReason, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.LookAtActor");

	AINSAISoldierController_LookAtActor_Params params;
	params.Actor = Actor;
	params.Priority = Priority;
	params.LookReason = LookReason;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.LineOfSightToLocation
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShowDebug                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::LineOfSightToLocation(const struct FVector& Location, bool bShowDebug)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.LineOfSightToLocation");

	AINSAISoldierController_LineOfSightToLocation_Params params;
	params.Location = Location;
	params.bShowDebug = bShowDebug;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsTeamMate
// ()
// Parameters:
// class AINSSoldier*             Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsTeamMate(class AINSSoldier* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsTeamMate");

	AINSAISoldierController_IsTeamMate_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsTargetFacingMe
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AngleThreshold                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsTargetFacingMe(class UBotKnownTargetMemory* Target, float AngleThreshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsTargetFacingMe");

	AINSAISoldierController_IsTargetFacingMe_Params params;
	params.Target = Target;
	params.AngleThreshold = AngleThreshold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsSquadLeader
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsSquadLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsSquadLeader");

	AINSAISoldierController_IsSquadLeader_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsSmokeBlockingVisionToLocation
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsSmokeBlockingVisionToLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsSmokeBlockingVisionToLocation");

	AINSAISoldierController_IsSmokeBlockingVisionToLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsFriendlyInFiringLine
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsFriendlyInFiringLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsFriendlyInFiringLine");

	AINSAISoldierController_IsFriendlyInFiringLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsFriendlyInFiringAngle
// ()
// Parameters:
// float                          AngleThreshold                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsFriendlyInFiringAngle(float AngleThreshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsFriendlyInFiringAngle");

	AINSAISoldierController_IsFriendlyInFiringAngle_Params params;
	params.AngleThreshold = AngleThreshold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.IsAIEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::IsAIEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.IsAIEnabled");

	AINSAISoldierController_IsAIEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.HearNoise
// ()
// Parameters:
// class APawn*                   OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHasLOS                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSAISoldierController::HearNoise(class APawn* OtherActor, const struct FVector& Location, float Distance, bool bHasLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.HearNoise");

	AINSAISoldierController_HearNoise_Params params;
	params.OtherActor = OtherActor;
	params.Location = Location;
	params.Distance = Distance;
	params.bHasLOS = bHasLOS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.GetTeamId
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AINSAISoldierController::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetTeamId");

	AINSAISoldierController_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetSquadLeaderCover
// ()
// Parameters:
// class UCoverComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoverComponent* AINSAISoldierController::GetSquadLeaderCover()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetSquadLeaderCover");

	AINSAISoldierController_GetSquadLeaderCover_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetSquad
// ()
// Parameters:
// class UINSAISquad*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSAISquad* AINSAISoldierController::GetSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetSquad");

	AINSAISoldierController_GetSquad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetSoldier
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* AINSAISoldierController::GetSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetSoldier");

	AINSAISoldierController_GetSoldier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetObjectives
// ()
// Parameters:
// class UBotObjectiveHandler*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotObjectiveHandler* AINSAISoldierController::GetObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetObjectives");

	AINSAISoldierController_GetObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetMovementHandler
// ()
// Parameters:
// class UBotMovementHandler*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotMovementHandler* AINSAISoldierController::GetMovementHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetMovementHandler");

	AINSAISoldierController_GetMovementHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetMood
// ()
// Parameters:
// class UBotMoodHandler*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotMoodHandler* AINSAISoldierController::GetMood()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetMood");

	AINSAISoldierController_GetMood_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetMemory
// ()
// Parameters:
// class UBotMemoryHandler*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotMemoryHandler* AINSAISoldierController::GetMemory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetMemory");

	AINSAISoldierController_GetMemory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetFirearm
// ()
// Parameters:
// class AItemFirearm*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemFirearm* AINSAISoldierController::GetFirearm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetFirearm");

	AINSAISoldierController_GetFirearm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetDesiredLocomotionType
// ()
// Parameters:
// EAIDesiredLocomotion           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EAIDesiredLocomotion AINSAISoldierController::GetDesiredLocomotionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetDesiredLocomotionType");

	AINSAISoldierController_GetDesiredLocomotionType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetCombatHandler
// ()
// Parameters:
// class UBotCombatHandler*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotCombatHandler* AINSAISoldierController::GetCombatHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetCombatHandler");

	AINSAISoldierController_GetCombatHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetChanceToSpotTarget
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSAISoldierController::GetChanceToSpotTarget(class UBotKnownTargetMemory* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetChanceToSpotTarget");

	AINSAISoldierController_GetChanceToSpotTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetBehaviorHandler
// ()
// Parameters:
// class UBotBehaviorHandler*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotBehaviorHandler* AINSAISoldierController::GetBehaviorHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetBehaviorHandler");

	AINSAISoldierController_GetBehaviorHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.GetAngleToLocationFromEyeDirection
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float AINSAISoldierController::GetAngleToLocationFromEyeDirection(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.GetAngleToLocationFromEyeDirection");

	AINSAISoldierController_GetAngleToLocationFromEyeDirection_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAISoldierController.ForgetEverything
// ()
void AINSAISoldierController::ForgetEverything()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.ForgetEverything");

	AINSAISoldierController_ForgetEverything_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.ClearLookAt
// ()
void AINSAISoldierController::ClearLookAt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.ClearLookAt");

	AINSAISoldierController_ClearLookAt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAISoldierController.CanSidestep
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSAISoldierController::CanSidestep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAISoldierController.CanSidestep");

	AINSAISoldierController_CanSidestep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AINSAISoldierController::AfterRead()
{
	AAIController::AfterRead();

	READ_PTR_FULL(ParentSpawner, ASpawnerBase);
	READ_PTR_FULL(AiPerception, UINSAIPerception);
	READ_PTR_FULL(SightConfig, UAISenseConfig_Sight);
	READ_PTR_FULL(HearingConfig, UAISenseConfig_INSHearing);
	READ_PTR_FULL(AssociatedFireSupport, AFireSupportBase);
	READ_PTR_FULL(DefaultAIConfig, UBotSkillConfig);
	READ_PTR_FULL(AIConfig, UBotSkillConfig);
	READ_PTR_FULL(MoodHandler, UBotMoodHandler);
	READ_PTR_FULL(MemoryHandler, UBotMemoryHandler);
	READ_PTR_FULL(ObjectiveHandler, UBotObjectiveHandler);
	READ_PTR_FULL(CombatHandler, UBotCombatHandler);
	READ_PTR_FULL(BehaviorHandler, UBotBehaviorHandler);
	READ_PTR_FULL(MovementHandler, UBotMovementHandler);
	READ_PTR_FULL(CachedPawn, AINSSoldier);
}

void AINSAISoldierController::BeforeDelete()
{
	AAIController::BeforeDelete();

	DELE_PTR_FULL(ParentSpawner);
	DELE_PTR_FULL(AiPerception);
	DELE_PTR_FULL(SightConfig);
	DELE_PTR_FULL(HearingConfig);
	DELE_PTR_FULL(AssociatedFireSupport);
	DELE_PTR_FULL(DefaultAIConfig);
	DELE_PTR_FULL(AIConfig);
	DELE_PTR_FULL(MoodHandler);
	DELE_PTR_FULL(MemoryHandler);
	DELE_PTR_FULL(ObjectiveHandler);
	DELE_PTR_FULL(CombatHandler);
	DELE_PTR_FULL(BehaviorHandler);
	DELE_PTR_FULL(MovementHandler);
	DELE_PTR_FULL(CachedPawn);
}

// Function Insurgency.INSAIPerception.SeePawn
// ()
// Parameters:
// class APawn*                   SeenPawn                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIPerception::SeePawn(class APawn* SeenPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIPerception.SeePawn");

	UINSAIPerception_SeePawn_Params params;
	params.SeenPawn = SeenPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIPerception.OnTargetPerceptionUpdate
// ()
// Parameters:
// class AActor*                  TriggeringActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus             Stimulus                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
void UINSAIPerception::OnTargetPerceptionUpdate(class AActor* TriggeringActor, const struct FAIStimulus& Stimulus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIPerception.OnTargetPerceptionUpdate");

	UINSAIPerception_OnTargetPerceptionUpdate_Params params;
	params.TriggeringActor = TriggeringActor;
	params.Stimulus = Stimulus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIPerception.Initialize
// ()
// Parameters:
// class AINSAISoldierController* BotController                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBotMemoryHandler*       BotMemory                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIPerceptionComponent*  Perception                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIPerception::Initialize(class AINSAISoldierController* BotController, class UBotMemoryHandler* BotMemory, class UAIPerceptionComponent* Perception)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIPerception.Initialize");

	UINSAIPerception_Initialize_Params params;
	params.BotController = BotController;
	params.BotMemory = BotMemory;
	params.Perception = Perception;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIPerception.HearPawn
// ()
// Parameters:
// class APawn*                   HeardPawn                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHasLOS                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIPerception::HearPawn(class APawn* HeardPawn, const struct FVector& Location, float Distance, bool bHasLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIPerception.HearPawn");

	UINSAIPerception_HearPawn_Params params;
	params.HeardPawn = HeardPawn;
	params.Location = Location;
	params.Distance = Distance;
	params.bHasLOS = bHasLOS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSAIPerception::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Controller, AINSAISoldierController);
	READ_PTR_FULL(Memory, UBotMemoryHandler);
	READ_PTR_FULL(PerceptionComponent, UAIPerceptionComponent);
}

void UINSAIPerception::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Controller);
	DELE_PTR_FULL(Memory);
	DELE_PTR_FULL(PerceptionComponent);
}

void UModifiedNavArea::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Actor, AActor);
	READ_PTR_FULL(ModifiedNavAreaClass, UClass);
}

void UModifiedNavArea::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Actor);
	DELE_PTR_FULL(ModifiedNavAreaClass);
}

// Function Insurgency.BotInvestigation.GetTimeUntilFinished
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotInvestigation::GetTimeUntilFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotInvestigation.GetTimeUntilFinished");

	UBotInvestigation_GetTimeUntilFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotInvestigation.GetTimeSinceStarted
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotInvestigation::GetTimeSinceStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotInvestigation.GetTimeSinceStarted");

	UBotInvestigation_GetTimeSinceStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotInvestigation::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Actor, AActor);
}

void UBotInvestigation::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Actor);
}

// Function Insurgency.INSAIDirector.UpdateInvestigations
// ()
void UINSAIDirector::UpdateInvestigations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.UpdateInvestigations");

	UINSAIDirector_UpdateInvestigations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.ToggleAIPerception
// ()
void UINSAIDirector::ToggleAIPerception()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.ToggleAIPerception");

	UINSAIDirector_ToggleAIPerception_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.SpawnFakeClient
// ()
// Parameters:
// class ATeamInfo*               Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  PawnClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  AIControllerClass              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPlayerClass*>    PlayerClasses                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWantsPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSAISoldierController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSAISoldierController* UINSAIDirector::SpawnFakeClient(class ATeamInfo* Faction, class UClass* PawnClass, class UClass* AIControllerClass, TArray<class UPlayerClass*> PlayerClasses, bool bWantsPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.SpawnFakeClient");

	UINSAIDirector_SpawnFakeClient_Params params;
	params.Faction = Faction;
	params.PawnClass = PawnClass;
	params.AIControllerClass = AIControllerClass;
	params.PlayerClasses = PlayerClasses;
	params.bWantsPlayerState = bWantsPlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.SpawnBot
// ()
// Parameters:
// class ATeamInfo*               Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  PawnClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bWantsPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerClass*            BotClass                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSAISoldierController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSAISoldierController* UINSAIDirector::SpawnBot(class ATeamInfo* Faction, class UClass* PawnClass, const struct FVector& Location, bool bWantsPlayerState, class UPlayerClass* BotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.SpawnBot");

	UINSAIDirector_SpawnBot_Params params;
	params.Faction = Faction;
	params.PawnClass = PawnClass;
	params.Location = Location;
	params.bWantsPlayerState = bWantsPlayerState;
	params.BotClass = BotClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.SetTargetPlayers
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::SetTargetPlayers(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.SetTargetPlayers");

	UINSAIDirector_SetTargetPlayers_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.SetAINeutral
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::SetAINeutral(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.SetAINeutral");

	UINSAIDirector_SetAINeutral_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.SetAIEnabled
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::SetAIEnabled(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.SetAIEnabled");

	UINSAIDirector_SetAIEnabled_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.SetAIDifficulty
// ()
// Parameters:
// float                          NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::SetAIDifficulty(float NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.SetAIDifficulty");

	UINSAIDirector_SetAIDifficulty_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.RoundWon
// ()
// Parameters:
// bool                           bAttackers                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::RoundWon(bool bAttackers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.RoundWon");

	UINSAIDirector_RoundWon_Params params;
	params.bAttackers = bAttackers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.IsInRadiusOfBurningGrenade
// ()
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::IsInRadiusOfBurningGrenade(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.IsInRadiusOfBurningGrenade");

	UINSAIDirector_IsInRadiusOfBurningGrenade_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.IsAIPerceptionEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::IsAIPerceptionEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.IsAIPerceptionEnabled");

	UINSAIDirector_IsAIPerceptionEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.IsAINeutral
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::IsAINeutral()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.IsAINeutral");

	UINSAIDirector_IsAINeutral_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.IsAIEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::IsAIEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.IsAIEnabled");

	UINSAIDirector_IsAIEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetSpawnedBots
// ()
// Parameters:
// TArray<class AINSAISoldierController*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class AINSAISoldierController*> UINSAIDirector::GetSpawnedBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetSpawnedBots");

	UINSAIDirector_GetSpawnedBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetGrenadeTargets
// ()
// Parameters:
// TArray<struct FBotGrenadeTarget> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FBotGrenadeTarget> UINSAIDirector::GetGrenadeTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetGrenadeTargets");

	UINSAIDirector_GetGrenadeTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetDoors
// ()
// Parameters:
// TArray<class ADoor*>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class ADoor*> UINSAIDirector::GetDoors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetDoors");

	UINSAIDirector_GetDoors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetAllSquads
// ()
// Parameters:
// TArray<class UINSAISquad*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UINSAISquad*> UINSAIDirector::GetAllSquads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetAllSquads");

	UINSAIDirector_GetAllSquads_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetAllCoverPoints
// ()
// Parameters:
// bool                           bOccupiedOnly                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UCoverComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UCoverComponent*> UINSAIDirector::GetAllCoverPoints(bool bOccupiedOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetAllCoverPoints");

	UINSAIDirector_GetAllCoverPoints_Params params;
	params.bOccupiedOnly = bOccupiedOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetAIDifficulty
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UINSAIDirector::GetAIDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetAIDifficulty");

	UINSAIDirector_GetAIDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetActiveGrenades
// ()
// Parameters:
// TArray<class AProjectileGrenade*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class AProjectileGrenade*> UINSAIDirector::GetActiveGrenades()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetActiveGrenades");

	UINSAIDirector_GetActiveGrenades_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.GetActiveAndBurningGrenades
// ()
// Parameters:
// TArray<class AProjectileGrenade*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class AProjectileGrenade*> UINSAIDirector::GetActiveAndBurningGrenades()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.GetActiveAndBurningGrenades");

	UINSAIDirector_GetActiveAndBurningGrenades_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.FindBestCoverFromLocation
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCoverSearchParams      SearchParams                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UCoverComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoverComponent* UINSAIDirector::FindBestCoverFromLocation(class AINSAISoldierController* Me, const struct FCoverSearchParams& SearchParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.FindBestCoverFromLocation");

	UINSAIDirector_FindBestCoverFromLocation_Params params;
	params.Me = Me;
	params.SearchParams = SearchParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.EQS_GenerateSpawn
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 GenerationLocation             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutSpawnLocation               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTesting                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::EQS_GenerateSpawn(class AINSSoldier* Soldier, const struct FVector& GenerationLocation, struct FVector* OutSpawnLocation, bool bTesting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.EQS_GenerateSpawn");

	UINSAIDirector_EQS_GenerateSpawn_Params params;
	params.Soldier = Soldier;
	params.GenerationLocation = GenerationLocation;
	params.bTesting = bTesting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSpawnLocation != nullptr)
		*OutSpawnLocation = params.OutSpawnLocation;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.EQS_FindOutdoorLocation
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutdoorLocation                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::EQS_FindOutdoorLocation(const struct FVector& Location, float Radius, struct FVector* OutdoorLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.EQS_FindOutdoorLocation");

	UINSAIDirector_EQS_FindOutdoorLocation_Params params;
	params.Location = Location;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutdoorLocation != nullptr)
		*OutdoorLocation = params.OutdoorLocation;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.EQS_FindNavigatableLocationWithLOS
// ()
// Parameters:
// struct FVector                 LOSLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::EQS_FindNavigatableLocationWithLOS(const struct FVector& LOSLocation, struct FVector* OutLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.EQS_FindNavigatableLocationWithLOS");

	UINSAIDirector_EQS_FindNavigatableLocationWithLOS_Params params;
	params.LOSLocation = LOSLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.EQS_FindInvestigation
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBotInvestigation*       Investigation                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutInvestigateLocation         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::EQS_FindInvestigation(class AINSSoldier* Soldier, class UBotInvestigation* Investigation, struct FVector* OutInvestigateLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.EQS_FindInvestigation");

	UINSAIDirector_EQS_FindInvestigation_Params params;
	params.Soldier = Soldier;
	params.Investigation = Investigation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutInvestigateLocation != nullptr)
		*OutInvestigateLocation = params.OutInvestigateLocation;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.EQS_FindFlank
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutFlankLocation               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::EQS_FindFlank(class AINSSoldier* Soldier, struct FVector* OutFlankLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.EQS_FindFlank");

	UINSAIDirector_EQS_FindFlank_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutFlankLocation != nullptr)
		*OutFlankLocation = params.OutFlankLocation;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.EQS_FindCover
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCoverSearchParams      SearchParams                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 OutCoverLocation               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::EQS_FindCover(class AINSSoldier* Soldier, const struct FCoverSearchParams& SearchParams, struct FVector* OutCoverLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.EQS_FindCover");

	UINSAIDirector_EQS_FindCover_Params params;
	params.Soldier = Soldier;
	params.SearchParams = SearchParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCoverLocation != nullptr)
		*OutCoverLocation = params.OutCoverLocation;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.ClearCoverForBot
// ()
// Parameters:
// class AINSAISoldierController* Bot                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   ReasonForClearing              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAvoidBriefly                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::ClearCoverForBot(class AINSAISoldierController* Bot, const struct FName& ReasonForClearing, bool bAvoidBriefly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.ClearCoverForBot");

	UINSAIDirector_ClearCoverForBot_Params params;
	params.Bot = Bot;
	params.ReasonForClearing = ReasonForClearing;
	params.bAvoidBriefly = bAvoidBriefly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSAIDirector.CanTargetPlayers
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::CanTargetPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.CanTargetPlayers");

	UINSAIDirector_CanTargetPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.AssignCoverToBot
// ()
// Parameters:
// class AINSAISoldierController* Bot                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCoverComponent*         Cover                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UINSAIDirector::AssignCoverToBot(class AINSAISoldierController* Bot, class UCoverComponent* Cover)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.AssignCoverToBot");

	UINSAIDirector_AssignCoverToBot_Params params;
	params.Bot = Bot;
	params.Cover = Cover;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSAIDirector.AddOrphanedBotsToNearbySquads
// ()
// Parameters:
// bool                           bForceMove                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SearchRadius                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UINSAIDirector::AddOrphanedBotsToNearbySquads(bool bForceMove, float SearchRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSAIDirector.AddOrphanedBotsToNearbySquads");

	UINSAIDirector_AddOrphanedBotsToNearbySquads_Params params;
	params.bForceMove = bForceMove;
	params.SearchRadius = SearchRadius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UINSAIDirector::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(QueryTemplate, UEnvQuery);
	READ_PTR_FULL(NavigationDataPawn, UClass);
	READ_PTR_FULL(Query_FindCover, UEnvQuery);
	READ_PTR_FULL(Query_FindFlank, UEnvQuery);
	READ_PTR_FULL(Query_FindInvestigateLocation, UEnvQuery);
	READ_PTR_FULL(Query_FindInvestigateLocationOnObjective, UEnvQuery);
	READ_PTR_FULL(Query_GenerateSpawnsCloseDestination, UEnvQuery);
	READ_PTR_FULL(Query_GenerateSpawnsSurvival, UEnvQuery);
	READ_PTR_FULL(Query_FindOutdoorLocation, UEnvQuery);
	READ_PTR_FULL(Query_FindLOSLocation, UEnvQuery);
	READ_PTR_FULL(Query_LeaveFire, UEnvQuery);
	READ_PTR_FULL(Query_TacticalPathFollow, UEnvQuery);
	READ_PTR_FULL(EQSProbe, AINSSoldier);
}

void UINSAIDirector::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(QueryTemplate);
	DELE_PTR_FULL(NavigationDataPawn);
	DELE_PTR_FULL(Query_FindCover);
	DELE_PTR_FULL(Query_FindFlank);
	DELE_PTR_FULL(Query_FindInvestigateLocation);
	DELE_PTR_FULL(Query_FindInvestigateLocationOnObjective);
	DELE_PTR_FULL(Query_GenerateSpawnsCloseDestination);
	DELE_PTR_FULL(Query_GenerateSpawnsSurvival);
	DELE_PTR_FULL(Query_FindOutdoorLocation);
	DELE_PTR_FULL(Query_FindLOSLocation);
	DELE_PTR_FULL(Query_LeaveFire);
	DELE_PTR_FULL(Query_TacticalPathFollow);
	DELE_PTR_FULL(EQSProbe);
}

// Function Insurgency.HUDBase.ToggleScoreboard
// ()
void AHUDBase::ToggleScoreboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.ToggleScoreboard");

	AHUDBase_ToggleScoreboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.ToggleCompass
// ()
void AHUDBase::ToggleCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.ToggleCompass");

	AHUDBase_ToggleCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.TextWithShadowClipped
// ()
// Parameters:
// float                          PosX                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosY                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Text                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            TextColor                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AHUDBase::TextWithShadowClipped(float PosX, float PosY, const struct FText& Text, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.TextWithShadowClipped");

	AHUDBase_TextWithShadowClipped_Params params;
	params.PosX = PosX;
	params.PosY = PosY;
	params.Text = Text;
	params.Font = Font;
	params.TextColor = TextColor;
	params.Scale = Scale;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.ShowScoreboard
// ()
void AHUDBase::ShowScoreboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.ShowScoreboard");

	AHUDBase_ShowScoreboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.ShowCompass
// ()
void AHUDBase::ShowCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.ShowCompass");

	AHUDBase_ShowCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.OnRoundOverUIShown
// ()
// Parameters:
// struct FPlayerRoundOverData    UIData                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void AHUDBase::OnRoundOverUIShown(const struct FPlayerRoundOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.OnRoundOverUIShown");

	AHUDBase_OnRoundOverUIShown_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.OnRoundOverUIHidden
// ()
void AHUDBase::OnRoundOverUIHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.OnRoundOverUIHidden");

	AHUDBase_OnRoundOverUIHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.OnMapVoteStarted
// ()
void AHUDBase::OnMapVoteStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.OnMapVoteStarted");

	AHUDBase_OnMapVoteStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.HUDBase.OnCompassToggledByUserDelegate__DelegateSignature
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AHUDBase::OnCompassToggledByUserDelegate__DelegateSignature(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.HUDBase.OnCompassToggledByUserDelegate__DelegateSignature");

	AHUDBase_OnCompassToggledByUserDelegate__DelegateSignature_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.HideScoreboard
// ()
void AHUDBase::HideScoreboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.HideScoreboard");

	AHUDBase_HideScoreboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.HideCompass
// ()
void AHUDBase::HideCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.HideCompass");

	AHUDBase_HideCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.DrawStringWithShadowClipped
// ()
// Parameters:
// float                          PosX                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosY                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InputString                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            TextColor                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AHUDBase::DrawStringWithShadowClipped(float PosX, float PosY, const struct FString& InputString, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.DrawStringWithShadowClipped");

	AHUDBase_DrawStringWithShadowClipped_Params params;
	params.PosX = PosX;
	params.PosY = PosY;
	params.InputString = InputString;
	params.Font = Font;
	params.TextColor = TextColor;
	params.Scale = Scale;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.DebugToggleOverlay
// ()
void AHUDBase::DebugToggleOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.DebugToggleOverlay");

	AHUDBase_DebugToggleOverlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.CreatePlayerScreenWidget
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* AHUDBase::CreatePlayerScreenWidget(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.CreatePlayerScreenWidget");

	AHUDBase_CreatePlayerScreenWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.HUDBase.CreateFullScreenWidget
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UUserWidget* AHUDBase::CreateFullScreenWidget(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.CreateFullScreenWidget");

	AHUDBase_CreateFullScreenWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.HUDBase.BlueprintOnRoundOverUIToggled
// ()
// Parameters:
// bool                           bNowVisible                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AHUDBase::BlueprintOnRoundOverUIToggled(bool bNowVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.BlueprintOnRoundOverUIToggled");

	AHUDBase_BlueprintOnRoundOverUIToggled_Params params;
	params.bNowVisible = bNowVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDBase.BlueprintOnMapVoteStarted
// ()
void AHUDBase::BlueprintOnMapVoteStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDBase.BlueprintOnMapVoteStarted");

	AHUDBase_BlueprintOnMapVoteStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHUDBase::AfterRead()
{
	AHUD::AfterRead();

	READ_PTR_FULL(LoadedScoreboardWidget, UClass);
	READ_PTR_FULL(ScoreboardWidgetInstance, UScoreboardBase);
	READ_PTR_FULL(LoadedDebugOverlayWidget, UClass);
	READ_PTR_FULL(DebugOverlayWidgetInstance, UUserWidget);
}

void AHUDBase::BeforeDelete()
{
	AHUD::BeforeDelete();

	DELE_PTR_FULL(LoadedScoreboardWidget);
	DELE_PTR_FULL(ScoreboardWidgetInstance);
	DELE_PTR_FULL(LoadedDebugOverlayWidget);
	DELE_PTR_FULL(DebugOverlayWidgetInstance);
}

void AINSAIDebugHUD::AfterRead()
{
	AHUDBase::AfterRead();

}

void AINSAIDebugHUD::BeforeDelete()
{
	AHUDBase::BeforeDelete();

}

// Function Insurgency.InGameMenuWidget.OnPanelOpened
// ()
// Parameters:
// EIngameMenuType                DesiredMenu                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIngameMenuEntryState          FromState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UInGameMenuWidget::OnPanelOpened(EIngameMenuType DesiredMenu, EIngameMenuEntryState FromState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InGameMenuWidget.OnPanelOpened");

	UInGameMenuWidget_OnPanelOpened_Params params;
	params.DesiredMenu = DesiredMenu;
	params.FromState = FromState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.InGameMenuWidget.OnHidePanel
// ()
void UInGameMenuWidget::OnHidePanel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.InGameMenuWidget.OnHidePanel");

	UInGameMenuWidget_OnHidePanel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UInGameMenuWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UInGameMenuWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.HUDReplay.ToggleControls
// ()
void AHUDReplay::ToggleControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDReplay.ToggleControls");

	AHUDReplay_ToggleControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDReplay.ShowControls
// ()
void AHUDReplay::ShowControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDReplay.ShowControls");

	AHUDReplay_ShowControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Insurgency.HUDReplay.ReplayControlsToggled__DelegateSignature
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AHUDReplay::ReplayControlsToggled__DelegateSignature(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Insurgency.HUDReplay.ReplayControlsToggled__DelegateSignature");

	AHUDReplay_ReplayControlsToggled__DelegateSignature_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDReplay.HideControls
// ()
void AHUDReplay::HideControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDReplay.HideControls");

	AHUDReplay_HideControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHUDReplay::AfterRead()
{
	AHUD::AfterRead();

	READ_PTR_FULL(ReplayUI, UUserWidget);
	READ_PTR_FULL(ReplayUIClass, UClass);
}

void AHUDReplay::BeforeDelete()
{
	AHUD::BeforeDelete();

	DELE_PTR_FULL(ReplayUI);
	DELE_PTR_FULL(ReplayUIClass);
}

// Function Insurgency.HUDMultiplayer.StartTeamChatInput
// ()
void AHUDMultiplayer::StartTeamChatInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDMultiplayer.StartTeamChatInput");

	AHUDMultiplayer_StartTeamChatInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDMultiplayer.StartGlobalChatInput
// ()
void AHUDMultiplayer::StartGlobalChatInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDMultiplayer.StartGlobalChatInput");

	AHUDMultiplayer_StartGlobalChatInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDMultiplayer.StartChatInput
// ()
// Parameters:
// bool                           bTeamOnly                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AHUDMultiplayer::StartChatInput(bool bTeamOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDMultiplayer.StartChatInput");

	AHUDMultiplayer_StartChatInput_Params params;
	params.bTeamOnly = bTeamOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHUDMultiplayer::AfterRead()
{
	AHUDBase::AfterRead();

	READ_PTR_FULL(LoadedChatBoxWidgetClass, UClass);
	READ_PTR_FULL(ChatBoxWidget, UChatBox);
	READ_PTR_FULL(PlayerTargetFont, UFont);
	READ_PTR_FULL(DefaultPlayerIcon, UTexture2D);
}

void AHUDMultiplayer::BeforeDelete()
{
	AHUDBase::BeforeDelete();

	DELE_PTR_FULL(LoadedChatBoxWidgetClass);
	DELE_PTR_FULL(ChatBoxWidget);
	DELE_PTR_FULL(PlayerTargetFont);
	DELE_PTR_FULL(DefaultPlayerIcon);
}

// Function Insurgency.HUDContextualHintContainer.UsingControllerUpdate
// ()
// Parameters:
// bool                           bUsingController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EeInputIconType                NewIconType                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::UsingControllerUpdate(bool bUsingController, EeInputIconType NewIconType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.UsingControllerUpdate");

	UHUDContextualHintContainer_UsingControllerUpdate_Params params;
	params.bUsingController = bUsingController;
	params.NewIconType = NewIconType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.UpdateHintClassImage
// ()
// Parameters:
// class UPlayerClass*            PlayerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::UpdateHintClassImage(class UPlayerClass* PlayerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.UpdateHintClassImage");

	UHUDContextualHintContainer_UpdateHintClassImage_Params params;
	params.PlayerClass = PlayerClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.UpdateChildrenVisibility
// ()
void UHUDContextualHintContainer::UpdateChildrenVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.UpdateChildrenVisibility");

	UHUDContextualHintContainer_UpdateChildrenVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.ShowHints
// ()
void UHUDContextualHintContainer::ShowHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.ShowHints");

	UHUDContextualHintContainer_ShowHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.SetAllowResupply
// ()
// Parameters:
// bool                           bNewCanResupply                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::SetAllowResupply(bool bNewCanResupply)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.SetAllowResupply");

	UHUDContextualHintContainer_SetAllowResupply_Params params;
	params.bNewCanResupply = bNewCanResupply;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.OnSoldierSpawned
// ()
void UHUDContextualHintContainer::OnSoldierSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.OnSoldierSpawned");

	UHUDContextualHintContainer_OnSoldierSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.OnResupplied
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::OnResupplied(class AINSSoldier* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.OnResupplied");

	UHUDContextualHintContainer_OnResupplied_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.OnItemAddedToInventory
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemBase*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::OnItemAddedToInventory(class AINSSoldier* Soldier, class AItemBase* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.OnItemAddedToInventory");

	UHUDContextualHintContainer_OnItemAddedToInventory_Params params;
	params.Soldier = Soldier;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.OnInventoryChanged
// ()
void UHUDContextualHintContainer::OnInventoryChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.OnInventoryChanged");

	UHUDContextualHintContainer_OnInventoryChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.OnChangedWeapon
// ()
// Parameters:
// class AItemEquipable*          NewItem                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          PreviousItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::OnChangedWeapon(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.OnChangedWeapon");

	UHUDContextualHintContainer_OnChangedWeapon_Params params;
	params.NewItem = NewItem;
	params.PreviousItem = PreviousItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.HideHints
// ()
void UHUDContextualHintContainer::HideHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.HideHints");

	UHUDContextualHintContainer_HideHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDContextualHintContainer.GetFadeOutAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWidgetAnimation* UHUDContextualHintContainer::GetFadeOutAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.GetFadeOutAnimation");

	UHUDContextualHintContainer_GetFadeOutAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.HUDContextualHintContainer.GetFadeInAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWidgetAnimation* UHUDContextualHintContainer::GetFadeInAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.GetFadeInAnimation");

	UHUDContextualHintContainer_GetFadeInAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.HUDContextualHintContainer.GetAssets
// ()
// Parameters:
// EAssetName                     AssetName                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FChildAsset             Asset                          (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UHUDContextualHintContainer::GetAssets(EAssetName AssetName, struct FChildAsset* Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDContextualHintContainer.GetAssets");

	UHUDContextualHintContainer_GetAssets_Params params;
	params.AssetName = AssetName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Asset != nullptr)
		*Asset = params.Asset;

}


void UHUDContextualHintContainer::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(FadeOutAnimation, UWidgetAnimation);
	READ_PTR_FULL(FadeInAnimation, UWidgetAnimation);
}

void UHUDContextualHintContainer::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(FadeOutAnimation);
	DELE_PTR_FULL(FadeInAnimation);
}

// Function Insurgency.HUDWidgetInterface.OnRoundOverUIToggled
// ()
// Parameters:
// bool                           bNowVisible                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UHUDWidgetInterface::OnRoundOverUIToggled(bool bNowVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDWidgetInterface.OnRoundOverUIToggled");

	UHUDWidgetInterface_OnRoundOverUIToggled_Params params;
	params.bNowVisible = bNowVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.HUDWidgetInterface.OnMapVoteStarted
// ()
void UHUDWidgetInterface::OnMapVoteStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.HUDWidgetInterface.OnMapVoteStarted");

	UHUDWidgetInterface_OnMapVoteStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHUDWidgetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHUDWidgetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHelicopterPathFollowingComponent::AfterRead()
{
	UPathFollowingComponent::AfterRead();

}

void UHelicopterPathFollowingComponent::BeforeDelete()
{
	UPathFollowingComponent::BeforeDelete();

}

void AHelicopterNavTarget::AfterRead()
{
	ATargetPoint::AfterRead();

}

void AHelicopterNavTarget::BeforeDelete()
{
	ATargetPoint::BeforeDelete();

}

void UHelicopterMovementComponent::AfterRead()
{
	UPawnMovementComponent::AfterRead();

}

void UHelicopterMovementComponent::BeforeDelete()
{
	UPawnMovementComponent::BeforeDelete();

}

// Function Insurgency.GetMotdProxy.GetMotd
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInForNewsPopup                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetMotdProxy*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UGetMotdProxy* UGetMotdProxy::GetMotd(class UObject* WorldContextObject, bool bInForNewsPopup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GetMotdProxy.GetMotd");

	UGetMotdProxy_GetMotd_Params params;
	params.WorldContextObject = WorldContextObject;
	params.bInForNewsPopup = bInForNewsPopup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGetMotdProxy::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void UGetMotdProxy::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

// Function Insurgency.GetBannerProxy.GetBanner
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetBannerProxy*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UGetBannerProxy* UGetBannerProxy::GetBanner(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GetBannerProxy.GetBanner");

	UGetBannerProxy_GetBanner_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGetBannerProxy::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void UGetBannerProxy::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

// Function Insurgency.GenericDialogWidget.BP_OpeningVirtualKeyboard
// ()
void UGenericDialogWidget::BP_OpeningVirtualKeyboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GenericDialogWidget.BP_OpeningVirtualKeyboard");

	UGenericDialogWidget_BP_OpeningVirtualKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GenericDialogWidget.BP_ClosingVirtualKeyboard
// ()
void UGenericDialogWidget::BP_ClosingVirtualKeyboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GenericDialogWidget.BP_ClosingVirtualKeyboard");

	UGenericDialogWidget_BP_ClosingVirtualKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGenericDialogWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UGenericDialogWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.GameUIStatics.TransformToScreen
// ()
// Parameters:
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InWorldLocation                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               OutScreenLocation              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutFrontDot                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutRightDot                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutDistance                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsOnScreen                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::TransformToScreen(class APlayerController* Controller, class UUserWidget* Widget, const struct FVector& InWorldLocation, struct FVector2D* OutScreenLocation, float* OutFrontDot, float* OutRightDot, float* OutDistance, bool* bIsOnScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.TransformToScreen");

	UGameUIStatics_TransformToScreen_Params params;
	params.Controller = Controller;
	params.Widget = Widget;
	params.InWorldLocation = InWorldLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutScreenLocation != nullptr)
		*OutScreenLocation = params.OutScreenLocation;
	if (OutFrontDot != nullptr)
		*OutFrontDot = params.OutFrontDot;
	if (OutRightDot != nullptr)
		*OutRightDot = params.OutRightDot;
	if (OutDistance != nullptr)
		*OutDistance = params.OutDistance;
	if (bIsOnScreen != nullptr)
		*bIsOnScreen = params.bIsOnScreen;

}


// Function Insurgency.GameUIStatics.ReplaceKeyWithLessonMarkup
// ()
// Parameters:
// struct FText                   InText                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FLessonInputAction> Actions                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutText                        (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::ReplaceKeyWithLessonMarkup(const struct FText& InText, TArray<struct FLessonInputAction> Actions, struct FText* OutText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.ReplaceKeyWithLessonMarkup");

	UGameUIStatics_ReplaceKeyWithLessonMarkup_Params params;
	params.InText = InText;
	params.Actions = Actions;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutText != nullptr)
		*OutText = params.OutText;

}


// Function Insurgency.GameUIStatics.OpenURLInOverlay
// ()
// Parameters:
// struct FString                 URL                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::OpenURLInOverlay(const struct FString& URL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.OpenURLInOverlay");

	UGameUIStatics_OpenURLInOverlay_Params params;
	params.URL = URL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameUIStatics.OpenPlatformProfileForPlayer
// ()
// Parameters:
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::OpenPlatformProfileForPlayer(class APlayerController* Controller, class APlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.OpenPlatformProfileForPlayer");

	UGameUIStatics_OpenPlatformProfileForPlayer_Params params;
	params.Controller = Controller;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameUIStatics.IsModSupportedPlatform
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameUIStatics::IsModSupportedPlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.IsModSupportedPlatform");

	UGameUIStatics_IsModSupportedPlatform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.IsDeveloperPlayingLocal
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameUIStatics::IsDeveloperPlayingLocal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.IsDeveloperPlayingLocal");

	UGameUIStatics_IsDeveloperPlayingLocal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetUseTimeoutsForUseActor
// ()
// Parameters:
// class AActor*                  UsableActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PrimaryUseTimeoutFrac          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SecondaryUseTimeoutFrac        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::GetUseTimeoutsForUseActor(class AActor* UsableActor, class AINSSoldier* Pawn, float* PrimaryUseTimeoutFrac, float* SecondaryUseTimeoutFrac)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetUseTimeoutsForUseActor");

	UGameUIStatics_GetUseTimeoutsForUseActor_Params params;
	params.UsableActor = UsableActor;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PrimaryUseTimeoutFrac != nullptr)
		*PrimaryUseTimeoutFrac = params.PrimaryUseTimeoutFrac;
	if (SecondaryUseTimeoutFrac != nullptr)
		*SecondaryUseTimeoutFrac = params.SecondaryUseTimeoutFrac;

}


// Function Insurgency.GameUIStatics.GetUserRequestedLanguage
// ()
// Parameters:
// struct FString                 OutRawRequestedLang            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           OutHasUsedFallback             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UGameUIStatics::GetUserRequestedLanguage(struct FString* OutRawRequestedLang, bool* OutHasUsedFallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetUserRequestedLanguage");

	UGameUIStatics_GetUserRequestedLanguage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutRawRequestedLang != nullptr)
		*OutRawRequestedLang = params.OutRawRequestedLang;
	if (OutHasUsedFallback != nullptr)
		*OutHasUsedFallback = params.OutHasUsedFallback;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetUseMessage
// ()
// Parameters:
// class AActor*                  UsableActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              UseHitResult                   (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bInProgress                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutPrimaryText                 (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FText                   OutSubText                     (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetUseMessage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, struct FText* OutPrimaryText, struct FText* OutSubText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetUseMessage");

	UGameUIStatics_GetUseMessage_Params params;
	params.UsableActor = UsableActor;
	params.Controller = Controller;
	params.UseHitResult = UseHitResult;
	params.bInProgress = bInProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPrimaryText != nullptr)
		*OutPrimaryText = params.OutPrimaryText;
	if (OutSubText != nullptr)
		*OutSubText = params.OutSubText;

}


// Function Insurgency.GameUIStatics.GetUseImage
// ()
// Parameters:
// class AActor*                  UsableActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              UseHitResult                   (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bInProgress                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutAdditionalText              (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* UGameUIStatics::GetUseImage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, struct FText* OutAdditionalText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetUseImage");

	UGameUIStatics_GetUseImage_Params params;
	params.UsableActor = UsableActor;
	params.Controller = Controller;
	params.UseHitResult = UseHitResult;
	params.bInProgress = bInProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAdditionalText != nullptr)
		*OutAdditionalText = params.OutAdditionalText;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetUseAction
// ()
// Parameters:
// class AActor*                  UsableActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   PrimaryUseAction               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           SubUseActions                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::GetUseAction(class AActor* UsableActor, struct FName* PrimaryUseAction, TArray<struct FName>* SubUseActions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetUseAction");

	UGameUIStatics_GetUseAction_Params params;
	params.UsableActor = UsableActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PrimaryUseAction != nullptr)
		*PrimaryUseAction = params.PrimaryUseAction;
	if (SubUseActions != nullptr)
		*SubUseActions = params.SubUseActions;

}


// Function Insurgency.GameUIStatics.GetSubUseImage
// ()
// Parameters:
// class AActor*                  UsableActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              UseHitResult                   (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bInProgress                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutAdditionalText              (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* UGameUIStatics::GetSubUseImage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, struct FText* OutAdditionalText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetSubUseImage");

	UGameUIStatics_GetSubUseImage_Params params;
	params.UsableActor = UsableActor;
	params.Controller = Controller;
	params.UseHitResult = UseHitResult;
	params.bInProgress = bInProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAdditionalText != nullptr)
		*OutAdditionalText = params.OutAdditionalText;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetRadialOffsetForSize
// ()
// Parameters:
// float                          Spacing                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERadialMenuDirection           Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Options                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D UGameUIStatics::GetRadialOffsetForSize(float Spacing, float Width, float Height, ERadialMenuDirection Direction, int Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetRadialOffsetForSize");

	UGameUIStatics_GetRadialOffsetForSize_Params params;
	params.Spacing = Spacing;
	params.Width = Width;
	params.Height = Height;
	params.Direction = Direction;
	params.Options = Options;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetRadialOffset
// ()
// Parameters:
// float                          Spacing                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERadialMenuDirection           Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Options                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D UGameUIStatics::GetRadialOffset(float Spacing, ERadialMenuDirection Direction, int Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetRadialOffset");

	UGameUIStatics_GetRadialOffset_Params params;
	params.Spacing = Spacing;
	params.Direction = Direction;
	params.Options = Options;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetPreferredFileSizeUnit
// ()
// Parameters:
// int64_t                        SizeInBytes                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFileSizeUnit                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EFileSizeUnit UGameUIStatics::GetPreferredFileSizeUnit(int64_t SizeInBytes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetPreferredFileSizeUnit");

	UGameUIStatics_GetPreferredFileSizeUnit_Params params;
	params.SizeInBytes = SizeInBytes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetOtherEarnedTaglineDescription
// ()
// Parameters:
// struct FOtherPlayerAwardedTagline EarnedTagline                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FText                   OutDescription                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetOtherEarnedTaglineDescription(const struct FOtherPlayerAwardedTagline& EarnedTagline, struct FText* OutDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetOtherEarnedTaglineDescription");

	UGameUIStatics_GetOtherEarnedTaglineDescription_Params params;
	params.EarnedTagline = EarnedTagline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDescription != nullptr)
		*OutDescription = params.OutDescription;

}


// Function Insurgency.GameUIStatics.GetObjectPrintName
// ()
// Parameters:
// class UObject*                 InObject                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutPrintName                   (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetObjectPrintName(class UObject* InObject, struct FText* OutPrintName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetObjectPrintName");

	UGameUIStatics_GetObjectPrintName_Params params;
	params.InObject = InObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPrintName != nullptr)
		*OutPrintName = params.OutPrintName;

}


// Function Insurgency.GameUIStatics.GetObjectivePhonetic
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetObjectivePhonetic(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetObjectivePhonetic");

	UGameUIStatics_GetObjectivePhonetic_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetObjectiveLetter
// ()
// Parameters:
// unsigned char                  ObjectiveId                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetObjectiveLetter(unsigned char ObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetObjectiveLetter");

	UGameUIStatics_GetObjectiveLetter_Params params;
	params.ObjectiveId = ObjectiveId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetLocalizedWeaponUpgradeSlot
// ()
// Parameters:
// EWeaponUpgradeSlot             WeaponUpgradeSlot              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutPrintName                   (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedWeaponUpgradeSlot(EWeaponUpgradeSlot WeaponUpgradeSlot, struct FText* OutPrintName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedWeaponUpgradeSlot");

	UGameUIStatics_GetLocalizedWeaponUpgradeSlot_Params params;
	params.WeaponUpgradeSlot = WeaponUpgradeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPrintName != nullptr)
		*OutPrintName = params.OutPrintName;

}


// Function Insurgency.GameUIStatics.GetLocalizedWeaponName
// ()
// Parameters:
// struct FString                 OriginalWeaponName             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutLocalizedWeaponName         (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedWeaponName(const struct FString& OriginalWeaponName, struct FText* OutLocalizedWeaponName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedWeaponName");

	UGameUIStatics_GetLocalizedWeaponName_Params params;
	params.OriginalWeaponName = OriginalWeaponName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocalizedWeaponName != nullptr)
		*OutLocalizedWeaponName = params.OutLocalizedWeaponName;

}


// Function Insurgency.GameUIStatics.GetLocalizedScenarioName
// ()
// Parameters:
// struct FString                 OriginalScenarioName           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutScenarioNameText            (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedScenarioName(const struct FString& OriginalScenarioName, struct FText* OutScenarioNameText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedScenarioName");

	UGameUIStatics_GetLocalizedScenarioName_Params params;
	params.OriginalScenarioName = OriginalScenarioName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutScenarioNameText != nullptr)
		*OutScenarioNameText = params.OutScenarioNameText;

}


// Function Insurgency.GameUIStatics.GetLocalizedMapName
// ()
// Parameters:
// struct FString                 OriginalMapName                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutMapNameText                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedMapName(const struct FString& OriginalMapName, struct FText* OutMapNameText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedMapName");

	UGameUIStatics_GetLocalizedMapName_Params params;
	params.OriginalMapName = OriginalMapName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapNameText != nullptr)
		*OutMapNameText = params.OutMapNameText;

}


// Function Insurgency.GameUIStatics.GetLocalizedItemSubSlot
// ()
// Parameters:
// EItemSlot                      ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutPrintName                   (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedItemSubSlot(EItemSlot ItemSlot, int SubSlot, struct FText* OutPrintName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedItemSubSlot");

	UGameUIStatics_GetLocalizedItemSubSlot_Params params;
	params.ItemSlot = ItemSlot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPrintName != nullptr)
		*OutPrintName = params.OutPrintName;

}


// Function Insurgency.GameUIStatics.GetLocalizedItemSlot
// ()
// Parameters:
// EItemSlot                      ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutPrintName                   (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedItemSlot(EItemSlot ItemSlot, struct FText* OutPrintName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedItemSlot");

	UGameUIStatics_GetLocalizedItemSlot_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPrintName != nullptr)
		*OutPrintName = params.OutPrintName;

}


// Function Insurgency.GameUIStatics.GetLocalizedCompassHeading
// ()
// Parameters:
// ECardinalDirection             Direction                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAbbreviated                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutHeading                     (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetLocalizedCompassHeading(ECardinalDirection Direction, bool bAbbreviated, struct FText* OutHeading)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetLocalizedCompassHeading");

	UGameUIStatics_GetLocalizedCompassHeading_Params params;
	params.Direction = Direction;
	params.bAbbreviated = bAbbreviated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHeading != nullptr)
		*OutHeading = params.OutHeading;

}


// Function Insurgency.GameUIStatics.GetItemIcon
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* UGameUIStatics::GetItemIcon(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetItemIcon");

	UGameUIStatics_GetItemIcon_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetFormattedShorthandTimespan
// ()
// Parameters:
// struct FTimespan               InputTimespan                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetFormattedShorthandTimespan(const struct FTimespan& InputTimespan)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedShorthandTimespan");

	UGameUIStatics_GetFormattedShorthandTimespan_Params params;
	params.InputTimespan = InputTimespan;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetFormattedObjectiveName
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOverrideFactionColor          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  FactionOverride                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetFormattedObjectiveName(class AObjectiveBase* Objective, bool bOverrideFactionColor, unsigned char FactionOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedObjectiveName");

	UGameUIStatics_GetFormattedObjectiveName_Params params;
	params.Objective = Objective;
	params.bOverrideFactionColor = bOverrideFactionColor;
	params.FactionOverride = FactionOverride;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetFormattedFileSizeInUnits
// ()
// Parameters:
// int64_t                        SizeInBytes                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFileSizeUnit                  FileSizeUnit                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetFormattedFileSizeInUnits(int64_t SizeInBytes, EFileSizeUnit FileSizeUnit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedFileSizeInUnits");

	UGameUIStatics_GetFormattedFileSizeInUnits_Params params;
	params.SizeInBytes = SizeInBytes;
	params.FileSizeUnit = FileSizeUnit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetFormattedFileSize
// ()
// Parameters:
// int64_t                        SizeInBytes                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetFormattedFileSize(int64_t SizeInBytes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedFileSize");

	UGameUIStatics_GetFormattedFileSize_Params params;
	params.SizeInBytes = SizeInBytes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetFormattedDistanceMetersTwoPoints
// ()
// Parameters:
// struct FText                   OutDistanceText                (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FVector                 PointA                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 PointB                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShowDecimal                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::GetFormattedDistanceMetersTwoPoints(struct FText* OutDistanceText, const struct FVector& PointA, const struct FVector& PointB, bool bShowDecimal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedDistanceMetersTwoPoints");

	UGameUIStatics_GetFormattedDistanceMetersTwoPoints_Params params;
	params.PointA = PointA;
	params.PointB = PointB;
	params.bShowDecimal = bShowDecimal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDistanceText != nullptr)
		*OutDistanceText = params.OutDistanceText;

}


// Function Insurgency.GameUIStatics.GetFormattedDistanceMetersKilometers
// ()
// Parameters:
// int                            Meters                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UGameUIStatics::GetFormattedDistanceMetersKilometers(int Meters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedDistanceMetersKilometers");

	UGameUIStatics_GetFormattedDistanceMetersKilometers_Params params;
	params.Meters = Meters;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetFormattedDistanceMeters
// ()
// Parameters:
// struct FText                   OutDistanceText                (Parm, OutParm, NativeAccessSpecifierPublic)
// float                          DistanceInUnits                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShowDecimal                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::GetFormattedDistanceMeters(struct FText* OutDistanceText, float DistanceInUnits, bool bShowDecimal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFormattedDistanceMeters");

	UGameUIStatics_GetFormattedDistanceMeters_Params params;
	params.DistanceInUnits = DistanceInUnits;
	params.bShowDecimal = bShowDecimal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDistanceText != nullptr)
		*OutDistanceText = params.OutDistanceText;

}


// Function Insurgency.GameUIStatics.GetFilteredRadialResponseForPlayer
// ()
// Parameters:
// class AINSSoldier*             Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRadialCommand          InCommand                      (Parm, NativeAccessSpecifierPublic)
// ECharacterResponse             OutResponse                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::GetFilteredRadialResponseForPlayer(class AINSSoldier* Player, const struct FRadialCommand& InCommand, ECharacterResponse* OutResponse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetFilteredRadialResponseForPlayer");

	UGameUIStatics_GetFilteredRadialResponseForPlayer_Params params;
	params.Player = Player;
	params.InCommand = InCommand;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResponse != nullptr)
		*OutResponse = params.OutResponse;

}


// Function Insurgency.GameUIStatics.GetEarnedTaglineDescription
// ()
// Parameters:
// struct FPlayerAwardedTagline   EarnedTagline                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FText                   OutDescription                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetEarnedTaglineDescription(const struct FPlayerAwardedTagline& EarnedTagline, struct FText* OutDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetEarnedTaglineDescription");

	UGameUIStatics_GetEarnedTaglineDescription_Params params;
	params.EarnedTagline = EarnedTagline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDescription != nullptr)
		*OutDescription = params.OutDescription;

}


// Function Insurgency.GameUIStatics.GetDeathDescriptionFromKillNotice
// ()
// Parameters:
// struct FPlayerKillNotice       KillNotice                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FText                   OutDescription                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetDeathDescriptionFromKillNotice(const struct FPlayerKillNotice& KillNotice, struct FText* OutDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetDeathDescriptionFromKillNotice");

	UGameUIStatics_GetDeathDescriptionFromKillNotice_Params params;
	params.KillNotice = KillNotice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDescription != nullptr)
		*OutDescription = params.OutDescription;

}


// Function Insurgency.GameUIStatics.GetDeathDescription
// ()
// Parameters:
// class UClass*                  CauserActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutDescription                 (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetDeathDescription(class UClass* CauserActor, class UClass* DamageType, struct FText* OutDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetDeathDescription");

	UGameUIStatics_GetDeathDescription_Params params;
	params.CauserActor = CauserActor;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDescription != nullptr)
		*OutDescription = params.OutDescription;

}


// Function Insurgency.GameUIStatics.GetCompassAngle
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          YawAngle                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UGameUIStatics::GetCompassAngle(class UObject* WorldContextObject, float YawAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetCompassAngle");

	UGameUIStatics_GetCompassAngle_Params params;
	params.WorldContextObject = WorldContextObject;
	params.YawAngle = YawAngle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetClipboardContents
// ()
// Parameters:
// struct FString                 OutClipboardContents           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::GetClipboardContents(struct FString* OutClipboardContents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetClipboardContents");

	UGameUIStatics_GetClipboardContents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutClipboardContents != nullptr)
		*OutClipboardContents = params.OutClipboardContents;

}


// Function Insurgency.GameUIStatics.GetClassPrintName
// ()
// Parameters:
// class UClass*                  InClass                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutPrintName                   (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::GetClassPrintName(class UClass* InClass, struct FText* OutPrintName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetClassPrintName");

	UGameUIStatics_GetClassPrintName_Params params;
	params.InClass = InClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPrintName != nullptr)
		*OutPrintName = params.OutPrintName;

}


// Function Insurgency.GameUIStatics.GetCardinalFromYaw
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          YawAngle                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECardinalDirection             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECardinalDirection UGameUIStatics::GetCardinalFromYaw(class UObject* WorldContextObject, float YawAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetCardinalFromYaw");

	UGameUIStatics_GetCardinalFromYaw_Params params;
	params.WorldContextObject = WorldContextObject;
	params.YawAngle = YawAngle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetCardinalFromRotator
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ECardinalDirection             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECardinalDirection UGameUIStatics::GetCardinalFromRotator(class UObject* WorldContextObject, const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetCardinalFromRotator");

	UGameUIStatics_GetCardinalFromRotator_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.GetAccountNickname
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UGameUIStatics::GetAccountNickname(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.GetAccountNickname");

	UGameUIStatics_GetAccountNickname_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.FormatTextFromParameterPairs
// ()
// Parameters:
// struct FText                   InFormat                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<struct FString, struct FText> InFormatPairs                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   OutText                        (Parm, OutParm, NativeAccessSpecifierPublic)
void UGameUIStatics::FormatTextFromParameterPairs(const struct FText& InFormat, TMap<struct FString, struct FText> InFormatPairs, struct FText* OutText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.FormatTextFromParameterPairs");

	UGameUIStatics_FormatTextFromParameterPairs_Params params;
	params.InFormat = InFormat;
	params.InFormatPairs = InFormatPairs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutText != nullptr)
		*OutText = params.OutText;

}


// Function Insurgency.GameUIStatics.DateTimeFromUnixTimestamp
// ()
// Parameters:
// int64_t                        UnixTimeStamp                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FDateTime UGameUIStatics::DateTimeFromUnixTimestamp(int64_t UnixTimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.DateTimeFromUnixTimestamp");

	UGameUIStatics_DateTimeFromUnixTimestamp_Params params;
	params.UnixTimeStamp = UnixTimeStamp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameUIStatics.CopyTextToClipboard
// ()
// Parameters:
// struct FText                   CopyText                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UGameUIStatics::CopyTextToClipboard(const struct FText& CopyText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.CopyTextToClipboard");

	UGameUIStatics_CopyTextToClipboard_Params params;
	params.CopyText = CopyText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameUIStatics.CopyStringToClipboard
// ()
// Parameters:
// struct FString                 CopyString                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::CopyStringToClipboard(const struct FString& CopyString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.CopyStringToClipboard");

	UGameUIStatics_CopyStringToClipboard_Params params;
	params.CopyString = CopyString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameUIStatics.CenterViewportCursor
// ()
// Parameters:
// class APlayerController*       PlayerController               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameUIStatics::CenterViewportCursor(class APlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameUIStatics.CenterViewportCursor");

	UGameUIStatics_CenterViewportCursor_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGameUIStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UGameUIStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UGameUIData::AfterRead()
{
	UObject::AfterRead();

}

void UGameUIData::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.GameplayEffectsStatics.HasPlayerInRange
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Tolerance                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 TestLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameplayEffectsStatics::HasPlayerInRange(class UObject* WorldContextObject, float Tolerance, const struct FVector& TestLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameplayEffectsStatics.HasPlayerInRange");

	UGameplayEffectsStatics_HasPlayerInRange_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Tolerance = Tolerance;
	params.TestLocation = TestLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGameplayEffectsStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UGameplayEffectsStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.GameInputStatics.IsValidKey
// ()
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameInputStatics::IsValidKey(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.IsValidKey");

	UGameInputStatics_IsValidKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.IsKeyBoundToAction
// ()
// Parameters:
// struct FName                   Action                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    Key                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameInputStatics::IsKeyBoundToAction(const struct FName& Action, const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.IsKeyBoundToAction");

	UGameInputStatics_IsKeyBoundToAction_Params params;
	params.Action = Action;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.GetAxisKeyMappingSource
// ()
// Parameters:
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputAxisKeyMapping> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FInputAxisKeyMapping> UGameInputStatics::GetAxisKeyMappingSource(class UINSPlayerLocalProfile* LocalProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.GetAxisKeyMappingSource");

	UGameInputStatics_GetAxisKeyMappingSource_Params params;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.GetAllKeysBoundToGamepad
// ()
// Parameters:
// struct FName                   ActionOrAxis                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsAxis                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AxisScale                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>            Keys                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameInputStatics::GetAllKeysBoundToGamepad(const struct FName& ActionOrAxis, bool bIsAxis, float AxisScale, bool bGamepad, class UINSPlayerLocalProfile* LocalProfile, TArray<struct FKey>* Keys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.GetAllKeysBoundToGamepad");

	UGameInputStatics_GetAllKeysBoundToGamepad_Params params;
	params.ActionOrAxis = ActionOrAxis;
	params.bIsAxis = bIsAxis;
	params.AxisScale = AxisScale;
	params.bGamepad = bGamepad;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.GetAllKeysBoundToAxis
// ()
// Parameters:
// struct FName                   Axis                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>            Keys                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameInputStatics::GetAllKeysBoundToAxis(const struct FName& Axis, float Scale, TArray<struct FKey>* Keys, class UINSPlayerLocalProfile* LocalProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.GetAllKeysBoundToAxis");

	UGameInputStatics_GetAllKeysBoundToAxis_Params params;
	params.Axis = Axis;
	params.Scale = Scale;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.GetAllKeysBoundToAction
// ()
// Parameters:
// struct FName                   Action                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>            Keys                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameInputStatics::GetAllKeysBoundToAction(const struct FName& Action, TArray<struct FKey>* Keys, class UINSPlayerLocalProfile* LocalProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.GetAllKeysBoundToAction");

	UGameInputStatics_GetAllKeysBoundToAction_Params params;
	params.Action = Action;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.GetAllKeysBoundTo
// ()
// Parameters:
// struct FName                   ActionOrAxis                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsAxis                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AxisScale                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>            Keys                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameInputStatics::GetAllKeysBoundTo(const struct FName& ActionOrAxis, bool bIsAxis, float AxisScale, class UINSPlayerLocalProfile* LocalProfile, TArray<struct FKey>* Keys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.GetAllKeysBoundTo");

	UGameInputStatics_GetAllKeysBoundTo_Params params;
	params.ActionOrAxis = ActionOrAxis;
	params.bIsAxis = bIsAxis;
	params.AxisScale = AxisScale;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.GetActionKeyMappingSource
// ()
// Parameters:
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<struct FInputActionKeyMapping> UGameInputStatics::GetActionKeyMappingSource(class UINSPlayerLocalProfile* LocalProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.GetActionKeyMappingSource");

	UGameInputStatics_GetActionKeyMappingSource_Params params;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.FindKeyBoundToAxis
// ()
// Parameters:
// struct FName                   Axis                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    ReturnValue                    (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FKey UGameInputStatics::FindKeyBoundToAxis(const struct FName& Axis, float Scale, class UINSPlayerLocalProfile* LocalProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.FindKeyBoundToAxis");

	UGameInputStatics_FindKeyBoundToAxis_Params params;
	params.Axis = Axis;
	params.Scale = Scale;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameInputStatics.FindKeyBoundToAction
// ()
// Parameters:
// struct FName                   Action                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSPlayerLocalProfile*  LocalProfile                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    ReturnValue                    (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FKey UGameInputStatics::FindKeyBoundToAction(const struct FName& Action, class UINSPlayerLocalProfile* LocalProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameInputStatics.FindKeyBoundToAction");

	UGameInputStatics_FindKeyBoundToAction_Params params;
	params.Action = Action;
	params.LocalProfile = LocalProfile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGameInputStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UGameInputStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.GameHUD.UpdateScoreboardActive
// ()
// Parameters:
// bool                           newScoreboardVisible           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::UpdateScoreboardActive(bool newScoreboardVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.UpdateScoreboardActive");

	UGameHUD_UpdateScoreboardActive_Params params;
	params.newScoreboardVisible = newScoreboardVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.UpdatePostRoundState
// ()
void UGameHUD::UpdatePostRoundState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.UpdatePostRoundState");

	UGameHUD_UpdatePostRoundState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.UpdateMenuOpen
// ()
// Parameters:
// bool                           newMenuOpen                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::UpdateMenuOpen(bool newMenuOpen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.UpdateMenuOpen");

	UGameHUD_UpdateMenuOpen_Params params;
	params.newMenuOpen = newMenuOpen;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.UpdateElementAlpha
// ()
void UGameHUD::UpdateElementAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.UpdateElementAlpha");

	UGameHUD_UpdateElementAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.TookDamage
// ()
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitSource                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::TookDamage(float Damage, class AINSSoldier* Target, const struct FVector& HitSource, const struct FVector& HitDirection, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.TookDamage");

	UGameHUD_TookDamage_Params params;
	params.Damage = Damage;
	params.Target = Target;
	params.HitSource = HitSource;
	params.HitDirection = HitDirection;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.ToggleResupplyVisibility
// ()
// Parameters:
// bool                           bNewVisibility                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::ToggleResupplyVisibility(bool bNewVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.ToggleResupplyVisibility");

	UGameHUD_ToggleResupplyVisibility_Params params;
	params.bNewVisibility = bNewVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.SetHasAlivePawn
// ()
// Parameters:
// bool                           newAlivePawn                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::SetHasAlivePawn(bool newAlivePawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.SetHasAlivePawn");

	UGameHUD_SetHasAlivePawn_Params params;
	params.newAlivePawn = newAlivePawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnRoundReset
// ()
void UGameHUD::OnRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnRoundReset");

	UGameHUD_OnRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnRoundOver
// ()
// Parameters:
// struct FPlayerRoundOverData    UIData                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UGameHUD::OnRoundOver(const struct FPlayerRoundOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnRoundOver");

	UGameHUD_OnRoundOver_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnQueueObjectiveBriefing
// ()
void UGameHUD::OnQueueObjectiveBriefing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnQueueObjectiveBriefing");

	UGameHUD_OnQueueObjectiveBriefing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnPauseStateChanged
// ()
// Parameters:
// bool                           newPauseState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::OnPauseStateChanged(bool newPauseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnPauseStateChanged");

	UGameHUD_OnPauseStateChanged_Params params;
	params.newPauseState = newPauseState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnMatchStateUpdate
// ()
// Parameters:
// struct FName                   NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::OnMatchStateUpdate(const struct FName& NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnMatchStateUpdate");

	UGameHUD_OnMatchStateUpdate_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnExitSpawnZone
// ()
void UGameHUD::OnExitSpawnZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnExitSpawnZone");

	UGameHUD_OnExitSpawnZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.OnEquipableItemChanged
// ()
// Parameters:
// class AItemEquipable*          NewItem                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          PreviousItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UGameHUD::OnEquipableItemChanged(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.OnEquipableItemChanged");

	UGameHUD_OnEquipableItemChanged_Params params;
	params.NewItem = NewItem;
	params.PreviousItem = PreviousItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.IsScoreboardActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameHUD::IsScoreboardActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.IsScoreboardActive");

	UGameHUD_IsScoreboardActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameHUD.IsMenuOpen
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UGameHUD::IsMenuOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.IsMenuOpen");

	UGameHUD_IsMenuOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameHUD.GetScoreboardHiddenCanvasVisibility
// ()
// Parameters:
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESlateVisibility UGameHUD::GetScoreboardHiddenCanvasVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.GetScoreboardHiddenCanvasVisibility");

	UGameHUD_GetScoreboardHiddenCanvasVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameHUD.GetHUDCanvasVisibility
// ()
// Parameters:
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESlateVisibility UGameHUD::GetHUDCanvasVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.GetHUDCanvasVisibility");

	UGameHUD_GetHUDCanvasVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameHUD.GetFullScreenScoreboardHiddenCanvasVisibility
// ()
// Parameters:
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESlateVisibility UGameHUD::GetFullScreenScoreboardHiddenCanvasVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.GetFullScreenScoreboardHiddenCanvasVisibility");

	UGameHUD_GetFullScreenScoreboardHiddenCanvasVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameHUD.DoMapVoteStarted
// ()
void UGameHUD::DoMapVoteStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.DoMapVoteStarted");

	UGameHUD_DoMapVoteStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.GameHUD.DoCreateRoundVictory
// ()
// Parameters:
// struct FPlayerRoundOverData    UIData                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWidget* UGameHUD::DoCreateRoundVictory(const struct FPlayerRoundOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.DoCreateRoundVictory");

	UGameHUD_DoCreateRoundVictory_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.GameHUD.DoCreateDamageIndicator
// ()
// Parameters:
// struct FVector                 HitSource                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UWidget* UGameHUD::DoCreateDamageIndicator(const struct FVector& HitSource, float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.GameHUD.DoCreateDamageIndicator");

	UGameHUD_DoCreateDamageIndicator_Params params;
	params.HitSource = HitSource;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGameHUD::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(CurrentPlayerController, APlayerController);
	READ_PTR_FULL(BP_PauseDialogue, UWidget);
	READ_PTR_FULL(BackgroundBlurWidget, UWidget);
	READ_PTR_FULL(RootCanvas, UCanvasPanel);
	READ_PTR_FULL(DamageIndicatorContainer, UCanvasPanel);
	READ_PTR_FULL(ScoreboardHiddenCanvas, UCanvasPanel);
	READ_PTR_FULL(AlivePawnCanvas, UCanvasPanel);
	READ_PTR_FULL(FullScreenScoreboardHiddenCanvas, UCanvasPanel);
	READ_PTR_FULL(HUDCanvas, UCanvasPanel);
	READ_PTR_FULL(ObjectiveBriefingContainer, USizeBox);
	READ_PTR_FULL(FloatingObjectiveContainer, UUserWidget);
	READ_PTR_FULL(FloatingHintTextContainer, UUserWidget);
	READ_PTR_FULL(Bound_ResupplyIndication, UUserWidget);
	READ_PTR_FULL(Weapon, AItemWeapon);
	READ_PTR_FULL(Firearm, AItemFirearm);
}

void UGameHUD::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(CurrentPlayerController);
	DELE_PTR_FULL(BP_PauseDialogue);
	DELE_PTR_FULL(BackgroundBlurWidget);
	DELE_PTR_FULL(RootCanvas);
	DELE_PTR_FULL(DamageIndicatorContainer);
	DELE_PTR_FULL(ScoreboardHiddenCanvas);
	DELE_PTR_FULL(AlivePawnCanvas);
	DELE_PTR_FULL(FullScreenScoreboardHiddenCanvas);
	DELE_PTR_FULL(HUDCanvas);
	DELE_PTR_FULL(ObjectiveBriefingContainer);
	DELE_PTR_FULL(FloatingObjectiveContainer);
	DELE_PTR_FULL(FloatingHintTextContainer);
	DELE_PTR_FULL(Bound_ResupplyIndication);
	DELE_PTR_FULL(Weapon);
	DELE_PTR_FULL(Firearm);
}

void UFriendlyFireReflectMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UFriendlyFireReflectMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

void UFriendlyFireMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UFriendlyFireMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

// Function Insurgency.WeaponLightComponent.UpdateLightLocation
// ()
void UWeaponLightComponent::UpdateLightLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.UpdateLightLocation");

	UWeaponLightComponent_UpdateLightLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.UpdateLaserBeam
// ()
void UWeaponLightComponent::UpdateLaserBeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.UpdateLaserBeam");

	UWeaponLightComponent_UpdateLaserBeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.UpdateBlindingParticle
// ()
void UWeaponLightComponent::UpdateBlindingParticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.UpdateBlindingParticle");

	UWeaponLightComponent_UpdateBlindingParticle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.UpdateBeam
// ()
void UWeaponLightComponent::UpdateBeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.UpdateBeam");

	UWeaponLightComponent_UpdateBeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.StartTraceTask
// ()
// Parameters:
// float                          Interval                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponLightComponent::StartTraceTask(float Interval, TEnumAsByte<ECollisionChannel> Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.StartTraceTask");

	UWeaponLightComponent_StartTraceTask_Params params;
	params.Interval = Interval;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.ShouldEnterPointShootMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponLightComponent::ShouldEnterPointShootMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.ShouldEnterPointShootMode");

	UWeaponLightComponent_ShouldEnterPointShootMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponLightComponent.SetLightMode
// ()
// Parameters:
// EWeaponLightMode               Mode                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromReplication               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponLightComponent::SetLightMode(EWeaponLightMode Mode, bool bFromReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.SetLightMode");

	UWeaponLightComponent_SetLightMode_Params params;
	params.Mode = Mode;
	params.bFromReplication = bFromReplication;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.ServerSetLightMode
// ()
// Parameters:
// EWeaponLightMode               Mode                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UWeaponLightComponent::ServerSetLightMode(EWeaponLightMode Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.ServerSetLightMode");

	UWeaponLightComponent_ServerSetLightMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.RecreateEffects
// ()
void UWeaponLightComponent::RecreateEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.RecreateEffects");

	UWeaponLightComponent_RecreateEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.RecreateBeamEffects
// ()
void UWeaponLightComponent::RecreateBeamEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.RecreateBeamEffects");

	UWeaponLightComponent_RecreateBeamEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.OnRep_CurrentLightMode
// ()
void UWeaponLightComponent::OnRep_CurrentLightMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.OnRep_CurrentLightMode");

	UWeaponLightComponent_OnRep_CurrentLightMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.LocalPlayerCanSeeInfrared
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponLightComponent::LocalPlayerCanSeeInfrared()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.LocalPlayerCanSeeInfrared");

	UWeaponLightComponent_LocalPlayerCanSeeInfrared_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponLightComponent.KillLaserSightEffect
// ()
void UWeaponLightComponent::KillLaserSightEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.KillLaserSightEffect");

	UWeaponLightComponent_KillLaserSightEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.KillBlindingEffect
// ()
void UWeaponLightComponent::KillBlindingEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.KillBlindingEffect");

	UWeaponLightComponent_KillBlindingEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.KillAnyEffects
// ()
void UWeaponLightComponent::KillAnyEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.KillAnyEffects");

	UWeaponLightComponent_KillAnyEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.HasLightingMode
// ()
// Parameters:
// EWeaponLightMode               LightMode                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UWeaponLightComponent::HasLightingMode(EWeaponLightMode LightMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.HasLightingMode");

	UWeaponLightComponent_HasLightingMode_Params params;
	params.LightMode = LightMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponLightComponent.GetNextLightMode
// ()
// Parameters:
// EWeaponLightMode               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EWeaponLightMode UWeaponLightComponent::GetNextLightMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.GetNextLightMode");

	UWeaponLightComponent_GetNextLightMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponLightComponent.GetFirstLightMode
// ()
// Parameters:
// EWeaponLightMode               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EWeaponLightMode UWeaponLightComponent::GetFirstLightMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.GetFirstLightMode");

	UWeaponLightComponent_GetFirstLightMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.WeaponLightComponent.CreateLaserSightEffect
// ()
void UWeaponLightComponent::CreateLaserSightEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.CreateLaserSightEffect");

	UWeaponLightComponent_CreateLaserSightEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.CalculateLightTargetVisibility
// ()
void UWeaponLightComponent::CalculateLightTargetVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.CalculateLightTargetVisibility");

	UWeaponLightComponent_CalculateLightTargetVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.WeaponLightComponent.CalculateLightTarget
// ()
void UWeaponLightComponent::CalculateLightTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.WeaponLightComponent.CalculateLightTarget");

	UWeaponLightComponent_CalculateLightTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeaponLightComponent::AfterRead()
{
	UWeaponVisualUpgradeComponent::AfterRead();

	READ_PTR_FULL(FlashlightComponent1P, USpotLightComponent);
	READ_PTR_FULL(FlashlightComponent3P, USpotLightComponent);
	READ_PTR_FULL(LaserParticleSystem1P, UParticleSystem);
	READ_PTR_FULL(LaserParticleSystem3P, UParticleSystem);
	READ_PTR_FULL(LaserParticleComponent1P, UParticleSystemComponent);
	READ_PTR_FULL(LaserParticleComponent3P, UParticleSystemComponent);
	READ_PTR_FULL(AudioToggleOn1P, UAkAudioEvent);
	READ_PTR_FULL(AudioToggleOn3P, UAkAudioEvent);
	READ_PTR_FULL(AudioToggleOff1P, UAkAudioEvent);
	READ_PTR_FULL(AudioToggleOff3P, UAkAudioEvent);
	READ_PTR_FULL(FlashlightBlindingParticleSystem3P, UParticleSystem);
	READ_PTR_FULL(BlindingParticleComponent3P, UParticleSystemComponent);
	READ_PTR_FULL(BeamParticleSystem, UParticleSystem);
	READ_PTR_FULL(BeamParticleComponent, UParticleSystemComponent);
}

void UWeaponLightComponent::BeforeDelete()
{
	UWeaponVisualUpgradeComponent::BeforeDelete();

	DELE_PTR_FULL(FlashlightComponent1P);
	DELE_PTR_FULL(FlashlightComponent3P);
	DELE_PTR_FULL(LaserParticleSystem1P);
	DELE_PTR_FULL(LaserParticleSystem3P);
	DELE_PTR_FULL(LaserParticleComponent1P);
	DELE_PTR_FULL(LaserParticleComponent3P);
	DELE_PTR_FULL(AudioToggleOn1P);
	DELE_PTR_FULL(AudioToggleOn3P);
	DELE_PTR_FULL(AudioToggleOff1P);
	DELE_PTR_FULL(AudioToggleOff3P);
	DELE_PTR_FULL(FlashlightBlindingParticleSystem3P);
	DELE_PTR_FULL(BlindingParticleComponent3P);
	DELE_PTR_FULL(BeamParticleSystem);
	DELE_PTR_FULL(BeamParticleComponent);
}

void UForegripLightcomponent::AfterRead()
{
	UWeaponLightComponent::AfterRead();

}

void UForegripLightcomponent::BeforeDelete()
{
	UWeaponLightComponent::BeforeDelete();

}

void AFoliageInteractionManager::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MultiplyColorMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(LocalPC, APlayerController);
	READ_PTR_FULL(RenderTarget, UTextureRenderTarget2D);
	READ_PTR_FULL(RenderTarget2, UTextureRenderTarget2D);
	READ_PTR_FULL(PlayerCollection, UMaterialParameterCollection);
	READ_PTR_FULL(MultiplyColorBaseMaterial, UMaterialInterface);
	READ_PTR_FULL(FoliageInteractionBaseMaterial, UMaterialInterface);
}

void AFoliageInteractionManager::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MultiplyColorMaterial);
	DELE_PTR_FULL(LocalPC);
	DELE_PTR_FULL(RenderTarget);
	DELE_PTR_FULL(RenderTarget2);
	DELE_PTR_FULL(PlayerCollection);
	DELE_PTR_FULL(MultiplyColorBaseMaterial);
	DELE_PTR_FULL(FoliageInteractionBaseMaterial);
}

// Function Insurgency.FoliageInteractionComponent.OnInteractionEndOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UFoliageInteractionComponent::OnInteractionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FoliageInteractionComponent.OnInteractionEndOverlap");

	UFoliageInteractionComponent_OnInteractionEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FoliageInteractionComponent.OnInteractionBeginOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UFoliageInteractionComponent::OnInteractionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FoliageInteractionComponent.OnInteractionBeginOverlap");

	UFoliageInteractionComponent_OnInteractionBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFoliageInteractionComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(FoliageInteractionManager, AFoliageInteractionManager);
	READ_PTR_FULL(InteractionCapsuleComponent, UCapsuleComponent);
}

void UFoliageInteractionComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(FoliageInteractionManager);
	DELE_PTR_FULL(InteractionCapsuleComponent);
}

// Function Insurgency.FloatingPointOfInterestWidget.SetPointOfInterest
// ()
// Parameters:
// class UPointOfInterestActorComponent* InPointOfInterest              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UFloatingPointOfInterestWidget::SetPointOfInterest(class UPointOfInterestActorComponent* InPointOfInterest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingPointOfInterestWidget.SetPointOfInterest");

	UFloatingPointOfInterestWidget_SetPointOfInterest_Params params;
	params.InPointOfInterest = InPointOfInterest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingPointOfInterestWidget.OnSetPointOfInterest
// ()
// Parameters:
// class UPointOfInterestActorComponent* InPointOfInterest              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UFloatingPointOfInterestWidget::OnSetPointOfInterest(class UPointOfInterestActorComponent* InPointOfInterest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingPointOfInterestWidget.OnSetPointOfInterest");

	UFloatingPointOfInterestWidget_OnSetPointOfInterest_Params params;
	params.InPointOfInterest = InPointOfInterest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingPointOfInterestWidget.GetPointOfInterestActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* UFloatingPointOfInterestWidget::GetPointOfInterestActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingPointOfInterestWidget.GetPointOfInterestActor");

	UFloatingPointOfInterestWidget_GetPointOfInterestActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFloatingPointOfInterestWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(IconImage, UImage);
	READ_PTR_FULL(PointOfInterest, UPointOfInterestActorComponent);
}

void UFloatingPointOfInterestWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(IconImage);
	DELE_PTR_FULL(PointOfInterest);
}

// Function Insurgency.FloatingObjectiveContainer.UpdateObjectiveIcons
// ()
void UFloatingObjectiveContainer::UpdateObjectiveIcons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingObjectiveContainer.UpdateObjectiveIcons");

	UFloatingObjectiveContainer_UpdateObjectiveIcons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingObjectiveContainer.ShouldObjectiveBeVisible
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UFloatingObjectiveContainer::ShouldObjectiveBeVisible(class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingObjectiveContainer.ShouldObjectiveBeVisible");

	UFloatingObjectiveContainer_ShouldObjectiveBeVisible_Params params;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.FloatingObjectiveContainer.PopulateObjectiveIcons
// ()
void UFloatingObjectiveContainer::PopulateObjectiveIcons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingObjectiveContainer.PopulateObjectiveIcons");

	UFloatingObjectiveContainer_PopulateObjectiveIcons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFloatingObjectiveContainer::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(WidgetPanel, UCanvasPanel);
	READ_PTR_FULL(FloatingWidgetClass, UClass);
}

void UFloatingObjectiveContainer::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(WidgetPanel);
	DELE_PTR_FULL(FloatingWidgetClass);
}

// Function Insurgency.FloatingHintTextContainer.UpdateSupplyCrateHintLocation
// ()
void UFloatingHintTextContainer::UpdateSupplyCrateHintLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.UpdateSupplyCrateHintLocation");

	UFloatingHintTextContainer_UpdateSupplyCrateHintLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.UpdateSupplyCrateHint
// ()
void UFloatingHintTextContainer::UpdateSupplyCrateHint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.UpdateSupplyCrateHint");

	UFloatingHintTextContainer_UpdateSupplyCrateHint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.UpdateShowKeyHints
// ()
void UFloatingHintTextContainer::UpdateShowKeyHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.UpdateShowKeyHints");

	UFloatingHintTextContainer_UpdateShowKeyHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.UpdatePointsOfInterest
// ()
void UFloatingHintTextContainer::UpdatePointsOfInterest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.UpdatePointsOfInterest");

	UFloatingHintTextContainer_UpdatePointsOfInterest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.UpdateHints
// ()
void UFloatingHintTextContainer::UpdateHints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.UpdateHints");

	UFloatingHintTextContainer_UpdateHints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.UpdateDynamicHintLocation
// ()
// Parameters:
// struct FVector                 ObjPos                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsUsableObject                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsVaulting                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UFloatingHintTextContainer::UpdateDynamicHintLocation(const struct FVector& ObjPos, bool bIsUsableObject, bool bIsVaulting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.UpdateDynamicHintLocation");

	UFloatingHintTextContainer_UpdateDynamicHintLocation_Params params;
	params.ObjPos = ObjPos;
	params.bIsUsableObject = bIsUsableObject;
	params.bIsVaulting = bIsVaulting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.HidePointsOfInterest
// ()
void UFloatingHintTextContainer::HidePointsOfInterest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.HidePointsOfInterest");

	UFloatingHintTextContainer_HidePointsOfInterest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FloatingHintTextContainer.GetDynamicHintLocationForUseObject
// ()
// Parameters:
// class AActor*                  UseObject                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              UseHitResult                   (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UFloatingHintTextContainer::GetDynamicHintLocationForUseObject(class AActor* UseObject, class AINSSoldier* Soldier, const struct FHitResult& UseHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.GetDynamicHintLocationForUseObject");

	UFloatingHintTextContainer_GetDynamicHintLocationForUseObject_Params params;
	params.UseObject = UseObject;
	params.Soldier = Soldier;
	params.UseHitResult = UseHitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.FloatingHintTextContainer.GetDriverIconAndLocation
// ()
// Parameters:
// struct FVector                 Location                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* UFloatingHintTextContainer::GetDriverIconAndLocation(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.GetDriverIconAndLocation");

	UFloatingHintTextContainer_GetDriverIconAndLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;


	return params.ReturnValue;
}


// Function Insurgency.FloatingHintTextContainer.FindUseActor
// ()
// Parameters:
// TArray<struct FUsableActor>    OutUsableActors                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UFloatingHintTextContainer::FindUseActor(TArray<struct FUsableActor>* OutUsableActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FloatingHintTextContainer.FindUseActor");

	UFloatingHintTextContainer_FindUseActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutUsableActors != nullptr)
		*OutUsableActors = params.OutUsableActors;


	return params.ReturnValue;
}


void UFloatingHintTextContainer::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(WidgetPanel, UCanvasPanel);
	READ_PTR_FULL(DynamicHintWidgetClass, UClass);
	READ_PTR_FULL(SupplyCrateHintClass, UClass);
	READ_PTR_FULL(FloatingPointOfInterestWidgetClass, UClass);
	READ_PTR_FULL(DynamicHintRef, UDynamicHintWidget);
	READ_PTR_FULL(SupplyCrateHintRef, UUserWidget);
	READ_PTR_FULL(IconVehicleLeave, UTexture2D);
	READ_PTR_FULL(IconVehicleDrive, UTexture2D);
	READ_PTR_FULL(IconVault, UTexture2D);
	READ_PTR_FULL(IconClimb, UTexture2D);
	READ_PTR_FULL(IconCycleOptic, UTexture2D);
	READ_PTR_FULL(CurrentSupplyCrate, ASupplyCrate);
	READ_PTR_FULL(UsedActor, AActor);
}

void UFloatingHintTextContainer::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(WidgetPanel);
	DELE_PTR_FULL(DynamicHintWidgetClass);
	DELE_PTR_FULL(SupplyCrateHintClass);
	DELE_PTR_FULL(FloatingPointOfInterestWidgetClass);
	DELE_PTR_FULL(DynamicHintRef);
	DELE_PTR_FULL(SupplyCrateHintRef);
	DELE_PTR_FULL(IconVehicleLeave);
	DELE_PTR_FULL(IconVehicleDrive);
	DELE_PTR_FULL(IconVault);
	DELE_PTR_FULL(IconClimb);
	DELE_PTR_FULL(IconCycleOptic);
	DELE_PTR_FULL(CurrentSupplyCrate);
	DELE_PTR_FULL(UsedActor);
}

// Function Insurgency.FireSupportOwnerInterface.GetFireSupportActor
// ()
// Parameters:
// class AFireSupportBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AFireSupportBase* UFireSupportOwnerInterface::GetFireSupportActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportOwnerInterface.GetFireSupportActor");

	UFireSupportOwnerInterface_GetFireSupportActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFireSupportOwnerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFireSupportOwnerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Insurgency.FireSupportBase.PlayIncomingDialogue
// ()
void AFireSupportBase::PlayIncomingDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportBase.PlayIncomingDialogue");

	AFireSupportBase_PlayIncomingDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportBase.PlayDestroyedDialogue
// ()
void AFireSupportBase::PlayDestroyedDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportBase.PlayDestroyedDialogue");

	AFireSupportBase_PlayDestroyedDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportBase.GetTeamId
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
unsigned char AFireSupportBase::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportBase.GetTeamId");

	AFireSupportBase_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.FireSupportBase.GetSubtitleText
// ()
// Parameters:
// struct FText                   DisplayText                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText AFireSupportBase::GetSubtitleText(const struct FText& DisplayText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportBase.GetSubtitleText");

	AFireSupportBase_GetSubtitleText_Params params;
	params.DisplayText = DisplayText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AFireSupportBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(OwnerPawn, AINSSoldier);
	READ_PTR_FULL(InstigatingController, AController);
	READ_PTR_FULL(AssistingPawn, AINSSoldier);
	READ_PTR_FULL(AssistingController, AController);
	READ_PTR_FULL(SpottingParticle, UParticleSystem);
	READ_PTR_FULL(SpottingConfirmationParticle, UParticleSystem);
	READ_PTR_FULL(IndicatorParticle, UParticleSystem);
	READ_PTR_FULL(Definition, UFireSupportDefinition);
}

void AFireSupportBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(OwnerPawn);
	DELE_PTR_FULL(InstigatingController);
	DELE_PTR_FULL(AssistingPawn);
	DELE_PTR_FULL(AssistingController);
	DELE_PTR_FULL(SpottingParticle);
	DELE_PTR_FULL(SpottingConfirmationParticle);
	DELE_PTR_FULL(IndicatorParticle);
	DELE_PTR_FULL(Definition);
}

// Function Insurgency.FireSupportHoveringVehicle.UpdateKillDialogue
// ()
void AFireSupportHoveringVehicle::UpdateKillDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.UpdateKillDialogue");

	AFireSupportHoveringVehicle_UpdateKillDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.PlayTakingFireDialogue
// ()
void AFireSupportHoveringVehicle::PlayTakingFireDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.PlayTakingFireDialogue");

	AFireSupportHoveringVehicle_PlayTakingFireDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.PlayTakingDamageDialogue
// ()
void AFireSupportHoveringVehicle::PlayTakingDamageDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.PlayTakingDamageDialogue");

	AFireSupportHoveringVehicle_PlayTakingDamageDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.PlayFallingDialogue
// ()
void AFireSupportHoveringVehicle::PlayFallingDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.PlayFallingDialogue");

	AFireSupportHoveringVehicle_PlayFallingDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnWeaponFired
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemFirearm*            Weapon                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnWeaponFired(class AVehicleHoveringBase* HoveringVehicle, class AItemFirearm* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnWeaponFired");

	AFireSupportHoveringVehicle_OnWeaponFired_Params params;
	params.HoveringVehicle = HoveringVehicle;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnVehicleTakeAnyDamage
// ()
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnVehicleTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnVehicleTakeAnyDamage");

	AFireSupportHoveringVehicle_OnVehicleTakeAnyDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnTryDodge
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnTryDodge(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnTryDodge");

	AFireSupportHoveringVehicle_OnTryDodge_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnStartFalling
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnStartFalling(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnStartFalling");

	AFireSupportHoveringVehicle_OnStartFalling_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnPartDamaged
// ()
// Parameters:
// class UVehiclePartComponent*   Part                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnPartDamaged(class UVehiclePartComponent* Part, float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnPartDamaged");

	AFireSupportHoveringVehicle_OnPartDamaged_Params params;
	params.Part = Part;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnLostPassenger
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnLostPassenger(class AVehicleHoveringBase* HoveringVehicle, class UVehicleSeatComponent* Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnLostPassenger");

	AFireSupportHoveringVehicle_OnLostPassenger_Params params;
	params.HoveringVehicle = HoveringVehicle;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnImminentImpact
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnImminentImpact(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnImminentImpact");

	AFireSupportHoveringVehicle_OnImminentImpact_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnFireSupportKillsEnemy
// ()
// Parameters:
// class AFireSupportBase*        FireSupport                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnFireSupportKillsEnemy(class AFireSupportBase* FireSupport)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnFireSupportKillsEnemy");

	AFireSupportHoveringVehicle_OnFireSupportKillsEnemy_Params params;
	params.FireSupport = FireSupport;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnFinishDodge
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnFinishDodge(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnFinishDodge");

	AFireSupportHoveringVehicle_OnFinishDodge_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnCrashImpact
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnCrashImpact(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnCrashImpact");

	AFireSupportHoveringVehicle_OnCrashImpact_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.OnArriving
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::OnArriving(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.OnArriving");

	AFireSupportHoveringVehicle_OnArriving_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.CanPlayCrewDialogue
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AFireSupportHoveringVehicle::CanPlayCrewDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.CanPlayCrewDialogue");

	AFireSupportHoveringVehicle_CanPlayCrewDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.FireSupportHoveringVehicle.BlueprintOnLeaving
// ()
void AFireSupportHoveringVehicle::BlueprintOnLeaving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.BlueprintOnLeaving");

	AFireSupportHoveringVehicle_BlueprintOnLeaving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportHoveringVehicle.BlueprintOnArriving
// ()
// Parameters:
// class AVehicleHoveringBase*    HoveringVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportHoveringVehicle::BlueprintOnArriving(class AVehicleHoveringBase* HoveringVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportHoveringVehicle.BlueprintOnArriving");

	AFireSupportHoveringVehicle_BlueprintOnArriving_Params params;
	params.HoveringVehicle = HoveringVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFireSupportHoveringVehicle::AfterRead()
{
	AFireSupportBase::AfterRead();

	READ_PTR_FULL(VehicleClass, UClass);
	READ_PTR_FULL(SpawnedVehicle, AVehicleHoveringBase);
}

void AFireSupportHoveringVehicle::BeforeDelete()
{
	AFireSupportBase::BeforeDelete();

	DELE_PTR_FULL(VehicleClass);
	DELE_PTR_FULL(SpawnedVehicle);
}

void AFireSupportCharacter::AfterRead()
{
	AINSCharacter::AfterRead();

	READ_PTR_FULL(OwningFireSupport, AFireSupportBase);
}

void AFireSupportCharacter::BeforeDelete()
{
	AINSCharacter::BeforeDelete();

	DELE_PTR_FULL(OwningFireSupport);
}

// Function Insurgency.FireSupportDefinition.GetPrintName
// ()
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FText UFireSupportDefinition::GetPrintName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportDefinition.GetPrintName");

	UFireSupportDefinition_GetPrintName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFireSupportDefinition::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(FireSupportActorClass, UClass);
	READ_PTR_FULL(Icon, UTexture2D);
}

void UFireSupportDefinition::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(FireSupportActorClass);
	DELE_PTR_FULL(Icon);
}

// Function Insurgency.FireSupportArtillery.SpawnRound
// ()
void AFireSupportArtillery::SpawnRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.SpawnRound");

	AFireSupportArtillery_SpawnRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportArtillery.QueueNextRound
// ()
void AFireSupportArtillery::QueueNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.QueueNextRound");

	AFireSupportArtillery_QueueNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportArtillery.OnVolleyDelayComplete
// ()
void AFireSupportArtillery::OnVolleyDelayComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.OnVolleyDelayComplete");

	AFireSupportArtillery_OnVolleyDelayComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportArtillery.OnRoundsImpacted
// ()
void AFireSupportArtillery::OnRoundsImpacted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.OnRoundsImpacted");

	AFireSupportArtillery_OnRoundsImpacted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportArtillery.Multicast_QueuedNextRound
// ()
void AFireSupportArtillery::Multicast_QueuedNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.Multicast_QueuedNextRound");

	AFireSupportArtillery_Multicast_QueuedNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportArtillery.GetSimpleArtilleryTrajectory
// ()
// Parameters:
// struct FVector                 TargetLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 SourceLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Gravity                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ProjectileSpeed                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutFlyTime                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AFireSupportArtillery::GetSimpleArtilleryTrajectory(const struct FVector& TargetLocation, const struct FVector& SourceLocation, float Gravity, float* ProjectileSpeed, float* OutFlyTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.GetSimpleArtilleryTrajectory");

	AFireSupportArtillery_GetSimpleArtilleryTrajectory_Params params;
	params.TargetLocation = TargetLocation;
	params.SourceLocation = SourceLocation;
	params.Gravity = Gravity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ProjectileSpeed != nullptr)
		*ProjectileSpeed = params.ProjectileSpeed;
	if (OutFlyTime != nullptr)
		*OutFlyTime = params.OutFlyTime;


	return params.ReturnValue;
}


// Function Insurgency.FireSupportArtillery.GetArtilleryTrajectory
// ()
// Parameters:
// struct FVector                 TargetLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 SourceLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Gravity                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InOutSpeed                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutFlyTime                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AFireSupportArtillery::GetArtilleryTrajectory(const struct FVector& TargetLocation, const struct FVector& SourceLocation, float Gravity, float* InOutSpeed, float* OutFlyTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.GetArtilleryTrajectory");

	AFireSupportArtillery_GetArtilleryTrajectory_Params params;
	params.TargetLocation = TargetLocation;
	params.SourceLocation = SourceLocation;
	params.Gravity = Gravity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutSpeed != nullptr)
		*InOutSpeed = params.InOutSpeed;
	if (OutFlyTime != nullptr)
		*OutFlyTime = params.OutFlyTime;


	return params.ReturnValue;
}


// Function Insurgency.FireSupportArtillery.GetArtilleryTargetLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AFireSupportArtillery::GetArtilleryTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.GetArtilleryTargetLocation");

	AFireSupportArtillery_GetArtilleryTargetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.FireSupportArtillery.GetArtillerySourceLocation
// ()
// Parameters:
// struct FVector                 TargetLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector AFireSupportArtillery::GetArtillerySourceLocation(const struct FVector& TargetLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportArtillery.GetArtillerySourceLocation");

	AFireSupportArtillery_GetArtillerySourceLocation_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AFireSupportArtillery::AfterRead()
{
	AFireSupportBase::AfterRead();

	READ_PTR_FULL(Projectile, UClass);
	READ_PTR_FULL(FireAudioEvent, UAkAudioEvent);
	READ_PTR_FULL(ArtillerySite, AArtillerySite);
	READ_PTR_FULL(PlacementQuery, UEnvQuery);
}

void AFireSupportArtillery::BeforeDelete()
{
	AFireSupportBase::BeforeDelete();

	DELE_PTR_FULL(Projectile);
	DELE_PTR_FULL(FireAudioEvent);
	DELE_PTR_FULL(ArtillerySite);
	DELE_PTR_FULL(PlacementQuery);
}

// Function Insurgency.FireSupportAircraft.PlayKillResponse
// ()
void AFireSupportAircraft::PlayKillResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.PlayKillResponse");

	AFireSupportAircraft_PlayKillResponse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.OnPayloadDropped
// ()
// Parameters:
// class AAircraftBase*           Aircraft                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportAircraft::OnPayloadDropped(class AAircraftBase* Aircraft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.OnPayloadDropped");

	AFireSupportAircraft_OnPayloadDropped_Params params;
	params.Aircraft = Aircraft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.OnPayloadArrived
// ()
// Parameters:
// class AAircraftBase*           Aircraft                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportAircraft::OnPayloadArrived(class AAircraftBase* Aircraft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.OnPayloadArrived");

	AFireSupportAircraft_OnPayloadArrived_Params params;
	params.Aircraft = Aircraft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.OnFireSupportKillsEnemy
// ()
// Parameters:
// class AFireSupportBase*        FireSupport                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportAircraft::OnFireSupportKillsEnemy(class AFireSupportBase* FireSupport)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.OnFireSupportKillsEnemy");

	AFireSupportAircraft_OnFireSupportKillsEnemy_Params params;
	params.FireSupport = FireSupport;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.OnFinishStrafe
// ()
// Parameters:
// class AAircraftBase*           Aircraft                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportAircraft::OnFinishStrafe(class AAircraftBase* Aircraft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.OnFinishStrafe");

	AFireSupportAircraft_OnFinishStrafe_Params params;
	params.Aircraft = Aircraft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.OnBeginStrafe
// ()
// Parameters:
// class AAircraftBase*           Aircraft                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportAircraft::OnBeginStrafe(class AAircraftBase* Aircraft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.OnBeginStrafe");

	AFireSupportAircraft_OnBeginStrafe_Params params;
	params.Aircraft = Aircraft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.OnAllPayloadsDropped
// ()
// Parameters:
// class AAircraftBase*           Aircraft                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AFireSupportAircraft::OnAllPayloadsDropped(class AAircraftBase* Aircraft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.OnAllPayloadsDropped");

	AFireSupportAircraft_OnAllPayloadsDropped_Params params;
	params.Aircraft = Aircraft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.FireSupportAircraft.BeginLeave
// ()
void AFireSupportAircraft::BeginLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FireSupportAircraft.BeginLeave");

	AFireSupportAircraft_BeginLeave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFireSupportAircraft::AfterRead()
{
	AFireSupportBase::AfterRead();

	READ_PTR_FULL(TakingFireEvent, UAkAudioEvent);
	READ_PTR_FULL(ArrivingEvent, UAkAudioEvent);
	READ_PTR_FULL(LeavingEvent, UAkAudioEvent);
	READ_PTR_FULL(BeginStrafeEvent, UAkAudioEvent);
	READ_PTR_FULL(FinishStrafeEvent_NoKills, UAkAudioEvent);
	READ_PTR_FULL(FinishStrafeEvent_Kills, UAkAudioEvent);
	READ_PTR_FULL(DroppingPayloadEvent, UAkAudioEvent);
	READ_PTR_FULL(LandedPayloadEvent, UAkAudioEvent);
}

void AFireSupportAircraft::BeforeDelete()
{
	AFireSupportBase::BeforeDelete();

	DELE_PTR_FULL(TakingFireEvent);
	DELE_PTR_FULL(ArrivingEvent);
	DELE_PTR_FULL(LeavingEvent);
	DELE_PTR_FULL(BeginStrafeEvent);
	DELE_PTR_FULL(FinishStrafeEvent_NoKills);
	DELE_PTR_FULL(FinishStrafeEvent_Kills);
	DELE_PTR_FULL(DroppingPayloadEvent);
	DELE_PTR_FULL(LandedPayloadEvent);
}

// Function Insurgency.FeaturedItemsSettings.GetFeaturedItemsSettings
// ()
// Parameters:
// class UFeaturedItemsSettings*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UFeaturedItemsSettings* UFeaturedItemsSettings::GetFeaturedItemsSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.FeaturedItemsSettings.GetFeaturedItemsSettings");

	UFeaturedItemsSettings_GetFeaturedItemsSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFeaturedItemsSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UFeaturedItemsSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UFactionDefinition::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Emblem, UTexture2D);
	READ_PTR_FULL(EmblemColorMasked, UTexture2D);
	READ_PTR_FULL(ScoreboardEmblemMaterial, UMaterialInterface);
	READ_PTR_FULL(Icon, UTexture2D);
	READ_PTR_FULL(TacticalMapIcon, UTexture2D);
	READ_PTR_FULL(FireSupportRadialMenu, UClass);
	READ_PTR_FULL(CommsRadialMenu, UClass);
	READ_PTR_FULL(PlaceholderCharacterVoice, UCharacterDialogueDictionary);
	READ_PTR_FULL(StationVoice, UStationDialogueDictionary);
}

void UFactionDefinition::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Emblem);
	DELE_PTR_FULL(EmblemColorMasked);
	DELE_PTR_FULL(ScoreboardEmblemMaterial);
	DELE_PTR_FULL(Icon);
	DELE_PTR_FULL(TacticalMapIcon);
	DELE_PTR_FULL(FireSupportRadialMenu);
	DELE_PTR_FULL(CommsRadialMenu);
	DELE_PTR_FULL(PlaceholderCharacterVoice);
	DELE_PTR_FULL(StationVoice);
}

void UExternalHyperlinkDecorator::AfterRead()
{
	URichTextBlockDecorator::AfterRead();

}

void UExternalHyperlinkDecorator::BeforeDelete()
{
	URichTextBlockDecorator::BeforeDelete();

}

// Function Insurgency.ExplosionReaction.OnExplosion
// ()
// Parameters:
// float                          Distance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AExplosionReaction::OnExplosion(float Distance, float Damage, const struct FHitResult& HitResult, const struct FVector& ImpulseDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ExplosionReaction.OnExplosion");

	AExplosionReaction_OnExplosion_Params params;
	params.Distance = Distance;
	params.Damage = Damage;
	params.HitResult = HitResult;
	params.ImpulseDir = ImpulseDir;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AExplosionReaction::AfterRead()
{
	AActor::AfterRead();

}

void AExplosionReaction::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UExplosionPenetrationSettings::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ExitSurfaceReaction, USurfaceReaction);
}

void UExplosionPenetrationSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ExitSurfaceReaction);
}

void UEnvQueryTest_TeamPresence::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_TeamPresence::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_SpatialVisibility::AfterRead()
{
	UEnvQueryTest::AfterRead();

	READ_PTR_FULL(VisibilityTo, UClass);
}

void UEnvQueryTest_SpatialVisibility::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

	DELE_PTR_FULL(VisibilityTo);
}

void UEnvQueryTest_OnTacticalGrid::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_OnTacticalGrid::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_OnReachableNavMesh::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_OnReachableNavMesh::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_ContestedObjective::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_ContestedObjective::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_ActiveObjective::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_ActiveObjective::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryGenerator_CoverLocations::AfterRead()
{
	UEnvQueryGenerator_ProjectedPoints::AfterRead();

	READ_PTR_FULL(GenerateAround, UClass);
	READ_PTR_FULL(PositionToHideFrom, UClass);
}

void UEnvQueryGenerator_CoverLocations::BeforeDelete()
{
	UEnvQueryGenerator_ProjectedPoints::BeforeDelete();

	DELE_PTR_FULL(GenerateAround);
	DELE_PTR_FULL(PositionToHideFrom);
}

void UEnvQueryContext_SquadPath::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_SquadPath::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_SquadMembers::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_SquadMembers::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_SquadDestination::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_SquadDestination::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_SquadCenter::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_SquadCenter::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_NearbyOfficers::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_NearbyOfficers::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_GetClaimedSearchAreasForinvestigation::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_GetClaimedSearchAreasForinvestigation::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_AliveEnemies::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_AliveEnemies::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_AliveAllies::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_AliveAllies::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_ActiveObjectives::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_ActiveObjectives::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

// Function Insurgency.EnumerateReplaysProxy.EnumerateReplays
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 MetaData                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEnumerateReplaysProxy*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UEnumerateReplaysProxy* UEnumerateReplaysProxy::EnumerateReplays(class UObject* WorldContextObject, const struct FString& MetaData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EnumerateReplaysProxy.EnumerateReplays");

	UEnumerateReplaysProxy_EnumerateReplays_Params params;
	params.WorldContextObject = WorldContextObject;
	params.MetaData = MetaData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UEnumerateReplaysProxy::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void UEnumerateReplaysProxy::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

// Function Insurgency.EnumerateReplayEventsProxy.EnumerateReplayEvents
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Group                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEnumerateReplayEventsProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UEnumerateReplayEventsProxy* UEnumerateReplayEventsProxy::EnumerateReplayEvents(class UObject* WorldContextObject, const struct FString& Group)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.EnumerateReplayEventsProxy.EnumerateReplayEvents");

	UEnumerateReplayEventsProxy_EnumerateReplayEvents_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Group = Group;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UEnumerateReplayEventsProxy::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void UEnumerateReplayEventsProxy::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

void AEjectedBrass::AfterRead()
{
	APhysicalDebris::AfterRead();

}

void AEjectedBrass::BeforeDelete()
{
	APhysicalDebris::BeforeDelete();

}

// Function Insurgency.DynamicNavModifierVolume.ActivateNavModifer
// ()
void ADynamicNavModifierVolume::ActivateNavModifer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DynamicNavModifierVolume.ActivateNavModifer");

	ADynamicNavModifierVolume_ActivateNavModifer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADynamicNavModifierVolume::AfterRead()
{
	AVolume::AfterRead();

	READ_PTR_FULL(NavArea, UClass);
}

void ADynamicNavModifierVolume::BeforeDelete()
{
	AVolume::BeforeDelete();

	DELE_PTR_FULL(NavArea);
}

// Function Insurgency.DynamicHintWidget.UpdateVisibility
// ()
void UDynamicHintWidget::UpdateVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DynamicHintWidget.UpdateVisibility");

	UDynamicHintWidget_UpdateVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.DynamicHintWidget.OnFillRowWithInformationMultipleActions
// ()
// Parameters:
// bool                           IsPrimaryRow                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   AdditionalText                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UTexture2D*              HintTexture                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FName>           ActionNames                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Timeout                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDynamicHintWidget::OnFillRowWithInformationMultipleActions(bool IsPrimaryRow, const struct FText& AdditionalText, class UTexture2D* HintTexture, TArray<struct FName> ActionNames, const struct FVector& Location, float Timeout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DynamicHintWidget.OnFillRowWithInformationMultipleActions");

	UDynamicHintWidget_OnFillRowWithInformationMultipleActions_Params params;
	params.IsPrimaryRow = IsPrimaryRow;
	params.AdditionalText = AdditionalText;
	params.HintTexture = HintTexture;
	params.ActionNames = ActionNames;
	params.Location = Location;
	params.Timeout = Timeout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.DynamicHintWidget.OnFillRowWithInformation
// ()
// Parameters:
// bool                           IsPrimaryRow                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   AdditionalText                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UTexture2D*              HintTexture                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Timeout                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDynamicHintWidget::OnFillRowWithInformation(bool IsPrimaryRow, const struct FText& AdditionalText, class UTexture2D* HintTexture, const struct FName& ActionName, const struct FVector& Location, float Timeout)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DynamicHintWidget.OnFillRowWithInformation");

	UDynamicHintWidget_OnFillRowWithInformation_Params params;
	params.IsPrimaryRow = IsPrimaryRow;
	params.AdditionalText = AdditionalText;
	params.HintTexture = HintTexture;
	params.ActionName = ActionName;
	params.Location = Location;
	params.Timeout = Timeout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDynamicHintWidget::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(PrimaryHintImage, UTexture2D);
	READ_PTR_FULL(SubHintImage, UTexture2D);
	READ_PTR_FULL(PrimaryKeyImage, UTexture2D);
	READ_PTR_FULL(SubKeyImage, UTexture2D);
}

void UDynamicHintWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(PrimaryHintImage);
	DELE_PTR_FULL(SubHintImage);
	DELE_PTR_FULL(PrimaryKeyImage);
	DELE_PTR_FULL(SubKeyImage);
}

// Function Insurgency.Door.UpdateLocked
// ()
// Parameters:
// bool                           bNewLocked                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::UpdateLocked(bool bNewLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.UpdateLocked");

	ADoor_UpdateLocked_Params params;
	params.bNewLocked = bNewLocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.UpdateEnabled
// ()
// Parameters:
// bool                           bNewEnabled                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::UpdateEnabled(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.UpdateEnabled");

	ADoor_UpdateEnabled_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.OnRep_TopHingeBroken
// ()
void ADoor::OnRep_TopHingeBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.OnRep_TopHingeBroken");

	ADoor_OnRep_TopHingeBroken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.OnRep_DoorState
// ()
void ADoor::OnRep_DoorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.OnRep_DoorState");

	ADoor_OnRep_DoorState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.OnRep_DoorAngle
// ()
void ADoor::OnRep_DoorAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.OnRep_DoorAngle");

	ADoor_OnRep_DoorAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.OnRep_BottomHingeBroken
// ()
void ADoor::OnRep_BottomHingeBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.OnRep_BottomHingeBroken");

	ADoor_OnRep_BottomHingeBroken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.OnDoorHit
// ()
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ADoor::OnDoorHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.OnDoorHit");

	ADoor_OnDoorHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.NormalDotNormal
// ()
// Parameters:
// struct FVector                 HitNormal                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ADoor::NormalDotNormal(const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.NormalDotNormal");

	ADoor_NormalDotNormal_Params params;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.Multicast_PlayDoorFX
// ()
// Parameters:
// class UParticleSystem*         FX                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::Multicast_PlayDoorFX(class UParticleSystem* FX, const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.Multicast_PlayDoorFX");

	ADoor_Multicast_PlayDoorFX_Params params;
	params.FX = FX;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.Multicast_LaunchDoor
// ()
// Parameters:
// struct FVector_NetQuantize10   ImpulseLocation                (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize10   ImpulseForce                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::Multicast_LaunchDoor(const struct FVector_NetQuantize10& ImpulseLocation, const struct FVector_NetQuantize10& ImpulseForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.Multicast_LaunchDoor");

	ADoor_Multicast_LaunchDoor_Params params;
	params.ImpulseLocation = ImpulseLocation;
	params.ImpulseForce = ImpulseForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.Multicast_DoorPostAkEvent
// ()
// Parameters:
// class UAkAudioEvent*           Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::Multicast_DoorPostAkEvent(class UAkAudioEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.Multicast_DoorPostAkEvent");

	ADoor_Multicast_DoorPostAkEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.LaunchDoor
// ()
// Parameters:
// struct FVector                 ImpulseLocation                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ImpulseForce                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::LaunchDoor(const struct FVector& ImpulseLocation, const struct FVector& ImpulseForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.LaunchDoor");

	ADoor_LaunchDoor_Params params;
	params.ImpulseLocation = ImpulseLocation;
	params.ImpulseForce = ImpulseForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.IsFalling
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::IsFalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.IsFalling");

	ADoor_IsFalling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.IsDoorDestroyed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::IsDoorDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.IsDoorDestroyed");

	ADoor_IsDoorDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.IsCompletelyOpen
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::IsCompletelyOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.IsCompletelyOpen");

	ADoor_IsCompletelyOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.IsClosed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::IsClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.IsClosed");

	ADoor_IsClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.IsBroken
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::IsBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.IsBroken");

	ADoor_IsBroken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.HasFallen
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::HasFallen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.HasFallen");

	ADoor_HasFallen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.GetDoorState
// ()
// Parameters:
// EDoorState                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EDoorState ADoor::GetDoorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.GetDoorState");

	ADoor_GetDoorState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.GetCenterLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ADoor::GetCenterLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.GetCenterLocation");

	ADoor_GetCenterLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.DoorDotProduct
// ()
// Parameters:
// class AINSCharacter*           Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ADoor::DoorDotProduct(class AINSCharacter* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.DoorDotProduct");

	ADoor_DoorDotProduct_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Door.CheckLaunchDoor
// ()
void ADoor::CheckLaunchDoor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.CheckLaunchDoor");

	ADoor_CheckLaunchDoor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.CheckFallenDoorIsStuck
// ()
void ADoor::CheckFallenDoorIsStuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.CheckFallenDoorIsStuck");

	ADoor_CheckFallenDoorIsStuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.BreakDown
// ()
// Parameters:
// float                          DotProduct                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ADoor::BreakDown(float DotProduct, float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.BreakDown");

	ADoor_BreakDown_Params params;
	params.DotProduct = DotProduct;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.Door.AreHingesShotOff
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ADoor::AreHingesShotOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Door.AreHingesShotOff");

	ADoor_AreHingesShotOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ADoor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(FrameMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(DoorHandleMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(TopHinge, UBoxComponent);
	READ_PTR_FULL(BottomHinge, UBoxComponent);
	READ_PTR_FULL(DoorOverlapCollision, UBoxComponent);
	READ_PTR_FULL(HingePhysMat, UPhysicalMaterial);
	READ_PTR_FULL(SmoothTransitionCurve, UCurveFloat);
	READ_PTR_FULL(BreachSmoothTransitionCurve, UCurveFloat);
	READ_PTR_FULL(DefaultMesh, UStaticMesh);
	READ_PTR_FULL(TopHingeMesh, UStaticMesh);
	READ_PTR_FULL(BottomHingeMesh, UStaticMesh);
	READ_PTR_FULL(NoHingeMesh, UStaticMesh);
	READ_PTR_FULL(AkComponent, UINSAudioComponent);
	READ_PTR_FULL(AkEventDoorPeak, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorOpen, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorClose, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorCreakOpen, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorCreakClose, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorKick, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorLock, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorUnlock, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorPhysHit, UAkAudioEvent);
	READ_PTR_FULL(AkEventHingeShotOff, UAkAudioEvent);
	READ_PTR_FULL(AkEventDoorBlocked, UAkAudioEvent);
	READ_PTR_FULL(DoorKickFX, UParticleSystem);
	READ_PTR_FULL(DoorBreachFX, UParticleSystem);
	READ_PTR_FULL(DoorDestroyFX, UParticleSystem);
	READ_PTR_FULL(HingeDestroyFX, UParticleSystem);
	READ_PTR_FULL(GibSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(DoorOpenUI, UTexture2D);
	READ_PTR_FULL(DoorOutsideOpenUI, UTexture2D);
	READ_PTR_FULL(DoorPartialOpenUI, UTexture2D);
	READ_PTR_FULL(DoorOutsidePartialOpenUI, UTexture2D);
	READ_PTR_FULL(DoorCloseUI, UTexture2D);
	READ_PTR_FULL(DoorOutsideCloseUI, UTexture2D);
	READ_PTR_FULL(DoorBreachUI, UTexture2D);
	READ_PTR_FULL(InitialDoorMaterial, UMaterialInterface);
	READ_PTR_FULL(InitialFrameMaterial, UMaterialInterface);
}

void ADoor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(FrameMeshComponent);
	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(DoorHandleMeshComponent);
	DELE_PTR_FULL(TopHinge);
	DELE_PTR_FULL(BottomHinge);
	DELE_PTR_FULL(DoorOverlapCollision);
	DELE_PTR_FULL(HingePhysMat);
	DELE_PTR_FULL(SmoothTransitionCurve);
	DELE_PTR_FULL(BreachSmoothTransitionCurve);
	DELE_PTR_FULL(DefaultMesh);
	DELE_PTR_FULL(TopHingeMesh);
	DELE_PTR_FULL(BottomHingeMesh);
	DELE_PTR_FULL(NoHingeMesh);
	DELE_PTR_FULL(AkComponent);
	DELE_PTR_FULL(AkEventDoorPeak);
	DELE_PTR_FULL(AkEventDoorOpen);
	DELE_PTR_FULL(AkEventDoorClose);
	DELE_PTR_FULL(AkEventDoorCreakOpen);
	DELE_PTR_FULL(AkEventDoorCreakClose);
	DELE_PTR_FULL(AkEventDoorKick);
	DELE_PTR_FULL(AkEventDoorLock);
	DELE_PTR_FULL(AkEventDoorUnlock);
	DELE_PTR_FULL(AkEventDoorPhysHit);
	DELE_PTR_FULL(AkEventHingeShotOff);
	DELE_PTR_FULL(AkEventDoorBlocked);
	DELE_PTR_FULL(DoorKickFX);
	DELE_PTR_FULL(DoorBreachFX);
	DELE_PTR_FULL(DoorDestroyFX);
	DELE_PTR_FULL(HingeDestroyFX);
	DELE_PTR_FULL(GibSurfaceReaction);
	DELE_PTR_FULL(DoorOpenUI);
	DELE_PTR_FULL(DoorOutsideOpenUI);
	DELE_PTR_FULL(DoorPartialOpenUI);
	DELE_PTR_FULL(DoorOutsidePartialOpenUI);
	DELE_PTR_FULL(DoorCloseUI);
	DELE_PTR_FULL(DoorOutsideCloseUI);
	DELE_PTR_FULL(DoorBreachUI);
	DELE_PTR_FULL(InitialDoorMaterial);
	DELE_PTR_FULL(InitialFrameMaterial);
}

// Function Insurgency.INSTeamDeathmatchGameMode.ShouldUseDeathmatchSpawns
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AINSTeamDeathmatchGameMode::ShouldUseDeathmatchSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSTeamDeathmatchGameMode.ShouldUseDeathmatchSpawns");

	AINSTeamDeathmatchGameMode_ShouldUseDeathmatchSpawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.INSTeamDeathmatchGameMode.SetDeathmatchSpawns
// ()
// Parameters:
// bool                           bEnabled                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AINSTeamDeathmatchGameMode::SetDeathmatchSpawns(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSTeamDeathmatchGameMode.SetDeathmatchSpawns");

	AINSTeamDeathmatchGameMode_SetDeathmatchSpawns_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.INSTeamDeathmatchGameMode.EnableDeathmatchSpawns
// ()
void AINSTeamDeathmatchGameMode::EnableDeathmatchSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.INSTeamDeathmatchGameMode.EnableDeathmatchSpawns");

	AINSTeamDeathmatchGameMode_EnableDeathmatchSpawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AINSTeamDeathmatchGameMode::AfterRead()
{
	AINSMultiplayerMode::AfterRead();

}

void AINSTeamDeathmatchGameMode::BeforeDelete()
{
	AINSMultiplayerMode::BeforeDelete();

}

// Function Insurgency.DominationGameMode.CheckDominationScoring
// ()
void ADominationGameMode::CheckDominationScoring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DominationGameMode.CheckDominationScoring");

	ADominationGameMode_CheckDominationScoring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADominationGameMode::AfterRead()
{
	AINSTeamDeathmatchGameMode::AfterRead();

}

void ADominationGameMode::BeforeDelete()
{
	AINSTeamDeathmatchGameMode::BeforeDelete();

}

void UDismembermentSet::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(VaporizationParticleSystem, UParticleSystem);
	READ_PTR_FULL(BurnParticleSystem, UParticleSystem);
	READ_PTR_FULL(BloodSplatterData, UBloodSplatterData);
}

void UDismembermentSet::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(VaporizationParticleSystem);
	DELE_PTR_FULL(BurnParticleSystem);
	DELE_PTR_FULL(BloodSplatterData);
}

void UDialogLicenseWidget::AfterRead()
{
	UUserWidget::AfterRead();

}

void UDialogLicenseWidget::BeforeDelete()
{
	UUserWidget::BeforeDelete();

}

// Function Insurgency.DecalPlaneComponent.SetDecalScale
// ()
// Parameters:
// float                          NewScale                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDecalPlaneComponent::SetDecalScale(float NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DecalPlaneComponent.SetDecalScale");

	UDecalPlaneComponent_SetDecalScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.DecalPlaneComponent.SetDecalMaterial
// ()
// Parameters:
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDecalPlaneComponent::SetDecalMaterial(class UMaterialInterface* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DecalPlaneComponent.SetDecalMaterial");

	UDecalPlaneComponent_SetDecalMaterial_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.DecalPlaneComponent.SetDecalLifespan
// ()
// Parameters:
// float                          Seconds                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDecalPlaneComponent::SetDecalLifespan(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DecalPlaneComponent.SetDecalLifespan");

	UDecalPlaneComponent_SetDecalLifespan_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.DecalPlaneComponent.OnLifespanExpired
// ()
void UDecalPlaneComponent::OnLifespanExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DecalPlaneComponent.OnLifespanExpired");

	UDecalPlaneComponent_OnLifespanExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDecalPlaneComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

}

void UDecalPlaneComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

}

// Function Insurgency.DecalManager.SpawnTranslucentTrackedDecalAttached
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*      DecalMaterial                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 DecalSize                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          LifeSpan                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeScreenSize                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalPlaneComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UDecalPlaneComponent* UDecalManager::SpawnTranslucentTrackedDecalAttached(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, float LifeSpan, float FadeScreenSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DecalManager.SpawnTranslucentTrackedDecalAttached");

	UDecalManager_SpawnTranslucentTrackedDecalAttached_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DecalMaterial = DecalMaterial;
	params.DecalSize = DecalSize;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.LifeSpan = LifeSpan;
	params.FadeScreenSize = FadeScreenSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.DecalManager.SpawnTrackedDecalAttached
// ()
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*      DecalMaterial                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 DecalSize                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          LifeSpan                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeScreenSize                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeOutDelay                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeOutDuration                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDecalChannel                  DecalChannel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUseFootprintArray             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UDecalComponent* UDecalManager::SpawnTrackedDecalAttached(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, float LifeSpan, float FadeScreenSize, float FadeOutDelay, float FadeOutDuration, EDecalChannel DecalChannel, bool bUseFootprintArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DecalManager.SpawnTrackedDecalAttached");

	UDecalManager_SpawnTrackedDecalAttached_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DecalMaterial = DecalMaterial;
	params.DecalSize = DecalSize;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.LifeSpan = LifeSpan;
	params.FadeScreenSize = FadeScreenSize;
	params.FadeOutDelay = FadeOutDelay;
	params.FadeOutDuration = FadeOutDuration;
	params.DecalChannel = DecalChannel;
	params.bUseFootprintArray = bUseFootprintArray;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDecalManager::AfterRead()
{
	UObject::AfterRead();

}

void UDecalManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UDamageTypeMeleeGeneric::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UDamageTypeMeleeGeneric::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void UDamageTypeImpact::AfterRead()
{
	UDamageTypeMeleeGeneric::AfterRead();

}

void UDamageTypeImpact::BeforeDelete()
{
	UDamageTypeMeleeGeneric::BeforeDelete();

}

void UDamageTypeDoorBreach::AfterRead()
{
	UDamageTypeImpact::AfterRead();

}

void UDamageTypeDoorBreach::BeforeDelete()
{
	UDamageTypeImpact::BeforeDelete();

}

void UDamageTypeChargeImpact::AfterRead()
{
	UDamageTypeImpact::AfterRead();

}

void UDamageTypeChargeImpact::BeforeDelete()
{
	UDamageTypeImpact::BeforeDelete();

}

void UDamageTypeGrenadeImpact::AfterRead()
{
	UDamageTypeImpact::AfterRead();

}

void UDamageTypeGrenadeImpact::BeforeDelete()
{
	UDamageTypeImpact::BeforeDelete();

}

void UDamageTypeVehicleImpact::AfterRead()
{
	UDamageTypeImpact::AfterRead();

}

void UDamageTypeVehicleImpact::BeforeDelete()
{
	UDamageTypeImpact::BeforeDelete();

}

void UDamageTypeMeleeClub::AfterRead()
{
	UDamageTypeMeleeGeneric::AfterRead();

}

void UDamageTypeMeleeClub::BeforeDelete()
{
	UDamageTypeMeleeGeneric::BeforeDelete();

}

void UDamageTypeMeleePunch::AfterRead()
{
	UDamageTypeMeleeClub::AfterRead();

}

void UDamageTypeMeleePunch::BeforeDelete()
{
	UDamageTypeMeleeClub::BeforeDelete();

}

void UDamageTypeMeleeSlash::AfterRead()
{
	UDamageTypeMeleeGeneric::AfterRead();

}

void UDamageTypeMeleeSlash::BeforeDelete()
{
	UDamageTypeMeleeGeneric::BeforeDelete();

}

void UDamageTypeExplosionGeneric::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UDamageTypeExplosionGeneric::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void UDamageTypeExplosionVehicle::AfterRead()
{
	UDamageTypeExplosionGeneric::AfterRead();

}

void UDamageTypeExplosionVehicle::BeforeDelete()
{
	UDamageTypeExplosionGeneric::BeforeDelete();

}

void UDamageTypeEnvironmentalFire::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UDamageTypeEnvironmentalFire::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void UDamageTypeVehicleFire::AfterRead()
{
	UDamageTypeEnvironmentalFire::AfterRead();

}

void UDamageTypeVehicleFire::BeforeDelete()
{
	UDamageTypeEnvironmentalFire::BeforeDelete();

}

void UDamageTypeSuicide::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UDamageTypeSuicide::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void UDamageTypeFall::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UDamageTypeFall::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void UDamageTypeBullet::AfterRead()
{
	UINSDamageType::AfterRead();

}

void UDamageTypeBullet::BeforeDelete()
{
	UINSDamageType::BeforeDelete();

}

void UDamageTypeBuckshot::AfterRead()
{
	UDamageTypeBullet::AfterRead();

}

void UDamageTypeBuckshot::BeforeDelete()
{
	UDamageTypeBullet::BeforeDelete();

}

void UDamageReflectionToggledMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UDamageReflectionToggledMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

// Function Insurgency.DamageLogComponent.OnOwnerTakeAnyDamage
// ()
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UDamageLogComponent::OnOwnerTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DamageLogComponent.OnOwnerTakeAnyDamage");

	UDamageLogComponent_OnOwnerTakeAnyDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.DamageLogComponent.GetHighestDamager
// ()
// Parameters:
// class AController*             Ignore                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxTime                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCheckTeam                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AController* UDamageLogComponent::GetHighestDamager(class AController* Ignore, float MaxTime, bool bCheckTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DamageLogComponent.GetHighestDamager");

	UDamageLogComponent_GetHighestDamager_Params params;
	params.Ignore = Ignore;
	params.MaxTime = MaxTime;
	params.bCheckTeam = bCheckTeam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.DamageLogComponent.ClearDamageLog
// ()
void UDamageLogComponent::ClearDamageLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.DamageLogComponent.ClearDamageLog");

	UDamageLogComponent_ClearDamageLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDamageLogComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UDamageLogComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Insurgency.CoverSystem.RemoveStaleCoverPoints
// ()
// Parameters:
// struct FVector                 Origin                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Extent                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCoverSystem::RemoveStaleCoverPoints(const struct FVector& Origin, const struct FVector& Extent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.RemoveStaleCoverPoints");

	UCoverSystem_RemoveStaleCoverPoints_Params params;
	params.Origin = Origin;
	params.Extent = Extent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CoverSystem.RemoveCoverPointsOfObject
// ()
// Parameters:
// class AActor*                  CoverObject                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCoverSystem::RemoveCoverPointsOfObject(class AActor* CoverObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.RemoveCoverPointsOfObject");

	UCoverSystem_RemoveCoverPointsOfObject_Params params;
	params.CoverObject = CoverObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CoverSystem.RemoveAll
// ()
void UCoverSystem::RemoveAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.RemoveAll");

	UCoverSystem_RemoveAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CoverSystem.ReleaseCover
// ()
// Parameters:
// struct FVector                 ElementLocation                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCoverSystem::ReleaseCover(const struct FVector& ElementLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.ReleaseCover");

	UCoverSystem_ReleaseCover_Params params;
	params.ElementLocation = ElementLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverSystem.OnNavMeshTilesUpdated
// ()
void UCoverSystem::OnNavMeshTilesUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.OnNavMeshTilesUpdated");

	UCoverSystem_OnNavMeshTilesUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CoverSystem.OnBeginPlay
// ()
void UCoverSystem::OnBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.OnBeginPlay");

	UCoverSystem_OnBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CoverSystem.HoldCover
// ()
// Parameters:
// struct FVector                 ElementLocation                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCoverSystem::HoldCover(const struct FVector& ElementLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.HoldCover");

	UCoverSystem_HoldCover_Params params;
	params.ElementLocation = ElementLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverSystem.GetCoverSystem
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCoverSystem*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoverSystem* UCoverSystem::GetCoverSystem(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverSystem.GetCoverSystem");

	UCoverSystem_GetCoverSystem_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCoverSystem::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCoverSystem::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void ACoverGenerator::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CoverSystem, UCoverSystem);
}

void ACoverGenerator::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CoverSystem);
}

// Function Insurgency.CoverComponent.IsOccupierClose
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCoverComponent::IsOccupierClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.IsOccupierClose");

	UCoverComponent_IsOccupierClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.HasProtectionAgainstLocation
// ()
// Parameters:
// struct FVector                 ThreatLocation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bUseLOS                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCoverComponent::HasProtectionAgainstLocation(const struct FVector& ThreatLocation, bool bUseLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.HasProtectionAgainstLocation");

	UCoverComponent_HasProtectionAgainstLocation_Params params;
	params.ThreatLocation = ThreatLocation;
	params.bUseLOS = bUseLOS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.GetProtectionAngle
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UCoverComponent::GetProtectionAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.GetProtectionAngle");

	UCoverComponent_GetProtectionAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.GetOccupierDistance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UCoverComponent::GetOccupierDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.GetOccupierDistance");

	UCoverComponent_GetOccupierDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.GetOccupier
// ()
// Parameters:
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* UCoverComponent::GetOccupier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.GetOccupier");

	UCoverComponent_GetOccupier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.GetLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UCoverComponent::GetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.GetLocation");

	UCoverComponent_GetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.GetDirection
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UCoverComponent::GetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.GetDirection");

	UCoverComponent_GetDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CoverComponent.CanMachinegunsDeploy
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCoverComponent::CanMachinegunsDeploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CoverComponent.CanMachinegunsDeploy");

	UCoverComponent_CanMachinegunsDeploy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCoverComponent::AfterRead()
{
	UPrimitiveComponent::AfterRead();

	READ_PTR_FULL(Occupier, AINSSoldier);
}

void UCoverComponent::BeforeDelete()
{
	UPrimitiveComponent::BeforeDelete();

	DELE_PTR_FULL(Occupier);
}

void ACoverActor::AfterRead()
{
	AActor::AfterRead();

}

void ACoverActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Insurgency.Collectible.GetTokenValueText
// ()
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UCollectible::GetTokenValueText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Collectible.GetTokenValueText");

	UCollectible_GetTokenValueText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.Collectible.GetTokenCostText
// ()
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UCollectible::GetTokenCostText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.Collectible.GetTokenCostText");

	UCollectible_GetTokenCostText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCollectible::AfterRead()
{
	UObject::AfterRead();

}

void UCollectible::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.CosmeticVariation.RemoveVariation
// ()
void UCosmeticVariation::RemoveVariation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.RemoveVariation");

	UCosmeticVariation_RemoveVariation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticVariation.InitVariation
// ()
void UCosmeticVariation::InitVariation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.InitVariation");

	UCosmeticVariation_InitVariation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticVariation.GetRarityWithItem
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollectibleRarity             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECollectibleRarity UCosmeticVariation::GetRarityWithItem(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.GetRarityWithItem");

	UCosmeticVariation_GetRarityWithItem_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticVariation.GetOuterCosmetic
// ()
// Parameters:
// class UCosmeticItem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCosmeticItem* UCosmeticVariation::GetOuterCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.GetOuterCosmetic");

	UCosmeticVariation_GetOuterCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticVariation.BlueprintRemoveVariation
// ()
// Parameters:
// class UCosmeticItem*           OuterCosmetic                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticVariation::BlueprintRemoveVariation(class UCosmeticItem* OuterCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.BlueprintRemoveVariation");

	UCosmeticVariation_BlueprintRemoveVariation_Params params;
	params.OuterCosmetic = OuterCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticVariation.BlueprintInitVariation
// ()
// Parameters:
// class UCosmeticItem*           OuterCosmetic                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticVariation::BlueprintInitVariation(class UCosmeticItem* OuterCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.BlueprintInitVariation");

	UCosmeticVariation_BlueprintInitVariation_Params params;
	params.OuterCosmetic = OuterCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticVariation.BlueprintCosmeticItemMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SkeletalMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterCosmeticAttachedModel CosmeticModel                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticVariation::BlueprintCosmeticItemMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.BlueprintCosmeticItemMeshLoaded");

	UCosmeticVariation_BlueprintCosmeticItemMeshLoaded_Params params;
	params.SkeletalMesh = SkeletalMesh;
	params.CosmeticModel = CosmeticModel;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticVariation.BlueprintCosmeticItemAllMeshesLoaded
// ()
void UCosmeticVariation::BlueprintCosmeticItemAllMeshesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticVariation.BlueprintCosmeticItemAllMeshesLoaded");

	UCosmeticVariation_BlueprintCosmeticItemAllMeshesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCosmeticVariation::AfterRead()
{
	UCollectible::AfterRead();

}

void UCosmeticVariation::BeforeDelete()
{
	UCollectible::BeforeDelete();

}

// Function Insurgency.CosmeticStatics.ValidateCosmeticState
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (Parm, OutParm, NativeAccessSpecifierPublic)
// ECharacterGender               Gender                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::ValidateCosmeticState(struct FProfileCharacterCosmeticState* State, ECharacterGender Gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.ValidateCosmeticState");

	UCosmeticStatics_ValidateCosmeticState_Params params;
	params.Gender = Gender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (State != nullptr)
		*State = params.State;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.TranslateSlotToIndex
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCosmeticStatics::TranslateSlotToIndex(ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.TranslateSlotToIndex");

	UCosmeticStatics_TranslateSlotToIndex_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.IsVanityCosmetic
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::IsVanityCosmetic(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.IsVanityCosmetic");

	UCosmeticStatics_IsVanityCosmetic_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticValue
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCosmeticStatics::GetSelectedCosmeticValue(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticValue");

	UCosmeticStatics_GetSelectedCosmeticValue_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticTier
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCompetitiveUnlockTier  ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FCompetitiveUnlockTier UCosmeticStatics::GetSelectedCosmeticTier(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticTier");

	UCosmeticStatics_GetSelectedCosmeticTier_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticRarity
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECollectibleRarity             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECollectibleRarity UCosmeticStatics::GetSelectedCosmeticRarity(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticRarity");

	UCosmeticStatics_GetSelectedCosmeticRarity_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticItemId
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCosmeticStatics::GetSelectedCosmeticItemId(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticItemId");

	UCosmeticStatics_GetSelectedCosmeticItemId_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticGender
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterGender               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECharacterGender UCosmeticStatics::GetSelectedCosmeticGender(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticGender");

	UCosmeticStatics_GetSelectedCosmeticGender_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticFromItemId
// ()
// Parameters:
// int                            ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSelectedCosmetic       OutCosmeticPair                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::GetSelectedCosmeticFromItemId(int ItemId, struct FSelectedCosmetic* OutCosmeticPair)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticFromItemId");

	UCosmeticStatics_GetSelectedCosmeticFromItemId_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCosmeticPair != nullptr)
		*OutCosmeticPair = params.OutCosmeticPair;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetSelectedCosmeticCost
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCosmeticStatics::GetSelectedCosmeticCost(const struct FSelectedCosmetic& SelectedCosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetSelectedCosmeticCost");

	UCosmeticStatics_GetSelectedCosmeticCost_Params params;
	params.SelectedCosmetic = SelectedCosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.GetDefaultSelectedCosmeticForSlot
// ()
// Parameters:
// struct FSelectedCosmetic       SelectedCosmetic               (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticStatics::GetDefaultSelectedCosmeticForSlot(struct FSelectedCosmetic* SelectedCosmetic, const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetDefaultSelectedCosmeticForSlot");

	UCosmeticStatics_GetDefaultSelectedCosmeticForSlot_Params params;
	params.State = State;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SelectedCosmetic != nullptr)
		*SelectedCosmetic = params.SelectedCosmetic;

}


// Function Insurgency.CosmeticStatics.GetCosmeticSlotSubslotCount
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCosmeticStatics::GetCosmeticSlotSubslotCount(ECharacterAppearanceSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.GetCosmeticSlotSubslotCount");

	UCosmeticStatics_GetCosmeticSlotSubslotCount_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.DoesCosmeticSlotSupportEmptyForState
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::DoesCosmeticSlotSupportEmptyForState(ECharacterAppearanceSlot Slot, const struct FProfileCharacterCosmeticState& State, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.DoesCosmeticSlotSupportEmptyForState");

	UCosmeticStatics_DoesCosmeticSlotSupportEmptyForState_Params params;
	params.Slot = Slot;
	params.State = State;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.DoesCosmeticSlotSupportEmpty
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   Faction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::DoesCosmeticSlotSupportEmpty(ECharacterAppearanceSlot Slot, int SubSlot, const struct FName& Faction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.DoesCosmeticSlotSupportEmpty");

	UCosmeticStatics_DoesCosmeticSlotSupportEmpty_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.CosmeticStateRemoveAllInSlot
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticStatics::CosmeticStateRemoveAllInSlot(struct FProfileCharacterCosmeticState* State, ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticStateRemoveAllInSlot");

	UCosmeticStatics_CosmeticStateRemoveAllInSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (State != nullptr)
		*State = params.State;

}


// Function Insurgency.CosmeticStatics.CosmeticStateHasItemInSlot
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::CosmeticStateHasItemInSlot(const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticStateHasItemInSlot");

	UCosmeticStatics_CosmeticStateHasItemInSlot_Params params;
	params.State = State;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.CosmeticStateGetItemInSlot
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSelectedCosmetic       OutCosmeticPair                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::CosmeticStateGetItemInSlot(const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int SubSlot, struct FSelectedCosmetic* OutCosmeticPair)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticStateGetItemInSlot");

	UCosmeticStatics_CosmeticStateGetItemInSlot_Params params;
	params.State = State;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCosmeticPair != nullptr)
		*OutCosmeticPair = params.OutCosmeticPair;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.CosmeticStateGetGender
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharacterGender               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ECharacterGender UCosmeticStatics::CosmeticStateGetGender(const struct FProfileCharacterCosmeticState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticStateGetGender");

	UCosmeticStatics_CosmeticStateGetGender_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.CosmeticStateGetExclusions
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UCosmeticStatics::CosmeticStateGetExclusions(const struct FProfileCharacterCosmeticState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticStateGetExclusions");

	UCosmeticStatics_CosmeticStateGetExclusions_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticStatics.CosmeticStateContainsItem
// ()
// Parameters:
// struct FProfileCharacterCosmeticState State                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::CosmeticStateContainsItem(const struct FProfileCharacterCosmeticState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticStateContainsItem");

	UCosmeticStatics_CosmeticStateContainsItem_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticStatics.CosmeticSlotHasSubslots
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticStatics::CosmeticSlotHasSubslots(ECharacterAppearanceSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticStatics.CosmeticSlotHasSubslots");

	UCosmeticStatics_CosmeticSlotHasSubslots_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCosmeticStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCosmeticStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.CosmeticItem.UpdateVisibility
// ()
// Parameters:
// bool                           bNewVisibility                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::UpdateVisibility(bool bNewVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.UpdateVisibility");

	UCosmeticItem_UpdateVisibility_Params params;
	params.bNewVisibility = bNewVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.SetupCosmetic
// ()
// Parameters:
// class UClass*                  VariationClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::SetupCosmetic(class UClass* VariationClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.SetupCosmetic");

	UCosmeticItem_SetupCosmetic_Params params;
	params.VariationClass = VariationClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.RemoveCosmetic
// ()
void UCosmeticItem::RemoveCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.RemoveCosmetic");

	UCosmeticItem_RemoveCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.ProcessMeshForCache
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 NewOwner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCleanMaterials                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::ProcessMeshForCache(class UINSSkeletalMeshComponent* Mesh, class UObject* NewOwner, bool bCleanMaterials)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.ProcessMeshForCache");

	UCosmeticItem_ProcessMeshForCache_Params params;
	params.Mesh = Mesh;
	params.NewOwner = NewOwner;
	params.bCleanMaterials = bCleanMaterials;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.ProcessForCache
// ()
void UCosmeticItem::ProcessForCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.ProcessForCache");

	UCosmeticItem_ProcessForCache_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.OwnerHasGearLevelInSlot
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGearLevel                 Level                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticItem::OwnerHasGearLevelInSlot(EItemSlot Slot, EItemGearLevel Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.OwnerHasGearLevelInSlot");

	UCosmeticItem_OwnerHasGearLevelInSlot_Params params;
	params.Slot = Slot;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.OnUpdateEquipmentVariation
// ()
// Parameters:
// class UINSSkeletalMeshComponent* Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::OnUpdateEquipmentVariation(class UINSSkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.OnUpdateEquipmentVariation");

	UCosmeticItem_OnUpdateEquipmentVariation_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.OnCosmeticMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SkeletalMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterCosmeticAttachedModel CosmeticModel                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::OnCosmeticMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.OnCosmeticMeshLoaded");

	UCosmeticItem_OnCosmeticMeshLoaded_Params params;
	params.SkeletalMesh = SkeletalMesh;
	params.CosmeticModel = CosmeticModel;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.IsVariationEquippedAnywhere
// ()
// Parameters:
// class UClass*                  VariationClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeSubclasses             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticItem::IsVariationEquippedAnywhere(class UClass* VariationClass, bool bIncludeSubclasses)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.IsVariationEquippedAnywhere");

	UCosmeticItem_IsVariationEquippedAnywhere_Params params;
	params.VariationClass = VariationClass;
	params.bIncludeSubclasses = bIncludeSubclasses;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.IsMeshLoading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticItem::IsMeshLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.IsMeshLoading");

	UCosmeticItem_IsMeshLoading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.InitSharedState
// ()
// Parameters:
// class USharedCosmeticState*    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::InitSharedState(class USharedCosmeticState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.InitSharedState");

	UCosmeticItem_InitSharedState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.InitializeLoadedCosmeticMesh
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SkeletalMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterCosmeticAttachedModel CosmeticModel                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromCache                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::InitializeLoadedCosmeticMesh(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh, bool bFromCache)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.InitializeLoadedCosmeticMesh");

	UCosmeticItem_InitializeLoadedCosmeticMesh_Params params;
	params.SkeletalMesh = SkeletalMesh;
	params.CosmeticModel = CosmeticModel;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;
	params.bFromCache = bFromCache;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.InitializeFromCache
// ()
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           OnlyFirstPersonMeshes          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::InitializeFromCache(class UObject* Object, bool OnlyFirstPersonMeshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.InitializeFromCache");

	UCosmeticItem_InitializeFromCache_Params params;
	params.Object = Object;
	params.OnlyFirstPersonMeshes = OnlyFirstPersonMeshes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.InitializeAttachedMesh
// ()
// Parameters:
// class UINSSkeletalMeshComponent* AttachedMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterCosmeticAttachedModel Model                          (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::InitializeAttachedMesh(class UINSSkeletalMeshComponent* AttachedMesh, struct FCharacterCosmeticAttachedModel* Model, bool bFirstPerson, bool bBodyMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.InitializeAttachedMesh");

	UCosmeticItem_InitializeAttachedMesh_Params params;
	params.AttachedMesh = AttachedMesh;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Model != nullptr)
		*Model = params.Model;

}


// Function Insurgency.CosmeticItem.InitCosmetic
// ()
void UCosmeticItem::InitCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.InitCosmetic");

	UCosmeticItem_InitCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.HasOtherCosmetic
// ()
// Parameters:
// bool                           bIncludeSubclasses             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticItem::HasOtherCosmetic(bool bIncludeSubclasses)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.HasOtherCosmetic");

	UCosmeticItem_HasOtherCosmetic_Params params;
	params.bIncludeSubclasses = bIncludeSubclasses;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.HasGearItem
// ()
// Parameters:
// bool                           bIncludeSubclasses             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticItem::HasGearItem(bool bIncludeSubclasses)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.HasGearItem");

	UCosmeticItem_HasGearItem_Params params;
	params.bIncludeSubclasses = bIncludeSubclasses;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.GetVariationInSlot
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* UCosmeticItem::GetVariationInSlot(ECharacterAppearanceSlot Slot, int SubSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.GetVariationInSlot");

	UCosmeticItem_GetVariationInSlot_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.GetOuterMesh
// ()
// Parameters:
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USkeletalMeshComponent* UCosmeticItem::GetOuterMesh(bool bFirstPerson, bool bBodyMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.GetOuterMesh");

	UCosmeticItem_GetOuterMesh_Params params;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.GetOtherCosmeticsWithVariation
// ()
// Parameters:
// TArray<struct FSelectedCosmetic> OutOtherCosmetics              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::GetOtherCosmeticsWithVariation(TArray<struct FSelectedCosmetic>* OutOtherCosmetics)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.GetOtherCosmeticsWithVariation");

	UCosmeticItem_GetOtherCosmeticsWithVariation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOtherCosmetics != nullptr)
		*OutOtherCosmetics = params.OutOtherCosmetics;

}


// Function Insurgency.CosmeticItem.GetOtherCosmetics
// ()
// Parameters:
// TArray<class UClass*>          OutOtherCosmetics              (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::GetOtherCosmetics(TArray<class UClass*>* OutOtherCosmetics)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.GetOtherCosmetics");

	UCosmeticItem_GetOtherCosmetics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOtherCosmetics != nullptr)
		*OutOtherCosmetics = params.OutOtherCosmetics;

}


// Function Insurgency.CosmeticItem.CreateDuplicate
// ()
// Parameters:
// class UCosmeticItem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCosmeticItem* UCosmeticItem::CreateDuplicate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.CreateDuplicate");

	UCosmeticItem_CreateDuplicate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.CountMeshesLoading
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCosmeticItem::CountMeshesLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.CountMeshesLoading");

	UCosmeticItem_CountMeshesLoading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.CheckRestriction
// ()
// Parameters:
// struct FProfileCharacterCosmeticState CosmeticState                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticItem::CheckRestriction(const struct FProfileCharacterCosmeticState& CosmeticState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.CheckRestriction");

	UCosmeticItem_CheckRestriction_Params params;
	params.CosmeticState = CosmeticState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.BlueprintRemoveCosmetic
// ()
void UCosmeticItem::BlueprintRemoveCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.BlueprintRemoveCosmetic");

	UCosmeticItem_BlueprintRemoveCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.BlueprintOnItemRemoved
// ()
// Parameters:
// class AItemBase*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::BlueprintOnItemRemoved(class AItemBase* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.BlueprintOnItemRemoved");

	UCosmeticItem_BlueprintOnItemRemoved_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.BlueprintOnItemAdded
// ()
// Parameters:
// class AItemBase*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::BlueprintOnItemAdded(class AItemBase* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.BlueprintOnItemAdded");

	UCosmeticItem_BlueprintOnItemAdded_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.BlueprintInitSharedState
// ()
// Parameters:
// class USharedCosmeticState*    NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::BlueprintInitSharedState(class USharedCosmeticState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.BlueprintInitSharedState");

	UCosmeticItem_BlueprintInitSharedState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.BlueprintInitCosmetic
// ()
// Parameters:
// class UClass*                  VariationClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::BlueprintInitCosmetic(class UClass* VariationClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.BlueprintInitCosmetic");

	UCosmeticItem_BlueprintInitCosmetic_Params params;
	params.VariationClass = VariationClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.BlueprintCosmeticMeshLoaded
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SkeletalMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterCosmeticAttachedModel CosmeticModel                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticItem::BlueprintCosmeticMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.BlueprintCosmeticMeshLoaded");

	UCosmeticItem_BlueprintCosmeticMeshLoaded_Params params;
	params.SkeletalMesh = SkeletalMesh;
	params.CosmeticModel = CosmeticModel;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticItem.AttachMesh
// ()
// Parameters:
// struct FCharacterCosmeticAttachedModel MeshToAttach                   (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bFirstPerson                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBodyMesh                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UINSSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UINSSkeletalMeshComponent* UCosmeticItem::AttachMesh(struct FCharacterCosmeticAttachedModel* MeshToAttach, bool bFirstPerson, bool bBodyMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.AttachMesh");

	UCosmeticItem_AttachMesh_Params params;
	params.bFirstPerson = bFirstPerson;
	params.bBodyMesh = bBodyMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MeshToAttach != nullptr)
		*MeshToAttach = params.MeshToAttach;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticItem.ApplyMaterialSwaps
// ()
// Parameters:
// class UINSSkeletalMeshComponent* SkeletalMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterCosmeticAttachedModel CosmeticModel                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void UCosmeticItem::ApplyMaterialSwaps(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticItem.ApplyMaterialSwaps");

	UCosmeticItem_ApplyMaterialSwaps_Params params;
	params.SkeletalMesh = SkeletalMesh;
	params.CosmeticModel = CosmeticModel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCosmeticItem::AfterRead()
{
	UCollectible::AfterRead();

	READ_PTR_FULL(VoiceDictionary, UCharacterDialogueDictionary);
	READ_PTR_FULL(OuterSoldier, AINSSoldier);
	READ_PTR_FULL(OuterProfileCharacter, AProfileCharacter);
	READ_PTR_FULL(OuterRagdoll, ARagdoll);
	READ_PTR_FULL(OuterPawn, APawn);
	READ_PTR_FULL(OuterObject, UObject);
	READ_PTR_FULL(SharedCosmeticState, USharedCosmeticState);
	READ_PTR_FULL(DefaultVariation, UClass);
	READ_PTR_FULL(Variation, UCosmeticVariation);
}

void UCosmeticItem::BeforeDelete()
{
	UCollectible::BeforeDelete();

	DELE_PTR_FULL(VoiceDictionary);
	DELE_PTR_FULL(OuterSoldier);
	DELE_PTR_FULL(OuterProfileCharacter);
	DELE_PTR_FULL(OuterRagdoll);
	DELE_PTR_FULL(OuterPawn);
	DELE_PTR_FULL(OuterObject);
	DELE_PTR_FULL(SharedCosmeticState);
	DELE_PTR_FULL(DefaultVariation);
	DELE_PTR_FULL(Variation);
}

void UCosmeticItemArms::AfterRead()
{
	UCosmeticItem::AfterRead();

}

void UCosmeticItemArms::BeforeDelete()
{
	UCosmeticItem::BeforeDelete();

}

// Function Insurgency.CosmeticCache.SetMergedMeshOnObject
// ()
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCosmeticCache::SetMergedMeshOnObject(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.SetMergedMeshOnObject");

	UCosmeticCache_SetMergedMeshOnObject_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticCache.PrintCache
// ()
void UCosmeticCache::PrintCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.PrintCache");

	UCosmeticCache_PrintCache_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.OnSkeletalMeshMergeCompleted
// ()
void UCosmeticCache::OnSkeletalMeshMergeCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.OnSkeletalMeshMergeCompleted");

	UCosmeticCache_OnSkeletalMeshMergeCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.OnCosmeticLoaded
// ()
// Parameters:
// class UCosmeticItem*           Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticCache::OnCosmeticLoaded(class UCosmeticItem* Cosmetic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.OnCosmeticLoaded");

	UCosmeticCache_OnCosmeticLoaded_Params params;
	params.Cosmetic = Cosmetic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.Merge
// ()
void UCosmeticCache::Merge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.Merge");

	UCosmeticCache_Merge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.MarkCosmeticsSet
// ()
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticCache::MarkCosmeticsSet(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.MarkCosmeticsSet");

	UCosmeticCache_MarkCosmeticsSet_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.GetMergedMesh
// ()
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCosmeticItem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCosmeticItem* UCosmeticCache::GetMergedMesh(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.GetMergedMesh");

	UCosmeticCache_GetMergedMesh_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticCache.GetCosmeticFromCache
// ()
// Parameters:
// ECharacterAppearanceSlot       Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SubSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCosmeticItem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCosmeticItem* UCosmeticCache::GetCosmeticFromCache(ECharacterAppearanceSlot Slot, int SubSlot, class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.GetCosmeticFromCache");

	UCosmeticCache_GetCosmeticFromCache_Params params;
	params.Slot = Slot;
	params.SubSlot = SubSlot;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticCache.CreateNewCosmetic
// ()
// Parameters:
// class UClass*                  CosmeticClass                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USharedCosmeticState*    SharedState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCosmeticItem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCosmeticItem* UCosmeticCache::CreateNewCosmetic(class UClass* CosmeticClass, class UObject* Object, class USharedCosmeticState* SharedState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.CreateNewCosmetic");

	UCosmeticCache_CreateNewCosmetic_Params params;
	params.CosmeticClass = CosmeticClass;
	params.Object = Object;
	params.SharedState = SharedState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CosmeticCache.ClearCosmeticCache
// ()
// Parameters:
// bool                           bSwitchedTeams                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticCache::ClearCosmeticCache(bool bSwitchedTeams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.ClearCosmeticCache");

	UCosmeticCache_ClearCosmeticCache_Params params;
	params.bSwitchedTeams = bSwitchedTeams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.CheckAllMeshesLoaded
// ()
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticCache::CheckAllMeshesLoaded(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.CheckAllMeshesLoaded");

	UCosmeticCache_CheckAllMeshesLoaded_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.CacheCosmetics
// ()
// Parameters:
// TArray<class UCosmeticItem*>   Cosmetics                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticCache::CacheCosmetics(TArray<class UCosmeticItem*> Cosmetics, class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.CacheCosmetics");

	UCosmeticCache_CacheCosmetics_Params params;
	params.Cosmetics = Cosmetics;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CosmeticCache.CacheCosmetic
// ()
// Parameters:
// class UCosmeticItem*           Cosmetic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCosmeticCache::CacheCosmetic(class UCosmeticItem* Cosmetic, class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CosmeticCache.CacheCosmetic");

	UCosmeticCache_CacheCosmetic_Params params;
	params.Cosmetic = Cosmetic;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCosmeticCache::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(SkeletalMeshMerger, UINSSkeletalMeshMerge);
	READ_PTR_FULL(SoldierGhostMesh, UINSSkeletalMeshComponent);
}

void UCosmeticCache::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(SkeletalMeshMerger);
	DELE_PTR_FULL(SoldierGhostMesh);
}

// Function Insurgency.CopyPoseAnimInstance.SetFollowedSkeletalMesh
// ()
// Parameters:
// class USkeletalMeshComponent*  MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCopyPoseAnimInstance::SetFollowedSkeletalMesh(class USkeletalMeshComponent* MeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CopyPoseAnimInstance.SetFollowedSkeletalMesh");

	UCopyPoseAnimInstance_SetFollowedSkeletalMesh_Params params;
	params.MeshComponent = MeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CopyPoseAnimInstance.ApplyMorphTargets
// ()
void UCopyPoseAnimInstance::ApplyMorphTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CopyPoseAnimInstance.ApplyMorphTargets");

	UCopyPoseAnimInstance_ApplyMorphTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCopyPoseAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

}

void UCopyPoseAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

}

// Function Insurgency.ControllerLayout.ApplyToProfile
// ()
// Parameters:
// class UINSPlayerLocalProfile*  Profile                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UControllerLayout::ApplyToProfile(class UINSPlayerLocalProfile* Profile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ControllerLayout.ApplyToProfile");

	UControllerLayout_ApplyToProfile_Params params;
	params.Profile = Profile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControllerLayout::AfterRead()
{
	UDataAsset::AfterRead();

}

void UControllerLayout::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.ConsumeItemProxy.ConsumeEntitlement
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 EntitlementId                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            UserIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UConsumeItemProxy*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UConsumeItemProxy* UConsumeItemProxy::ConsumeEntitlement(class UObject* WorldContextObject, const struct FString& EntitlementId, int UserIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ConsumeItemProxy.ConsumeEntitlement");

	UConsumeItemProxy_ConsumeEntitlement_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EntitlementId = EntitlementId;
	params.UserIndex = UserIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UConsumeItemProxy::AfterRead()
{
	UBlueprintAsyncActionBase::AfterRead();

}

void UConsumeItemProxy::BeforeDelete()
{
	UBlueprintAsyncActionBase::BeforeDelete();

}

void UCompetitiveLeaverPenaltyMessage::AfterRead()
{
	ULocalMessage::AfterRead();

}

void UCompetitiveLeaverPenaltyMessage::BeforeDelete()
{
	ULocalMessage::BeforeDelete();

}

// Function Insurgency.CompassHUD.UpdateMarkerAngle
// ()
// Parameters:
// struct FVector                 CameraLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                CameraRotation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UCompassHUD::UpdateMarkerAngle(const struct FVector& CameraLocation, const struct FRotator& CameraRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.UpdateMarkerAngle");

	UCompassHUD_UpdateMarkerAngle_Params params;
	params.CameraLocation = CameraLocation;
	params.CameraRotation = CameraRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.UpdateAlwaysVisible
// ()
void UCompassHUD::UpdateAlwaysVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.UpdateAlwaysVisible");

	UCompassHUD_UpdateAlwaysVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.SetDisplayingMarkers
// ()
// Parameters:
// bool                           bHasMarkers                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCompassHUD::SetDisplayingMarkers(bool bHasMarkers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.SetDisplayingMarkers");

	UCompassHUD_SetDisplayingMarkers_Params params;
	params.bHasMarkers = bHasMarkers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.OnShowRadialMenu
// ()
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCompassHUD::OnShowRadialMenu(class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.OnShowRadialMenu");

	UCompassHUD_OnShowRadialMenu_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.OnRoundReset
// ()
void UCompassHUD::OnRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.OnRoundReset");

	UCompassHUD_OnRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.OnRoundEnd
// ()
// Parameters:
// ERoundConclusion               RoundEndReason                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  WinningFaction                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FOtherPlayerAwardedTagline> Taglines                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCompassHUD::OnRoundEnd(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.OnRoundEnd");

	UCompassHUD_OnRoundEnd_Params params;
	params.RoundEndReason = RoundEndReason;
	params.WinningFaction = WinningFaction;
	params.Taglines = Taglines;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.OnPlayerKilled
// ()
// Parameters:
// struct FPlayerKillNotice       KillNotice                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void UCompassHUD::OnPlayerKilled(const struct FPlayerKillNotice& KillNotice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.OnPlayerKilled");

	UCompassHUD_OnPlayerKilled_Params params;
	params.KillNotice = KillNotice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.OnHideRadialMenu
// ()
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCompassHUD::OnHideRadialMenu(class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.OnHideRadialMenu");

	UCompassHUD_OnHideRadialMenu_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.OnCompassToggledByUser
// ()
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCompassHUD::OnCompassToggledByUser(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.OnCompassToggledByUser");

	UCompassHUD_OnCompassToggledByUser_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CompassHUD.CanFadeOutCompass
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCompassHUD::CanFadeOutCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.CanFadeOutCompass");

	UCompassHUD_CanFadeOutCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CompassHUD.BindGameStateEvent
// ()
// Parameters:
// class AGameStateBase*          GameState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UCompassHUD::BindGameStateEvent(class AGameStateBase* GameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CompassHUD.BindGameStateEvent");

	UCompassHUD_BindGameStateEvent_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCompassHUD::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(BasePlayerController, AINSBasePlayerController);
	READ_PTR_FULL(Bound_MarkerOverlay, UOverlay);
	READ_PTR_FULL(Bound_CompassImage, UImage);
	READ_PTR_FULL(Bound_CompassDirectionText, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextN, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextNE, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextE, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextSE, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextS, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextSW, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextW, UTextBlock);
	READ_PTR_FULL(Bound_CardinalTextNW, UTextBlock);
	READ_PTR_FULL(Animation_FadeOut, UWidgetAnimation);
}

void UCompassHUD::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(BasePlayerController);
	DELE_PTR_FULL(Bound_MarkerOverlay);
	DELE_PTR_FULL(Bound_CompassImage);
	DELE_PTR_FULL(Bound_CompassDirectionText);
	DELE_PTR_FULL(Bound_CardinalTextN);
	DELE_PTR_FULL(Bound_CardinalTextNE);
	DELE_PTR_FULL(Bound_CardinalTextE);
	DELE_PTR_FULL(Bound_CardinalTextSE);
	DELE_PTR_FULL(Bound_CardinalTextS);
	DELE_PTR_FULL(Bound_CardinalTextSW);
	DELE_PTR_FULL(Bound_CardinalTextW);
	DELE_PTR_FULL(Bound_CardinalTextNW);
	DELE_PTR_FULL(Animation_FadeOut);
}

void UCollectibleBundle::AfterRead()
{
	UCollectible::AfterRead();

}

void UCollectibleBundle::BeforeDelete()
{
	UCollectible::BeforeDelete();

}

// Function Insurgency.ChatBox.StartChatInput
// ()
// Parameters:
// bool                           bForTeamOnly                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UChatBox::StartChatInput(bool bForTeamOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.StartChatInput");

	UChatBox_StartChatInput_Params params;
	params.bForTeamOnly = bForTeamOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.SendChatMessage
// ()
// Parameters:
// struct FText                   Message                        (Parm, NativeAccessSpecifierPublic)
void UChatBox::SendChatMessage(const struct FText& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.SendChatMessage");

	UChatBox_SendChatMessage_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.ReduceMessagesSentCount
// ()
void UChatBox::ReduceMessagesSentCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.ReduceMessagesSentCount");

	UChatBox_ReduceMessagesSentCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.OnChatMessageRecieved
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UChatBox::OnChatMessageRecieved(const struct FText& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.OnChatMessageRecieved");

	UChatBox_OnChatMessageRecieved_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.OnChatInputStarted
// ()
void UChatBox::OnChatInputStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.OnChatInputStarted");

	UChatBox_OnChatInputStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.OnChatInputEnded
// ()
void UChatBox::OnChatInputEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.OnChatInputEnded");

	UChatBox_OnChatInputEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.HoldMessage
// ()
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UChatBox::HoldMessage(const struct FText& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.HoldMessage");

	UChatBox_HoldMessage_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.GetChatBody
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UChatBox::GetChatBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.GetChatBody");

	UChatBox_GetChatBody_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.ChatBox.EndChatInput
// ()
void UChatBox::EndChatInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.EndChatInput");

	UChatBox_EndChatInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ChatBox.AtMaxSendLimit
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UChatBox::AtMaxSendLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ChatBox.AtMaxSendLimit");

	UChatBox_AtMaxSendLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UChatBox::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(Input, UEditableTextBox);
}

void UChatBox::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(Input);
}

void UCharacterDialogueStringTable::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCharacterDialogueStringTable::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCharacterDialogueDictionary::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(FocusInhale, UAkAudioEvent);
	READ_PTR_FULL(FocusExhale, UAkAudioEvent);
	READ_PTR_FULL(BreathingLoop, UAkAudioEvent);
}

void UCharacterDialogueDictionary::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(FocusInhale);
	DELE_PTR_FULL(FocusExhale);
	DELE_PTR_FULL(BreathingLoop);
}

// Function Insurgency.CharacterDialogueComponent.StopActiveDialogue
// ()
void UCharacterDialogueComponent::StopActiveDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CharacterDialogueComponent.StopActiveDialogue");

	UCharacterDialogueComponent_StopActiveDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CharacterDialogueComponent.PlayDialogue
// ()
// Parameters:
// struct FCharacterResponseRequest SpeakRequest                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCharacterDialogueComponent::PlayDialogue(const struct FCharacterResponseRequest& SpeakRequest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CharacterDialogueComponent.PlayDialogue");

	UCharacterDialogueComponent_PlayDialogue_Params params;
	params.SpeakRequest = SpeakRequest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CharacterDialogueComponent.OnDialogueFinished
// ()
void UCharacterDialogueComponent::OnDialogueFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CharacterDialogueComponent.OnDialogueFinished");

	UCharacterDialogueComponent_OnDialogueFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CharacterDialogueComponent.IsPlayingDialogue
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UCharacterDialogueComponent::IsPlayingDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CharacterDialogueComponent.IsPlayingDialogue");

	UCharacterDialogueComponent_IsPlayingDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.CharacterDialogueComponent.GetTimeSinceLastSound
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UCharacterDialogueComponent::GetTimeSinceLastSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CharacterDialogueComponent.GetTimeSinceLastSound");

	UCharacterDialogueComponent_GetTimeSinceLastSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterDialogueComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetComponent, UINSAudioComponent);
}

void UCharacterDialogueComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetComponent);
}

// Function Insurgency.CaptureZone.OnEndObjectiveOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ACaptureZone::OnEndObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CaptureZone.OnEndObjectiveOverlap");

	ACaptureZone_OnEndObjectiveOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.CaptureZone.OnBeginObjectiveOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ACaptureZone::OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.CaptureZone.OnBeginObjectiveOverlap");

	ACaptureZone_OnBeginObjectiveOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACaptureZone::AfterRead()
{
	AVolume::AfterRead();

	READ_PTR_FULL(Objective, AObjectiveCapturable);
}

void ACaptureZone::BeforeDelete()
{
	AVolume::BeforeDelete();

	DELE_PTR_FULL(Objective);
}

// Function Insurgency.BulletPenetrationSettings.GetBulletPenetrationValuesForSurface
// ()
// Parameters:
// TEnumAsByte<EPhysicalSurface>  SurfaceType                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBulletPenetrationPowerValues ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FBulletPenetrationPowerValues UBulletPenetrationSettings::GetBulletPenetrationValuesForSurface(TEnumAsByte<EPhysicalSurface>* SurfaceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BulletPenetrationSettings.GetBulletPenetrationValuesForSurface");

	UBulletPenetrationSettings_GetBulletPenetrationValuesForSurface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SurfaceType != nullptr)
		*SurfaceType = params.SurfaceType;


	return params.ReturnValue;
}


void UBulletPenetrationSettings::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(RicochetAudioEvent, UAkAudioEvent);
}

void UBulletPenetrationSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(RicochetAudioEvent);
}

// Function Insurgency.BulletManager.SetDebugTraces
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ABulletManager::SetDebugTraces(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BulletManager.SetDebugTraces");

	ABulletManager_SetDebugTraces_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BulletManager.SetDebugImpacts
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ABulletManager::SetDebugImpacts(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BulletManager.SetDebugImpacts");

	ABulletManager_SetDebugImpacts_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BulletManager.GetPresimulatedTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ABulletManager::GetPresimulatedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BulletManager.GetPresimulatedTime");

	ABulletManager_GetPresimulatedTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BulletManager.AddBullet
// ()
// Parameters:
// struct FSimulatedBullet        InBullet                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ABulletManager::AddBullet(const struct FSimulatedBullet& InBullet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BulletManager.AddBullet");

	ABulletManager_AddBullet_Params params;
	params.InBullet = InBullet;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABulletManager::AfterRead()
{
	AInfo::AfterRead();

	READ_PTR_FULL(DefaultBulletPenetrationSettings, UBulletPenetrationSettings);
}

void ABulletManager::BeforeDelete()
{
	AInfo::BeforeDelete();

	DELE_PTR_FULL(DefaultBulletPenetrationSettings);
}

// Function Insurgency.BreakableComponent.SetBrokenMaterials
// ()
void UBreakableComponent::SetBrokenMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.SetBrokenMaterials");

	UBreakableComponent_SetBrokenMaterials_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.ResetBreakable
// ()
void UBreakableComponent::ResetBreakable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.ResetBreakable");

	UBreakableComponent_ResetBreakable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.RemoveChildDecals
// ()
void UBreakableComponent::RemoveChildDecals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.RemoveChildDecals");

	UBreakableComponent_RemoveChildDecals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.OnReset
// ()
void UBreakableComponent::OnReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.OnReset");

	UBreakableComponent_OnReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.OnRep_Health
// ()
void UBreakableComponent::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.OnRep_Health");

	UBreakableComponent_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.OnRep_bBrokenAuthority
// ()
void UBreakableComponent::OnRep_bBrokenAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.OnRep_bBrokenAuthority");

	UBreakableComponent_OnRep_bBrokenAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.MulticastBreak
// ()
void UBreakableComponent::MulticastBreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.MulticastBreak");

	UBreakableComponent_MulticastBreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.IsBroken
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBreakableComponent::IsBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.IsBroken");

	UBreakableComponent_IsBroken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BreakableComponent.ChangeMesh
// ()
void UBreakableComponent::ChangeMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.ChangeMesh");

	UBreakableComponent_ChangeMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.CanBreakThrough
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBreakableComponent::CanBreakThrough()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.CanBreakThrough");

	UBreakableComponent_CanBreakThrough_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BreakableComponent.Break
// ()
// Parameters:
// struct FVector                 HitLocation                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ShotDirection                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBreakableComponent::Break(const struct FVector& HitLocation, const struct FVector& ShotDirection, float DamageImpulse, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.Break");

	UBreakableComponent_Break_Params params;
	params.HitLocation = HitLocation;
	params.ShotDirection = ShotDirection;
	params.DamageImpulse = DamageImpulse;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BreakableComponent.BlueprintOnHealthChanged
// ()
void UBreakableComponent::BlueprintOnHealthChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BreakableComponent.BlueprintOnHealthChanged");

	UBreakableComponent_BlueprintOnHealthChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBreakableComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMesh);
	READ_PTR_FULL(MeshBroken, UStaticMesh);
	READ_PTR_FULL(BreakParticle, UParticleSystem);
	READ_PTR_FULL(BreakParticleComponent, UParticleSystemComponent);
	READ_PTR_FULL(BreakSound, UAkAudioEvent);
	READ_PTR_FULL(GibBreakParticle, UParticleSystem);
	READ_PTR_FULL(PhysicsPropSurfaceReaction, USurfaceReaction);
}

void UBreakableComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(MeshBroken);
	DELE_PTR_FULL(BreakParticle);
	DELE_PTR_FULL(BreakParticleComponent);
	DELE_PTR_FULL(BreakSound);
	DELE_PTR_FULL(GibBreakParticle);
	DELE_PTR_FULL(PhysicsPropSurfaceReaction);
}

void UBrassManager::AfterRead()
{
	UObject::AfterRead();

}

void UBrassManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.BotHandler.GetController
// ()
// Parameters:
// class AINSAISoldierController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSAISoldierController* UBotHandler::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotHandler.GetController");

	UBotHandler_GetController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotHandler::AfterRead()
{
	UObject::AfterRead();

}

void UBotHandler::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.BotObjectiveHandler.HasArrivedAtObjective
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotObjectiveHandler::HasArrivedAtObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotObjectiveHandler.HasArrivedAtObjective");

	UBotObjectiveHandler_HasArrivedAtObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotObjectiveHandler.GetDesiredObjective
// ()
// Parameters:
// class AObjectiveBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AObjectiveBase* UBotObjectiveHandler::GetDesiredObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotObjectiveHandler.GetDesiredObjective");

	UBotObjectiveHandler_GetDesiredObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotObjectiveHandler::AfterRead()
{
	UBotHandler::AfterRead();

}

void UBotObjectiveHandler::BeforeDelete()
{
	UBotHandler::BeforeDelete();

}

void UBotMovementHandler::AfterRead()
{
	UBotHandler::AfterRead();

}

void UBotMovementHandler::BeforeDelete()
{
	UBotHandler::BeforeDelete();

}

// Function Insurgency.BotMoodHandler.GetMood
// ()
// Parameters:
// EBotAIMood                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EBotAIMood UBotMoodHandler::GetMood()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMoodHandler.GetMood");

	UBotMoodHandler_GetMood_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotMoodHandler.GetCombatIntensity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotMoodHandler::GetCombatIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMoodHandler.GetCombatIntensity");

	UBotMoodHandler_GetCombatIntensity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotMoodHandler.AddCombatIntensity
// ()
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotMoodHandler::AddCombatIntensity(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMoodHandler.AddCombatIntensity");

	UBotMoodHandler_AddCombatIntensity_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBotMoodHandler::AfterRead()
{
	UBotHandler::AfterRead();

}

void UBotMoodHandler::BeforeDelete()
{
	UBotHandler::BeforeDelete();

}

// Function Insurgency.BotMemoryHandler.GetTargetMemoryForPawn
// ()
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBotKnownTargetMemory*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotKnownTargetMemory* UBotMemoryHandler::GetTargetMemoryForPawn(class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMemoryHandler.GetTargetMemoryForPawn");

	UBotMemoryHandler_GetTargetMemoryForPawn_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotMemoryHandler.GetKnownTargets
// ()
// Parameters:
// EBotKnownQuery                 QueryType                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBotKnownTargetMemory*> KnownTargetArray               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bVisibleOnly                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxTimeSinceLastKnown          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreAwareness               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotMemoryHandler::GetKnownTargets(EBotKnownQuery QueryType, TArray<class UBotKnownTargetMemory*>* KnownTargetArray, bool bVisibleOnly, float MaxTimeSinceLastKnown, bool bIgnoreAwareness)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMemoryHandler.GetKnownTargets");

	UBotMemoryHandler_GetKnownTargets_Params params;
	params.QueryType = QueryType;
	params.bVisibleOnly = bVisibleOnly;
	params.MaxTimeSinceLastKnown = MaxTimeSinceLastKnown;
	params.bIgnoreAwareness = bIgnoreAwareness;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (KnownTargetArray != nullptr)
		*KnownTargetArray = params.KnownTargetArray;

}


// Function Insurgency.BotMemoryHandler.GetKnownCount
// ()
// Parameters:
// EBotKnownQuery                 QueryType                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bVisibleOnly                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxTimeSinceLastKnown          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UBotMemoryHandler::GetKnownCount(EBotKnownQuery QueryType, bool bVisibleOnly, float MaxTimeSinceLastKnown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMemoryHandler.GetKnownCount");

	UBotMemoryHandler_GetKnownCount_Params params;
	params.QueryType = QueryType;
	params.bVisibleOnly = bVisibleOnly;
	params.MaxTimeSinceLastKnown = MaxTimeSinceLastKnown;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotMemoryHandler.AddOrUpdateVisiblePawn
// ()
// Parameters:
// class APawn*                   SeenPawn                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotMemoryHandler::AddOrUpdateVisiblePawn(class APawn* SeenPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMemoryHandler.AddOrUpdateVisiblePawn");

	UBotMemoryHandler_AddOrUpdateVisiblePawn_Params params;
	params.SeenPawn = SeenPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotMemoryHandler.AddOrUpdateSound
// ()
// Parameters:
// class APawn*                   HeardPawn                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHasLOS                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotMemoryHandler::AddOrUpdateSound(class APawn* HeardPawn, const struct FVector& Location, float Distance, bool bHasLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotMemoryHandler.AddOrUpdateSound");

	UBotMemoryHandler_AddOrUpdateSound_Params params;
	params.HeardPawn = HeardPawn;
	params.Location = Location;
	params.Distance = Distance;
	params.bHasLOS = bHasLOS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBotMemoryHandler::AfterRead()
{
	UBotHandler::AfterRead();

}

void UBotMemoryHandler::BeforeDelete()
{
	UBotHandler::BeforeDelete();

}

// Function Insurgency.BotKnownTargetMemory.WasVisibleRecently
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::WasVisibleRecently()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.WasVisibleRecently");

	UBotKnownTargetMemory_WasVisibleRecently_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.SetThreatRanking
// ()
// Parameters:
// float                          NewThreatRanking               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotKnownTargetMemory::SetThreatRanking(float NewThreatRanking)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.SetThreatRanking");

	UBotKnownTargetMemory_SetThreatRanking_Params params;
	params.NewThreatRanking = NewThreatRanking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.MarkTargetAsDead
// ()
void UBotKnownTargetMemory::MarkTargetAsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.MarkTargetAsDead");

	UBotKnownTargetMemory_MarkTargetAsDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.MarkStartedEngaging
// ()
void UBotKnownTargetMemory::MarkStartedEngaging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.MarkStartedEngaging");

	UBotKnownTargetMemory_MarkStartedEngaging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.MarkFinishedEngaging
// ()
void UBotKnownTargetMemory::MarkFinishedEngaging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.MarkFinishedEngaging");

	UBotKnownTargetMemory_MarkFinishedEngaging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.MarkBloatBoxUpdated
// ()
// Parameters:
// struct FVector2D               NewBloatBox                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotKnownTargetMemory::MarkBloatBoxUpdated(const struct FVector2D& NewBloatBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.MarkBloatBoxUpdated");

	UBotKnownTargetMemory_MarkBloatBoxUpdated_Params params;
	params.NewBloatBox = NewBloatBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.MakeAwareOfTargetAtLocation
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotKnownTargetMemory::MakeAwareOfTargetAtLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.MakeAwareOfTargetAtLocation");

	UBotKnownTargetMemory_MakeAwareOfTargetAtLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.MakeAwareOfTarget
// ()
void UBotKnownTargetMemory::MakeAwareOfTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.MakeAwareOfTarget");

	UBotKnownTargetMemory_MakeAwareOfTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotKnownTargetMemory.IsValidCombatTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsValidCombatTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsValidCombatTarget");

	UBotKnownTargetMemory_IsValidCombatTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.IsUnreachable
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsUnreachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsUnreachable");

	UBotKnownTargetMemory_IsUnreachable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.IsTargetAlive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsTargetAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsTargetAlive");

	UBotKnownTargetMemory_IsTargetAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.IsLookingAtMe
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsLookingAtMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsLookingAtMe");

	UBotKnownTargetMemory_IsLookingAtMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.IsEngaging
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsEngaging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsEngaging");

	UBotKnownTargetMemory_IsEngaging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.IsBlindingMe
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsBlindingMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsBlindingMe");

	UBotKnownTargetMemory_IsBlindingMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.IsAwareOfTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::IsAwareOfTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.IsAwareOfTarget");

	UBotKnownTargetMemory_IsAwareOfTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.HasLOS
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::HasLOS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.HasLOS");

	UBotKnownTargetMemory_HasLOS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.HasBeenInMeleeFor
// ()
// Parameters:
// float                          Duration                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::HasBeenInMeleeFor(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.HasBeenInMeleeFor");

	UBotKnownTargetMemory_HasBeenInMeleeFor_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetTotalTimeVisible
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotKnownTargetMemory::GetTotalTimeVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetTotalTimeVisible");

	UBotKnownTargetMemory_GetTotalTimeVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetTimeSinceStartedEngaging
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotKnownTargetMemory::GetTimeSinceStartedEngaging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetTimeSinceStartedEngaging");

	UBotKnownTargetMemory_GetTimeSinceStartedEngaging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetTimeSinceLastSeen
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotKnownTargetMemory::GetTimeSinceLastSeen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetTimeSinceLastSeen");

	UBotKnownTargetMemory_GetTimeSinceLastSeen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetTimeSinceLastKnown
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotKnownTargetMemory::GetTimeSinceLastKnown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetTimeSinceLastKnown");

	UBotKnownTargetMemory_GetTimeSinceLastKnown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetTimeSinceLastBloatBoxUpdate
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotKnownTargetMemory::GetTimeSinceLastBloatBoxUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetTimeSinceLastBloatBoxUpdate");

	UBotKnownTargetMemory_GetTimeSinceLastBloatBoxUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetThreatRanking
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotKnownTargetMemory::GetThreatRanking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetThreatRanking");

	UBotKnownTargetMemory_GetThreatRanking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetTargetPawn
// ()
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APawn* UBotKnownTargetMemory::GetTargetPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetTargetPawn");

	UBotKnownTargetMemory_GetTargetPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetPreviousBloatBox
// ()
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D UBotKnownTargetMemory::GetPreviousBloatBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetPreviousBloatBox");

	UBotKnownTargetMemory_GetPreviousBloatBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetLastSeenPosition
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UBotKnownTargetMemory::GetLastSeenPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetLastSeenPosition");

	UBotKnownTargetMemory_GetLastSeenPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetLastKnownVelocity
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UBotKnownTargetMemory::GetLastKnownVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetLastKnownVelocity");

	UBotKnownTargetMemory_GetLastKnownVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetLastKnownPosition
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UBotKnownTargetMemory::GetLastKnownPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetLastKnownPosition");

	UBotKnownTargetMemory_GetLastKnownPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.GetCurrentBloatBox
// ()
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D UBotKnownTargetMemory::GetCurrentBloatBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.GetCurrentBloatBox");

	UBotKnownTargetMemory_GetCurrentBloatBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotKnownTargetMemory.EverHadLOS
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotKnownTargetMemory::EverHadLOS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotKnownTargetMemory.EverHadLOS");

	UBotKnownTargetMemory_EverHadLOS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotKnownTargetMemory::AfterRead()
{
	UObject::AfterRead();

}

void UBotKnownTargetMemory::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.BotInteractComponent.SetEnabled
// ()
// Parameters:
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotInteractComponent::SetEnabled(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotInteractComponent.SetEnabled");

	UBotInteractComponent_SetEnabled_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBotInteractComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(InteractingBot, AINSAISoldierController);
}

void UBotInteractComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(InteractingBot);
}

// Function Insurgency.BotCombatHandler.SwitchWeapon
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::SwitchWeapon(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SwitchWeapon");

	UBotCombatHandler_SwitchWeapon_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.ShouldWearGasMask
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::ShouldWearGasMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.ShouldWearGasMask");

	UBotCombatHandler_ShouldWearGasMask_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.ShouldSpeakReactions
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::ShouldSpeakReactions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.ShouldSpeakReactions");

	UBotCombatHandler_ShouldSpeakReactions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.SetTargetSeat
// ()
// Parameters:
// class UVehicleSeatComponent*   Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::SetTargetSeat(class UVehicleSeatComponent* Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SetTargetSeat");

	UBotCombatHandler_SetTargetSeat_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.SetSuppressing
// ()
// Parameters:
// bool                           bState                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::SetSuppressing(bool bState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SetSuppressing");

	UBotCombatHandler_SetSuppressing_Params params;
	params.bState = bState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.SetSpeakReactions
// ()
// Parameters:
// bool                           bShouldSpeak                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::SetSpeakReactions(bool bShouldSpeak)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SetSpeakReactions");

	UBotCombatHandler_SetSpeakReactions_Params params;
	params.bShouldSpeak = bShouldSpeak;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.SetLocationToTakeCoverFrom
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::SetLocationToTakeCoverFrom(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SetLocationToTakeCoverFrom");

	UBotCombatHandler_SetLocationToTakeCoverFrom_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.SetDesiredFiremode
// ()
// Parameters:
// EFirearmFiremode               NewFiremode                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::SetDesiredFiremode(EFirearmFiremode NewFiremode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SetDesiredFiremode");

	UBotCombatHandler_SetDesiredFiremode_Params params;
	params.NewFiremode = NewFiremode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.SetAttackState
// ()
// Parameters:
// bool                           bShouldFire                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::SetAttackState(bool bShouldFire)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SetAttackState");

	UBotCombatHandler_SetAttackState_Params params;
	params.bShouldFire = bShouldFire;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.SelectBestWeapon
// ()
void UBotCombatHandler::SelectBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.SelectBestWeapon");

	UBotCombatHandler_SelectBestWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.Reload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.Reload");

	UBotCombatHandler_Reload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.IsWeaponEmpty
// ()
// Parameters:
// EItemSlot                      Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::IsWeaponEmpty(EItemSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.IsWeaponEmpty");

	UBotCombatHandler_IsWeaponEmpty_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.IsValidSeat
// ()
// Parameters:
// class UVehicleSeatComponent*   Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::IsValidSeat(class UVehicleSeatComponent* Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.IsValidSeat");

	UBotCombatHandler_IsValidSeat_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.IsThreatAimingTowardMe
// ()
// Parameters:
// class AINSSoldier*             Threat                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::IsThreatAimingTowardMe(class AINSSoldier* Threat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.IsThreatAimingTowardMe");

	UBotCombatHandler_IsThreatAimingTowardMe_Params params;
	params.Threat = Threat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.IsSwitchingWeapon
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::IsSwitchingWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.IsSwitchingWeapon");

	UBotCombatHandler_IsSwitchingWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.IsSuppressing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotCombatHandler::IsSuppressing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.IsSuppressing");

	UBotCombatHandler_IsSuppressing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetTurnSpeed
// ()
// Parameters:
// struct FRotator                OldRotaton                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                NewRotation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotCombatHandler::GetTurnSpeed(const struct FRotator& OldRotaton, const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetTurnSpeed");

	UBotCombatHandler_GetTurnSpeed_Params params;
	params.OldRotaton = OldRotaton;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetTargetSeat
// ()
// Parameters:
// class UVehicleSeatComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UVehicleSeatComponent* UBotCombatHandler::GetTargetSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetTargetSeat");

	UBotCombatHandler_GetTargetSeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetMorale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotCombatHandler::GetMorale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetMorale");

	UBotCombatHandler_GetMorale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetLocationToTakeCoverFrom
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UBotCombatHandler::GetLocationToTakeCoverFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetLocationToTakeCoverFrom");

	UBotCombatHandler_GetLocationToTakeCoverFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetGrenadeThrowbackRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotCombatHandler::GetGrenadeThrowbackRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetGrenadeThrowbackRadius");

	UBotCombatHandler_GetGrenadeThrowbackRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetFirearmCategoryConfig
// ()
// Parameters:
// class AItemFirearm*            Firearm                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFirearmAIConfig        ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FFirearmAIConfig UBotCombatHandler::GetFirearmCategoryConfig(class AItemFirearm* Firearm)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetFirearmCategoryConfig");

	UBotCombatHandler_GetFirearmCategoryConfig_Params params;
	params.Firearm = Firearm;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetCurrentPriorityTarget
// ()
// Parameters:
// bool                           bVisibleOnly                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBotKnownTargetMemory*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotKnownTargetMemory* UBotCombatHandler::GetCurrentPriorityTarget(bool bVisibleOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetCurrentPriorityTarget");

	UBotCombatHandler_GetCurrentPriorityTarget_Params params;
	params.bVisibleOnly = bVisibleOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetCover
// ()
// Parameters:
// class UCoverComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoverComponent* UBotCombatHandler::GetCover()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetCover");

	UBotCombatHandler_GetCover_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetChanceToSpotTarget
// ()
// Parameters:
// class UBotKnownTargetMemory*   Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotCombatHandler::GetChanceToSpotTarget(class UBotKnownTargetMemory* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetChanceToSpotTarget");

	UBotCombatHandler_GetChanceToSpotTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetAttackDelay
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotCombatHandler::GetAttackDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetAttackDelay");

	UBotCombatHandler_GetAttackDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetAimOffsetForGrenade
// ()
// Parameters:
// struct FVector                 TargetLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D UBotCombatHandler::GetAimOffsetForGrenade(const struct FVector& TargetLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetAimOffsetForGrenade");

	UBotCombatHandler_GetAimOffsetForGrenade_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.GetAimLocationOnTarget
// ()
// Parameters:
// class UBotKnownTargetMemory*   MyCurrentTarget                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UBotCombatHandler::GetAimLocationOnTarget(class UBotKnownTargetMemory* MyCurrentTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.GetAimLocationOnTarget");

	UBotCombatHandler_GetAimLocationOnTarget_Params params;
	params.MyCurrentTarget = MyCurrentTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotCombatHandler.ClearPriorityTargets
// ()
void UBotCombatHandler::ClearPriorityTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.ClearPriorityTargets");

	UBotCombatHandler_ClearPriorityTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotCombatHandler.AddMorale
// ()
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotCombatHandler::AddMorale(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotCombatHandler.AddMorale");

	UBotCombatHandler_AddMorale_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBotCombatHandler::AfterRead()
{
	UBotHandler::AfterRead();

	READ_PTR_FULL(CurrentTarget_Visible, UBotKnownTargetMemory);
	READ_PTR_FULL(CurrentTarget_Hidden, UBotKnownTargetMemory);
	READ_PTR_FULL(Cover, UCoverComponent);
	READ_PTR_FULL(TargetSeat, UVehicleSeatComponent);
}

void UBotCombatHandler::BeforeDelete()
{
	UBotHandler::BeforeDelete();

	DELE_PTR_FULL(CurrentTarget_Visible);
	DELE_PTR_FULL(CurrentTarget_Hidden);
	DELE_PTR_FULL(Cover);
	DELE_PTR_FULL(TargetSeat);
}

void UBotSkillConfig::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBotSkillConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Insurgency.BotBehavior.GetTimeSinceBehaviorStarted
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UBotBehavior::GetTimeSinceBehaviorStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior.GetTimeSinceBehaviorStarted");

	UBotBehavior_GetTimeSinceBehaviorStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotBehavior.GetPriority
// ()
// Parameters:
// EBotBehaviorPriority           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EBotBehaviorPriority UBotBehavior::GetPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior.GetPriority");

	UBotBehavior_GetPriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotBehavior.GetBehaviorName
// ()
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FName UBotBehavior::GetBehaviorName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior.GetBehaviorName");

	UBotBehavior_GetBehaviorName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotBehavior::AfterRead()
{
	UObject::AfterRead();

}

void UBotBehavior::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UBotBehavior_Wander::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(ActiveWanderArea, UObject);
}

void UBotBehavior_Wander::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(ActiveWanderArea);
}

void UBotBehavior_Vehicle::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_Vehicle::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_UseSmartActor::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(SmartActor, ASmartActor);
}

void UBotBehavior_UseSmartActor::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(SmartActor);
}

void UBotBehavior_ThrowSmokeGrenade::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_ThrowSmokeGrenade::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_ThrowGrenadeAtWindows::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_ThrowGrenadeAtWindows::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_ThrowGrenade::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_ThrowGrenade::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_ThrowBackGrenade::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(TrackedGrenade, AProjectileGrenade);
}

void UBotBehavior_ThrowBackGrenade::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(TrackedGrenade);
}

void UBotBehavior_TacticalMoveToObjective::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_TacticalMoveToObjective::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_SuppressTarget::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(SuppressionTarget, UBotKnownTargetMemory);
}

void UBotBehavior_SuppressTarget::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(SuppressionTarget);
}

void UBotBehavior_SuicideBomb::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(BomberConfig, UBotSuicideBomberConfig);
}

void UBotBehavior_SuicideBomb::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(BomberConfig);
}

void UBotSuicideBomberConfig::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ExplosionProtectile, UClass);
	READ_PTR_FULL(AkEventPreDetonate, UAkAudioEvent);
}

void UBotSuicideBomberConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ExplosionProtectile);
	DELE_PTR_FULL(AkEventPreDetonate);
}

void UBotBehavior_SeekAndDestroy::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_SeekAndDestroy::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_Retreat::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_Retreat::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_RequestFireSupport::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_RequestFireSupport::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_ReloadEquippedWeapon::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_ReloadEquippedWeapon::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_ReloadBackupWeapon::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_ReloadBackupWeapon::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_Pursue::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_Pursue::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_OutpostPrepare::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_OutpostPrepare::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_MoveToSeat::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_MoveToSeat::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_MoveToObjective::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(DesiredObjective, AObjectiveBase);
	READ_PTR_FULL(DesiredVehicleSeat, UVehicleSeatComponent);
}

void UBotBehavior_MoveToObjective::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(DesiredObjective);
	DELE_PTR_FULL(DesiredVehicleSeat);
}

void UBotBehavior_Investigate::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(Investigation, UBotInvestigation);
}

void UBotBehavior_Investigate::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(Investigation);
}

void UBotFirearmBehavior::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotFirearmBehavior::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_HipFireWithPrimary::AfterRead()
{
	UBotFirearmBehavior::AfterRead();

}

void UBotBehavior_HipFireWithPrimary::BeforeDelete()
{
	UBotFirearmBehavior::BeforeDelete();

}

void UBotBehavior_FollowSquadLeader::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_FollowSquadLeader::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_FlushTarget::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_FlushTarget::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_FleeGrenade::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(GrenadeToFlee, AProjectileGrenade);
}

void UBotBehavior_FleeGrenade::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(GrenadeToFlee);
}

void UBotBehavior_FireRocket::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_FireRocket::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_Example_Wander::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_Example_Wander::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_Example_ShootAtTarget::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_Example_ShootAtTarget::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_DestroyObjective::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_DestroyObjective::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_ClearObjective::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(Investigation, UBotInvestigation);
}

void UBotBehavior_ClearObjective::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(Investigation);
}

// Function Insurgency.BotBehavior_Blueprint.BlueprintUpdate
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBotBehaviorReturnResult       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EBotBehaviorReturnResult UBotBehavior_Blueprint::BlueprintUpdate(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintUpdate");

	UBotBehavior_Blueprint_BlueprintUpdate_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotBehavior_Blueprint.BlueprintReset
// ()
void UBotBehavior_Blueprint::BlueprintReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintReset");

	UBotBehavior_Blueprint_BlueprintReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotBehavior_Blueprint.BlueprintOnStart
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBotBehaviorReturnResult       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EBotBehaviorReturnResult UBotBehavior_Blueprint::BlueprintOnStart(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintOnStart");

	UBotBehavior_Blueprint_BlueprintOnStart_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotBehavior_Blueprint.BlueprintOnOtherSoldierKilled
// ()
// Parameters:
// class AINSSoldier*             Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistanceToVictim               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotBehavior_Blueprint::BlueprintOnOtherSoldierKilled(class AINSSoldier* Soldier, float DistanceToVictim, float Damage, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintOnOtherSoldierKilled");

	UBotBehavior_Blueprint_BlueprintOnOtherSoldierKilled_Params params;
	params.Soldier = Soldier;
	params.DistanceToVictim = DistanceToVictim;
	params.Damage = Damage;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotBehavior_Blueprint.BlueprintOnMoveCompleted
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIRequestID            RequestID                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSuccess                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInterrupted                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotBehavior_Blueprint::BlueprintOnMoveCompleted(class AINSAISoldierController* Me, const struct FAIRequestID& RequestID, bool bSuccess, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintOnMoveCompleted");

	UBotBehavior_Blueprint_BlueprintOnMoveCompleted_Params params;
	params.Me = Me;
	params.RequestID = RequestID;
	params.bSuccess = bSuccess;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotBehavior_Blueprint.BlueprintOnHeardEnemySound
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Emitter                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHasLOS                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotBehavior_Blueprint::BlueprintOnHeardEnemySound(class AINSAISoldierController* Me, class AActor* Emitter, const struct FVector& Position, bool bHasLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintOnHeardEnemySound");

	UBotBehavior_Blueprint_BlueprintOnHeardEnemySound_Params params;
	params.Me = Me;
	params.Emitter = Emitter;
	params.Position = Position;
	params.bHasLOS = bHasLOS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotBehavior_Blueprint.BlueprintOnFinish
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBotBehavior_Blueprint::BlueprintOnFinish(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintOnFinish");

	UBotBehavior_Blueprint_BlueprintOnFinish_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BotBehavior_Blueprint.BlueprintCanEnter
// ()
// Parameters:
// class AINSAISoldierController* Me                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UBotBehavior_Blueprint::BlueprintCanEnter(class AINSAISoldierController* Me)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehavior_Blueprint.BlueprintCanEnter");

	UBotBehavior_Blueprint_BlueprintCanEnter_Params params;
	params.Me = Me;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotBehavior_Blueprint::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_Blueprint::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_Blink::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(BlinkConfig, UBotBlinkConfig);
}

void UBotBehavior_Blink::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(BlinkConfig);
}

void UBotBlinkConfig::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AkEventBlink, UAkAudioEvent);
	READ_PTR_FULL(VanishParticle, UParticleSystem);
	READ_PTR_FULL(AppearParticle, UParticleSystem);
	READ_PTR_FULL(PlacementQuery, UEnvQuery);
}

void UBotBlinkConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AkEventBlink);
	DELE_PTR_FULL(VanishParticle);
	DELE_PTR_FULL(AppearParticle);
	DELE_PTR_FULL(PlacementQuery);
}

void UBotBehavior_AttackRanged::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_AttackRanged::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_AttackMelee::AfterRead()
{
	UBotBehavior::AfterRead();

}

void UBotBehavior_AttackMelee::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

}

void UBotBehavior_Ambush::AfterRead()
{
	UBotBehavior::AfterRead();

	READ_PTR_FULL(AmbushObjective, AObjectiveBase);
}

void UBotBehavior_Ambush::BeforeDelete()
{
	UBotBehavior::BeforeDelete();

	DELE_PTR_FULL(AmbushObjective);
}

void UBotBehavior_ADSWithSecondary::AfterRead()
{
	UBotFirearmBehavior::AfterRead();

}

void UBotBehavior_ADSWithSecondary::BeforeDelete()
{
	UBotFirearmBehavior::BeforeDelete();

}

void UBotBehavior_ADSWithPrimary::AfterRead()
{
	UBotFirearmBehavior::AfterRead();

}

void UBotBehavior_ADSWithPrimary::BeforeDelete()
{
	UBotFirearmBehavior::BeforeDelete();

}

// Function Insurgency.BotBehaviorHandler.GetBehaviors
// ()
// Parameters:
// TArray<class UBotBehavior*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TArray<class UBotBehavior*> UBotBehaviorHandler::GetBehaviors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehaviorHandler.GetBehaviors");

	UBotBehaviorHandler_GetBehaviors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BotBehaviorHandler.GetActiveBehavior
// ()
// Parameters:
// class UBotBehavior*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UBotBehavior* UBotBehaviorHandler::GetActiveBehavior()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BotBehaviorHandler.GetActiveBehavior");

	UBotBehaviorHandler_GetActiveBehavior_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBotBehaviorHandler::AfterRead()
{
	UBotHandler::AfterRead();

	READ_PTR_FULL(ActiveBehavior, UBotBehavior);
}

void UBotBehaviorHandler::BeforeDelete()
{
	UBotHandler::BeforeDelete();

	DELE_PTR_FULL(ActiveBehavior);
}

// Function Insurgency.BlueprintUsableActor.EventTryUse
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EUseResponse                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EUseResponse ABlueprintUsableActor::EventTryUse(class AINSSoldier* Pawn, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventTryUse");

	ABlueprintUsableActor_EventTryUse_Params params;
	params.Pawn = Pawn;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventOnUseKeyReleased
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ElapsedTime                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUseResponse                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
EUseResponse ABlueprintUsableActor::EventOnUseKeyReleased(class AINSSoldier* Pawn, float ElapsedTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventOnUseKeyReleased");

	ABlueprintUsableActor_EventOnUseKeyReleased_Params params;
	params.Pawn = Pawn;
	params.ElapsedTime = ElapsedTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventOnUseComplete
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ABlueprintUsableActor::EventOnUseComplete(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventOnUseComplete");

	ABlueprintUsableActor_EventOnUseComplete_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BlueprintUsableActor.EventOnUseCancelled
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ABlueprintUsableActor::EventOnUseCancelled(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventOnUseCancelled");

	ABlueprintUsableActor_EventOnUseCancelled_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BlueprintUsableActor.EventGetUseTimeoutFraction
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ABlueprintUsableActor::EventGetUseTimeoutFraction(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventGetUseTimeoutFraction");

	ABlueprintUsableActor_EventGetUseTimeoutFraction_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventGetUseImage
// ()
// Parameters:
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInProgress                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              UseHitResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FText                   OutAdditonalText               (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* ABlueprintUsableActor::EventGetUseImage(class AINSPlayerController* Controller, bool bInProgress, const struct FHitResult& UseHitResult, struct FText* OutAdditonalText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventGetUseImage");

	ABlueprintUsableActor_EventGetUseImage_Params params;
	params.Controller = Controller;
	params.bInProgress = bInProgress;
	params.UseHitResult = UseHitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAdditonalText != nullptr)
		*OutAdditonalText = params.OutAdditonalText;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventGetSubUseTimeoutFraction
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ABlueprintUsableActor::EventGetSubUseTimeoutFraction(class AINSSoldier* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventGetSubUseTimeoutFraction");

	ABlueprintUsableActor_EventGetSubUseTimeoutFraction_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventGetSubUseImage
// ()
// Parameters:
// class AINSPlayerController*    Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInProgress                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              UseHitResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FText                   OutAdditonalText               (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* ABlueprintUsableActor::EventGetSubUseImage(class AINSPlayerController* Controller, bool bInProgress, const struct FHitResult& UseHitResult, struct FText* OutAdditonalText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventGetSubUseImage");

	ABlueprintUsableActor_EventGetSubUseImage_Params params;
	params.Controller = Controller;
	params.bInProgress = bInProgress;
	params.UseHitResult = UseHitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAdditonalText != nullptr)
		*OutAdditonalText = params.OutAdditonalText;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventGetDynamicHintLocation
// ()
// Parameters:
// class AINSSoldier*             Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ABlueprintUsableActor::EventGetDynamicHintLocation(class AINSSoldier* Pawn, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventGetDynamicHintLocation");

	ABlueprintUsableActor_EventGetDynamicHintLocation_Params params;
	params.Pawn = Pawn;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventCanUse
// ()
// Parameters:
// class AINSSoldier*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ABlueprintUsableActor::EventCanUse(class AINSSoldier* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventCanUse");

	ABlueprintUsableActor_EventCanUse_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.BlueprintUsableActor.EventCanContinueUse
// ()
// Parameters:
// class AINSSoldier*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ABlueprintUsableActor::EventCanContinueUse(class AINSSoldier* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BlueprintUsableActor.EventCanContinueUse");

	ABlueprintUsableActor_EventCanContinueUse_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ABlueprintUsableActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(UseImage, UTexture2D);
	READ_PTR_FULL(SubUseImage, UTexture2D);
}

void ABlueprintUsableActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(UseImage);
	DELE_PTR_FULL(SubUseImage);
}

// Function Insurgency.BloodSplatterData.GetMaterialFromBloodSplatter
// ()
// Parameters:
// struct FBloodSplatter          BloodSplatter                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                 MinSize                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 MaxSize                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UMaterialInterface* UBloodSplatterData::GetMaterialFromBloodSplatter(const struct FBloodSplatter& BloodSplatter, struct FVector* MinSize, struct FVector* MaxSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BloodSplatterData.GetMaterialFromBloodSplatter");

	UBloodSplatterData_GetMaterialFromBloodSplatter_Params params;
	params.BloodSplatter = BloodSplatter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MinSize != nullptr)
		*MinSize = params.MinSize;
	if (MaxSize != nullptr)
		*MaxSize = params.MaxSize;


	return params.ReturnValue;
}


// Function Insurgency.BloodSplatterData.DetermineSplatterContext
// ()
// Parameters:
// struct FBloodSplatterContext   SplatterContext                (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitPosition                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 HitDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHeadshot                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLethal                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  IgnoredActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBloodSplatterData::DetermineSplatterContext(struct FBloodSplatterContext* SplatterContext, class UObject* WorldContextObject, const struct FVector& HitPosition, const struct FVector& HitDirection, bool bHeadshot, bool bLethal, class AActor* IgnoredActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BloodSplatterData.DetermineSplatterContext");

	UBloodSplatterData_DetermineSplatterContext_Params params;
	params.WorldContextObject = WorldContextObject;
	params.HitPosition = HitPosition;
	params.HitDirection = HitDirection;
	params.bHeadshot = bHeadshot;
	params.bLethal = bLethal;
	params.IgnoredActor = IgnoredActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SplatterContext != nullptr)
		*SplatterContext = params.SplatterContext;

}


// Function Insurgency.BloodSplatterData.CreateBloodSplatter
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 DecalPosition                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                DecalRotation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EPhysicalSurface>  PhysicalSurface                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBloodSplatterType             BloodSplatterType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bKillShot                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UBloodSplatterData::CreateBloodSplatter(class UObject* WorldContextObject, const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, TEnumAsByte<EPhysicalSurface> PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BloodSplatterData.CreateBloodSplatter");

	UBloodSplatterData_CreateBloodSplatter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DecalPosition = DecalPosition;
	params.DecalRotation = DecalRotation;
	params.AttachComponent = AttachComponent;
	params.PhysicalSurface = PhysicalSurface;
	params.BloodSplatterType = BloodSplatterType;
	params.bKillShot = bKillShot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.BloodSplatterData.CreateBloodPool
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  IgnoredActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UDecalComponent* UBloodSplatterData::CreateBloodPool(class UObject* WorldContextObject, const struct FVector& Position, class AActor* IgnoredActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.BloodSplatterData.CreateBloodPool");

	UBloodSplatterData_CreateBloodPool_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.IgnoredActor = IgnoredActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBloodSplatterData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AudioEventKillBloodSplatter, UAkAudioEvent);
}

void UBloodSplatterData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AudioEventKillBloodSplatter);
}

// Function Insurgency.AudioBlueprintLibrary.PlayUISound
// ()
// Parameters:
// EUISound                       Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAudioBlueprintLibrary::PlayUISound(EUISound Sound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AudioBlueprintLibrary.PlayUISound");

	UAudioBlueprintLibrary_PlayUISound_Params params;
	params.Sound = Sound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AudioBlueprintLibrary.PlayUILoadoutSound
// ()
// Parameters:
// EUILoadoutSound                Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAudioBlueprintLibrary::PlayUILoadoutSound(EUILoadoutSound Sound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AudioBlueprintLibrary.PlayUILoadoutSound");

	UAudioBlueprintLibrary_PlayUILoadoutSound_Params params;
	params.Sound = Sound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AudioBlueprintLibrary.PlayUIHUDSound
// ()
// Parameters:
// EUIHUDSound                    Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAudioBlueprintLibrary::PlayUIHUDSound(EUIHUDSound Sound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AudioBlueprintLibrary.PlayUIHUDSound");

	UAudioBlueprintLibrary_PlayUIHUDSound_Params params;
	params.Sound = Sound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAudioBlueprintLibrary::AfterRead()
{
	UObject::AfterRead();

}

void UAudioBlueprintLibrary::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Insurgency.ArtillerySite.IsFireSupportWhitelisted
// ()
// Parameters:
// class UClass*                  FireSupportClass               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool AArtillerySite::IsFireSupportWhitelisted(class UClass* FireSupportClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ArtillerySite.IsFireSupportWhitelisted");

	AArtillerySite_IsFireSupportWhitelisted_Params params;
	params.FireSupportClass = FireSupportClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AArtillerySite::AfterRead()
{
	AActor::AfterRead();

}

void AArtillerySite::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Insurgency.AnimNotifyWeapon.GetOuterWeapon
// ()
// Parameters:
// class USkeletalMeshComponent*  ContextMeshComp                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemWeapon* UAnimNotifyWeapon::GetOuterWeapon(class USkeletalMeshComponent* ContextMeshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimNotifyWeapon.GetOuterWeapon");

	UAnimNotifyWeapon_GetOuterWeapon_Params params;
	params.ContextMeshComp = ContextMeshComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AnimNotifyWeapon.GetOuterSoldier
// ()
// Parameters:
// class USkeletalMeshComponent*  ContextMeshComp                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AINSSoldier*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AINSSoldier* UAnimNotifyWeapon::GetOuterSoldier(class USkeletalMeshComponent* ContextMeshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimNotifyWeapon.GetOuterSoldier");

	UAnimNotifyWeapon_GetOuterSoldier_Params params;
	params.ContextMeshComp = ContextMeshComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AnimNotifyWeapon.GetOuterFirearm
// ()
// Parameters:
// class USkeletalMeshComponent*  ContextMeshComp                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemFirearm*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemFirearm* UAnimNotifyWeapon::GetOuterFirearm(class USkeletalMeshComponent* ContextMeshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimNotifyWeapon.GetOuterFirearm");

	UAnimNotifyWeapon_GetOuterFirearm_Params params;
	params.ContextMeshComp = ContextMeshComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AnimNotifyWeapon.GetOuterEquipable
// ()
// Parameters:
// class USkeletalMeshComponent*  ContextMeshComp                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AItemEquipable*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AItemEquipable* UAnimNotifyWeapon::GetOuterEquipable(class USkeletalMeshComponent* ContextMeshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimNotifyWeapon.GetOuterEquipable");

	UAnimNotifyWeapon_GetOuterEquipable_Params params;
	params.ContextMeshComp = ContextMeshComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAnimNotifyWeapon::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotifyWeapon::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotify_WeaponSound::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

	READ_PTR_FULL(Event_FP, UAkAudioEvent);
	READ_PTR_FULL(Event_TP, UAkAudioEvent);
}

void UAnimNotify_WeaponSound::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

	DELE_PTR_FULL(Event_FP);
	DELE_PTR_FULL(Event_TP);
}

void UAnimNotify_WeaponReady::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_WeaponReady::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_StoreAmmo::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_StoreAmmo::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_SpawnEjectedMag::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_SpawnEjectedMag::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_SpawnBrass::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_SpawnBrass::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_ShowAmmoInfo::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_ShowAmmoInfo::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_RoundIn::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_RoundIn::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_MagOut::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_MagOut::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_MagIn::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_MagIn::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_LastRoundEject::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_LastRoundEject::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_KickDoor::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_KickDoor::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotify_GrenadeSpoonRelease::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_GrenadeSpoonRelease::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_GrenadeRelease::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_GrenadeRelease::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_GrenadePullPin::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_GrenadePullPin::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_Footstep::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_Footstep::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotify_FireProjectile::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_FireProjectile::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_DisallowCancel::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_DisallowCancel::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotify_CheckPendingAmmo::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_CheckPendingAmmo::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_ChangeBipodState::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_ChangeBipodState::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_ChangeBipodLegsState::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_ChangeBipodLegsState::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_ChamberRound::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_ChamberRound::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_BoltCycled::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

}

void UAnimNotify_BoltCycled::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

}

void UAnimNotify_BipodSurfaceReaction::AfterRead()
{
	UAnimNotifyWeapon::AfterRead();

	READ_PTR_FULL(SurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(BloodMaterial, UPhysicalMaterial);
	READ_PTR_FULL(WaterMaterial, UPhysicalMaterial);
}

void UAnimNotify_BipodSurfaceReaction::BeforeDelete()
{
	UAnimNotifyWeapon::BeforeDelete();

	DELE_PTR_FULL(SurfaceReaction);
	DELE_PTR_FULL(BloodMaterial);
	DELE_PTR_FULL(WaterMaterial);
}

// Function Insurgency.AnimationStatics.GetWeaponReadyTimeFromSequence
// ()
// Parameters:
// class UAnimSequenceBase*       Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UAnimationStatics::GetWeaponReadyTimeFromSequence(class UAnimSequenceBase* Sequence)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetWeaponReadyTimeFromSequence");

	UAnimationStatics_GetWeaponReadyTimeFromSequence_Params params;
	params.Sequence = Sequence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.GetWeaponReadyTimeFromMontageSection
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SectionIndex                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UAnimationStatics::GetWeaponReadyTimeFromMontageSection(class UAnimMontage* Montage, int SectionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetWeaponReadyTimeFromMontageSection");

	UAnimationStatics_GetWeaponReadyTimeFromMontageSection_Params params;
	params.Montage = Montage;
	params.SectionIndex = SectionIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.GetRandomSequenceStrengthPair
// ()
// Parameters:
// struct FMultiAnimationStrengthPair MultiAnimPair                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            OutChosenIndex                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimSequence* UAnimationStatics::GetRandomSequenceStrengthPair(struct FMultiAnimationStrengthPair* MultiAnimPair, int* OutChosenIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetRandomSequenceStrengthPair");

	UAnimationStatics_GetRandomSequenceStrengthPair_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MultiAnimPair != nullptr)
		*MultiAnimPair = params.MultiAnimPair;
	if (OutChosenIndex != nullptr)
		*OutChosenIndex = params.OutChosenIndex;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.GetRandomSequence
// ()
// Parameters:
// struct FAnimSequenceRandom     AnimSequenceRandom             (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            OutChosenIndex                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNoRepeats                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimSequence* UAnimationStatics::GetRandomSequence(struct FAnimSequenceRandom* AnimSequenceRandom, int* OutChosenIndex, bool bNoRepeats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetRandomSequence");

	UAnimationStatics_GetRandomSequence_Params params;
	params.bNoRepeats = bNoRepeats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AnimSequenceRandom != nullptr)
		*AnimSequenceRandom = params.AnimSequenceRandom;
	if (OutChosenIndex != nullptr)
		*OutChosenIndex = params.OutChosenIndex;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.GetLODLevelForMesh
// ()
// Parameters:
// class USkeletalMeshComponent*  SkelMeshComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UAnimationStatics::GetLODLevelForMesh(class USkeletalMeshComponent* SkelMeshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetLODLevelForMesh");

	UAnimationStatics_GetLODLevelForMesh_Params params;
	params.SkelMeshComp = SkelMeshComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.GetAnimBoneTransformFromSkeletalMesh
// ()
// Parameters:
// class UAnimSequence*           Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*           SkelMesh                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform              OutTransform                   (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnInParentBoneSpace        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAnimationStatics::GetAnimBoneTransformFromSkeletalMesh(class UAnimSequence* Sequence, class USkeletalMesh* SkelMesh, const struct FName& BoneName, float Time, struct FTransform* OutTransform, bool ReturnInParentBoneSpace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetAnimBoneTransformFromSkeletalMesh");

	UAnimationStatics_GetAnimBoneTransformFromSkeletalMesh_Params params;
	params.Sequence = Sequence;
	params.SkelMesh = SkelMesh;
	params.BoneName = BoneName;
	params.Time = Time;
	params.ReturnInParentBoneSpace = ReturnInParentBoneSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;

}


// Function Insurgency.AnimationStatics.GetAnimBoneTransform
// ()
// Parameters:
// class UAnimSequence*           Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  SkelMeshComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform              OutTransform                   (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnInParentBoneSpace        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAnimationStatics::GetAnimBoneTransform(class UAnimSequence* Sequence, class USkeletalMeshComponent* SkelMeshComp, const struct FName& BoneName, float Time, struct FTransform* OutTransform, bool ReturnInParentBoneSpace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.GetAnimBoneTransform");

	UAnimationStatics_GetAnimBoneTransform_Params params;
	params.Sequence = Sequence;
	params.SkelMeshComp = SkelMeshComp;
	params.BoneName = BoneName;
	params.Time = Time;
	params.ReturnInParentBoneSpace = ReturnInParentBoneSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;

}


// Function Insurgency.AnimationStatics.FindAnimNotifyTimeMontageByName
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   NotifyName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bScaleByPlayRate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutTime                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SectionIndex                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimNotify*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimNotify* UAnimationStatics::FindAnimNotifyTimeMontageByName(class UAnimMontage* Montage, const struct FName& NotifyName, bool bScaleByPlayRate, float* OutTime, int SectionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.FindAnimNotifyTimeMontageByName");

	UAnimationStatics_FindAnimNotifyTimeMontageByName_Params params;
	params.Montage = Montage;
	params.NotifyName = NotifyName;
	params.bScaleByPlayRate = bScaleByPlayRate;
	params.SectionIndex = SectionIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTime != nullptr)
		*OutTime = params.OutTime;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.FindAnimNotifyTimeMontageByClass
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  NotifyClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bScaleByPlayRate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutTime                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SectionIndex                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimNotify*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimNotify* UAnimationStatics::FindAnimNotifyTimeMontageByClass(class UAnimMontage* Montage, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime, int SectionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.FindAnimNotifyTimeMontageByClass");

	UAnimationStatics_FindAnimNotifyTimeMontageByClass_Params params;
	params.Montage = Montage;
	params.NotifyClass = NotifyClass;
	params.bScaleByPlayRate = bScaleByPlayRate;
	params.SectionIndex = SectionIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTime != nullptr)
		*OutTime = params.OutTime;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.FindAnimNotifyTimeMontage
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   NotifyName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  NotifyClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bScaleByPlayRate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutTime                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SectionIndex                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimNotify*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimNotify* UAnimationStatics::FindAnimNotifyTimeMontage(class UAnimMontage* Montage, const struct FName& NotifyName, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime, int SectionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.FindAnimNotifyTimeMontage");

	UAnimationStatics_FindAnimNotifyTimeMontage_Params params;
	params.Montage = Montage;
	params.NotifyName = NotifyName;
	params.NotifyClass = NotifyClass;
	params.bScaleByPlayRate = bScaleByPlayRate;
	params.SectionIndex = SectionIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTime != nullptr)
		*OutTime = params.OutTime;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.FindAnimNotifyTimeByName
// ()
// Parameters:
// class UAnimSequenceBase*       Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   NotifyName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bScaleByPlayRate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutTime                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimNotify*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimNotify* UAnimationStatics::FindAnimNotifyTimeByName(class UAnimSequenceBase* Sequence, const struct FName& NotifyName, bool bScaleByPlayRate, float* OutTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.FindAnimNotifyTimeByName");

	UAnimationStatics_FindAnimNotifyTimeByName_Params params;
	params.Sequence = Sequence;
	params.NotifyName = NotifyName;
	params.bScaleByPlayRate = bScaleByPlayRate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTime != nullptr)
		*OutTime = params.OutTime;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.FindAnimNotifyTimeByClass
// ()
// Parameters:
// class UAnimSequenceBase*       Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  NotifyClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bScaleByPlayRate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutTime                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimNotify*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimNotify* UAnimationStatics::FindAnimNotifyTimeByClass(class UAnimSequenceBase* Sequence, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.FindAnimNotifyTimeByClass");

	UAnimationStatics_FindAnimNotifyTimeByClass_Params params;
	params.Sequence = Sequence;
	params.NotifyClass = NotifyClass;
	params.bScaleByPlayRate = bScaleByPlayRate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTime != nullptr)
		*OutTime = params.OutTime;


	return params.ReturnValue;
}


// Function Insurgency.AnimationStatics.FindAnimNotifyTime
// ()
// Parameters:
// class UAnimSequenceBase*       Sequence                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   NotifyName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  NotifyClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bScaleByPlayRate               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OutTime                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimNotify*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAnimNotify* UAnimationStatics::FindAnimNotifyTime(class UAnimSequenceBase* Sequence, const struct FName& NotifyName, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnimationStatics.FindAnimNotifyTime");

	UAnimationStatics_FindAnimNotifyTime_Params params;
	params.Sequence = Sequence;
	params.NotifyName = NotifyName;
	params.NotifyClass = NotifyClass;
	params.bScaleByPlayRate = bScaleByPlayRate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTime != nullptr)
		*OutTime = params.OutTime;


	return params.ReturnValue;
}


void UAnimationStatics::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAnimationStatics::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Insurgency.AnalyticsSubsystem.RecordAnnouncementPopupDismissed
// ()
// Parameters:
// bool                           bClickedLink                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TimeOnScreen                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAnalyticsSubsystem::RecordAnnouncementPopupDismissed(bool bClickedLink, float TimeOnScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AnalyticsSubsystem.RecordAnnouncementPopupDismissed");

	UAnalyticsSubsystem_RecordAnnouncementPopupDismissed_Params params;
	params.bClickedLink = bClickedLink;
	params.TimeOnScreen = TimeOnScreen;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAnalyticsSubsystem::AfterRead()
{
	UGameInstanceSubsystem::AfterRead();

}

void UAnalyticsSubsystem::BeforeDelete()
{
	UGameInstanceSubsystem::BeforeDelete();

}

void UAmmoType::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(DamageTypeClass, UClass);
	READ_PTR_FULL(BrassEjectionClass, UClass);
}

void UAmmoType::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(DamageTypeClass);
	DELE_PTR_FULL(BrassEjectionClass);
}

void UAmmoTypeBallistic::AfterRead()
{
	UAmmoType::AfterRead();

	READ_PTR_FULL(SurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(BulletPenetrationOverride, UBulletPenetrationSettings);
	READ_PTR_FULL(TracerParticle, UParticleSystem);
	READ_PTR_FULL(PenetrationParticle, UParticleSystem);
}

void UAmmoTypeBallistic::BeforeDelete()
{
	UAmmoType::BeforeDelete();

	DELE_PTR_FULL(SurfaceReaction);
	DELE_PTR_FULL(BulletPenetrationOverride);
	DELE_PTR_FULL(TracerParticle);
	DELE_PTR_FULL(PenetrationParticle);
}

// Function Insurgency.AmmoContainer.UsesMagazineReloads
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UAmmoContainer::UsesMagazineReloads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AmmoContainer.UsesMagazineReloads");

	UAmmoContainer_UsesMagazineReloads_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AmmoContainer.IsAmmoSupported
// ()
// Parameters:
// class UClass*                  AmmoType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool UAmmoContainer::IsAmmoSupported(class UClass* AmmoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AmmoContainer.IsAmmoSupported");

	UAmmoContainer_IsAmmoSupported_Params params;
	params.AmmoType = AmmoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Insurgency.AmmoContainer.GetFullWeight
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float UAmmoContainer::GetFullWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AmmoContainer.GetFullWeight");

	UAmmoContainer_GetFullWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAmmoContainer::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Mesh1P, USkeletalMesh);
	READ_PTR_FULL(Mesh3P, USkeletalMesh);
	READ_PTR_FULL(MagazineSurfaceReaction, USurfaceReaction);
	READ_PTR_FULL(DroppedStaticMesh, UStaticMesh);
	READ_PTR_FULL(ShotEjectionClass, UClass);
}

void UAmmoContainer::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Mesh1P);
	DELE_PTR_FULL(Mesh3P);
	DELE_PTR_FULL(MagazineSurfaceReaction);
	DELE_PTR_FULL(DroppedStaticMesh);
	DELE_PTR_FULL(ShotEjectionClass);
}

void UAmmoContainerMagazine::AfterRead()
{
	UAmmoContainer::AfterRead();

}

void UAmmoContainerMagazine::BeforeDelete()
{
	UAmmoContainer::BeforeDelete();

}

// Function Insurgency.AlignedWrapBoxSlot.SetVerticalAlignment
// ()
// Parameters:
// TEnumAsByte<EVerticalAlignment> InVerticalAlignment            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBoxSlot::SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBoxSlot.SetVerticalAlignment");

	UAlignedWrapBoxSlot_SetVerticalAlignment_Params params;
	params.InVerticalAlignment = InVerticalAlignment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBoxSlot.SetPadding
// ()
// Parameters:
// struct FMargin                 InPadding                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void UAlignedWrapBoxSlot::SetPadding(const struct FMargin& InPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBoxSlot.SetPadding");

	UAlignedWrapBoxSlot_SetPadding_Params params;
	params.InPadding = InPadding;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBoxSlot.SetHorizontalAlignment
// ()
// Parameters:
// TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBoxSlot::SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBoxSlot.SetHorizontalAlignment");

	UAlignedWrapBoxSlot_SetHorizontalAlignment_Params params;
	params.InHorizontalAlignment = InHorizontalAlignment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBoxSlot.SetFillSpanWhenLessThan
// ()
// Parameters:
// float                          InFillSpanWhenLessThan         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBoxSlot::SetFillSpanWhenLessThan(float InFillSpanWhenLessThan)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBoxSlot.SetFillSpanWhenLessThan");

	UAlignedWrapBoxSlot_SetFillSpanWhenLessThan_Params params;
	params.InFillSpanWhenLessThan = InFillSpanWhenLessThan;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBoxSlot.SetFillEmptySpace
// ()
// Parameters:
// bool                           InbFillEmptySpace              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBoxSlot::SetFillEmptySpace(bool InbFillEmptySpace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBoxSlot.SetFillEmptySpace");

	UAlignedWrapBoxSlot_SetFillEmptySpace_Params params;
	params.InbFillEmptySpace = InbFillEmptySpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAlignedWrapBoxSlot::AfterRead()
{
	UPanelSlot::AfterRead();

}

void UAlignedWrapBoxSlot::BeforeDelete()
{
	UPanelSlot::BeforeDelete();

}

// Function Insurgency.AlignedWrapBox.SetVerticalAlignment
// ()
// Parameters:
// TEnumAsByte<EVerticalAlignment> InVerticalAlignment            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBox::SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBox.SetVerticalAlignment");

	UAlignedWrapBox_SetVerticalAlignment_Params params;
	params.InVerticalAlignment = InVerticalAlignment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBox.SetInnerSlotPadding
// ()
// Parameters:
// struct FVector2D               InPadding                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBox::SetInnerSlotPadding(const struct FVector2D& InPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBox.SetInnerSlotPadding");

	UAlignedWrapBox_SetInnerSlotPadding_Params params;
	params.InPadding = InPadding;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBox.SetHorizontalAlignment
// ()
// Parameters:
// TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlignedWrapBox::SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBox.SetHorizontalAlignment");

	UAlignedWrapBox_SetHorizontalAlignment_Params params;
	params.InHorizontalAlignment = InHorizontalAlignment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlignedWrapBox.AddChildWrapBox
// ()
// Parameters:
// class UWidget*                 Content                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAlignedWrapBoxSlot*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAlignedWrapBoxSlot* UAlignedWrapBox::AddChildWrapBox(class UWidget* Content)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlignedWrapBox.AddChildWrapBox");

	UAlignedWrapBox_AddChildWrapBox_Params params;
	params.Content = Content;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAlignedWrapBox::AfterRead()
{
	UPanelWidget::AfterRead();

}

void UAlignedWrapBox::BeforeDelete()
{
	UPanelWidget::BeforeDelete();

}

// Function Insurgency.AlarmComponent.StartAlarm
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlarmComponent::StartAlarm(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlarmComponent.StartAlarm");

	UAlarmComponent_StartAlarm_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlarmComponent.MulticastStartAlarm
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAlarmComponent::MulticastStartAlarm(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlarmComponent.MulticastStartAlarm");

	UAlarmComponent_MulticastStartAlarm_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AlarmComponent.EndAlarm
// ()
void UAlarmComponent::EndAlarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AlarmComponent.EndAlarm");

	UAlarmComponent_EndAlarm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAlarmComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(AudioComponent, UINSAudioComponent);
	READ_PTR_FULL(AlarmStartEvent, UAkAudioEvent);
	READ_PTR_FULL(AlarmEndEvent, UAkAudioEvent);
}

void UAlarmComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(AudioComponent);
	DELE_PTR_FULL(AlarmStartEvent);
	DELE_PTR_FULL(AlarmEndEvent);
}

// Function Insurgency.AISense_INSHearing.ReportNoiseEvent
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NoiseLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Loudness                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxRange                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAISense_INSHearing::ReportNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float Loudness, class AActor* Instigator, float MaxRange, const struct FName& Tag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AISense_INSHearing.ReportNoiseEvent");

	UAISense_INSHearing_ReportNoiseEvent_Params params;
	params.WorldContextObject = WorldContextObject;
	params.NoiseLocation = NoiseLocation;
	params.Loudness = Loudness;
	params.Instigator = Instigator;
	params.MaxRange = MaxRange;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAISense_INSHearing::AfterRead()
{
	UAISense::AfterRead();

}

void UAISense_INSHearing::BeforeDelete()
{
	UAISense::BeforeDelete();

}

void UAISenseEvent_INSHearing::AfterRead()
{
	UAISenseEvent::AfterRead();

}

void UAISenseEvent_INSHearing::BeforeDelete()
{
	UAISenseEvent::BeforeDelete();

}

void UAISenseConfig_INSHearing::AfterRead()
{
	UAISenseConfig::AfterRead();

	READ_PTR_FULL(BotConfig, UBotSkillConfig);
	READ_PTR_FULL(Implementation, UClass);
}

void UAISenseConfig_INSHearing::BeforeDelete()
{
	UAISenseConfig::BeforeDelete();

	DELE_PTR_FULL(BotConfig);
	DELE_PTR_FULL(Implementation);
}

// Function Insurgency.AircraftBase.SetGroundTarget
// ()
// Parameters:
// struct FVector                 InGroundTarget                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          InMaxDiveAltitude              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void AAircraftBase::SetGroundTarget(const struct FVector& InGroundTarget, float InMaxDiveAltitude)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AircraftBase.SetGroundTarget");

	AAircraftBase_SetGroundTarget_Params params;
	params.InGroundTarget = InGroundTarget;
	params.InMaxDiveAltitude = InMaxDiveAltitude;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AircraftBase.BroadcastPayloadDrop
// ()
// Parameters:
// struct FAircraftPayload        Payload                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
void AAircraftBase::BroadcastPayloadDrop(const struct FAircraftPayload& Payload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AircraftBase.BroadcastPayloadDrop");

	AAircraftBase_BroadcastPayloadDrop_Params params;
	params.Payload = Payload;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAircraftBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SceneComponent, USceneComponent);
	READ_PTR_FULL(SkeletalMesh, USkeletalMesh);
	READ_PTR_FULL(SkeletalMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(MovementComponent, UAircraftMovementComponent);
	READ_PTR_FULL(AudioComponent, UINSAudioComponent);
	READ_PTR_FULL(AudioEventSpawn, UAkAudioEvent);
	READ_PTR_FULL(AssociatedFireSupport, AFireSupportBase);
}

void AAircraftBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SceneComponent);
	DELE_PTR_FULL(SkeletalMesh);
	DELE_PTR_FULL(SkeletalMeshComponent);
	DELE_PTR_FULL(MovementComponent);
	DELE_PTR_FULL(AudioComponent);
	DELE_PTR_FULL(AudioEventSpawn);
	DELE_PTR_FULL(AssociatedFireSupport);
}

// Function Insurgency.AircraftStrafing.MulticastBeginStrafe
// ()
void AAircraftStrafing::MulticastBeginStrafe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AircraftStrafing.MulticastBeginStrafe");

	AAircraftStrafing_MulticastBeginStrafe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAircraftStrafing::AfterRead()
{
	AAircraftBase::AfterRead();

}

void AAircraftStrafing::BeforeDelete()
{
	AAircraftBase::BeforeDelete();

}

// Function Insurgency.AircraftMovementComponent.SetTargetLocation
// ()
// Parameters:
// struct FVector                 InTarget                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UAircraftMovementComponent::SetTargetLocation(const struct FVector& InTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AircraftMovementComponent.SetTargetLocation");

	UAircraftMovementComponent_SetTargetLocation_Params params;
	params.InTarget = InTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.AircraftMovementComponent.LimitVelocity
// ()
// Parameters:
// struct FVector                 NewVelocity                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector UAircraftMovementComponent::LimitVelocity(const struct FVector& NewVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.AircraftMovementComponent.LimitVelocity");

	UAircraftMovementComponent_LimitVelocity_Params params;
	params.NewVelocity = NewVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAircraftMovementComponent::AfterRead()
{
	UMovementComponent::AfterRead();

}

void UAircraftMovementComponent::BeforeDelete()
{
	UMovementComponent::BeforeDelete();

}

void UAimAssistTargetComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetCapsule, UCapsuleComponent);
}

void UAimAssistTargetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetCapsule);
}

void UAimAssistComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAimAssistComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void AAIHelicopterController::AfterRead()
{
	AAIController::AfterRead();

	READ_PTR_FULL(BlackboardComponent, UBlackboardComponent);
}

void AAIHelicopterController::BeforeDelete()
{
	AAIController::BeforeDelete();

	DELE_PTR_FULL(BlackboardComponent);
}

// Function Insurgency.ActiveObjectiveDisplay.UpdatePlayersOnObjective
// ()
// Parameters:
// bool                           bObjectiveChanged              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::UpdatePlayersOnObjective(bool bObjectiveChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.UpdatePlayersOnObjective");

	UActiveObjectiveDisplay_UpdatePlayersOnObjective_Params params;
	params.bObjectiveChanged = bObjectiveChanged;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnSetViewTarget
// ()
// Parameters:
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnSetViewTarget(class AActor* NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnSetViewTarget");

	UActiveObjectiveDisplay_OnSetViewTarget_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnRoundReset
// ()
void UActiveObjectiveDisplay::OnRoundReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnRoundReset");

	UActiveObjectiveDisplay_OnRoundReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnRoundOver
// ()
// Parameters:
// struct FPlayerRoundOverData    UIData                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnRoundOver(const struct FPlayerRoundOverData& UIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnRoundOver");

	UActiveObjectiveDisplay_OnRoundOver_Params params;
	params.UIData = UIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnPlayerObjectiveStateChanged
// ()
void UActiveObjectiveDisplay::OnPlayerObjectiveStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnPlayerObjectiveStateChanged");

	UActiveObjectiveDisplay_OnPlayerObjectiveStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnOwnerChanged
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnOwnerChanged(class AObjectiveBase* Objective, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnOwnerChanged");

	UActiveObjectiveDisplay_OnOwnerChanged_Params params;
	params.Objective = Objective;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnObjectiveChanged
// ()
// Parameters:
// class AObjectiveBase*          NewObjective                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnObjectiveChanged(class AObjectiveBase* NewObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnObjectiveChanged");

	UActiveObjectiveDisplay_OnObjectiveChanged_Params params;
	params.NewObjective = NewObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnNumCapturersChanged
// ()
void UActiveObjectiveDisplay::OnNumCapturersChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnNumCapturersChanged");

	UActiveObjectiveDisplay_OnNumCapturersChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnCapturingTeamChanged
// ()
// Parameters:
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  NewOwners                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnCapturingTeamChanged(class AObjectiveBase* Objective, unsigned char NewOwners)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnCapturingTeamChanged");

	UActiveObjectiveDisplay_OnCapturingTeamChanged_Params params;
	params.Objective = Objective;
	params.NewOwners = NewOwners;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnActiveObjectiveChanged
// ()
// Parameters:
// class AINSPlayerState*         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          NewActiveObjective             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnActiveObjectiveChanged(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnActiveObjectiveChanged");

	UActiveObjectiveDisplay_OnActiveObjectiveChanged_Params params;
	params.PlayerState = PlayerState;
	params.NewActiveObjective = NewActiveObjective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.OnActiveChanged
// ()
// Parameters:
// bool                           bNewActiveState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectiveBase*          Objective                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void UActiveObjectiveDisplay::OnActiveChanged(bool bNewActiveState, class AObjectiveBase* Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.OnActiveChanged");

	UActiveObjectiveDisplay_OnActiveChanged_Params params;
	params.bNewActiveState = bNewActiveState;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Insurgency.ActiveObjectiveDisplay.GetObjectiveDescription
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText UActiveObjectiveDisplay::GetObjectiveDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Insurgency.ActiveObjectiveDisplay.GetObjectiveDescription");

	UActiveObjectiveDisplay_GetObjectiveDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UActiveObjectiveDisplay::AfterRead()
{
	UUserWidget::AfterRead();

	READ_PTR_FULL(RootCanvas, UCanvasPanel);
	READ_PTR_FULL(TextObjectiveDescription, UTextBlock);
	READ_PTR_FULL(TextObjectiveName, UTextBlock);
	READ_PTR_FULL(ObjectiveTypeSwitcher, UWidgetSwitcher);
	READ_PTR_FULL(BP_ObjectiveIcon, UObjectiveIcon);
	READ_PTR_FULL(BP_ObjectiveSecondaryIcon, UObjectiveIcon);
	READ_PTR_FULL(TextObjectivePlayers, UTextBlock);
	READ_PTR_FULL(PlayerActiveObjective, AObjectiveBase);
	READ_PTR_FULL(ViewedPlayerState, AINSPlayerState);
	READ_PTR_FULL(ViewedSoldier, AINSSoldier);
}

void UActiveObjectiveDisplay::BeforeDelete()
{
	UUserWidget::BeforeDelete();

	DELE_PTR_FULL(RootCanvas);
	DELE_PTR_FULL(TextObjectiveDescription);
	DELE_PTR_FULL(TextObjectiveName);
	DELE_PTR_FULL(ObjectiveTypeSwitcher);
	DELE_PTR_FULL(BP_ObjectiveIcon);
	DELE_PTR_FULL(BP_ObjectiveSecondaryIcon);
	DELE_PTR_FULL(TextObjectivePlayers);
	DELE_PTR_FULL(PlayerActiveObjective);
	DELE_PTR_FULL(ViewedPlayerState);
	DELE_PTR_FULL(ViewedSoldier);
}

void UAchievementDataAsset::AfterRead()
{
	UPrimaryDataAsset::AfterRead();

}

void UAchievementDataAsset::BeforeDelete()
{
	UPrimaryDataAsset::BeforeDelete();

}

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif

#pragma once

// Name: ins, Version: 1805


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Insurgency.Widget_Scoreboard_RowHeader
// 0x0048 (FullSize[0x0278] - InheritedSize[0x0230])
class UWidget_Scoreboard_RowHeader : public UUserWidget
{
public:
	bool                                               bShowExtendedInfo;                                         // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_164I[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  PlayerCountText;                                           // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    ObjSizeBox;                                                // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    KADSizeBox;                                                // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    ScrSizeBox;                                                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       HeaderInvalidationBox;                                     // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATeamInfo*                                   Team;                                                      // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AINSPlayerController*                        CurrentPlayerController;                                   // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LBH7[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Widget_Scoreboard_RowHeader");
		return ptr;
	}



	void UpdateScoreboardConfig(const struct FScoreboardConfig& Config);
	void UpdatePlayerCountLabel();
	void SetTeam(class ATeamInfo* NewTeam);
	void CheckPlayerCount();
	ESlateVisibility CheckObjectiveVisibility(bool bCanShowObjectives);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Widget_Scoreboard_PlayerRow
// 0x0220 (FullSize[0x0450] - InheritedSize[0x0230])
class UWidget_Scoreboard_PlayerRow : public UUserWidget
{
public:
	class UTextBlock*                                  ScoreText;                                                 // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TxtKDR;                                                    // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ObjectiveText;                                             // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PingText;                                                  // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PlayerName;                                                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                                   PlayerBadgeBox;                                            // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PlayerBadgeImage;                                          // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                                   ClassImageBox;                                             // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ClassImage;                                                // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ScoreHiddenImage;                                          // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      KDRHiddenImage;                                            // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      MuteButtonImage;                                           // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      FactionStripe;                                             // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      BG;                                                        // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     MuteButton;                                                // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             KDR_WidgetSwitcher;                                        // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             Score_WidgetSwitcher;                                      // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       RowInvalidationBox;                                        // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       BGInvalidationBox;                                         // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bValidPlayerClass;                                         // 0x02C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RP8I[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  PlayerBadgeTexture;                                        // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      CurrentPlayerClass[0x28];                                  // 0x02D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class AINSBasePlayerController*                    CurrentPlayerController;                                   // 0x0300(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                                 AliveColor;                                                // 0x0308(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 DeadColor;                                                 // 0x0330(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 CurrentNameColor;                                          // 0x0358(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              ClassIconAlpha;                                            // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P75T[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  IconVoiceOff;                                              // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  IconVoiceOn;                                               // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  IconVoiceActive;                                           // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLocalPlayer;                                            // 0x03A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsHovered;                                                // 0x03A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowExtendedInfo;                                         // 0x03A2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsOtherTeam;                                              // 0x03A3(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P0MU[0x4];                                     // 0x03A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OpenMenuForPlayer;                                         // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpdateSelectButtonVisibility;                            // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N3IF[0x30];                                    // 0x03C8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PlayerStateSoftPtr[0x28];                                  // 0x03F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_YDES[0x30];                                    // 0x0420(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Widget_Scoreboard_PlayerRow");
		return ptr;
	}



	void UpdateScoreboardBadge(int NewScoreboardBadge);
	void UpdatePlayerState(class AINSPlayerState* NewPlayerState);
	void UpdatePlayerScore(const struct FPlayerStatGroupMinimal& UpdatedScore);
	void UpdatePlayerPing(int NewPingMs);
	void UpdatePlayerName(const struct FString& NewName, bool bForce);
	void UpdatePlayerExperience(class AINSPlayerState* InPlayerState, int NewExperience);
	void UpdatePlayerClass(class UPlayerClass* InPlayerClass);
	void UpdatePlayerAliveState(class AINSPlayerState* InPlayerState, bool bForce);
	void UpdatePingAndKAD();
	void UpdateFromPlayerState(class AINSPlayerState* InPlayerState, bool bFromInit);
	void UpdateFactionStripeVisibility();
	void UpdateExtendedColumnVisiblity(bool bNewVisibility);
	void UpdateDeveloperStatus(class AINSPlayerState* InPlayerState, bool bDeveloperStatus);
	void UpdateBotName(const struct FText& NewName, bool bForce);
	void UpdateBackgroundColor();
	void ToggleMute(bool bShouldMute);
	void SetPlayerState();
	void SetPlayerIsTalking(bool InPlayerIsTalking);
	void SetFactionColor(const struct FLinearColor& InNewFactionColor);
	void RefreshColumnVisibility();
	void OnSetPlayerName(const struct FString& NewPlayerName);
	void OnPlayerUpdateScoreboardBadge(class AINSPlayerState* Player, int NewScoreboardBadge);
	void OnPlayerStateEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> InEndPlayReason);
	void OnPlayerSpawned(class AINSSoldier* Player);
	void OnPlayerIsMutedChanged(bool bNewIsPlayingState);
	void OnPlayerDeath();
	void OnPlayerClassChanged(class AINSSoldier* Player);
	void OnIsPlayingStateChanged(bool bNewIsPlayingState);
	void InitFromPlayerState(class AINSPlayerState* InPlayerState);
	class AINSPlayerState* GetPlayerState();
	void DoSetDefaultsToPlayerBadge(class AINSPlayerState* InPlayerState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoiceStatus
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class UVoiceStatus : public UUserWidget
{
public:
	TArray<class APlayerState*>                        TalkingPlayers;                                            // 0x0230(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttached;                                                 // 0x0240(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4SQY[0x7];                                     // 0x0241(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoiceStatus");
		return ptr;
	}



	void OnTalkingPlayersChanged(TArray<class APlayerState*> InTalkingPlayers);
	void OnRemoteVoiceChatStateChanged(const struct FString& PlayerName, const struct FString& ChannelName, class AINSPlayerState* DetectedPlayerState, bool bSpeaking, bool bNonPositional);
	void OnPlayerTalkingStateChanged(class APlayerState* PlayerState, bool bIsTalking);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Widget_Scoreboard_Column
// 0x0118 (FullSize[0x0360] - InheritedSize[0x0248])
class UWidget_Scoreboard_Column : public UVoiceStatus
{
public:
	class AINSBasePlayerController*                    CurrentPlayerController;                                   // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 ActiveMenuWidget;                                          // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget_Scoreboard*                          ParentScoreboard;                                          // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                PlayerList;                                                // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget_Scoreboard_RowHeader*                BP_Widget_Scoreboard_RowHeader;                            // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      FactionBanner;                                             // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TeamScore;                                                 // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TeamWons;                                                  // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TeamPoints;                                                // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TopColor;                                                  // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TeamNameText;                                              // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TeamRoleText;                                              // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                TeamWinsBox;                                               // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                TeamScoreBox;                                              // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                TeamPointsBox;                                             // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextPointsLabel;                                           // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       ColumnInvalidationBox;                                     // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLocalPlayerTeam;                                          // 0x02D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowExtendedInfo;                                         // 0x02D1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bScoreboardVisible;                                        // 0x02D2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C071[0x5];                                     // 0x02D3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATeamInfo*                                   Team;                                                      // 0x02D8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                FactionColor;                                              // 0x02E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidget_Scoreboard_PlayerRow*>        PlayerRowsArray;                                           // 0x02F0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    FactionBannerDynamicMaterial;                              // 0x0300(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       TeamName;                                                  // 0x0308(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TeamRole;                                                  // 0x0320(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                               bMuteAllActive;                                            // 0x0338(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UOT7[0x27];                                    // 0x0339(0x0027) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Widget_Scoreboard_Column");
		return ptr;
	}



	void UpdateTeam(class ATeamInfo* InTeamInfo);
	void UpdateSelectButtonOnConsole(bool bIsRowSelectable);
	void UpdateScoreboardConfig(const struct FScoreboardConfig& Config);
	void UpdatePlayerRows();
	void UpdateColumnValues();
	void ToggleMuteAll();
	void SetTeamRole(const struct FText& InTeamRole);
	void SetTeamName(const struct FText& InTeamName);
	void SetFactionColor(const struct FLinearColor& InFactionColor);
	void PeriodicTick();
	void OpenMenuForPlayer(class AINSPlayerState* InPlayerState);
	void OnScoreboardShown(bool bShown);
	void OnPlayerControllerEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> InEndPlayReason);
	void HideActiveMenu();
	int GetPlayerCount();
	class UWidget* GetBottomPlayerWidget();
	void DoSetTacticalMapToPlayerWidget(class UWidget* InPlayerWidget);
	class UWidget* DoCreatePlayerRowWidget();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ScoreboardBase
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UScoreboardBase : public UUserWidget
{
public:
	unsigned char                                      UnknownData_ZUVR[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ScoreboardBase");
		return ptr;
	}



	void OnScoreboardShown();
	void OnScoreboardHidden();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Widget_Scoreboard
// 0x0090 (FullSize[0x02C8] - InheritedSize[0x0238])
class UWidget_Scoreboard : public UScoreboardBase
{
public:
	class AINSBasePlayerController*                    CurrentPlayerController;                                   // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveBriefing*                          ObjectiveBriefing;                                         // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget_Scoreboard_Column*                   TeamLeft;                                                  // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget_Scoreboard_Column*                   TeamRight;                                                 // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextMapName;                                               // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    LeftTeamFooter;                                            // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    RightTeamFooter;                                           // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SpectatorList;                                             // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                SpectatorBox;                                              // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       TitleInvalidationBox;                                      // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LocalTeamId;                                               // 0x0288(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PO0B[0x3];                                     // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ScoreboardTickInterval;                                    // 0x028C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DXRD[0x38];                                    // 0x0290(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Widget_Scoreboard");
		return ptr;
	}



	void PeriodicTick();
	void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
	void OnRefreshObjectives();
	void OnRefreshMutators();
	void OnRefreshFactions();
	void OnPlayerControllerEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> InEndPlayReason);
	struct FText GetFormatText(bool bFirstElement);
	void DoUpdateGameState(class AINSGameState* GameState);
	void DoUpdateGameModeText();
	void DoBindTacticalMapPawnHowerStatusChanged();
	void AssignTeams();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WidgetNavigationStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWidgetNavigationStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WidgetNavigationStatics");
		return ptr;
	}



	void SetUniformGridPanelNavigation(class UUniformGridPanel* Grid);
	void GetUniformGridWidgetMap(class UUniformGridPanel* Grid, TMap<struct FIntPoint, class UWidget*>* OutGridWidgetMap);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WheelParticleSystemComponent
// 0x0074 (FullSize[0x06E0] - InheritedSize[0x066C])
class UWheelParticleSystemComponent : public UParticleSystemComponent
{
public:
	float                                              UpdateRate;                                                // 0x066C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastUpdateTime;                                            // 0x0670(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseWheelSurface;                                          // 0x0674(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9AJ8[0x3];                                     // 0x0675(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       WheelBoneName;                                             // 0x0678(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EPhysicalSurface>                      CurrentSurface;                                            // 0x0680(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WC60[0x7];                                     // 0x0681(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TEnumAsByte<EPhysicalSurface>, class UParticleSystem*> SurfaceParticleMap;                                        // 0x0688(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KDBM[0x8];                                     // 0x06D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WheelParticleSystemComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WelcomeMenuWidget
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class UWelcomeMenuWidget : public UUserWidget
{
public:
	bool                                               bUserRequestingLogin;                                      // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RHNK[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       LoginProgressText;                                         // 0x0238(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VMKS[0x18];                                    // 0x0250(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WelcomeMenuWidget");
		return ptr;
	}



	void PerformLogin(int UserIndex);
	bool CanFadeLegalText();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WebImageWidget
// 0x0148 (FullSize[0x0378] - InheritedSize[0x0230])
class UWebImageWidget : public UUserWidget
{
public:
	class UImage*                                      WebImage;                                                  // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ImageUrl;                                                  // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 LoadingPlaceholder;                                        // 0x0248(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 FailurePlaceholder;                                        // 0x02D0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class UTexture2D*                                  StaticTexture;                                             // 0x0358(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2DDynamic*                           ImageTexture;                                              // 0x0360(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BRPC[0x10];                                    // 0x0368(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WebImageWidget");
		return ptr;
	}



	void SetLocalImage(const struct FString& Path);
	void SetImageUrl(const struct FString& NewUrl);
	void SetImageFromTexturePath();
	void SetImageFromTexture(class UTexture2D* Texture);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WebImageDecorator
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UWebImageDecorator : public URichTextBlockDecorator
{
public:
	class UClass*                                      WidgetClass;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WebImageDecorator");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponUpgradeComponent
// 0x0178 (FullSize[0x0228] - InheritedSize[0x00B0])
class UWeaponUpgradeComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_2H2P[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnUpgradeStateChangedDelegate;                             // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsUnlockedByItemId;                                       // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BUAP[0x3];                                     // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                UnlockItemId;                                              // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       PrintName;                                                 // 0x00D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       PrintDescription;                                          // 0x00E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FLessonInputAction>                  Actions;                                                   // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BaseSupplyCost;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDisplaySupplyCost;                                  // 0x0114(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideIfCannotPurchase;                                     // 0x0115(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponUpgradeSlot                                 UpgradeSlot;                                               // 0x0116(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCompatibleWithAllWeapons;                               // 0x0117(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CompatibleWeapons[0x50];                                   // 0x0118(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      ExcludedWeapons[0x50];                                     // 0x0168(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      MutualExclusions[0x50];                                    // 0x01B8(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bRequiresUpgradeInOtherSlot;                               // 0x0208(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponUpgradeSlot                                 RequiredOccupiedSlot;                                      // 0x0209(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JG2Z[0x6];                                     // 0x020A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItemWeapon*                                 OwningWeapon;                                              // 0x0210(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUpgradeInstalled;                                         // 0x0218(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OAUK[0x7];                                     // 0x0219(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ContextualHintImage;                                       // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponUpgradeComponent");
		return ptr;
	}



	void PlaySoundEventPair(struct FAkComponentCameraPair* AudioEvent);
	void PlaySoundEventFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
	void PlaySoundEvent(class UAkAudioEvent* Event, bool bApplySpeedOfSound);
	void OnUpgradeStateChangedDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade);
	void OnUpgradeStateChanged();
	bool IsToggled();
	bool IsOwnerLocallyControlled();
	class AINSSoldier* GetOwningSoldier();
	class AItemWeapon* GetActiveOwningWeaponOrAttached(bool bReturnOwnerIfInactive);
	bool ConflictsWith(class UWeaponUpgradeComponent* Other);
	bool CanShowCosmeticEffects();
	void BlueprintOnUpgradeRemoved();
	void BlueprintOnUpgradeInstalled();
	void BlueprintOnUpgradeInit();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponVisualUpgradeComponent
// 0x0150 (FullSize[0x0378] - InheritedSize[0x0228])
class UWeaponVisualUpgradeComponent : public UWeaponUpgradeComponent
{
public:
	bool                                               bSpawnedFirstPersonMeshes;                                 // 0x0228(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnedThirdPersonMeshes;                                 // 0x0229(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I0AG[0x6];                                     // 0x022A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWeaponUpgradeModel>                 UpgradeModels1P;                                           // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponUpgradeModel>                 UpgradeModels3P;                                           // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   PrimaryModel1P;                                            // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   PrimaryModel3P;                                            // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplacementFirstPersonAnims[0x50];                         // 0x0260(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      ReplacementFirePersonFirearmAnims[0x50];                   // 0x02B0(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      ReplacementThirdPersonAnims[0x50];                         // 0x0300(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bFirstPersonOverrideCommonDraw;                            // 0x0350(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonCommonDraw;                                    // 0x0351(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonOverrideCommonHolster;                         // 0x0352(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonCommonHolster;                                 // 0x0353(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonOverrideCommonDown;                            // 0x0354(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonCommonDown;                                    // 0x0355(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonOverrideCommonSprint;                          // 0x0356(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonCommonSprint;                                  // 0x0357(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FirstPersonCommonSprintAdjustment;                         // 0x0358(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonOverrideCommonCrawl;                           // 0x0364(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPersonCommonCrawl;                                   // 0x0365(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GXBH[0x2];                                     // 0x0366(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     FirstPersonCommonCrawlAdjustment;                          // 0x0368(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplacedFPAnims;                                          // 0x0374(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplaced3PAnims;                                          // 0x0375(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R6J2[0x2];                                     // 0x0376(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponVisualUpgradeComponent");
		return ptr;
	}



	void OnSpawnedThirdPersonMesh(class UINSSkeletalMeshComponent* SpawnedMesh, bool bCheckAllLoaded);
	void OnSpawnedFirstPersonMesh(class UINSSkeletalMeshComponent* SpawnedMesh, bool bCheckAllLoaded);
	bool AreAllThirdPersonMeshesLoaded();
	bool AreAllFirstPersonMeshesLoaded();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponHandlingUpgradeComponent
// 0x0070 (FullSize[0x03E8] - InheritedSize[0x0378])
class UWeaponHandlingUpgradeComponent : public UWeaponVisualUpgradeComponent
{
public:
	float                                              RecoilModifier;                                            // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilLateralModifier;                                     // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilVerticalModifier;                                    // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilRollModifier;                                        // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilFocusedModifier;                                     // 0x0388(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilFocusedLateralModifier;                              // 0x038C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilFocusedVerticalModifier;                             // 0x0390(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilFocusedRollModifier;                                 // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwayRadiusModifier;                                        // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwaySpeedModifier;                                         // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeaimDistanceModifier;                                   // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipDurationModifier;                                     // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsFirstEquipDuration;                                // 0x03A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DDFL[0x3];                                     // 0x03A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnequipDurationModifier;                                   // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NextItemEquipDurationModifier;                             // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastItemUnequipDurationModifier;                           // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PointShootInTime;                                          // 0x03B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PointShootOutTime;                                         // 0x03BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ADSShootInTime;                                            // 0x03C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ADSShootOutTime;                                           // 0x03C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadGenericMultiplier;                                   // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadMultiplier;                                          // 0x03CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadDryMultiplier;                                       // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedReloadMultiplier;                                     // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedReloadDryMultiplier;                                  // 0x03D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FocusSpeedMultiplier;                                      // 0x03DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FocusSpeedOutMultiplier;                                   // 0x03E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowFocusWhileMoving;                                    // 0x03E4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WXRA[0x3];                                     // 0x03E5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponHandlingUpgradeComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponTrainingComponent
// 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
class UWeaponTrainingComponent : public UWeaponHandlingUpgradeComponent
{
public:
	unsigned char                                      UnknownData_4QF3[0x8];                                     // 0x03E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponTrainingComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWeaponStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponStatics");
		return ptr;
	}



	void TraceSuppression(class UObject* WorldContextObject, class AINSSoldier* Owner, const struct FVector& StartLocation, const struct FVector& EndLocation, float Radius, float Increment, ESuppressionContext Context);
	bool TestMeleeSwingIgnoreActors(class UObject* WorldContextObject, class APawn* Instigator, const struct FVector& Origin, const struct FRotator& Rotation, const struct FMeleeConfig& MeleeConfig, struct FHitResult* OutHitResult, TArray<class UPrimitiveComponent*> InIgnoreComponents, TArray<class UPrimitiveComponent*>* InOutHitComponents, bool bApplyDamage, class AActor* DamageCauser);
	bool TestMeleeSwing(class UObject* WorldContextObject, class APawn* Instigator, const struct FVector& Origin, const struct FRotator& Rotation, const struct FMeleeConfig& MeleeConfig, struct FHitResult* OutHitResult, bool bApplyDamage, class AActor* DamageCauser);
	void SuppressPlayersInRadius(class UObject* WorldContextObject, const struct FVector& Epicenter, float HoldTime, ESuppressionContext Context, float InnerRadius, float OuterRadius, float InnerAmount, float OuterAmount, TArray<class AController*> IgnoredControllers);
	class AProjectileBase* SpawnSingleProjectileAtTransform(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FTransform& SpawnTransform, class AItemWeapon* Weapon, bool bDeferSpawn);
	class AProjectileBase* SpawnSingleProjectile(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FVector& SpawnLocation, const struct FVector& Direction, class AItemWeapon* Weapon, bool bDeferSpawn);
	void SpawnProjectiles(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FVector& SpawnLocation, const struct FVector& Direction, TArray<class AProjectileBase*>* SpawnedProjectiles, float ProjectileSpread, int Count, int SpreadSeed, class AItemWeapon* Weapon);
	class AItemFirearm* SpawnMountedWeapon(class UClass* Weapon, class AActor* OwnerActor, class USceneComponent* AttachComponent, const struct FName& SocketName, class UVehicleSeatComponent* LinkedSeat);
	class AFireSupportBase* SpawnFireSupport(class UObject* WorldContextObject, class UFireSupportDefinition* Definition, const struct FVector& Location, unsigned char TeamId, class AController* Instigator, class AController* Assister, bool bRespectTeamRules);
	void SetupMountedWeapon(class AItemFirearm* MountedWeapon, class AActor* OwnerActor, class USceneComponent* AttachComponent, const struct FName& SocketName, class UVehicleSeatComponent* LinkedSeat);
	void PlayShellShock(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, TArray<class AController*> IgnoredControllers, class AActor* DamageCauser);
	void PlayExplosiveSurfaceReactionWithHit(class UObject* WorldContextObject, class AActor* Projectile, class USurfaceReaction* InSurfaceReaction, const struct FHitResult& HitResult, struct FSurfaceReactionOutput* OutOutput, const struct FString& WeaponSwitch);
	void PlayExplosiveSurfaceReaction(class UObject* WorldContextObject, class AActor* Projectile, class USurfaceReaction* InSurfaceReaction, const struct FVector& HitLocation, struct FSurfaceReactionOutput* OutOutput, const struct FString& WeaponSwitch);
	bool IsAReloadingState(EFirearmState TestState);
	TArray<class UFireSupportDefinition*> GetValidFireSupportForTeam(class UObject* WorldContextObject, unsigned char TeamId, bool bRespectTeamRules);
	float GetSwingYawMultiplierForDirection(EMeleeSwingDirection Direction);
	float GetSwingPitchMultiplierForDirection(EMeleeSwingDirection Direction);
	struct FReloadGroup GetReloadGroupFromMap(class UClass* Ammo, TMap<class UClass*, struct FReloadGroup>* Map, bool* bOutFound);
	float GetExplosiveDamageModifier(class UPrimitiveComponent* VictimComp, const struct FExplosiveDamageParams& ExplosiveParameters, struct FHitResult* OutHitResult);
	class ABulletManager* GetBulletManager(class UObject* WorldContextObject);
	struct FAnimSequenceRandom GetAnimSequenceRandomFromMap(class UClass* Ammo, TMap<class UClass*, struct FAnimSequenceRandom>* Map, bool* bOutFound);
	class UAnimSequence* GetAnimSequenceFromMap(class UClass* Ammo, TMap<class UClass*, class UAnimSequence*>* Map, bool* bOutFound);
	class UAnimMontage* GetAnimMontageFromMap(class UClass* Ammo, TMap<class UClass*, class UAnimMontage*>* Map, bool* bOutFound);
	void GetAllWeaponUpgradeClassesForWeapon(class UClass* Weapon, TArray<class UClass*>* OutUpgradeClasses, bool bSorted);
	void GetAllWeaponUpgradeClasses(TArray<class UClass*>* OutUpgradeClasses, bool bSorted);
	void GetAllWeaponClasses(TArray<class UClass*>* OutItemClasses, bool bSorted);
	void GetAllEquipableClasses(TArray<class UClass*>* OutItemClasses, bool bSorted);
	void FireBullets(class UObject* WorldContextObject, struct FSimulatedBullet* BulletInfo, float ProjectileSpread, int Count, int SpreadSeed);
	bool DoMeleeSwingIgnoreActors(class UObject* WorldContextObject, class AINSSoldier* Instigator, const struct FMeleeConfig& MeleeConfig, float SwingPercent, struct FHitResult* OutHitResults, TArray<class UPrimitiveComponent*> InIgnoreComponents, TArray<class UPrimitiveComponent*>* InOutHitComponents, bool bApplyDamage, class AActor* DamagerCauser);
	bool DoMeleeSwing(class UObject* WorldContextObject, class AINSSoldier* Instigator, const struct FMeleeConfig& MeleeConfig, float SwingPercent, struct FHitResult* OutHitResults, bool bApplyDamage, class AActor* DamagerCauser);
	bool DoExplosiveDamage(const struct FExplosiveDamageParams& Parameters);
	void DeafenPlayersInRadius(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, TArray<class AController*> IgnoredControllers);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponSkinComponent
// 0x0218 (FullSize[0x0590] - InheritedSize[0x0378])
class UWeaponSkinComponent : public UWeaponVisualUpgradeComponent
{
public:
	unsigned char                                      WeaponIndexMaterialOverride1P[0x50];                       // 0x0378(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      WeaponIndexMaterialOverride3P[0x50];                       // 0x03C8(0x0050) UNKNOWN PROPERTY: MapProperty
	TMap<class UClass*, class UClass*>                 AmmoReplacements;                                          // 0x0418(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	unsigned char                                      Fallback1PMeshMaterialReplacements[0x50];                  // 0x0468(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      Fallback3PMeshMaterialReplacements[0x50];                  // 0x04B8(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bCheckUpgradesForFallbackMaterialReplacements;             // 0x0508(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckAllUpgradesForFallbackSkins;                         // 0x0509(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DT1Q[0x6];                                     // 0x050A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      UpgradesToCheckForFallbackSkins[0x10];                     // 0x0510(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_E24X[0x8];                                     // 0x0520(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      WeaponSkinMaterials[0x50];                                 // 0x0528(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_6H1R[0x18];                                    // 0x0578(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponSkinComponent");
		return ptr;
	}



	void OnWeaponModelAttached(struct FWeaponAttachedModel* Model, class USkeletalMeshComponent* WeaponParentMesh);
	void OnUpgrade3PMeshLoaded(class UINSSkeletalMeshComponent* MeshComponent, class UWeaponVisualUpgradeComponent* Upgrade);
	void OnUpgrade1PMeshLoaded(class UINSSkeletalMeshComponent* MeshComponent, class UWeaponVisualUpgradeComponent* Upgrade);
	void OnOtherComponentChanged(class UWeaponUpgradeComponent* OtherUpgrade);
	void OnAttachMesh3PToPawn(class UINSSkeletalMeshComponent* MeshComponent);
	void OnAttachMesh1PToPawn(class UINSSkeletalMeshComponent* MeshComponent);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponSelection_Gamepad
// 0x0078 (FullSize[0x02A8] - InheritedSize[0x0230])
class UWeaponSelection_Gamepad : public UUserWidget
{
public:
	class AINSPlayerController*                        CurrentPlayerController;                                   // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AItemEquipable*>                      CachedInventory;                                           // 0x0238(0x0010) (BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeTime;                                                  // 0x0248(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInventoryDiffers;                                         // 0x024C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B390[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItemEquipable*                              FirstItemInSlot;                                           // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStillHasItems;                                            // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UV11[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItemEquipable*                              PreviousItem;                                              // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AItemEquipable*                              LastSelectedItem;                                          // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                ExplosivesContainer;                                       // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              MiscContainer;                                             // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                PrimaryContainer;                                          // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              SecondaryContainer;                                        // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      OptionClassInstance;                                       // 0x0290(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C2Y4[0x10];                                    // 0x0298(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponSelection_Gamepad");
		return ptr;
	}



	void UpdateWeaponCache();
	void OnSoldierInventoryItemAddedOrRemoved(class AINSSoldier* Soldier, class AItemBase* Item);
	void OnInventoryMenuVisible(bool bNewInventorySelectActive, bool bUsingGamepad);
	void OnInventoryChanged();
	void OnControllerRemovePawn();
	void OnControllerNewPawn();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponSelectionOption_Gamepad
// 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
class UWeaponSelectionOption_Gamepad : public UUserWidget
{
public:
	class AItemEquipable*                              Item;                                                      // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EItemSlot                                          ItemSlot;                                                  // 0x0238(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSelected;                                                 // 0x0239(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IV23[0x2];                                     // 0x023A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                InactiveBgColor;                                           // 0x023C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ActiveBgColor;                                             // 0x024C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                InactiveFgColor;                                           // 0x025C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ActiveFgColor;                                             // 0x026C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DisabledBgColor;                                           // 0x027C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MZEB[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      ImageBackground;                                           // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      ImageWeaponIcon;                                           // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponSelectionOption_Gamepad");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponOpticComponent
// 0x0160 (FullSize[0x04D8] - InheritedSize[0x0378])
class UWeaponOpticComponent : public UWeaponVisualUpgradeComponent
{
public:
	unsigned char                                      UnknownData_XMLO[0x8];                                     // 0x0378(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowPointShooting;                                       // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QKV1[0x3];                                     // 0x0381(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AditionalLockOnTraceDistance;                              // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponSightSequence>                SightSequences;                                            // 0x0388(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsScope;                                                  // 0x0398(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMaterialTransition;                                    // 0x0399(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_99UF[0x2];                                     // 0x039A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SightFOV;                                                  // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowDetailFocusFOVFraction;                                 // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelSightDistanceBase;                                // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelRotationBase;                                     // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelSightFOV;                                         // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelSightLowFOV;                                      // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelSightFocusFOV;                                    // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelSightFocusLowFOV;                                 // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ModelFlattenScale;                                         // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OpticADSMaterialAsset[0x28];                               // 0x03C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      OpticHipfireMaterialAsset[0x28];                           // 0x03E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UMaterialInstanceDynamic*                    OpticADSMaterial;                                          // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    OpticHipfireMaterial;                                      // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopeModelFlattenClipDistance;                             // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ScopeModelFlattenClipMaterialIndex;                        // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentObstructionInterp;                                  // 0x0428(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyReticleBrightness;                                   // 0x042C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RBWP[0x3];                                     // 0x042D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ReticleSlotName;                                           // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlobalReticleBrightness;                                   // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ADSShootInTime;                                            // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSShootOutTime;                                           // 0x0440(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V7FN[0x4];                                     // 0x0444(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ReticleBrightness[0x50];                                   // 0x0448(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bCyclingOptic;                                             // 0x0498(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCyclingWasInSights;                                       // 0x0499(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UFRH[0x2];                                     // 0x049A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentOptic;                                              // 0x049C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LatchedOptic;                                              // 0x04A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CycleOpticDuration;                                        // 0x04A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CycleOpticGraceDuration;                                   // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastCycleOpticTime;                                        // 0x04AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCycleOpticDelegate;                                      // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_OpticTransition;                               // 0x04C0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaterialIndex;                                             // 0x04C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OpticMaterialIndex;                                        // 0x04CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsingADSMaterial;                                         // 0x04D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CVM6[0x7];                                     // 0x04D1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponOpticComponent");
		return ptr;
	}



	void ServerCycleOptic();
	void OnRep_CurrentOptic(int PreviousOptic);
	void OnCycleOpticDelegate__DelegateSignature(int LatchedMode, int DesiredMode);
	bool IsHybridOptic();
	bool IsCyclingOptic();
	EOpticZoomLevel GetZoomLevelClassification();
	int GetNumberOpticModes();
	EOpticZoomLevel GetDefaultZoomLevelClassification();
	float GetADSMultiplier(bool bAimingDownSights);
	void FinishOpticTransition();
	void BlueprintOnCycleOptic(int LatchedMode, int Mode);
	void BeginOpticTransition();
	bool AllowPointShooting();
	bool AllowAimDownSights();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponScopeComponent
// 0x0200 (FullSize[0x06D8] - InheritedSize[0x04D8])
class UWeaponScopeComponent : public UWeaponOpticComponent
{
public:
	struct FScopeConfiguration                         ScopeConfiguration;                                        // 0x04D8(0x0034) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsHybridOptic;                                            // 0x050C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AYWU[0x3];                                     // 0x050D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, struct FScopeConfiguration>              AdditionalScopeConfigurations;                             // 0x0510(0x0050) (Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FScopeConfiguration>                 AdditionalScopeModes;                                      // 0x0560(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRenderWeaponInScope;                                      // 0x0570(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRenderHandsInScope;                                       // 0x0571(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UH61[0x6];                                     // 0x0572(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWeaponUpgradeModel>                 ReticleMeshes;                                             // 0x0578(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ReticleMeshId;                                             // 0x0588(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NS6A[0x4];                                     // 0x058C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ScopeGlassMaterialAsset[0x28];                             // 0x0590(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ScopeReflectiveMaterialAsset[0x28];                        // 0x05B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ZoomScopeMaterialAsset[0x28];                              // 0x05E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      RealisticScopeMaterialAsset[0x28];                         // 0x0608(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      OriginalScopeReticleMaterial[0x28];                        // 0x0630(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UMaterialInstanceDynamic*                    ScopeReflectiveMaterial;                                   // 0x0658(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    ScopeReticleMaterial;                                      // 0x0660(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    BodyMaterial;                                              // 0x0668(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PlayerCollectionAsset[0x28];                               // 0x0670(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UMaterialInterface*                          PostProcessMaterial;                                       // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                TintHSV;                                                   // 0x06A0(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsTransparent;                                            // 0x06B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QE3F[0x3];                                     // 0x06B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Roughness;                                                 // 0x06B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CurrentScopeRenderMode;                                    // 0x06B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaximumFireDistance;                                       // 0x06BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FireDistance;                                              // 0x06C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ZoomedRecoilLateralModifier;                               // 0x06C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZoomedRecoilVerticalModifier;                              // 0x06C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZoomedRecoilRollModifier;                                  // 0x06CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZoomedSwayRadiusModifier;                                  // 0x06D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZoomedSwaySpeedModifier;                                   // 0x06D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponScopeComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponForegripComponent
// 0x0000 (FullSize[0x03E8] - InheritedSize[0x03E8])
class UWeaponForegripComponent : public UWeaponHandlingUpgradeComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponForegripComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponPointShootGripComponent
// 0x0028 (FullSize[0x0410] - InheritedSize[0x03E8])
class UWeaponPointShootGripComponent : public UWeaponForegripComponent
{
public:
	unsigned char                                      UnknownData_5DL5[0x8];                                     // 0x03E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bWantsPointShoot;                                          // 0x03F0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7YPS[0x7];                                     // 0x03F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AudioEventToPointShoot;                                    // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventToADS;                                           // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAudioEventsRequireADS;                                    // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9UHZ[0x7];                                     // 0x0409(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponPointShootGripComponent");
		return ptr;
	}



	bool WantsPointShoot();
	void SetWantsPointShoot(bool bNewWantsPointShoot);
	void ServerSetWantsPointShoot(bool bNewWantsPointShoot);
	void OnRep_bWantsPointShoot();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponMountComponent
// 0x00C0 (FullSize[0x0438] - InheritedSize[0x0378])
class UWeaponMountComponent : public UWeaponVisualUpgradeComponent
{
public:
	TMap<class UClass*, struct FMountCompatibleWeaponInfo> CompatibleAttachedWeapons;                                 // 0x0378(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bSpawnWeapons;                                             // 0x03C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldHideOnDrop;                                         // 0x03C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_70HS[0x6];                                     // 0x03CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AItemWeapon*>                         MountedWeapons;                                            // 0x03D0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PreviousClientWeaponCount;                                 // 0x03E0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasBeenDropped;                                           // 0x03E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NTKB[0x3];                                     // 0x03E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, int>                           DroppedAmmo;                                               // 0x03E8(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponMountComponent");
		return ptr;
	}



	void OnRep_MountedWeapons();
	void AttachWeapons();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponModelViewer
// 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
class UWeaponModelViewer : public UUserWidget
{
public:
	class AItemBase*                                   WeaponModel1P;                                             // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemBase*                                   WeaponModel3P;                                             // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AItemBase*>                           CharacterGear;                                             // 0x0240(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AProfileCharacter*                           SoldierModel;                                              // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      InsurgentSkeletalMesh[0x28];                               // 0x0258(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SecuritySkeletalMesh[0x28];                                // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              InterpolationTime;                                         // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3L0K[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStoredInventoryItem                        CurrentWeapon;                                             // 0x02B0(0x0018) (NativeAccessSpecifierPublic)
	unsigned char                                      CurrentModelFaction;                                       // 0x02C8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XT9O[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AUICameraActor*                              WeaponCameraActor;                                         // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AUICameraActor*                              SoldierCameraActor;                                        // 0x02D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponUpgradeSlot                                 OutlinedUpgradeSlot;                                       // 0x02E0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X8NP[0x7];                                     // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      WeaponAnimClass;                                           // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SoldierAnimClass;                                          // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bChangingWeapon;                                           // 0x02F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_51VQ[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSSkeletalMeshComponent*                   WeaponMesh1P;                                              // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UINSSkeletalMeshComponent*                   WeaponMesh3P;                                              // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                               GhostMesh;                                                 // 0x0310(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7VIE[0x10];                                    // 0x0318(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponModelViewer");
		return ptr;
	}



	void UpdateWeaponModel(const struct FStoredInventoryItem& Item);
	void UpdateItemModels();
	void TimedSetCameras();
	class AItemBase* SpawnWeaponModel(const struct FStoredInventoryItem& Item, bool FirstPerson);
	void SetWeaponModel(const struct FStoredInventoryItem& Item, bool FirstPerson, bool ForceRefresh);
	void SetUpgradeCustomDepth(EWeaponUpgradeSlot UpgradeSlot, bool RenderCustomDepth);
	void SetSoldierModel();
	void SetCameras();
	void ResetCamera();
	void OutlineUpgradeInSlot(EWeaponUpgradeSlot UpgradeSlot);
	void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
	void OnSoldierMeshSet(class UINSSkeletalMeshComponent* NewMesh);
	void OnPlayerClassChanged(class UPlayerClass* PlayerClass);
	void OnInventoryChanged();
	void OnFirstPersonWeaponMeshSet(class UINSSkeletalMeshComponent* NewMesh);
	void HandleUpdateModelsTimer();
	struct FVector GetWorldPositionOfUpgrade(EWeaponUpgradeSlot UpgradeSlot);
	void DestroyModels();
	void DestroyModel1P();
	void DestroyGearModels();
	void AttachWeaponModel();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponMagazineUpgradeComponent
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class UWeaponMagazineUpgradeComponent : public UWeaponUpgradeComponent
{
public:
	class UClass*                                      ReplacementAmmoContainer;                                  // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClipLoadedOnEmpty;                                        // 0x0230(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClipLoadedOnSpeedReload;                                  // 0x0231(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WR95[0x2];                                     // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RecoilLateralModifier;                                     // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponMagazineUpgradeComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponStockComponent
// 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
class UWeaponStockComponent : public UWeaponHandlingUpgradeComponent
{
public:
	bool                                               bIsToggled;                                                // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeToggled;                                             // 0x03E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5YFQ[0x6];                                     // 0x03EA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponStockComponent");
		return ptr;
	}



	void Server_Toggle();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponFoldingStockComponent
// 0x0008 (FullSize[0x03F8] - InheritedSize[0x03F0])
class UWeaponFoldingStockComponent : public UWeaponStockComponent
{
public:
	bool                                               bIsFolded;                                                 // 0x03F0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5PCD[0x7];                                     // 0x03F1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponFoldingStockComponent");
		return ptr;
	}



	void Server_ToggleFold();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponBoltUpgradeComponent
// 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
class UWeaponBoltUpgradeComponent : public UWeaponHandlingUpgradeComponent
{
public:
	float                                              BoltSpeedModifier;                                         // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0V75[0x4];                                     // 0x03EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponBoltUpgradeComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponBipodComponent
// 0x0088 (FullSize[0x0470] - InheritedSize[0x03E8])
class UWeaponBipodComponent : public UWeaponForegripComponent
{
public:
	EBipodState                                        BipodDeployedState;                                        // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBipodState                                        SimulatedBipodDeployedState;                               // 0x03E9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBipodState                                        BipodLegsState;                                            // 0x03EA(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBipodState                                        SimulatedBipodLegsState;                                   // 0x03EB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeployedSwayRadiusModifier;                                // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeployedSwaySpeedModifier;                                 // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LegsDownSwayRadiusModifier;                                // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LegsDownSwaySpeedModifier;                                 // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeployedRecoilModifier;                                    // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeployedRecoilLateralModifier;                             // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeployedRecoilVerticalModifier;                            // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeployedADSSpeedModifier;                                  // 0x0408(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DS0D[0x4];                                     // 0x040C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBipodDeployedStateChanged;                               // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBipodLegsStateChanged;                                   // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              BipodToggleTime;                                           // 0x0430(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodDeployHeight;                                         // 0x0434(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodLeftBlockRatio;                                       // 0x0438(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodRightBlockRatio;                                      // 0x043C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                       BipodDeployLocation;                                       // 0x0440(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodHeight;                                               // 0x044C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodDistance;                                             // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodViewBlendTime;                                        // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundCheckTraceLength;                                    // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsGrippod;                                                // 0x045C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UHJS[0x3];                                     // 0x045D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       TraceStartSocket;                                          // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawDebugLine;                                            // 0x0468(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZWCQ[0x7];                                     // 0x0469(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponBipodComponent");
		return ptr;
	}



	void TryBipodDeploy();
	void ToggleBipodLegsState();
	bool ShouldTryAutoBipod();
	void SetBipodLegsState(EBipodState NewState, bool bFromReplication);
	void Server_SetBipodLegsState(EBipodState NewState);
	void Server_SetBipodDeployedState(EBipodState NewState);
	void OnRep_BipodLegsState();
	void OnRep_BipodDeployedState();
	bool IsManualDeployment();
	bool IsDeployedOrDeploying();
	bool IsDeployed();
	bool InBipodTransition();
	float GetBipodViewTransitionFrac();
	float GetBipodToggleElapsedTime();
	EBipodState GetBipodLegsState();
	EBipodState GetBipodDeployedState();
	bool CanToggleLegState();
	bool CanDeploy();
	void BipodStateChanged__DelegateSignature(EBipodState OldState, EBipodState NewState);
	bool AreBipodLegsInTransition();
	bool AreBipodLegsDown();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponMuzzleComponent
// 0x0058 (FullSize[0x0440] - InheritedSize[0x03E8])
class UWeaponMuzzleComponent : public UWeaponHandlingUpgradeComponent
{
public:
	bool                                               bOverrideMuzzleSocket;                                     // 0x03E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMuzzleFlashEffects;                                   // 0x03E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAISeeMuzzleFlash;                                      // 0x03EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TVVD[0x1];                                     // 0x03EB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LoudnessModifier;                                          // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMuzzleUpgradeWeaponProperties>      WeaponProperties;                                          // 0x03F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>                     MuzzleFlashEffects;                                        // 0x0400(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClearMuzzleEffects;                                       // 0x0410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OLZN[0x7];                                     // 0x0411(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UParticleSystem*>                     MuzzleFlashEffectsTP;                                      // 0x0418(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClearMuzzleEffectsTP;                                     // 0x0428(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XXJ1[0x3];                                     // 0x0429(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MuzzleVelocityModifier;                                    // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BarrelLengthModifier;                                      // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideTriggerDelay;                                     // 0x0434(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YPBN[0x3];                                     // 0x0435(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TriggerDelay;                                              // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4V0R[0x4];                                     // 0x043C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponMuzzleComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponBayonetComponent
// 0x0000 (FullSize[0x0440] - InheritedSize[0x0440])
class UWeaponBayonetComponent : public UWeaponMuzzleComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponBayonetComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EquipableAnimInstance
// 0x0068 (FullSize[0x02D0] - InheritedSize[0x0268])
class UEquipableAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_FWVA[0x8];                                     // 0x0268(0x0008) Fix Super Size
	class AINSSoldier*                                 Soldier;                                                   // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPerson;                                              // 0x0278(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnimType                                          AnimType;                                                  // 0x0279(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirearmCategory                                   FirearmCategory;                                           // 0x027A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TFMS[0x5];                                     // 0x027B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItemEquipable*                              PreviousEquipable;                                         // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemEquipable*                              Equipable;                                                 // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemWeapon*                                 Weapon;                                                    // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemAimableWeapon*                          AimableWeapon;                                             // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemFirearm*                                Firearm;                                                   // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemRevolver*                               Revolver;                                                  // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemGrenade*                                Grenade;                                                   // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemRemoteExplosive*                        RemoteExplosive;                                           // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemMeleeWeapon*                            Knife;                                                     // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSinglyLoaded;                                             // 0x02C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XGAC[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Time;                                                      // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EquipableAnimInstance");
		return ptr;
	}



	void SetEquipable(class AItemEquipable* Item);
	void OnUpgradeRemoved(class UWeaponUpgradeComponent* Upgrade);
	void OnUpgradeMeshLoaded(class UINSSkeletalMeshComponent* Mesh, class UWeaponVisualUpgradeComponent* Upgrade);
	void OnUpgradeInstalled(class UWeaponUpgradeComponent* Upgrade);
	void OnRevolverChambersUpdated();
	void OnRevolverActiveChamberUpdated();
	void OnReloadInterrupt();
	void OnReload(bool bDryReload, bool bSingleReload, float RateMultiplier);
	void OnPlayerClassAttributesUpdated(class AINSSoldier* UpdatedSoldier);
	void OnMeshLoaded(class UINSSkeletalMeshComponent* Mesh);
	void OnMeleeWeaponHit(const struct FHitResult& Hit);
	void OnMeleeWeaponAttack(const struct FMeleeConfig& SelectedAttack);
	void OnItemUnequip(bool bInstant, class AItemEquipable* SwitchingTo);
	void OnItemEquip(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip);
	void OnGrenadeThrowModeChanged(EGrenadeThrowMode OldState);
	void OnGrenadeStateChanged(EGrenadeState OldState);
	void OnGrenadeStartCook(EGrenadeThrowMode NewThrowMode);
	void OnGenericMeleeAttack(bool bBash);
	void OnGearInteracted(class AItemInteractableGear* GearItem, EEquipableState NewState);
	void OnFirearmStopFire();
	void OnFirearmStartFire();
	void OnFirearmFired(const struct FVector& FireOrigin, const struct FVector& FireDirection);
	void OnFirearmDryFire();
	void OnFastReload(bool bDryReload, float RateMultiplier);
	void OnEndViewTarget();
	void OnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
	void OnBoltCycle();
	void OnBipodLegsStateChanged(EBipodState OldState, EBipodState NewState);
	void OnBipodDeployedStateChanged(EBipodState OldState, EBipodState NewState);
	void OnBecomeViewTarget();
	void OnAmmoCheck();
	void OnAllUpgradeMeshesLoaded(class UWeaponVisualUpgradeComponent* Upgrade);
	bool CanFireEvents();
	void BlueprintOnUpgradeStateChanged(class UWeaponUpgradeComponent* Upgrade);
	void BlueprintOnUpgradeRemoved(class UWeaponUpgradeComponent* Upgrade);
	void BlueprintOnUpgradeMeshLoaded(class UINSSkeletalMeshComponent* Mesh, class UWeaponVisualUpgradeComponent* Upgrade);
	void BlueprintOnUpgradeInstalled(class UWeaponUpgradeComponent* Upgrade);
	void BlueprintOnRevolverChambersUpdated();
	void BlueprintOnRevolverActiveChamberUpdated();
	void BlueprintOnReloadInterrupt();
	void BlueprintOnReload(bool bDryReload, bool bSingleReload, float RateMultiplier);
	void BlueprintOnPlayerClassAttributesUpdated();
	void BlueprintOnMeshLoaded();
	void BlueprintOnMeleeWeaponHit(const struct FHitResult& Hit);
	void BlueprintOnMeleeWeaponAttack(const struct FMeleeConfig& SelectedAttack);
	void BlueprintOnItemUnequip(bool bInstant, class AItemEquipable* SwitchingTo);
	void BlueprintOnItemEquip(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip);
	void BlueprintOnGrenadeThrowModeChanged(EGrenadeThrowMode OldState);
	void BlueprintOnGrenadeStateChanged(EGrenadeState OldState);
	void BlueprintOnGrenadeStartCook(EGrenadeThrowMode NewThrowMode);
	void BlueprintOnGenericMeleeAttack(bool bBash);
	void BlueprintOnGearInteracted(class AItemInteractableGear* GearItem, EEquipableState NewState);
	void BlueprintOnFirearmStopFire();
	void BlueprintOnFirearmStartFire();
	void BlueprintOnFirearmFired(const struct FVector& FireOrigin, const struct FVector& FireDirection);
	void BlueprintOnFirearmDryFire();
	void BlueprintOnFastReload(bool bDryReload, float RateMultiplier);
	void BlueprintOnEndViewTarget();
	void BlueprintOnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
	void BlueprintOnBoltCycle();
	void BlueprintOnBipodLegsStateChanged(EBipodState OldState, EBipodState NewState);
	void BlueprintOnBipodDeployedStateChanged(EBipodState OldState, EBipodState NewState);
	void BlueprintOnBecomeViewTarget();
	void BlueprintOnAmmoCheck();
	void BlueprintOnAllUpgradeMeshesLoaded(class UWeaponVisualUpgradeComponent* Upgrade);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FirstPersonAnimInstance
// 0x1C10 (FullSize[0x1EE0] - InheritedSize[0x02D0])
class UFirstPersonAnimInstance : public UEquipableAnimInstance
{
public:
	EIKDirection                                       IKSprint;                                                  // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIKDirection                                       IKCrawl;                                                   // 0x02D1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LJLJ[0x6];                                     // 0x02D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFirstPersonAnims                           CachedEquipableAnimations;                                 // 0x02D8(0x09F8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFirearmAnimsGroup                          CachedFirearmAnimations;                                   // 0x0CD0(0x0DE0) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FExplosiveAnimsGroup                        CachedGrenadeAnimations;                                   // 0x1AB0(0x0270) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMeleeAnimsGroup                            CachedMeleeAnimations;                                     // 0x1D20(0x01B0) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bHasEmpty;                                                 // 0x1ED0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFireSelect;                                            // 0x1ED1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasMovementBlendSpace;                                    // 0x1ED2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasSpecialIdle;                                           // 0x1ED3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BarrelObstructionAnimAlpha;                                // 0x1ED4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireDelta;                                                 // 0x1ED8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7D28[0x4];                                     // 0x1EDC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FirstPersonAnimInstance");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponAnimInstance
// 0x04D0 (FullSize[0x23B0] - InheritedSize[0x1EE0])
class UWeaponAnimInstance : public UFirstPersonAnimInstance
{
public:
	struct FTransform                                  SoldierTransform;                                          // 0x1EE0(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    SoldierRotation;                                           // 0x1F10(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     SoldierVelocityLocal;                                      // 0x1F1C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DirectionAngle;                                            // 0x1F28(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HorizontalSpeed;                                           // 0x1F2C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VerticalSpeed;                                             // 0x1F30(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HorizontalSpeedInterp;                                     // 0x1F34(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsNotMoving;                                              // 0x1F38(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HQTP[0x3];                                     // 0x1F39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MovingAlpha;                                               // 0x1F3C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bJustJumped;                                               // 0x1F40(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A7BP[0x3];                                     // 0x1F41(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RotationTurnDirection;                                     // 0x1F44(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    LastTickRotation;                                          // 0x1F48(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              StrafingAmount;                                            // 0x1F54(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    PlayerAimRotator;                                          // 0x1F58(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseDeployedCrawl;                                         // 0x1F64(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HTFV[0x3];                                     // 0x1F65(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     CrawlOffset;                                               // 0x1F68(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DeployedProneOffset;                                       // 0x1F74(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SightFraction;                                             // 0x1F80(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeanRotationAlpha;                                         // 0x1F84(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CombinedAimingFraction;                                    // 0x1F88(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GenericMeleeAlpha;                                         // 0x1F8C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadingAlpha;                                            // 0x1F90(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AllowWeaponFireAlpha;                                      // 0x1F94(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExplosiveThrowAlpha;                                       // 0x1F98(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    MovementWeightShift;                                       // 0x1F9C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasOpticalScope;                                          // 0x1FA8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XUC3[0x3];                                     // 0x1FA9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastRenderTime;                                            // 0x1FAC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GameTime;                                                  // 0x1FB0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GameTimeLastTick;                                          // 0x1FB4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsGoingSprint;                                            // 0x1FB8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsGoingSprintLastTick;                                    // 0x1FB9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowWeaponFire;                                          // 0x1FBA(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEquipableState                                    EquipableState;                                            // 0x1FBB(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WEF1[0x4];                                     // 0x1FBC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                SpecialIdleMontageReference;                               // 0x1FC0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     OriginOffset;                                              // 0x1FC8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InUnderbarrelTransition;                                   // 0x1FD4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bThrowWeapon;                                              // 0x1FD8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasParentWeapon;                                          // 0x1FD9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMeleeBlendSwitch;                                         // 0x1FDA(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E6PN[0x5];                                     // 0x1FDB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                GenericMeleeMontageReference;                              // 0x1FE0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInChargeMode;                                             // 0x1FE8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I9NN[0x3];                                     // 0x1FE9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChargeApha;                                                // 0x1FEC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EUseItem                                           CurrentUsableActor;                                        // 0x1FF0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UHFR[0x7];                                     // 0x1FF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                CurrentInteractionMontage;                                 // 0x1FF8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BinocularZoomProgress;                                     // 0x2000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsePointShoot;                                            // 0x2004(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsIron;                                                   // 0x2005(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B42A[0x2];                                     // 0x2006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintAlpha;                                               // 0x2008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LoadedAmmo;                                                // 0x200C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOutOfAmmo;                                                // 0x2010(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPullingTrigger;                                           // 0x2011(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YMQO[0x2];                                     // 0x2012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ShotFrequency;                                             // 0x2014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeBetweenShots;                                          // 0x2018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RecoilDynamicAdjustment;                                   // 0x201C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RecoilAmount;                                              // 0x2020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bChamberedRound;                                           // 0x2024(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFirearmBoltState                                  BoltState;                                                 // 0x2025(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasReloadStages;                                          // 0x2026(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasLoadedMag;                                             // 0x2027(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasAttachedMagazine;                                      // 0x2028(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeaponReloadStage                                 NextReloadStage;                                           // 0x2029(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IMLU[0x2];                                     // 0x202A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DrawChamberEmptyAlpha;                                     // 0x202C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReloadMagTypeChange;                                      // 0x2030(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VFLD[0x3];                                     // 0x2031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EmptyReloadStagesAlpha;                                    // 0x2034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                ActiveReloadMontage;                                       // 0x2038(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                ActiveReloadStagesMontage;                                 // 0x2040(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadPosition;                                            // 0x2048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadStagesPosition;                                      // 0x204C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFirearmFiremode                                   Firemode;                                                  // 0x2050(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SYGH[0x3];                                     // 0x2051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FiremodeCount;                                             // 0x2054(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BoltCatchAlpha;                                            // 0x2058(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EmptyAlpha;                                                // 0x205C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadEmptyAlpha;                                          // 0x2060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFinishedReload;                                           // 0x2064(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G1AP[0x3];                                     // 0x2065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondMagAlpha;                                            // 0x2068(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AllowFireAlpha;                                            // 0x206C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                RechamberReference;                                        // 0x2070(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsRechambering;                                           // 0x2078(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OU12[0x3];                                     // 0x2079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ShotgunRechamberAlpha;                                     // 0x207C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WelrodRechamberAlpha;                                      // 0x2080(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWelrod;                                                   // 0x2084(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsBarrelObstructed;                                       // 0x2085(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWeaponObstructedByPawn;                                   // 0x2086(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWeaponPreviouslyObstructedByPawn;                         // 0x2087(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BarrelObstructionSightFraction;                            // 0x2088(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BarrelObstructionAlpha;                                    // 0x208C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProneAlpha;                                                // 0x2090(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasBlocked;                                               // 0x2094(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LFC7[0x3];                                     // 0x2095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    BarrelObstructionRotator;                                  // 0x2098(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     BarrelObstructionVector;                                   // 0x20A4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchAlpha;                                               // 0x20B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GQ1B[0x4];                                     // 0x20B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                CurrentFiremodeMontage1;                                   // 0x20B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFiremodePlaying;                                          // 0x20C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UV68[0x3];                                     // 0x20C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FireModeSlotInt;                                           // 0x20C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsBeltFed;                                                // 0x20C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LUFI[0x3];                                     // 0x20C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MagazineCapacity;                                          // 0x20CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBeltVisable;                                              // 0x20D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6U65[0x7];                                     // 0x20D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      BeltLinkAlpha;                                             // 0x20D8(0x0010) (BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasExplicitEmpty;                                         // 0x20E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TZSA[0x3];                                     // 0x20E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExplicitEmptyAlpha;                                        // 0x20EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExplicitEmptyIntermediateAlpha;                            // 0x20F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrawlAlpha;                                                // 0x20F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasForegripDelta;                                         // 0x20F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasUnderbarrelDelta;                                      // 0x20F9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C7O5[0x2];                                     // 0x20FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnderbarrelAlpha;                                          // 0x20FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForegripAlpha;                                             // 0x2100(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HardcoreSprintUnderbarrelAdjustment;                       // 0x2104(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BipodLegStateAlpha;                                        // 0x2108(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DeployedAlpha;                                             // 0x210C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                ReadyMontageReference;                                     // 0x2110(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                DrawChamberMontageReference;                               // 0x2118(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUnderbarrelSwitch;                                        // 0x2120(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsIronChange;                                             // 0x2121(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasBayo;                                                  // 0x2122(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBayoCharge;                                               // 0x2123(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeleeChargeAlpha;                                          // 0x2124(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeleeChargeAnimTime;                                       // 0x2128(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasDeployed;                                              // 0x212C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S5RC[0x3];                                     // 0x212D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BipodLegsAlpha;                                            // 0x2130(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDeployed;                                               // 0x2134(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JOOE[0x3];                                     // 0x2135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                DeploySequenceMontageReference;                            // 0x2138(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirePinState;                                             // 0x2140(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OKS6[0x3];                                     // 0x2141(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FiringPinAlpha;                                            // 0x2144(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsUGL;                                                    // 0x2148(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bToss;                                                     // 0x2149(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasGripod;                                                // 0x214A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1I6V[0x1];                                     // 0x214B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GripodLegsAlpha;                                           // 0x214C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                BipodLegMontageReference;                                  // 0x2150(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponLightComponent*                       LightAttachment;                                           // 0x2158(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeaponLightMode                                   LightMode;                                                 // 0x2160(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsHardcore;                                               // 0x2161(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBipodState                                        BipodLegState;                                             // 0x2162(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W1S3[0x1];                                     // 0x2163(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HasMagazineDeltaTransparent;                               // 0x2164(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                               AmmoDeltaAnim;                                             // 0x2168(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ConsumeMagazine;                                           // 0x2170(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ToggleOpticHandCurve;                                      // 0x2174(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ToggleOpticOffsetCurve;                                    // 0x2178(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNeedToggleADS;                                            // 0x217C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bToggleADSOut;                                             // 0x217D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGrenadeState                                      GrenadeState;                                              // 0x217E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGrenadeThrowMode                                  GrenadeThrowMode;                                          // 0x217F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGrenadeThrowMode                                  GrenadeThrowModeActive;                                    // 0x2180(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCooking;                                                // 0x2181(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPrimed;                                                 // 0x2182(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsThrowback;                                              // 0x2183(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsMolotov;                                                // 0x2184(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XC17[0x3];                                     // 0x2185(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SimulationBlendAlpha;                                      // 0x2188(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActiveThrowOverhand;                                      // 0x218C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSimulationBlendUpdated;                                   // 0x218D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInSwing;                                                  // 0x218E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HBQP[0x1];                                     // 0x218F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SwingTimeRemaining;                                        // 0x2190(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NextSwingTime;                                             // 0x2194(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BinocModelAlpha;                                           // 0x2198(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInProneTransition;                                        // 0x219C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESoldierStance                                     DesiredStance;                                             // 0x219D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESoldierStance                                     CurrentStance;                                             // 0x219E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DC9S[0x1];                                     // 0x219F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeanAmount;                                                // 0x21A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeanAlpha;                                                 // 0x21A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInVaultRecovery;                                          // 0x21A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSliding;                                                // 0x21A9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<EMovementMode>                         MovementMode;                                              // 0x21AA(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVaultAction                                       VaultAction;                                               // 0x21AB(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCurrentlyVaulting;                                      // 0x21AC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDesiringProne;                                          // 0x21AD(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsProne;                                                  // 0x21AE(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G1RI[0x1];                                     // 0x21AF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BreathingAlpha;                                            // 0x21B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasBreathing;                                             // 0x21B4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBipodState                                        DeployedState;                                             // 0x21B5(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MWIK[0x2];                                     // 0x21B6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LeanWeaponVector;                                          // 0x21B8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    LeanWeaponRotator;                                         // 0x21C4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    LeanRootRotator;                                           // 0x21D0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	EWeaponPosture                                     WeaponPosture;                                             // 0x21DC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasSlide;                                                 // 0x21DD(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasJump;                                                  // 0x21DE(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCrawling;                                               // 0x21DF(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSprinting;                                              // 0x21E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsFullSprint;                                             // 0x21E1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OUHW[0x2];                                     // 0x21E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FullSprintAlpha;                                           // 0x21E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlendCrawlAlpha;                                           // 0x21E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DrawHolsterSprintAlpha;                                    // 0x21EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCacheRig;                                               // 0x21F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W5PH[0x3];                                     // 0x21F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintStateAlpha;                                          // 0x21F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeaponMovement                                    WeaponMovementMode;                                        // 0x21F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XQ6Q[0x3];                                     // 0x21F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintSpeed;                                               // 0x21FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintJumpAlpha;                                           // 0x2200(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasLeap;                                                  // 0x2204(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2AW6[0x3];                                     // 0x2205(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SprintPitchRotator;                                        // 0x2208(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     SprintPitchVector;                                         // 0x2214(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AnimCameraPosition;                                        // 0x2220(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintPitchFactor;                                         // 0x222C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    CrawlPitchRotator;                                         // 0x2230(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     CrawlPitchVector;                                          // 0x223C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrawlPitchFactor;                                          // 0x2248(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsNearLand;                                               // 0x224C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLand;                                                   // 0x224D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsIK;                                                     // 0x224E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableLeftHandIK;                                         // 0x224F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableRightHandIK;                                        // 0x2250(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EIKDirection                                       IKMaster;                                                  // 0x2251(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZXJW[0x2];                                     // 0x2252(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HandIKLeftCurve;                                           // 0x2254(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponIKLeftCurve;                                         // 0x2258(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HandIKRightCurve;                                          // 0x225C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponIKRightCurve;                                        // 0x2260(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EIKDirection                                       IKSprintSelected;                                          // 0x2264(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_343H[0x3];                                     // 0x2265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DrawHolsterLeftHandIK;                                     // 0x2268(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DrawAnimRate;                                              // 0x226C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HolsterAnimRate;                                           // 0x2270(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ExtendedMagVectorOffset;                                   // 0x2274(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ExtendedMagRotatorOffset;                                  // 0x2280(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     ExtendedMag2VectorOffset;                                  // 0x228C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ExtendedMag2RotatorOffset;                                 // 0x2298(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5A7L[0x4];                                     // 0x22A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 ProneViewModelCurve;                                       // 0x22A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                               BayonetPullbackAnim;                                       // 0x22B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsValid;                                                  // 0x22B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6SG6[0x7];                                     // 0x22B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoldierMovementComponent*                   SoldierMovement;                                           // 0x22C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8KHV[0xE8];                                    // 0x22C8(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponAnimInstance");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponAmmoUpgradeComponent
// 0x0050 (FullSize[0x0278] - InheritedSize[0x0228])
class UWeaponAmmoUpgradeComponent : public UWeaponUpgradeComponent
{
public:
	TMap<class UClass*, class UClass*>                 AmmoTypeRemapping;                                         // 0x0228(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponAmmoUpgradeComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteStartedEnemyTeamMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVoteStartedEnemyTeamMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteStartedEnemyTeamMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteIssue
// 0x0118 (FullSize[0x0140] - InheritedSize[0x0028])
class UVoteIssue : public UObject
{
public:
	bool                                               bIsYesNoVote;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_06D3[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       IssueNameText;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       VoteOptionsLabelText;                                      // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       VotePromptText;                                            // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       VoteIntentText;                                            // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       VoteSuccessText;                                           // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FText>                 VoteOptions;                                               // 0x00A8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FString                                     ActiveVoteOption;                                          // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCastVote>                           CastVotes;                                                 // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresMinimumToStart;                                   // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C5OI[0x3];                                     // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MinimumPlayersRequired;                                    // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumPlayerRatio;                                        // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VotePassRatio;                                             // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinimumYesNoDifference;                                    // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyAdminCanCall;                                         // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X89R[0x3];                                     // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VoteTimeout;                                               // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastVoteTime;                                              // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SurveyedPlayerCount;                                       // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LOCD[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteIssue");
		return ptr;
	}



	void UpdateVotingFigures(TArray<struct FReplicatedVoteChoice>* InOutVoteChoiceArray);
	ECallVoteResult RegisterVoteIntent(class APlayerState* FromPlayer, const struct FString& Option, class APlayerState* TargetPlayer);
	void OnVoteSuccess();
	void OnVoteStarted(const struct FString& Option, class APlayerState* TargetPlayer);
	void OnVoteReset();
	bool OnPlayerVote(class APlayerState* VotingPlayer, int ChoiceIndex);
	bool IsVoteTooSoon(float CheckTime);
	bool IsVoterServerAdmin(class APlayerState* Player);
	bool HasMajorityVoted();
	void GetYesNoVotes(int* OutYesVotes, int* OutNoVotes);
	class UPlayerVotingComponent* GetVotingComponent();
	int GetVotesRequiredToStart();
	EVoteState GetVoteResultState();
	void GetVoteChoices(TArray<struct FReplicatedVoteChoice>* OutVoteChoices);
	class AGameSession* GetOuterGameSession();
	class AGameModeBase* GetOuterGameMode();
	int GetMajorityCount();
	void GetCustomVoteChoices(TArray<struct FReplicatedVoteChoice>* OutVoteChoices);
	int CountVoteIntentions(const struct FString& Option, class APlayerState* TargetPlayer);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteIssuePlayer
// 0x0090 (FullSize[0x01D0] - InheritedSize[0x0140])
class UVoteIssuePlayer : public UVoteIssue
{
public:
	unsigned char                                      PlayerVoteIntentions[0x50];                                // 0x0140(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      TargetPlayerState[0x28];                                   // 0x0190(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FString                                     TargetPlayerUniqueIdString;                                // 0x01B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanTargetAdmins;                                          // 0x01C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanTargetEnemies;                                         // 0x01C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_12RY[0x6];                                     // 0x01CA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteIssuePlayer");
		return ptr;
	}



	class APlayerController* GetTargetPlayerController();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteIssueKick
// 0x0008 (FullSize[0x01D8] - InheritedSize[0x01D0])
class UVoteIssueKick : public UVoteIssuePlayer
{
public:
	float                                              IdleVoteBanDuration;                                       // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultVoteBanDuration;                                    // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteIssueKick");
		return ptr;
	}



	struct FText GetKickReason(bool bBanning);
	float GetBanDuration();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteIntentMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVoteIntentMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteIntentMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteCastResultMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVoteCastResultMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteCastResultMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoteCallResultMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVoteCallResultMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoteCallResultMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoiceRouting
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UVoiceRouting : public UObject
{
public:
	unsigned char                                      UnknownData_1IVD[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, struct FTalkerData>                      PlayerComponentMap;                                        // 0x0030(0x0050) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UVoiceComponent>>      ActiveComponents;                                          // 0x0080(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoiceRouting");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VoiceComponent
// 0x0070 (FullSize[0x0450] - InheritedSize[0x03E0])
class UVoiceComponent : public UAkAudioInputComponent
{
public:
	unsigned char                                      UnknownData_51KR[0x70];                                    // 0x03E0(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VoiceComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VivoxSettings
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UVivoxSettings : public UDeveloperSettings
{
public:
	struct FIntPoint                                   DistanceRange;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Rolloff;                                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A1FA[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VivoxSettings");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VisibilityBlockerVolume
// 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
class AVisibilityBlockerVolume : public AVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VisibilityBlockerVolume");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.OptionsMenu
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UOptionsMenu : public UUserWidget
{
public:
	bool                                               bShowApplyButton;                                          // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasUnsavedChanges;                                        // 0x0231(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowResetButton;                                          // 0x0232(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LMN4[0x5];                                     // 0x0233(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.OptionsMenu");
		return ptr;
	}



	void SavePlayerSettings();
	void ResetToDefaults();
	void RefreshSettings();
	void MarkSettingsDirty();
	class UINSGameUserSettings* GetUserSettings();
	class UINSPlayerLocalProfile* GetLocalProfile();
	void BlueprintResetToDefaults();
	void BlueprintRefreshSettings();
	void BlueprintApplyChanges();
	void ApplyChanges();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VideoMenu
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
class UVideoMenu : public UOptionsMenu
{
public:
	TArray<struct FScreenResolution>                   Resolutions;                                               // 0x0238(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScreenResolution                           NativeResolution;                                          // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VideoMenu");
		return ptr;
	}



	void PopulateMenu();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehiclePartComponent
// 0x0098 (FullSize[0x04D0] - InheritedSize[0x0438])
class UVehiclePartComponent : public UBoxComponent
{
public:
	TMap<class UClass*, float>                         DamageTypeModifiersMap;                                    // 0x0438(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0PH9[0x8];                                     // 0x0488(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHealth;                                                 // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDamage;                                                 // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Health;                                                    // 0x0498(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  LastDamageInstigator;                                      // 0x049C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       LastDamageCauser;                                          // 0x04A4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDestroyed;                                              // 0x04AC(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YOWH[0x3];                                     // 0x04AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Delegate_OnPartDestroyed;                                  // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnPartDamaged;                                    // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehiclePartComponent");
		return ptr;
	}



	void SetHealthFrac(float HealthFrac);
	void OnTakeDamage(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void OnRep_Health();
	void OnRep_Destroyed();
	void OnDestroyed();
	bool IsDestroyed();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleWindowPart
// 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
class UVehicleWindowPart : public UVehiclePartComponent
{
public:
	class UStaticMesh*                                 DestroyedWindowMesh;                                       // 0x04D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NANO[0x8];                                     // 0x04D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleWindowPart");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleWheelPart
// 0x0000 (FullSize[0x04D0] - InheritedSize[0x04D0])
class UVehicleWheelPart : public UVehiclePartComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleWheelPart");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleDestructablePart
// 0x0000 (FullSize[0x04D0] - InheritedSize[0x04D0])
class UVehicleDestructablePart : public UVehiclePartComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleDestructablePart");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleWeakPointPart
// 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
class UVehicleWeakPointPart : public UVehicleDestructablePart
{
public:
	class UVehicleEnginePart*                          LinkedEngine;                                              // 0x04D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                                 InstigatorController;                                      // 0x04D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleWeakPointPart");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleSeatComponent
// 0x0318 (FullSize[0x0750] - InheritedSize[0x0438])
class UVehicleSeatComponent : public UBoxComponent
{
public:
	unsigned char                                      UnknownData_I2W7[0x8];                                     // 0x0438(0x0008) Fix Super Size
	bool                                               bAllowForwardSeatSwitch;                                   // 0x0440(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowBackSeatSwitch;                                      // 0x0441(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBustOutWindowOnLean;                                      // 0x0442(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZYE7[0x1];                                     // 0x0443(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PassengerDamageMultiplier;                                 // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WindowToBustOutOnLean;                                     // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnMoveForward;                                    // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnMoveRight;                                      // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnAddPitch;                                       // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnAddYaw;                                         // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnFired;                                          // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnHorn;                                           // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnSeatEntered;                                    // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnSeatExited;                                     // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_MountedWeaponReplicated;                          // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FText                                       SeatName;                                                  // 0x04E0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	ESeatTypeEnum                                      SeatType;                                                  // 0x04F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInternalSeat;                                             // 0x04F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESeatRotationType                                  SeatRotationType;                                          // 0x04FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QO8R[0x1];                                     // 0x04FB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LimitedPitchDegrees;                                       // 0x04FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LimitedYawDegrees;                                         // 0x0500(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraOffset;                                              // 0x0504(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                DuckCameraOffset;                                          // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverridePlayerFOV;                                        // 0x0518(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I2ML[0x3];                                     // 0x0519(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraFOV;                                                 // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMountedWeaponRotation;                                 // 0x0520(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SeatPriority;                                              // 0x0521(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SeatGroup;                                                 // 0x0522(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SeatNumber;                                                // 0x0523(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESeatCameraType                                    CameraType;                                                // 0x0524(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JNT7[0x3];                                     // 0x0525(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MeshAttachSocket;                                          // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDetachMesh;                                               // 0x0530(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESeatDeathMechanic                                 DeathMechanic_Driver;                                      // 0x0531(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MK41[0x6];                                     // 0x0532(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSeatAnimationStruct                        SeatAnimations;                                            // 0x0538(0x0120) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OL9O[0x4];                                     // 0x0658(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AItemFirearm>                 MountedWeapon;                                             // 0x065C(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A058[0x4];                                     // 0x0664(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSCharacter*                               SeatedCharacter;                                           // 0x0668(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckExitObstruction;                                     // 0x0670(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XZZF[0x7];                                     // 0x0671(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             YawComponent;                                              // 0x0678(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             PitchComponent;                                            // 0x0680(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LastRelativeTurretRotation;                                // 0x0688(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VTNG[0x4];                                     // 0x0694(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVehicleExitComponent*                       ExitComponent;                                             // 0x0698(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVehicleEmergencyExitComponent*>      EmergencyExits;                                            // 0x06A0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          SeatAudio;                                                 // 0x06B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SeatEnterAudio;                                            // 0x06B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SeatExitAudio;                                             // 0x06C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WindowShatterAudio;                                        // 0x06C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnBotForSeat;                                          // 0x06D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9X9N[0x7];                                     // 0x06D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BotClass;                                                  // 0x06D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSCharacter*                               SpawnedBot;                                                // 0x06E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Blocked;                                                   // 0x06E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoredByBots;                                            // 0x06E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SA4T[0xE];                                     // 0x06EA(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             WindowAimLocation;                                         // 0x06F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                              CharacterAttachmentMesh;                                   // 0x0700(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSwitchSeats;                                           // 0x0708(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ATRD[0x3];                                     // 0x0709(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SeatInputMultiplier;                                       // 0x070C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RestrictedAreaInputMultiplier;                             // 0x0710(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEjectFromSeatOnDeath;                                     // 0x0714(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowVehicleDucking;                                      // 0x0715(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELeanDirection                                     LeanDirectionToLookOutWindow;                              // 0x0716(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q5M5[0x1];                                     // 0x0717(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LeanOutWindowCameraOffset;                                 // 0x0718(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanOutWindowRoofCameraZOffset;                            // 0x0724(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MDYR[0xC];                                     // 0x0728(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerIdleCheckFrequency;                                  // 0x0734(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LastPlayerIdleCheckTimestamp;                              // 0x0738(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GIG8[0x14];                                    // 0x073C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleSeatComponent");
		return ptr;
	}



	void SetTurretComponents(class USceneComponent* NewPitchComponent, class USceneComponent* NewYawComponent);
	void SetLocked(bool bNewLocked);
	void SetCharacterAttachmentMesh(class UMeshComponent* AttachmentMesh);
	void PlaySeatAudio(class UAkAudioEvent* Event);
	void OnRep_MountedWeapon();
	bool OnExited(class APawn* ExitedPawn);
	bool OnEntered(class APawn* EnteredPawn);
	bool OnAction();
	void Multicast_OnSoldierLeaned();
	class AVehicleBase* GetVehicle();
	struct FRotator GetTurretRotation();
	class AINSCharacter* GetSeatedCharacter();
	struct FRotator GetRelativeTurretRotation();
	class AItemFirearm* GetMountedWeapon();
	struct FRotator GetDesiredTurretRotation();
	void Fire(bool TriggerDown);
	void EnterSeat(class AINSCharacter* Pawn, bool bFromReplication);
	void EjectSeat(class AINSCharacter* PreviousPawn);
	bool CanTurretAimAtLocation(const struct FVector& Location);
	bool CanEnterSeat(class AINSCharacter* Character, bool bFromReplication);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehiclePathFollowingComponent
// 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
class UVehiclePathFollowingComponent : public UPathFollowingComponent
{
public:
	TArray<int>                                        CornerPathIndexes;                                         // 0x0258(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehiclePathFollowingComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleNavTarget
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AVehicleNavTarget : public ATargetPoint
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleNavTarget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleNavModifierComponent
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UVehicleNavModifierComponent : public UNavModifierComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleNavModifierComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleLightPart
// 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
class UVehicleLightPart : public UVehiclePartComponent
{
public:
	bool                                               bIsToggled;                                                // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeToggled;                                             // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_13ON[0xE];                                     // 0x04D2(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleLightPart");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVehicleInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleInterface");
		return ptr;
	}



	void Explode();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleExitComponent
// 0x0010 (FullSize[0x0430] - InheritedSize[0x0420])
class UVehicleExitComponent : public UArrowComponent
{
public:
	bool                                               bSetAbsoluteRotation;                                      // 0x0420(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5COZ[0x3];                                     // 0x0421(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    RotationOffset;                                            // 0x0424(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleExitComponent");
		return ptr;
	}



	void GetSeatExitLocation(struct FVector* OutLocation, struct FRotator* OutRotation);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleEmergencyExitComponent
// 0x0000 (FullSize[0x0430] - InheritedSize[0x0430])
class UVehicleEmergencyExitComponent : public UVehicleExitComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleEmergencyExitComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleEnginePart
// 0x0070 (FullSize[0x0540] - InheritedSize[0x04D0])
class UVehicleEnginePart : public UVehicleDestructablePart
{
public:
	struct FScriptMulticastDelegate                    Delegate_OnEngineBlowUp;                                   // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      ExplosionCameraShake;                                      // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventExplosion;                                          // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeMaxDamage;                                    // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeMinDamage;                                    // 0x04F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeMaxRadius;                                    // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeMinRadius;                                    // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeShellShockInnerRadius;                        // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeShellShockOuterRadius;                        // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeShellShockInnerDuration;                      // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeShellShockOuterDuration;                      // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      EngineExplodeDamageTypeClass;                              // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodePhysicsForce;                                 // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FoliageExplosionRadiusFactor;                              // 0x051C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FoliageInteractionLifeSpan;                                // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeImpulseForceMin;                              // 0x0524(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngineExplodeImpulseForceMax;                              // 0x0528(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2QNA[0x4];                                     // 0x052C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AController>                  InstigatorController;                                      // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0ZVR[0x8];                                     // 0x0538(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleEnginePart");
		return ptr;
	}



	void BroadcastEngineBlowUp();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleHoveringBase
// 0x0400 (FullSize[0x0680] - InheritedSize[0x0280])
class AVehicleHoveringBase : public APawn
{
public:
	unsigned char                                      UnknownData_SMIV[0x30];                                    // 0x0280(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       VehicleName;                                               // 0x02B0(0x0018) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WM4Z[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UHelicopterMovementComponent*                MovementComponent;                                         // 0x02D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFireSupportBase*                            AssociatedFireSupport;                                     // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundTraceRate;                                           // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F7N0[0xC];                                     // 0x02E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FHitResult                                  GroundTrace;                                               // 0x02F0(0x0088) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    DustEmitter;                                               // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DustEmitterSystem;                                         // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ExplodeEmitterSystem;                                      // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DustGroundDistance;                                        // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinRotorWashHeight;                                        // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineSoundMaxVelocity;                                    // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QMY7[0x4];                                     // 0x039C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAudioComponent*                          AkComponentRotorSound;                                     // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventRotorLoop;                                          // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventRotorLoopStop;                                      // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentTurbineSound;                                   // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventTurbineLoop;                                        // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentEngineSound;                                    // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventEngineLoop;                                         // 0x03D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventEngineStop;                                         // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventSpinning;                                           // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventExplode;                                            // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentIndoorPresenceSound;                            // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventIndoorPresenceLoop;                                 // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventIndoorPresenceStop;                                 // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDroneNamedRTPC;                                        // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CXKB[0x7];                                     // 0x0409(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ExplosionDamageTypeClass;                                  // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplodeDamageRadius;                                       // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2V2[0x4];                                     // 0x041C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ExplosionProtectile;                                       // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        RootPhysicsComponent;                                      // 0x0428(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      VisibleMeshComponent;                                      // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               DestroyedMesh;                                             // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldOpenDoor;                                           // 0x0440(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDespawnOnRoundReset;                                      // 0x0441(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHoverVehicleMovement                              CurrentMovementType;                                       // 0x0442(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OTFU[0x5];                                     // 0x0443(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                ExplodeTimer;                                              // 0x0448(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DodgeFinishTimerHandle;                                    // 0x0450(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AAXR[0x4];                                     // 0x0458(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EHoverVehicleDamageState                           DamageState;                                               // 0x045C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PTKB[0x3];                                     // 0x045D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnImminentImpact;                                          // 0x0460(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeginDodgeDelegate;                                      // 0x0470(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFinishDodgeDelegate;                                     // 0x0480(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStartFallingDelegate;                                    // 0x0490(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCrashImpactDelegate;                                     // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLostPassengerDelegate;                                   // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFireWeaponDelegate;                                      // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UBehaviorTree*                               BehaviorTree;                                              // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlackboardEnemyKeyName;                                    // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlackboardEnemyLocationKeyName;                            // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlackboardSpawnLocationKeyName;                            // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlackboardDestinationLocationKeyName;                      // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlackboardExtractionPointKeyName;                          // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckForCeilings;                                         // 0x0500(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K4UV[0x3];                                     // 0x0501(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinHoverHeightLanding;                                     // 0x0504(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinHoverHeight;                                            // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHoverHeight;                                            // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtractionHoverHeight;                                     // 0x0510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopVehicle;                                              // 0x0514(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SVAA[0x3];                                     // 0x0515(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HoverPredictionTime;                                       // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoredByEnemies;                                         // 0x051C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X9CS[0x3];                                     // 0x051D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DriftSensitivity;                                          // 0x0520(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DriftRoll;                                                 // 0x0524(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowDistance;                                              // 0x0528(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDropVelocity;                                           // 0x052C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrakingVelocity;                                           // 0x0530(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrakingTime;                                               // 0x0534(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                  // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMaxSlowing;                                           // 0x053C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMaxBraking;                                           // 0x0540(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldLandOnLastPath;                                     // 0x0544(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BUHH[0x3];                                     // 0x0545(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LandingDistance;                                           // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V82I[0x4];                                     // 0x054C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          TurnCurve;                                                 // 0x0550(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bCanDodge;                                                 // 0x05D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IPA2[0x3];                                     // 0x05D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeDuration;                                             // 0x05DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeIncomingTime;                                         // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeForceMultiplier;                                      // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeFOVAngle;                                             // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeStartTime;                                            // 0x05EC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeRoll;                                                 // 0x05F0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCinematicMode;                                            // 0x05F4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8F11[0xF];                                     // 0x05F5(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SightRadius;                                               // 0x0604(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHoveringVehicleWeaponBehavior>      WeaponBehaviors;                                           // 0x0608(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHoveringVehicleWeaponBehavior>      WeaponBehaviorsPerInstance;                                // 0x0618(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventPreDetonate;                                        // 0x0628(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreDetonateTime;                                           // 0x0630(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X1NN[0x4];                                     // 0x0634(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSPawnSensingComponent*                    PawnSensing;                                               // 0x0638(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AINSSoldier>                  CurrentTargetSoldier;                                      // 0x0640(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDetonating;                                               // 0x0648(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VGU7[0x7];                                     // 0x0649(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AINSSoldier>>          KnownSoldiers;                                             // 0x0650(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AController>                  LastDamager;                                               // 0x0660(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N3OZ[0x18];                                    // 0x0668(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleHoveringBase");
		return ptr;
	}



	void TraceEnvironment();
	void ToggleNoDamage(bool bEnabled);
	void ToggleAI(bool bEnabled);
	void StartFalling(bool bSpin);
	void SetOpenDoor(bool bNewOpenDoor);
	void SetCinematicMode(bool bNewSetting);
	void SeePawn(class APawn* OtherPawn);
	void PlayDestroyedResponses();
	void OnSeatEjected(class AINSCharacter* Character, class UVehicleSeatComponent* Seat);
	void OnRep_Detonating();
	void OnRep_DamageState();
	void OnRep_CinematicMode();
	void OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnFinishedDodge();
	void OnExplode();
	bool IsDodging(bool bRecently);
	void HearNoise(class APawn* OtherActor, const struct FVector& Location, float Volume);
	EHoverVehicleDamageState GetDamageState();
	void Explode();
	void DelayedDestroy();
	void BeginDetonate(float Delay);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleDrone
// 0x00B8 (FullSize[0x0738] - InheritedSize[0x0680])
class AVehicleDrone : public AVehicleHoveringBase
{
public:
	bool                                               bShouldDiveEnemyTarget;                                    // 0x0680(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H3JM[0x3];                                     // 0x0681(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DiveExplodeRadius;                                         // 0x0684(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SideAdjustPower;                                           // 0x0688(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SideAdjustAngle;                                           // 0x068C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BlackboardWindowApproachLocationKeyName;                   // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BlackboardWindowStartLocationKeyName;                      // 0x0698(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BlackboardWindowEndLocationKeyName;                        // 0x06A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BlackboardWindowHasLOSKeyName;                             // 0x06A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BlackboardWindowTargetKeyName;                             // 0x06B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHoveringVehicleTargetMemory                DiveTarget;                                                // 0x06B8(0x0020) (Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBotGrenadeTarget                           TargetWindow;                                              // 0x06D8(0x005C) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LGQO[0x4];                                     // 0x0734(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleDrone");
		return ptr;
	}



	class AActor* GetDiveTarget();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.VehicleBase
// 0x0490 (FullSize[0x0720] - InheritedSize[0x0290])
class AVehicleBase : public AWheeledVehicle
{
public:
	unsigned char                                      UnknownData_3WKC[0x28];                                    // 0x0290(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       VehicleName;                                               // 0x02B8(0x0018) (Edit, NativeAccessSpecifierPublic)
	EUsablePriority                                    UsePriority;                                               // 0x02D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x02D1(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Blocked;                                                   // 0x02D2(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveWhenAbandoned;                                      // 0x02D3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbandonedTimeEmptied;                                      // 0x02D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbandonedTimeTick;                                         // 0x02D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbandonedNearDistance;                                     // 0x02DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbandonedFarDistance;                                      // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VOR7[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_AbandonedCheck;                                // 0x02E8(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KZ9T[0x8];                                     // 0x02F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSCharacter*                               DriverCharacter;                                           // 0x02F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SU4I[0x8];                                     // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EngineDisableRemoveTime;                                   // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEngineRunning;                                            // 0x030C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEngineEnabled;                                            // 0x030D(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAcceleratorBeingPressed;                                  // 0x030E(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bWantsReverse;                                             // 0x030F(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bTyresAreRolling;                                          // 0x0310(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AK8F[0x3];                                     // 0x0311(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GearChangeVelocityThreshold;                               // 0x0314(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TLCG[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGearChangeDelegate;                                      // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVehicleAnimationStruct                     VehicleAnimations;                                         // 0x0330(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UCameraComponent*                            CameraComponent;                                           // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                         SpringArmComponent;                                        // 0x0360(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanExplode;                                               // 0x0368(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B2T1[0x3];                                     // 0x0369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerPushForce;                                           // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInsertionVehicle;                                         // 0x0370(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VX78[0x7];                                     // 0x0371(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          DamageDistanceScalingFromExplosionCurve;                   // 0x0378(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ImpactVelocityMultiplier;                                  // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedRequiredToDamage;                                     // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DamageOnImpact;                                            // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S9HJ[0x4];                                     // 0x040C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               VehicleKillBoxComponent;                                   // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               VehicleKillBoxComponentBehind;                             // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               VehicleFireBox;                                            // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ETW7[0x38];                                    // 0x0428(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FriendlyFireDamageModifier;                                // 0x0460(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QL1Q[0x4];                                     // 0x0464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             WindowBustOpenParticle;                                    // 0x0468(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWheelParticleSystemComponent*>       WheelParticleComponents;                                   // 0x0470(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DespawnHideParticle;                                       // 0x0480(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventCrash;                                              // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventExhaustStart;                                       // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventExhaustStop;                                        // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventIgnitionStart;                                      // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventIgnitionStop;                                       // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventGearChange;                                         // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventAcceleratorStart;                                   // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventAcceleratorRelease;                                 // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventAcceleratorContinue;                                // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventSuspensionBounce;                                   // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventWheelRollStart;                                     // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEvenHornStart;                                           // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEvenHornStop;                                            // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventWheelRollStop;                                      // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventEmergencyBrake;                                     // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventBrakeOn;                                            // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventBrakeOff;                                           // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventModularFire;                                        // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentExhaustSounds;                                  // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentEngineSounds;                                   // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentTyreSounds;                                     // 0x0528(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentSuspensionSounds;                               // 0x0530(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentHornSounds;                                     // 0x0538(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventExplosionDepsawn;                                   // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TVHG[0x10];                                    // 0x0548(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicalMaterial*                           CurrentPhysicalSurface;                                    // 0x0558(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpdateWheelSurfaceRate;                                    // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuspensionOffsetRequiredToCompressSuspension;              // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuspensionRequiredToPlayHeavySuspensionCompression;        // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AN38[0x4];                                     // 0x056C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharacterCollisionPrevention>       IgnoredCharacters;                                         // 0x0570(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleLightPart*                           RightHeadLightPart;                                        // 0x0580(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleLightPart*                           LeftHeadLightPart;                                         // 0x0588(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleLightPart*                           RightBackLightPart;                                        // 0x0590(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleLightPart*                           LeftBackLightPart;                                         // 0x0598(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleLightPart*                           RightBreakLightPart;                                       // 0x05A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleLightPart*                           LeftBreakLightPart;                                        // 0x05A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S3C0[0x18];                                    // 0x05B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVehicleEnginePart*                          EnginePart;                                                // 0x05C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   VisualMeshComponent;                                       // 0x05D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DestroyedMesh[0x28];                                       // 0x05D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UParticleSystemComponent*                    EngineParticleEffect;                                      // 0x0600(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    VehicleBlowUpParticleEffect;                               // 0x0608(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrashSpeedToPlayHeavyCrash;                                // 0x0610(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeInBetweenCrashAudio;                                   // 0x0614(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastImpactTime;                                            // 0x0618(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TopSpeedThreshold;                                         // 0x061C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChasisStrainThreshold;                                     // 0x0620(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireDamageTickRate;                                        // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireDamage;                                                // 0x0628(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9EY8[0x14];                                    // 0x062C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, float>                          WindowHealthMap;                                           // 0x0640(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3I2M[0x10];                                    // 0x0690(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHornHeld;                                                 // 0x06A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S2LS[0x3];                                     // 0x06A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HornHeldValue;                                             // 0x06A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HornIncrementRate;                                         // 0x06A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HornDecrementRate;                                         // 0x06AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HornMaxHeldValue;                                          // 0x06B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHornCooldown;                                             // 0x06B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBraking;                                                  // 0x06B5(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeDriven;                                              // 0x06B6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GG88[0x9];                                     // 0x06B7(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCombatVehicle;                                            // 0x06C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreAIDrivingLogic;                                     // 0x06C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_643R[0x2];                                     // 0x06C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CornerSlowingTime;                                         // 0x06C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CornerSlowingMultiplier;                                   // 0x06C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSlowingSpeed;                                           // 0x06CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandBrakeSpeed;                                            // 0x06D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CornerAngleThreshold;                                      // 0x06D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrakingTime;                                               // 0x06D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffAngleMultiplier;                                        // 0x06DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffAngleThreshold;                                         // 0x06E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6OJ3[0x4];                                     // 0x06E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  LeaveUIImage;                                              // 0x06E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DriverUIImage;                                             // 0x06F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  PassengerUIImage;                                          // 0x06F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  TurretUIImage;                                             // 0x0700(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WP8Y[0x18];                                    // 0x0708(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.VehicleBase");
		return ptr;
	}



	void ToggleHeadlights();
	void ToggleEngineStatus(bool bEnabled);
	bool ShouldEmergancyBreak();
	void ServerSetAcceleratorInput(float Value);
	void OnRep_TeamId();
	void OnRep_Locked();
	void OnRep_InsertionVehicle();
	void OnRep_HornHeld();
	void OnRep_EngineRunning();
	void OnRep_Braking();
	void OnKillBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnHeadlightToggled(bool bEnabled);
	void OnGearChangeDelegate__DelegateSignature();
	void OnDestroyedMeshLoaded();
	void OnDamage(class AController* Killer, class AActor* DamageCauser, float Damage);
	void OnBrakelightToggled(bool bEnabled);
	void OnAcceleratorStarted();
	void OnAcceleratorReleased();
	void OnAcceleratorContinue();
	bool IsVehicleUpsideDown();
	bool IsVehicleOnSide();
	bool IsVehicleDestroyed();
	bool IsPotentiallyAbandoned();
	bool IsPawnSeated(class APawn* PassengerPawn);
	bool IsEngineRunning();
	bool IsEngineEnabled();
	bool IsBurning();
	int GetVehicleRPM();
	EVehicleOrientation GetVehicleOrientation();
	float GetSteeringProgress();
	void GetSteeringAngles(float* MinAngle, float* MaxAngle, float* CurrentAngle);
	bool GetSeatComponents(TArray<class UVehicleSeatComponent*>* OutSeatComponents);
	void GetPassengers(TArray<class AINSCharacter*>* OutPassengers);
	int GetPassengerCount();
	int GetOccupiedSeats();
	int GetEmptySeats();
	float GetChasisStrainValue();
	void ForceStop(bool bDisableEngine);
	class UVehicleSeatComponent* FindSeatByNumber(int8_t SeatNumber);
	class UVehicleSeatComponent* FindNextSeat(class AController* PassengerController);
	class UVehicleSeatComponent* FindBestSeat(class AINSCharacter* Pawn, ESeatSearchPriorityType PriorityType);
	void CheckAbandoned();
	void BlueprintOnGearChanged();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.UsableInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UUsableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.UsableInterface");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.UsableComponent
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UUsableComponent : public UActorComponent
{
public:
	struct FText                                       DefaultUseText;                                            // 0x00B0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUsedDelegate;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EUsablePriority                                    UsePriority;                                               // 0x00D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCallOnServer;                                             // 0x00D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCallOnClient;                                             // 0x00DA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7A90[0x5];                                     // 0x00DB(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.UsableComponent");
		return ptr;
	}



	void OnUseDelegate__DelegateSignature(class APawn* User, const struct FHitResult& HitResult);
	struct FText GetUseMessage(class AINSPlayerController* Controller);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.UICameraActor
// 0x0010 (FullSize[0x07A0] - InheritedSize[0x0790])
class AUICameraActor : public ACameraActor
{
public:
	bool                                               bEnabled;                                                  // 0x0790(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSoldierCamera;                                            // 0x0791(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecurityCamera;                                           // 0x0792(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideActorLocation;                                    // 0x0793(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RelativeActorLocation;                                     // 0x0794(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.UICameraActor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TutorialLevelScriptActor
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATutorialLevelScriptActor : public ALevelScriptActor
{
public:
	unsigned char                                      UnknownData_FB0B[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TutorialLevelScriptActor");
		return ptr;
	}



	void SetTutorialProgress(ETutorialStage Stage);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TutorialList
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTutorialList : public UDataAsset
{
public:
	TArray<class UClass*>                              TutorialLessons;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TutorialList");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TutorialLesson
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UTutorialLesson : public UPrimaryDataAsset
{
public:
	struct FText                                       LessonName;                                                // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       HintText;                                                  // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       TutorialText;                                              // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ELessonCategory                                    Category;                                                  // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OS8V[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      VideoSource[0x28];                                         // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TArray<struct FLessonInputAction>                  Actions;                                                   // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanShowDynamically;                                       // 0x00B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CompletionCount;                                           // 0x00B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JJPS[0x2];                                     // 0x00BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AINSBasePlayerController>     OwningPlayerController;                                    // 0x00BC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      ShowLimit;                                                 // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PACG[0x23];                                    // 0x00C5(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TutorialLesson");
		return ptr;
	}



	void ShowLessonAfterDelay(float Delay, float Duration, bool bPlayVideo, bool bForceShow);
	void ShowLesson(float Duration, bool bPlayVideo, bool bForceShow);
	bool ShouldShowLesson();
	bool ShouldBindEventDelegates(bool bForceBindDelegates);
	bool IsAnotherHintInProgress();
	void HideLesson();
	bool HasValidPlayer();
	class AINSPlayerState* GetAssociatedPlayerState();
	class AINSBasePlayerController* GetAssociatedPlayerController();
	void CompleteLesson();
	void BlueprintOnInitialized(class AINSBasePlayerController* NewOwningPlayerController, class AINSPlayerState* NewPlayer);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ThirdPersonAnimInstance
// 0x0760 (FullSize[0x0A30] - InheritedSize[0x02D0])
class UThirdPersonAnimInstance : public UEquipableAnimInstance
{
public:
	bool                                               bInVehicle;                                                // 0x02D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESeatTypeEnum                                      VehicleSeatType;                                           // 0x02D1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QNKG[0x2];                                     // 0x02D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IKHandLTargetMounted;                                      // 0x02D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKHandRTargetMounted;                                      // 0x02D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasDeployed;                                              // 0x02DC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDeployed;                                               // 0x02DD(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TUFO[0x2];                                     // 0x02DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeployedAlpha;                                             // 0x02E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasForegrip;                                              // 0x02E4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasUnderbarrel;                                           // 0x02E5(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W9CH[0x2];                                     // 0x02E6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterAnimEquipable                     EquipableActiveCommon;                                     // 0x02E8(0x0258) (BlueprintVisible, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HandPoseUnderbarrel;                                       // 0x0540(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               ActiveLeftHandPose;                                        // 0x0548(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIKDirection                                       IKSprint;                                                  // 0x0550(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIKDirection                                       IKSprintHardcore;                                          // 0x0551(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIKDirection                                       IKCrawl;                                                   // 0x0552(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIKDirection                                       IKBase;                                                    // 0x0553(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIKDirection                                       IKWeaponBase;                                              // 0x0554(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCharging;                                               // 0x0555(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHardcore;                                                 // 0x0556(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSprinting;                                              // 0x0557(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVehicleWeaponOut;                                         // 0x0558(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bValidAnimation;                                           // 0x0559(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CRKG[0x2];                                     // 0x055A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HandPoseLeftCurve;                                         // 0x055C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandPoseLeftInterpHelper;                                  // 0x0560(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponIKLeftCurve;                                         // 0x0564(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandPoseRightCurve;                                        // 0x0568(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponIKRightCurve;                                        // 0x056C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandIKLeftCurve;                                           // 0x0570(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandIKRightCurve;                                          // 0x0574(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponSplineChildCurve;                                    // 0x0578(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisableAOCurve;                                            // 0x057C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSecurityGroin;                                         // 0x0580(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseInsurgentGroin;                                        // 0x0581(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8S8M[0x2];                                     // 0x0582(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CharacterLOD;                                              // 0x0584(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroinDominantLegAlpha;                                     // 0x0588(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CalculatedDominateAlpha;                                   // 0x058C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 HorizontalOffsetCurve;                                     // 0x0590(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovingAlpha;                                               // 0x0598(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    GroinRotator;                                              // 0x059C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              CrouchWeightAlpha;                                         // 0x05A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SoldierLocation;                                           // 0x05AC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    SoldierRotation;                                           // 0x05B8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SoldierControlYaw;                                         // 0x05C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SoldierVelocity;                                           // 0x05C8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SoldierVelocityLocal;                                      // 0x05D4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorizontalSpeed;                                           // 0x05E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VerticalSpeed;                                             // 0x05E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SoldierAccelerationLocal;                                  // 0x05E8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SoldierAccelerationNormLocal;                              // 0x05F4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecentSpeed;                                               // 0x0600(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInputingMovement;                                       // 0x0604(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CRRB[0x3];                                     // 0x0605(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialSpawnYawOffset;                                     // 0x0608(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZSLB[0x4];                                     // 0x060C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoldierMovementComponent*                   SoldierMovement;                                           // 0x0610(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LastTickRotation;                                          // 0x0618(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AccelerationDirection;                                     // 0x0624(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnDirectionIntensity;                                    // 0x0628(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VelocityDirection;                                         // 0x062C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     InterpVelocityLocal;                                       // 0x0630(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AccelerationVelocityDelta;                                 // 0x063C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeightShiftMovingAlpha;                                    // 0x0648(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSliding;                                                // 0x064C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnimCardinalDirection                             CardinalDirection;                                         // 0x064D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPDE[0x2];                                     // 0x064E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InterpNorthRoll;                                           // 0x0650(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    MovementWeightShift;                                       // 0x0654(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    MovementWeightShiftFeet;                                   // 0x0660(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WIGQ[0x4];                                     // 0x066C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FThirdPersonAnims                           CachedThirdPersonAnims;                                    // 0x0670(0x03B8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              TestFloat;                                                 // 0x0A28(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XXVR[0x4];                                     // 0x0A2C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ThirdPersonAnimInstance");
		return ptr;
	}



	void UpdateWeightShift();
	void UpdateTransforms();
	void UpdateMovementWeightShift();
	void UpdateInterpNorthRoll();
	void UpdateIKHandTargetMounted();
	void UpdateIKCurves();
	void UpdateHandIK();
	void UpdateDeployedAlpha();
	void UpdateActiveLeftHandPose();
	float IKCurveAlpha(float Interp, bool bInterpolate, bool bCondition, bool bSubtract, const struct FName& CurveName, float* OutInterp);
	float DeltaRotatorAxis(float A, float B);
	float CalcVariableInterp(float Current, float Target, float Speed);
	struct FRotator CalcRotatorInterp(const struct FRotator& Current, const struct FRotator& Target, float Speed);
	struct FTransform CalcRelativeTransform(const struct FTransform& Child, const struct FTransform& Parent);
	void CalcGroinAngle();
	bool CalcGenericFloatAlpha(float Target, float AlphaInput, float Speed, bool bConstant, float* OutAlpha);
	bool CalcGenericAlpha(bool bDifferentDegrade, bool bTarget, float AlphaInput, float Speed, float SpeedDegrade, bool bOverrideCondition, float OverrideValue, bool bConstant, float* OutAlpha);
	void BlueprintOnCharacterReset();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TheaterDefinition
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UTheaterDefinition : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                               // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTheaterFaction>                     Factions;                                                  // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TheaterDefinition");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TempHUD
// 0x0008 (FullSize[0x0318] - InheritedSize[0x0310])
class ATempHUD : public AHUD
{
public:
	unsigned char                                      UnknownData_WS8X[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TempHUD");
		return ptr;
	}



	void TextWithShadow_Clipped(float PosX, float PosY, const struct FText& Text, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TeamStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTeamStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TeamStatics");
		return ptr;
	}



	bool IsDedicatedSpectator(class AINSBasePlayerController* PlayerController);
	bool IsClassRestricted(const struct FPlayerClassLimit& ClassLimit, int PlayerExperience);
	void GetTeamRoleText(ETeamRole TeamRole, struct FText* OutRoleText);
	ETeamRelationship GetTeamRelationship(class AActor* Actor, unsigned char TeamId);
	class ATeamInfo* GetTeamInfo(class UObject* WorldContextObject, unsigned char TeamId);
	struct FText GetRoundOverCaption(class AINSBasePlayerController* For, unsigned char WinningTeam);
	struct FLinearColor GetPlayerColor(class AINSPlayerState* PlayerState, class AINSPlayerState* RelativePlayer);
	class UPlayerClass* GetNextClassToUnlock(TArray<struct FPlayerClassLimit> ClassSlots, int PlayerExperience);
	struct FText GetFormattedPlayerName(class AINSPlayerState* PlayerState);
	struct FText GetFormattedFactionName(class UObject* WorldContextObject, unsigned char TeamId);
	class UFactionDefinition* GetFactionDefinitionForTeam(class UObject* WorldContextObject, unsigned char TeamId);
	struct FLinearColor GetFactionColor(class UObject* WorldContextObject, unsigned char TeamId, class AINSPlayerState* RelativePlayer);
	class ATeamInfo* GetEnemyTeam(class UObject* WorldContextObject, unsigned char TeamId);
	struct FText GetDefaultTeamVictoryDescription(class UObject* WorldContextObject, unsigned char TeamId, ERoundConclusion RoundConclusion);
	int GetClassLimitForTeamSize(const struct FPlayerClassLimit& ClassLimit, int TeamSize);
	int GetClassLimitForTeamId(class UObject* WorldContextObject, const struct FPlayerClassLimit& ClassLimit, unsigned char TeamId);
	int GetClassLimitForTeam(const struct FPlayerClassLimit& ClassLimit, class ATeamInfo* Team);
	ETeamRelationship GetActorTeamRelationship(class AActor* Actor, class AActor* OtherActor);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TeamInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTeamInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TeamInterface");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TeamInfo
// 0x0178 (FullSize[0x0398] - InheritedSize[0x0220])
class ATeamInfo : public AInfo
{
public:
	unsigned char                                      UnknownData_KHB4[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TeamId;                                                    // 0x0228(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ULMK[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFactionDefinition*                          Faction;                                                   // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USquadLayout*                                ActiveSquadLayout;                                         // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamRole                                          TeamRole;                                                  // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RoundsWon;                                                 // 0x0241(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RoundsDrawn;                                               // 0x0242(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0PIY[0x1];                                     // 0x0243(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Score;                                                     // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ObjectivesCaptured;                                        // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Points;                                                    // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReplicatedTeamSettings                     TeamSettings;                                              // 0x0250(0x000C) (BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QMJH[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReplicatedTeamSettingsUpdatedDelegate;                   // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                ReinforcementWaves;                                        // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaveTimer;                                                 // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               ReinforcementSystem;                                       // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AController*>                         Players;                                                   // 0x0280(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSPlayerState*>                     PlayerArray;                                               // 0x0290(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AINSSoldier>                  LastOneStanding;                                           // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BGEG[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReinforcedDelegate;                                      // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveShouldBlinkDelegate;                                 // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ASpawnZone*>                          ActiveSpawnZones;                                          // 0x02D0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UFireSupportDefinition*, struct FFireSupportGameModeOverrideDefinition> FireSupportOverrides;                                      // 0x02E0(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFireSupportState>                   FireSupportStates;                                         // 0x0330(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WJKK[0x10];                                    // 0x0340(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UQueuedRadioEvent*>                   QueuedRadioEvents;                                         // 0x0350(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UQueuedRadioEvent*                           CurrentPlayingEvent;                                       // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimerHandle_NextRadioUpdateTime;                           // 0x0368(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NUF1[0x8];                                     // 0x0370(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPlayerVotingComponent*                      TeamVotingComponent;                                       // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVotingEnabled;                                            // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PR2D[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              TeamVoteIssues;                                            // 0x0388(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TeamInfo");
		return ptr;
	}



	void UpdateQueuedRadioEvents();
	void SetFireSupportDisabled(class UFireSupportDefinition* FireSupportDefinition, bool bDisabled);
	void ResetPointsScore();
	void ResetFireSupportTimers();
	void RemoveInvalidPlayerEntries();
	void RemoveEmptyPlayerEntries();
	int ReadyPlayerCount(bool bExcludeBots);
	int PlayerCountInClass(class UPlayerClass* PlayerClass, bool bExcludeBots);
	void PlayerCountByClass(TMap<class UPlayerClass*, int>* OutMappedCount, bool bExcludeBots);
	int PlayerCount(bool bExcludeBots);
	void OnWaveShouldBlinkDelegate__DelegateSignature(bool bBlink);
	void OnReplicatedTeamSettingsUpdatedDelegate__DelegateSignature(class ATeamInfo* Team, const struct FReplicatedTeamSettings& NewSettings);
	void OnRep_TeamSettings();
	void OnRep_TeamId();
	void OnRep_LastOneStanding();
	void OnRep_Faction();
	void OnReinforcedDelegate__DelegateSignature(int PlayersSpawned);
	void LockFireSupport(class UFireSupportDefinition* FireSupportDefinition, float Duration);
	bool IsWavePending();
	bool IsVotingEnabled();
	bool IsPlayerOnTeam(class AController* Player);
	bool IsFireSupportOnCooldown(class UFireSupportDefinition* FireSupportDefinition);
	bool IsFireSupportDisabled(class UFireSupportDefinition* FireSupportDefinition);
	void IncrementScore(int Amount, EScoreType ScoreType);
	void IncrementPointsScore(int Amount);
	void IncrementFireSupportUse(class UFireSupportDefinition* FireSupportDefinition);
	int HumanCount();
	bool HasLastOneStanding();
	bool HasEnabledSpawnZones();
	float GetWaveTimeRemaining();
	float GetTimeUntilNextFireSupportRatio(class UFireSupportDefinition* FireSupportDefinition);
	float GetTimeUntilNextFireSupport(class UFireSupportDefinition* FireSupportDefinition);
	void GetSpectatorTargets(TArray<class AINSPlayerState*>* OutTargets);
	void GetSortedPlayerList(TArray<class AINSPlayerState*>* OutPlayers);
	int GetRemainingFireSupportUses(class UFireSupportDefinition* FireSupportDefinition);
	float GetPercentageTeamAlive(bool bExcludeBots);
	bool GetFireSupportGameModeOverrideParams(class UFireSupportDefinition* FireSupportDefinition, struct FFireSupportGameModeOverrideDefinition* Params);
	struct FText GetFactionName();
	struct FLinearColor GetFactionColor(class AINSPlayerState* RelativePlayer);
	void DisableAllSpawnZones();
	int DeadPlayerCount(bool bExcludeBots, bool bIncludeNotReady);
	bool CanPlayerJoinTeam(class AController* Player);
	void BroadcastTextMessage(const struct FText& Message, const struct FName& Type);
	int BotCount();
	void BlueprintGetFactionName(struct FText* OutFactionName);
	void AwardTaglineToTeamWithFloatContext(class UClass* TaglineClass, float ContextValue, bool bRequireAlive, bool bAsPercentage);
	void AwardTaglineToTeamWithContext(class UClass* TaglineClass, int ContextValue, bool bRequireAlive);
	void AwardTaglineToTeam(class UClass* TaglineClass, bool bRequireAlive);
	int AlivePlayerCount(bool bExcludeBots);
	void AddCompassMarkerOnActor(class AActor* Actor, ECompassMarkerType MarkerType, class AINSPlayerController* IgnorePlayer);
	void AddCompassMarker(const struct FVector& WorldLocation, ECompassMarkerType MarkerType, class AINSPlayerController* IgnorePlayer);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.QueuedRadioEvent
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
class UQueuedRadioEvent : public UObject
{
public:
	unsigned char                                      UnknownData_0GUW[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       AssociatedActor;                                           // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               Event;                                                     // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterResponseRequest                   RequestResponse;                                           // 0x0068(0x0040) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FCYU[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.QueuedRadioEvent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Tagline
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
class UTagline : public UObject
{
public:
	struct FText                                       TaglineName;                                               // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       TaglineDescription;                                        // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bSeperateDescriptionWithContext;                           // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IIT9[0x7];                                     // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       TaglineDescriptionWithContext;                             // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              Coolness;                                                  // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoolnessContextMultiplier;                                 // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSGameMode*                                OuterGameMode;                                             // 0x0080(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      GamemodeRestriction[0x50];                                 // 0x0088(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bGamemodeBlacklist;                                        // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEvaluateOnRoundEnd;                                       // 0x00D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireTeamRole;                                          // 0x00DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamRole                                          RequiredTeamRole;                                          // 0x00DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAwardWinningTeam;                                         // 0x00DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAwardLosingTeam;                                          // 0x00DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAwardRoundDraw;                                           // 0x00DE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_48XG[0x1];                                     // 0x00DF(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Tagline");
		return ptr;
	}



	bool EvaluateTaglineThresholdInt(int Value, int Threshold, ETaglineEvaluation Method);
	bool CheckPlayerEligibility(class AINSPlayerState* Player, unsigned char WinningTeam);
	void BlueprintOnRoundReset();
	void BlueprintOnCheckRoundEndAward(class AINSGameState* InGameState, unsigned char LastWinningTeam);
	void BlueprintInit(class AINSGameMode* GameMode);
	void AwardTaglineWithFloatContext(class AINSPlayerState* Player, float ContextValue, bool bAsPercentage);
	void AwardTaglineWithContext(class AINSPlayerState* Player, int ContextValue);
	void AwardTagline(class AINSPlayerState* Player);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TaglineStatRequirement
// 0x0070 (FullSize[0x0150] - InheritedSize[0x00E0])
class UTaglineStatRequirement : public UTagline
{
public:
	struct FName                                       StatProperty;                                              // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5W4M[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ETaglineStatType                                   StatType;                                                  // 0x00F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETaglineEvaluation                                 CriteriaEvalMethod;                                        // 0x00F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H3Y3[0x2];                                     // 0x00F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CriteriaThreshold;                                         // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirearmCategory;                                          // 0x00F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HG4H[0x7];                                     // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      FirearmCategories[0x50];                                   // 0x0100(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TaglineStatRequirement");
		return ptr;
	}



	int GetPlayerValueInt(class AINSPlayerState* Player);
	bool EvaluatePlayerGetValue(class AINSPlayerState* Player, int Threshold, int* OutValue);
	bool EvaluatePlayer(class AINSPlayerState* Player, int Threshold);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TaglineStatHighest
// 0x0000 (FullSize[0x0150] - InheritedSize[0x0150])
class UTaglineStatHighest : public UTaglineStatRequirement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TaglineStatHighest");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TacticalMapWidget
// 0x01A8 (FullSize[0x03D8] - InheritedSize[0x0230])
class UTacticalMapWidget : public UUserWidget
{
public:
	TArray<class UMapActorWidget*>                     ActorIconWidgets;                                          // 0x0230(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TWeakObjectPtr<class AActor>, class UMapActorWidget*> ActorIconMap;                                              // 0x0240(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      LocalTeamId;                                               // 0x0290(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N6WK[0x7];                                     // 0x0291(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AObjectiveBase*, class UUserWidget*>    ObjectiveIcons;                                            // 0x0298(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UClass*                                      PlayerIconWidget;                                          // 0x02E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ObjectiveIconWidget;                                       // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ObjectiveDestructibleIconWidget;                           // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SpawnIconWidget;                                           // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RestrictedAreaWidget;                                      // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SupplyCrateIconWidget;                                     // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      VehicleIconWidget;                                         // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemPickupWidget;                                          // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PointOfInterestWidget;                                     // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  MapFallbackTexture;                                        // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    BackgroundMaterialInstance;                                // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                WidgetPanel;                                               // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                BackgroundLayerPanel;                                      // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      MapBackground;                                             // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseMapRotation;                                           // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMinimap;                                                  // 0x035C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMinimapRotates;                                           // 0x035D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7LE9[0x2];                                     // 0x035E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimapZoom;                                               // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q4S8[0x50];                                    // 0x0364(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBox                                        MinimapBox;                                                // 0x03B4(0x001C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MinimapRotation;                                           // 0x03D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JXUL[0x4];                                     // 0x03D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TacticalMapWidget");
		return ptr;
	}



	void ScaleWorldSizeToMapSize(const struct FVector2D& InSize, struct FVector2D* OutSize);
	void RefreshObjectives();
	void OnVehicleWidgetCreated(class AVehicleBase* Vehicle, class UUserWidget* Widget);
	void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
	void OnSupplyCrateWidgetCreated(class ASupplyCrate* Vehicle, class UUserWidget* Widget);
	void OnSpawnZoneWidgetCreated(class ASpawnZone* SpawnZone, class UUserWidget* Widget);
	void OnObjectiveWidgetCreated(class AObjectiveBase* Objective, class UUserWidget* Widget);
	void OnLightingScenarioChanged();
	bool HasWidgetForActor(class AActor* Actor);
	class UMapActorWidget* GetWidgetForActor(class AActor* Actor);
	float GetMapRotation();
	struct FBox GetMapBounds();
	void GetCanvasPositionFromWorldLocation(const struct FGeometry& MyGeometry, const struct FVector& WorldLocation, bool bClampToFit, struct FVector2D* OutCanvasPosition);
	class UMapIconWidget* CreateMapIcon(class UClass* WidgetClass, const struct FVector& WorldLocation, const struct FRotator& WorldRotation);
	class UMapActorWidget* CreateMapActorWidget(class UClass* WidgetClass, class AActor* ForActor);
	void AddMapActorWidget(class UMapActorWidget* NewWidget);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TacticalGridTestingPawn
// 0x0048 (FullSize[0x0500] - InheritedSize[0x04B8])
class ATacticalGridTestingPawn : public ACharacter
{
public:
	struct FVector                                     DebugAreaExtend;                                           // 0x04B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETacticalGridDebugDisplayMode                      DisplayMode;                                               // 0x04C4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETacticalGridDebugMode                             DebugeMode;                                                // 0x04C5(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_73TQ[0x2];                                     // 0x04C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bReRunQueryOnlyOnFinishedMove : 1;                         // 0x04C8(0x0001) BIT_FIELD  (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bShouldBeVisibleInGame : 1;                                // 0x04C8(0x0001) BIT_FIELD  (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bTickDuringGame : 1;                                       // 0x04C8(0x0001) BIT_FIELD  (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K749[0x7];                                     // 0x04C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FNavAgentProperties                         NavAgentProperties;                                        // 0x04D0(0x0030) (Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TacticalGridTestingPawn");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TacticalGridRenderingComponent
// 0x0050 (FullSize[0x0460] - InheritedSize[0x0410])
class UTacticalGridRenderingComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData_RXDL[0x50];                                    // 0x0410(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TacticalGridRenderingComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TacticalGrid
// 0x0230 (FullSize[0x0450] - InheritedSize[0x0220])
class ATacticalGrid : public AActor
{
public:
	bool                                               bDrawNavMeshDebug;                                         // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawTileGenerationDebug;                                  // 0x0221(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawGridDebug;                                            // 0x0222(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E6SO[0x1];                                     // 0x0223(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CellSize;                                                  // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CellHeight;                                                // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ContextGenerationExtent;                                   // 0x022C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     NavBoundsOrigin;                                           // 0x0238(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CellExtent;                                                // 0x0244(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PlayerPresenceMaxAge;                                      // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      HorizontalTraceCount;                                      // 0x0251(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      VerticalTraceCount;                                        // 0x0252(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SNSH[0x1];                                     // 0x0253(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HalfFOV;                                                   // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Width;                                                     // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Height;                                                    // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZDepth;                                                    // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I2VA[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint32_t, struct FGridCell>                   Cells;                                                     // 0x0268(0x0050) (NativeAccessSpecifierPublic)
	TMap<struct FRelationshipIndex, struct FGridCellRelationshipData> Relations;                                                 // 0x02B8(0x0050) (NativeAccessSpecifierPublic)
	TMap<uint32_t, struct FCellMap>                    CellMaps;                                                  // 0x0308(0x0050) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K12B[0xF8];                                    // 0x0358(0x00F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TacticalGrid");
		return ptr;
	}



	void GenerateData();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameModeScenarioData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UGameModeScenarioData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameModeScenarioData");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurvivalScenarioData
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class USurvivalScenarioData : public UGameModeScenarioData
{
public:
	float                                              MinDistance;                                               // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistance;                                               // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      HelicopterSequenceActor[0x28];                             // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurvivalScenarioData");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurvivalRouteConfig
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class ASurvivalRouteConfig : public AActor
{
public:
	float                                              MinDistance;                                               // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistance;                                               // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NumObjectives;                                             // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RouteCountForLongRoutes;                                   // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M152[0x6];                                     // 0x022A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASpawnZone*                                  InitialSpawn;                                              // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurvivalRouteConfig");
		return ptr;
	}



	void LogRouteInfo();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveBase
// 0x0148 (FullSize[0x0368] - InheritedSize[0x0220])
class AObjectiveBase : public AActor
{
public:
	unsigned char                                      UnknownData_WBDM[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ObjectiveTypePrintName;                                    // 0x0230(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      ObjectiveId;                                               // 0x0248(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KHWH[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       PrintName;                                                 // 0x0250(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       HintText;                                                  // 0x0268(0x0018) (Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	EObjectiveType                                     ObjectiveType;                                             // 0x0280(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideObjectiveLetter;                                  // 0x0281(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B4RO[0x6];                                     // 0x0282(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ObjectiveLetter;                                           // 0x0288(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bActive;                                                   // 0x02A0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LockedTeams;                                               // 0x02A1(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bVisibleOnHUD;                                             // 0x02A2(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCounterAttack;                                            // 0x02A3(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowLethalFireSupport;                                   // 0x02A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C7WC[0x3];                                     // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AmbushRatioOverride;                                       // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AmbushRadiusOverride;                                      // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AmbushHeightThreshold;                                     // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WanderRadiusOverride;                                      // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveBotSpawnMethod                           BotInitialSpawnMethod;                                     // 0x02B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OwningTeamId;                                              // 0x02B9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZPSR[0x6];                                     // 0x02BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATeamInfo*                                   OwningTeam;                                                // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CapturingTeamId;                                           // 0x02C8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_748U[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATeamInfo*                                   CapturingTeam;                                             // 0x02D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               BoxCollision;                                              // 0x02D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASpawnZone*>                          AssociatedSpawnZones;                                      // 0x02E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveActiveDelegate;                                 // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveChangeOwnerDelegate;                            // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveChangeCapturingTeamDelegate;                    // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveLockedTeamsChangedDelegate;                     // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveIsBeingCounterattackedDelegate;                 // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRoundResetDelegate;                                      // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IQQ3[0x8];                                     // 0x0350(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UCoverComponent*>                     BotCaptureLocations;                                       // 0x0358(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveBase");
		return ptr;
	}



	int SetSpawnsEnabled(bool bNewActiveState);
	void SetOwningTeam(unsigned char NewOwner);
	void SetObjectiveVisibleOnHUD(bool bNewVisibility);
	void SetObjectiveIsBeingCounterAttacked(bool bNewCounterAttackState);
	void SetObjectiveActive(bool bNewActiveState);
	void SetNeutralOwningTeam();
	void SetLockedForTeam(unsigned char InTeamId, bool Blocked);
	void SetCapturingTeam(unsigned char NewCapturingTeam);
	void ResetCapturingTeam();
	void OnRep_OwningTeamId();
	void OnRep_ObjectiveId();
	void OnRep_LockedTeams();
	void OnRep_CapturingTeamId();
	void OnRep_bIsBeingCounterAttack();
	void OnRep_bActive();
	void OnOwningTeamChanged(unsigned char PreviousOwner, unsigned char NewOwner);
	void OnObjectiveLockedTeamsChangedDelegate__DelegateSignature(class AObjectiveBase* Objective, unsigned char NewLockedTeamsBitMask);
	void OnObjectiveIsBeingCounterattackedDelegate__DelegateSignature(bool bNewCounterAttackState, class AObjectiveBase* Objective);
	void OnObjectiveInitialized();
	void OnObjectiveChangeOwnerDelegate__DelegateSignature(class AObjectiveBase* Objective, unsigned char NewOwners);
	void OnObjectiveActiveDelegate__DelegateSignature(bool bNewActiveState, class AObjectiveBase* Objective);
	void OnCapturingTeamChanged(unsigned char NewCapturingTeam);
	bool IsOwningTeamValid();
	bool IsOwnedAndSafe();
	bool IsObjectiveActiveInRound();
	bool IsObjectiveActive();
	bool IsObjective();
	bool IsNeutralObjective();
	bool IsLockedForTeam(unsigned char CheckTeamId);
	bool IsLockedForAnyTeam();
	bool IsCapturingTeamValid();
	bool IsActiveObjectiveForSoldier(class AINSSoldier* Soldier);
	void InitializeObjective(unsigned char ID);
	class UCoverComponent* GetRandomBotCaptureLocation();
	struct FText GetObjectiveLetter();
	struct FText GetDescriptionForActiveObjective(class AINSSoldier* Soldier);
	float GetCaptureProgress();
	TArray<class UCoverComponent*> GetAllBotCaptureLocations();
	bool GetActive();
	void ClearLockedTeams();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveCapturable
// 0x00B0 (FullSize[0x0418] - InheritedSize[0x0368])
class AObjectiveCapturable : public AObjectiveBase
{
public:
	class ACaptureZone*                                CaptureZone;                                               // 0x0368(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CaptureZones[0x50];                                        // 0x0370(0x0050) UNKNOWN PROPERTY: SetProperty
	ECaptureState                                      CaptureState;                                              // 0x03C0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q5I6[0x3];                                     // 0x03C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CaptureProgress;                                           // 0x03C4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCaptureProgress;                                        // 0x03C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastAwardProgress;                                         // 0x03CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumCapturers;                                              // 0x03D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumDefenders;                                              // 0x03D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamWithMostPlayers;                                       // 0x03D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      FirstCapturingTeam;                                        // 0x03D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      FirstBlockingTeam;                                         // 0x03DA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      BlockingObjectiveId;                                       // 0x03DB(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AObjectiveBase>               BlockingObjective;                                         // 0x03DC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IIC1[0x8];                                     // 0x03E4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStaleMated;                                               // 0x03EC(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCapturersHaveRadio;                                       // 0x03ED(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDefendersHaveRadio;                                       // 0x03EE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MinPlayersToCapture;                                       // 0x03EF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireAllPlayersToCapture;                               // 0x03F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SFTA[0x7];                                     // 0x03F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCapturedDelegate;                                        // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveCaptureStateChange;                             // 0x0408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveCapturable");
		return ptr;
	}



	bool TeamCanCapture(unsigned char TeamId);
	void StartCapture(unsigned char NewCapturingTeamId);
	void OnRep_CaptureState();
	void OnRep_BlockingObjectiveId();
	void OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool IsSoldierTouchingZone(class AINSSoldier* Soldier, class ACaptureZone* IgnoreZone);
	bool IsPlayerRequirementMet();
	void GetPlayerStatesInCaptureAreaOwningTeam(TArray<class AINSPlayerState*>* OutPlayers);
	void GetPlayerStatesInCaptureAreaCapturingTeam(TArray<class AINSPlayerState*>* OutPlayers);
	void GetPlayerStatesInCaptureArea(TArray<class AINSPlayerState*>* OutPlayers);
	void GetPlayersInCaptureAreaOwningTeam(TArray<class AINSSoldier*>* OutPlayers);
	void GetPlayersInCaptureAreaCapturingTeam(TArray<class AINSSoldier*>* OutPlayers);
	void GetPlayersInCaptureArea(TArray<class AINSSoldier*>* OutPlayers);
	void EndCapture();
	void BreakCapture(bool bTriggerEvents);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurvivalObjective
// 0x0028 (FullSize[0x0440] - InheritedSize[0x0418])
class ASurvivalObjective : public AObjectiveCapturable
{
public:
	ESurvivalOrderType                                 OrderType;                                                 // 0x0418(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_58JB[0x7];                                     // 0x0419(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AObjectiveBase*>                      AdditionalNextObjectives;                                  // 0x0420(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AObjectiveBase*>                      ExcludedNextObjectives;                                    // 0x0430(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurvivalObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurvivalHUD
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class USurvivalHUD : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurvivalHUD");
		return ptr;
	}



	class UINSGameUserSettings* GetINSUserSettings();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurfaceReactionManager
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class ASurfaceReactionManager : public AActor
{
public:
	TArray<struct FManagedParticleComponent>           ComponentPool;                                             // 0x0220(0x0010) (ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurfaceReactionManager");
		return ptr;
	}



	void OnPooledParticleSystemFinished(class UParticleSystemComponent* FinishedComponent);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurfaceReaction
// 0x0108 (FullSize[0x0130] - InheritedSize[0x0028])
class USurfaceReaction : public UObject
{
public:
	TArray<struct FSurfaceReactionInfo>                Reactions;                                                 // 0x0028(0x0010) (ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PhysicalMaterialReactions[0x50];                           // 0x0038(0x0050) UNKNOWN PROPERTY: MapProperty
	TMap<TEnumAsByte<EPhysicalSurface>, struct FSurfaceReactionInfo> SurfaceTypeReactions;                                      // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bParticlesRequireComponentVisible;                         // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAudioComponentMaxDistance;                             // 0x00D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C2WX[0x2];                                     // 0x00DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AudioComponentMaxDistance;                                 // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EPhysicalSurface>                      MidAirSurfaceType;                                         // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9WKR[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     SurfaceSwitchGroup;                                        // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SurfaceTypeGroup;                                          // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SurfaceSwitchAkEvent;                                      // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachSound;                                              // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachEffect;                                             // 0x0111(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayMidAirReaction;                                       // 0x0112(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseLocalPlayerAuxBusses;                                  // 0x0113(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyOcclusion;                                           // 0x0114(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DV4C[0x3];                                     // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WaterSwitchMaxPuddleLevel;                                 // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSwitchMaxShallowLevel;                                // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkeletalMeshDecalDepthMultiplier;                          // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DecalFadeScreenSize;                                       // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TranslucencySortPriority;                                  // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExcludeParticleSystemFromPool;                            // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T6JI[0x3];                                     // 0x012D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurfaceReaction");
		return ptr;
	}



	void PlaySurfaceReactions(class UObject* WorldContextObject, TEnumAsByte<EPhysicalSurface> SurfaceType, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& HitDirection, class UPrimitiveComponent* HitComponent, const struct FName& HitBoneName, class UPhysicalMaterial* HitMaterial, TEnumAsByte<EDecalTransformMask> DecalTransformMask);
	void PlaySurfaceHitReactions(class UObject* WorldContextObject, const struct FHitResult& HitInfo, TEnumAsByte<EDecalTransformMask> DecalTransformMask);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SupplyGainMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class USupplyGainMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SupplyGainMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PropBreakable
// 0x0208 (FullSize[0x0428] - InheritedSize[0x0220])
class APropBreakable : public AActor
{
public:
	unsigned char                                      UnknownData_N3EP[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       PrintName;                                                 // 0x0230(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TEnumAsByte<EComponentMobility>                    PropMobility;                                              // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K9SV[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 Mesh;                                                      // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialSwap>                       OverrideMaterials;                                         // 0x0258(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreakable;                                                // 0x0268(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnBroken;                                              // 0x0269(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowBreakthrough;                                        // 0x026A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClientsideOnly;                                           // 0x026B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClientDamagePrediction;                                   // 0x026C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0ZTK[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Health;                                                    // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicateHealth;                                          // 0x0274(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDamageFilter;                                          // 0x0275(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9JO4[0x2];                                     // 0x0276(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              DamageTypeFilter;                                          // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDamageFilterIsBlacklist;                                  // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFragile;                                                // 0x0289(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyTakeExplosiveDamage;                                  // 0x028A(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMeshOnBreak;                                          // 0x028B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGibifyOnBreak;                                            // 0x028C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveDecalsOnBreak;                                      // 0x028D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_90CZ[0x2];                                     // 0x028E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 MeshBroken;                                                // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialSwap>                       BreakMaterials;                                            // 0x0298(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInflictBreakDamage;                                       // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1COT[0x3];                                     // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BreakDamageAmount;                                         // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BreakDamageTypeClass;                                      // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreakDamageRadius;                                         // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BreakDamageOffset;                                         // 0x02BC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreakDamageForce;                                          // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3BUD[0x4];                                     // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BreakDamageCameraShakeClass;                               // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreakDamageCameraShakeRadius;                              // 0x02D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreakDamageCameraShakeFalloff;                             // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreakDamageShellShockRadius;                               // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreakDamageShellShockDuration;                             // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnablePhysics;                                            // 0x02E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartAwake;                                               // 0x02E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreakOnTouch;                                             // 0x02EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreakOnVault;                                             // 0x02EB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9TT0[0x4];                                     // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BreakParticle;                                             // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    BreakParticleComponent;                                    // 0x02F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BreakSound;                                                // 0x0300(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachBreakEffects;                                       // 0x0308(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BGLL[0x3];                                     // 0x0309(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       EffectAttachSocket;                                        // 0x030C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OVWJ[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               HealthyLoopEventStart;                                     // 0x0318(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HealthyLoopEventEnd;                                       // 0x0320(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BrokenLoopEventStart;                                      // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BrokenLoopEventEnd;                                        // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T29F[0x8];                                     // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  LoopingAudioOffset;                                        // 0x0340(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              LoopingAudioOcclusionRate;                                 // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9F86[0x4];                                     // 0x0374(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAudioComponent*                          LoopingAudioComponent;                                     // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2XQW[0x8];                                     // 0x0380(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGib>                                Gibs;                                                      // 0x0388(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GibLifetime;                                               // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreakableGibs;                                            // 0x039C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGibsUseBreakableCollision;                                // 0x039D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TVYI[0x2];                                     // 0x039E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GibHealth;                                                 // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GibImpulseScale;                                           // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGibPhysics;                                               // 0x03A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MH8M[0x7];                                     // 0x03A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             GibBreakParticle;                                          // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceSpeedMin;                                            // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceSpeedMax;                                            // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAppliedBreakDamage;                                       // 0x03C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLocallyBroken;                                          // 0x03C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBrokenAuthority;                                          // 0x03C2(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSeeThrough;                                               // 0x03C3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_874K[0x4];                                     // 0x03C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USurfaceReaction*                            PhysicsPropSurfaceReaction;                                // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSoundscapeLoaded;                                         // 0x03D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_95D3[0x7];                                     // 0x03D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x03D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPropLODInfo                                PropLODInfo;                                               // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C7FV[0x38];                                    // 0x03E8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastNotify;                                                // 0x0420(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinTimeBetweenNotifies;                                    // 0x0424(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PropBreakable");
		return ptr;
	}



	void SetupMeshCollision(class UStaticMeshComponent* InMeshComponent);
	void SetBrokenMaterials(class UStaticMeshComponent* AffectedComponent);
	void ResetBreakable();
	void RemoveChildDecals();
	void OnReset();
	void OnRep_Health();
	void OnRep_bBrokenAuthority();
	void MulticastBreak(const struct FDamageEvent& DamageEvent);
	bool IsBroken();
	void InflictBreakDamage(class AController* EventInstigator);
	class APropGib* ConvertToGib();
	void ChangeMesh();
	bool CanBreakThrough();
	void Break(const struct FDamageEvent& DamageEvent);
	void BlueprintOnHealthChanged();
	void BlueprintOnBreak();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SupplyCrate
// 0x0118 (FullSize[0x0540] - InheritedSize[0x0428])
class ASupplyCrate : public APropBreakable
{
public:
	unsigned char                                      UnknownData_KKJN[0x8];                                     // 0x0428(0x0008) Fix Super Size
	float                                              UseYawViewLimit;                                           // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ResupplyTimeoutTime;                                       // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LoadoutIcon;                                               // 0x0438(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ResupplyIcon;                                              // 0x0440(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveOnRoundReset;                                       // 0x0448(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YYZM[0x3];                                     // 0x0449(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ResupplyTime;                                              // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpawnZone*                                  LinkedSpawnZone;                                           // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLinkedSpawnZoneActive;                                    // 0x0458(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsActive;                                                 // 0x0459(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QHIF[0x6];                                     // 0x045A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AObjectiveBase*                              LinkedObjective;                                           // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizedSpawn;                                          // 0x0468(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E6CA[0x3];                                     // 0x0469(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnChance;                                               // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyIfRandomizeSpawnFails;                             // 0x0470(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RXVD[0x7];                                     // 0x0471(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MeshLidComponent;                                          // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmoothTransition                           SmoothTransition;                                          // 0x0480(0x0060) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRotator                                    TargetLidRotation;                                         // 0x04E0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    ClosedLidRotation;                                         // 0x04EC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    OpenedLidRotation;                                         // 0x04F8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bCloseWhenEmpty;                                           // 0x0504(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DQAU[0x3];                                     // 0x0505(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TimesAllowedToBeUsed;                                      // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                UsesLeft;                                                  // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMagGrabIsEnabled;                                         // 0x0510(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSingleUsePerPlayer;                                       // 0x0511(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XPRR[0x6];                                     // 0x0512(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class APlayerController*>                   PlayersWhoHaveResupplied;                                  // 0x0518(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VW5I[0x8];                                     // 0x0528(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPointOfInterestActorComponent*              PointOfInterestComponent;                                  // 0x0530(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  CrateIcon;                                                 // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SupplyCrate");
		return ptr;
	}



	bool ShowShowPointOfInterest(class AINSSoldier* ForPlayer);
	void SetMeshLidAnimation(const struct FRotator& NewTargetRotation);
	void PerformResupplyForPlayer(class AINSSoldier* Pawn);
	void OpenSupplyCrate();
	void OnSpawnZoneToggled(bool bNewState);
	void OnRep_UsesLeft();
	void OnRep_PlayersWhoHaveResupplied();
	void OnRep_LinkedSpawnZoneActive();
	void OnRep_IsActive();
	void OnObjectiveActive(bool bNewState, class AObjectiveBase* Objective);
	void CloseSupplyCrate();
	void BlueprintOnUsesLeftUpdated();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StructureElement
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UStructureElement : public UObject
{
public:
	EStructureElementType                              Type;                                                      // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G8UP[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 Mesh;                                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IHUU[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  PivotOffset;                                               // 0x0040(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StructureElement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StructureCollection
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UStructureCollection : public UObject
{
public:
	TArray<class UStructureElement*>                   Elements;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StructureCollection");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Structure
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AStructure : public AActor
{
public:
	TArray<class UStaticMeshComponent*>                StructureComponents;                                       // 0x0220(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Structure");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StatisticsRound
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UStatisticsRound : public UObject
{
public:
	bool                                               bRoundOver;                                                // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8YY9[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint64_t                                           RoundId;                                                   // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64_t                                           GameId;                                                    // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoundStartTime;                                            // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoundEndTime;                                              // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      WinningTeam;                                               // 0x0048(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERoundConclusion                                   WinReason;                                                 // 0x0049(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      InternalRoundNumber;                                       // 0x004A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_011S[0x5];                                     // 0x004B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UStatisticsPlayer*>                   PlayerStats;                                               // 0x0050(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStatisticsKillEvent>                KillEvents;                                                // 0x0060(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStatisticsObjectiveEvent>           ObjectiveEvents;                                           // 0x0070(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StatisticsRound");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StatisticsProfile
// 0x01F8 (FullSize[0x0220] - InheritedSize[0x0028])
class UStatisticsProfile : public UObject
{
public:
	struct FStatisticsPlayerProfile                    Profile;                                                   // 0x0028(0x01B8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EeWeaponStatsSortState                             WeaponStatsSortState;                                      // 0x01E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NVSL[0x7];                                     // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     StatsFilterMapState;                                       // 0x01E8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     StatsFilterGameTypeState;                                  // 0x01F8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     StatsFilterModeState;                                      // 0x0208(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                StatsFilterTeamIdState;                                    // 0x0218(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2NTO[0x4];                                     // 0x021C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StatisticsProfile");
		return ptr;
	}



	void SetWeaponStatsSortState(EeWeaponStatsSortState NewFilterState);
	void Reset();
	void ParseProfileFromJsonString(struct FString* profileJson);
	TArray<struct FStatisticsPlayerWinRecordItem> GetWinRecord();
	struct FString GetWinPercentForMode(struct FString* ModeName);
	struct FString GetWinPercentForMap(struct FString* MapName);
	void GetWeaponStats(TArray<struct FStatisticsPlayerWeaponStats>* inArray);
	struct FString GetTimePlayedForMode(struct FString* ModeName);
	struct FString GetTimePlayedForMap(struct FString* MapName);
	TMap<struct FString, struct FStatisticsPlayerWeaponStats> GetStatsForWeapons(TArray<struct FString>* WeaponNames, bool bFilterByGameType, bool bFilterByMode, bool bFilterByMap);
	int GetScore();
	struct FStatisticsPlayerProfileScenarioStats GetScenarioStatsSummary(bool bFilterMap, bool bFilterMode, bool bFilterGameType, bool bFilterTeam);
	int GetRankTierForRank(int PlayerLevel);
	int GetRankTierForExp(int PlayerExperience);
	float GetRankProgressPercent(int PlayerExperience);
	int GetRankPrestigeForExp(int PlayerExperience);
	int GetRankLevelThresholdForTier(int RankTier);
	int GetRankLevelThreshold(int RankLevel);
	int GetRankLevelForRank(int PlayerRank);
	int GetRankLevelForExp(int PlayerExperience);
	int GetRankExperienceThreshold(int PlayerRank);
	TArray<struct FStatisticsPlayerClassStats> GetPlayerClassStats();
	float GetNextRankProgressPercent(int PlayerCurrentExperience, int NextPlayerRank);
	int GetNextRankExperienceThreshold(int PlayerExperience);
	struct FString GetMostUsedWeaponForGameTypeAndTeam(struct FText* GameType, int GameTeam, float* PercentKillsOfTotal);
	struct FString GetMostUsedClassForGameTypeAndTeam(struct FText* GameType, int GameTeam, float* PercentTimeOfTotal);
	int GetKills();
	int GetExperience();
	int GetDeaths();
	int GetCurrentRankExperienceThreshold(int PlayerExperience);
	int GetCurrentRank(int PlayerExperience);
	int GetBalance();
	void GetAvailableModesForWeaponStats(TArray<struct FString>* inArray, bool bFilterByMap, bool bFilterByGameType);
	void GetAvailableModesForScenarioStats(TArray<struct FString>* inArray, bool bFilterByTeam, bool bFilterByGameType, bool bFilterByMap);
	void GetAvailableMapsForWeaponStats(TArray<struct FString>* inArray, bool bFilterByGameType);
	void GetAvailableMapsForScenarioStats(TArray<struct FString>* inArray, bool bFilterByTeam, bool bFilterByGameType, bool bFilterByMode);
	void GetAvailableGameTypesForWeaponStats(TArray<struct FString>* inArray);
	struct FString DescribeWinRatio(int Wins, int Games);
	struct FString DescribeTimePlayedAsHoursMinutes(int TimePlayed);
	struct FString DescribeTimePlayed(int TimePlayed);
	struct FString DescribeKillDeathRatio(int Kills, int Deaths);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StatisticsPlayer
// 0x0288 (FullSize[0x02B0] - InheritedSize[0x0028])
class UStatisticsPlayer : public UObject
{
public:
	unsigned char                                      UnknownData_PW4A[0x1D0];                                   // 0x0028(0x01D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_PlayerClock;                                   // 0x01F8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FStatisticsPlayerStatClass> PlayerClasses;                                             // 0x0200(0x0050) (NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  MyPlayerController;                                        // 0x0250(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64_t                                           StatsPlayerId;                                             // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PlayerName;                                                // 0x0260(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     UniqueId;                                                  // 0x0270(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64_t                                           SessionId;                                                 // 0x0280(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x0288(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L34L[0x3];                                     // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GameJoinTime;                                              // 0x028C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GameLeaveTime;                                             // 0x0290(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      GameLeaveReason;                                           // 0x0294(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NUFF[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           Score;                                                     // 0x0298(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastKnownPosition;                                         // 0x029C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStatisticsPlayerStanceFlags                       LastKnownStanceFlags;                                      // 0x02A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStatisticsPlayerSightFlags                        LastKnownSightFlags;                                       // 0x02A9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PGBJ[0x6];                                     // 0x02AA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StatisticsPlayer");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StatisticsManager
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
class UStatisticsManager : public UObject
{
public:
	TArray<class UStatisticsRound*>                    Rounds;                                                    // 0x0028(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FStatisticsRoundSummaryResult>       RoundResults;                                              // 0x0038(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UStatisticsPlayer*>     PlayerStatsMap;                                            // 0x0048(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StatisticsManager");
		return ptr;
	}



	void VehicleDestroyedEvent(class AController* KillerPlayer, TArray<class AController*> AssisterPlayers);
	void ObjectiveEvent(int ObjectiveId, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
	void ObjectiveDestroyedEvent(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
	void ObjectiveCapturedEvent(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StationDialogueDictionary
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UStationDialogueDictionary : public UDataAsset
{
public:
	TArray<struct FStationPhrase>                      StationPhrases;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStationFireSupportStatusPhraseContainer> FireSupportStatusPhrases;                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StationDialogueDictionary");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormAchievement
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class USandstormAchievement : public UObject
{
public:
	class AINSPlayerState*                             LocalPlayerState;                                          // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormAchievement");
		return ptr;
	}



	void BlueprintInit(class AINSPlayerState* PlayerState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.StatAchievement
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UStatAchievement : public USandstormAchievement
{
public:
	struct FName                                       StatName;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.StatAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SquadLayout
// 0x02A0 (FullSize[0x02C8] - InheritedSize[0x0028])
class USquadLayout : public UObject
{
public:
	struct FText                                       PrintName;                                                 // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FPlayerAllowedEquipment                     SquadAdditionalEquipment;                                  // 0x0040(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FPlayerAllowedEquipment                     SquadExcludedEquipment;                                    // 0x0130(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      AllowedEquipmentCollections[0x50];                         // 0x0220(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FPlayerClassLimit>                   ClassSlots;                                                // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Capacity;                                                  // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAttributeOverrides;                                    // 0x0284(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WTLA[0x3];                                     // 0x0285(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayerClassAttributes                      AttributeOverrides;                                        // 0x0288(0x0034) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7DHD[0x4];                                     // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBotSkillConfig*                             CustomBotSkillConfig;                                      // 0x02C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SquadLayout");
		return ptr;
	}



	bool HasPlayerClassInLayout(class UPlayerClass* InPlayerClass);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpawnZoneTriggeredActorInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class USpawnZoneTriggeredActorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpawnZoneTriggeredActorInterface");
		return ptr;
	}



	void OnSpawnZoneEnabled(class ASpawnZone* InSpawnZone, bool bNewEnabled);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpawnZone
// 0x0070 (FullSize[0x02D8] - InheritedSize[0x0268])
class ASpawnZone : public APhysicsVolume
{
public:
	unsigned char                                      UnknownData_X0AW[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStartEnabled;                                             // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnabled;                                                  // 0x0271(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4YUR[0x6];                                     // 0x0272(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSpawnZoneToggleDelegate;                                 // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5FU9[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              ControlledActors;                                          // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSPlayerStart*>                     PlayerStarts;                                              // 0x02A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              TrackedActors;                                             // 0x02B0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARestrictedArea*>                     RestrictedAreas;                                           // 0x02C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnsVehicles;                                           // 0x02D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NUZA[0x7];                                     // 0x02D1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpawnZone");
		return ptr;
	}



	void SetTeamId(unsigned char NewTeamId);
	void SetEnabled(bool bNewState);
	void OnSpawnZoneToggledDelegate__DelegateSignature(bool bNewState);
	void OnRep_Enabled();
	void AssociateRestrictedArea(class ARestrictedArea* Area);
	void AssociatePlayerStart(class AINSPlayerStart* PlayerStart);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpawnZoneCounterAttack
// 0x0000 (FullSize[0x02D8] - InheritedSize[0x02D8])
class ASpawnZoneCounterAttack : public ASpawnZone
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpawnZoneCounterAttack");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpawnerBase
// 0x0088 (FullSize[0x02A8] - InheritedSize[0x0220])
class ASpawnerBase : public AActor
{
public:
	unsigned char                                      UnknownData_9EXB[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bOnlySpawnActiveRound;                                     // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JAZ3[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASpawnZone*                                  LinkedSpawnZone;                                           // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBotSkillConfig*                             CustomBotSkillConfig;                                      // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SpawnerPawnClass;                                          // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayerClass*>                        PawnPlayerClasses;                                         // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnAutomatically;                                       // 0x0261(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnWithReinforcements;                                  // 0x0262(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegisteredReinforcementCallback;                          // 0x0263(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnLimitPerRound;                                        // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnQuota;                                                // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TimesSpawnedThisRound;                                     // 0x026C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class APawn>>                SpawnedPawns;                                              // 0x0270(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_DeferredSpawn;                                 // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMeshComponent*>              PreviewMeshes;                                             // 0x0288(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EKM8[0x10];                                    // 0x0298(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpawnerBase");
		return ptr;
	}



	void SpawnPawns();
	void SetTeamId(unsigned char NewTeamId);
	void ResetKilledPawns();
	void OnTeamReinforced(int PlayersSpawned);
	void OnSpawnedControllerPossessed(class APawn* NeWPawn);
	void OnLinkedSpawnZoneToggled(bool bNewState);
	bool IsUnderSpawnQuota();
	bool IsSpawnRestricted();
	TArray<class APawn*> GetSpawnedPawns();
	int GetNumKilledPawns();
	int GetExistingPawnCount();
	bool GameStateAllowsSpawning();
	void DeferredSpawnPawns(float Delay);
	void CleanupSpawnedPawns();
	void CheckPawnAbandonment();
	bool CanSpawnPawns();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpawnerVehicle
// 0x0058 (FullSize[0x0300] - InheritedSize[0x02A8])
class ASpawnerVehicle : public ASpawnerBase
{
public:
	int                                                SeatsToFill;                                               // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IE0H[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PassengerPawnClass;                                        // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PassengerAIClass;                                          // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnerVehicleType                                VehicleSpawnerType;                                        // 0x02C0(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WP4C[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      InsertionTargetPoint;                                      // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              InsertionNavigationPoints;                                 // 0x02D0(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AVehicleNavTarget*>                   VehicleNavigationTargets;                                  // 0x02E0(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APawn*>                               SpawnedPassengers;                                         // 0x02F0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpawnerVehicle");
		return ptr;
	}



	bool IsSpawnObstructed();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpawnerSquad
// 0x0010 (FullSize[0x02B8] - InheritedSize[0x02A8])
class ASpawnerSquad : public ASpawnerBase
{
public:
	int                                                NumberToSpawn;                                             // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3WBU[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               PreviewSkeletalMesh;                                       // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpawnerSquad");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoundscapeTriggerDoor
// 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
class ASoundscapeTriggerDoor : public ATriggerBox
{
public:
	class USoundscapeDefinition*                       SoundscapeFront;                                           // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundscapeDefinition*                       SoundscapeBack;                                            // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutomaticTransitionRadius;                                // 0x0238(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YJWD[0x3];                                     // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TransitionCapsulePadding;                                  // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireLineOfSight;                                       // 0x0240(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SZDC[0x7];                                     // 0x0241(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           TransitionCapsule;                                         // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             LineOfSightLocation;                                       // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoundscapeTriggerDoor");
		return ptr;
	}



	void OnTransitionSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnTransitionSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnSoundscapeTriggerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoundscapeState
// 0x00E0 (FullSize[0x0108] - InheritedSize[0x0028])
class USoundscapeState : public UObject
{
public:
	unsigned char                                      UnknownData_KDBK[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UAkComponent>>         RegisteredComponents;                                      // 0x0030(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class USoundscapeDefinition*, struct FEmitterRegister> RegisteredEmitters;                                        // 0x0040(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TDI2[0x78];                                    // 0x0090(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoundscapeState");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoundscapeOutdoorVolume
// 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
class ASoundscapeOutdoorVolume : public AVolume
{
public:
	unsigned char                                      VolumePriority;                                            // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F72T[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundscapeDefinition*                       Definition;                                                // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoundscapeOutdoorVolume");
		return ptr;
	}



	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoundscapeEmitter
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class ASoundscapeEmitter : public AActor
{
public:
	float                                              AuxScale;                                                  // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VFCD[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USoundscapeDefinition*>               AssociatedSoundscapes;                                     // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          SoundscapeComponent;                                       // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReceiveEnvironmentUpdates;                                // 0x0240(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BSTB[0xF];                                     // 0x0241(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoundscapeEmitter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoundscapeDefinition
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class USoundscapeDefinition : public UDataAsset
{
public:
	class UAkAudioEvent*                               EntryEvent;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UAkAuxBus*, float>                      AuxBusValues;                                              // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       WeaponSwitchValue;                                         // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoundscapeDefinition");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoundscapeComponent
// 0x0290 (FullSize[0x0480] - InheritedSize[0x01F0])
class USoundscapeComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_6168[0x18];                                    // 0x01F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSoundscapeStateRepl                        ReplicatedState;                                           // 0x0208(0x01C0) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	class USoundscapeDefinition*                       BaseIndoorDefinition;                                      // 0x03C8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundscapeDefinition*                       OutdoorSoundscape;                                         // 0x03D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundscapeDefinition*                       OutdoorFallbackSoundscape;                                 // 0x03D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class USoundscapeDefinition*, float>          IndoorSoundscapes;                                         // 0x03E0(0x0050) (NativeAccessSpecifierPrivate)
	class ASoundscapeTriggerDoor*                      ClosestTransitionSphere;                                   // 0x0430(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASoundscapeTriggerDoor*>              ActiveTransitionVolumes;                                   // 0x0438(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASoundscapeOutdoorVolume*>            ActiveOutdoorVolumes;                                      // 0x0448(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7NGD[0x10];                                    // 0x0458(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OutdoorAmount;                                             // 0x0468(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3DEN[0x14];                                    // 0x046C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoundscapeComponent");
		return ptr;
	}



	void SoundscapeUpdate__DelegateSignature(const struct FSoundscapeStateRepl& State);
	void OnRep_ReplicatedState();
	void OnRep_BaseIndoorDefinition();
	void OnEndTouchingTransitionSphere(class ASoundscapeTriggerDoor* TriggerActor);
	void OnEndTouchingOutdoorVolume(class ASoundscapeOutdoorVolume* TriggerActor);
	void OnBeginTouchingTransitionSphere(class ASoundscapeTriggerDoor* TriggerActor);
	void OnBeginTouchingOutdoorVolume(class ASoundscapeOutdoorVolume* TriggerActor);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoldierPathFollowingComponent
// 0x0088 (FullSize[0x02E0] - InheritedSize[0x0258])
class USoldierPathFollowingComponent : public UPathFollowingComponent
{
public:
	class USoldierMovementComponent*                   SoldierMoveComp;                                           // 0x0258(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FIAY[0x4];                                     // 0x0260(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StuckTestTimer;                                            // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaxStuckChecks;                                            // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                StuckTestDistance;                                         // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AvoidanceForceMultiplier;                                  // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AvoidanceSearchDistance;                                   // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U7W5[0x48];                                    // 0x0278(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADoor*>                               BlockingDoorsForThisPathSegment;                           // 0x02C0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADoor>                        LastBlockingDoor;                                          // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MEU7[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoldierPathFollowingComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SoldierMovementComponent
// 0x09D0 (FullSize[0x14A0] - InheritedSize[0x0AD0])
class USoldierMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              ServerLastMovementWorldTime;                               // 0x0AD0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CachedWeight;                                              // 0x0AD4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseMaxAcceleration;                                       // 0x0AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSprintSpeed;                                            // 0x0ADC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRunSpeed;                                               // 0x0AE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRunSpeedCrouched;                                       // 0x0AE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxProneSpeed;                                             // 0x0AE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F8AR[0x4];                                     // 0x0AEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          StaminaSprintSpeedFrac;                                    // 0x0AF0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          WeightSprintSpeedFrac;                                     // 0x0B78(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ProneHalfHeight;                                           // 0x0C00(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneDelay;                                                // 0x0C04(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneTime;                                                 // 0x0C08(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnproneTime;                                               // 0x0C0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimTime;                                                  // 0x0C10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnSwimTime;                                                // 0x0C14(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderShuffleStepTime;                                     // 0x0C18(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderTransitionTime;                                      // 0x0C1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderADSTransitionTime;                                   // 0x0C20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastStanceChangeTime;                                      // 0x0C24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastUpdatePawnLocation;                                    // 0x0C28(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LastUpdatePawnRotation;                                    // 0x0C34(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFindFloorResult                            LastJumpFloor;                                             // 0x0C40(0x0094) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               bJustJumped;                                               // 0x0CD4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9YIE[0x3];                                     // 0x0CD5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SideMoveFraction;                                          // 0x0CD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackMoveFraction;                                          // 0x0CDC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanMaxSpeedFraction;                                      // 0x0CE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightsSpeedFraction;                                       // 0x0CE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          AccelerationByWeight;                                      // 0x0CE8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          FrictionByWeight;                                          // 0x0D70(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          AccelerationBySprintSpeed;                                 // 0x0DF8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          BlindnessSpeedScaling;                                     // 0x0E80(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              WaterImpairedMovementScaling;                              // 0x0F08(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterImpairedMovementCap;                                  // 0x0F0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterDepth;                                                // 0x0F10(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Wetness;                                                   // 0x0F14(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInWater;                                                  // 0x0F18(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_131E[0x3];                                     // 0x0F19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxLadderClimbSpeed;                                       // 0x0F1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLadderSlideSpeed;                                       // 0x0F20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLadderSprintClimbSpeed;                                 // 0x0F24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderTopEnterTransitionTime;                              // 0x0F28(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderTopExitTransitionTime;                               // 0x0F2C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALadder*                                     AttachedLadder;                                            // 0x0F30(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELadderState                                       LadderState;                                               // 0x0F38(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELadderState                                       LadderTransitionState;                                     // 0x0F39(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J16C[0x2];                                     // 0x0F3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LadderTransitionLocation;                                  // 0x0F3C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderJumpDirectionalVelocity;                             // 0x0F48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideHalfHeight;                                           // 0x0F4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          SlideSpeedCurve;                                           // 0x0F50(0x0088) (Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          WeightSlideSpeedMultiplier;                                // 0x0FD8(0x0088) (Edit, NativeAccessSpecifierPublic)
	float                                              SlideSlowDownRate;                                         // 0x1060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumSlideAngle;                                         // 0x1064(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedToStopSlidingThreshhold;                              // 0x1068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SlideDirection;                                            // 0x106C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentSlideSpeed;                                         // 0x1078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentGroundAngle;                                        // 0x107C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostSlideStandBanDuration;                                 // 0x1080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackSideStepAccelModifier;                                 // 0x1084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbNonMovementForwardCheckDistance;                      // 0x1088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbMovementForwardCheckDistance;                         // 0x108C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaultAction                                       CurrentVaultAction;                                        // 0x1090(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaultAction                                       DesiredVaultAction;                                        // 0x1091(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3D48[0x2];                                     // 0x1092(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     VaultTraceImpactPoint;                                     // 0x1094(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentVaultFallDistance;                                  // 0x10A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CNNU[0x4];                                     // 0x10A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                KneeToWaistVaultVelocity;                                  // 0x10A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                KneeToWaistClimbVelocity;                                  // 0x10B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                WaistToChestVaultVelocity;                                 // 0x10B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                WaistToChestClimbVelocity;                                 // 0x10C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetVaultLocation;                                       // 0x10C8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KC3H[0x4];                                     // 0x10D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CheckForVaultActionsFrequency;                             // 0x10D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4UOB[0x4];                                     // 0x10DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          SlopeSpeedScale;                                           // 0x10E0(0x0088) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          ClimbStaminaScaling;                                       // 0x1168(0x0088) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FVaultSmoothTransition                      VaultSmoothTransition;                                     // 0x11F0(0x0070) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              VaultingKneeOffset;                                        // 0x1260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultingWaistOffset;                                       // 0x1264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultingChestOffset;                                       // 0x1268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultDirectionalVelocity;                                  // 0x126C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JumpVaultDirectionalVelocty;                               // 0x1270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     VaultDirection;                                            // 0x1274(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultTraceLength;                                          // 0x1280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultRunningTraceLength;                                   // 0x1284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbDisplacement;                                         // 0x1288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultDisplacement;                                         // 0x128C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeightDisplacement;                                        // 0x1290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1GDV[0x4];                                     // 0x1294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                CurrentVaultCurve;                                         // 0x1298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RootSocketName;                                            // 0x12A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultRadiusCheck;                                          // 0x12A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KneeToWaistVaultStaminaCost;                               // 0x12AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaistToChestVaultStaminaCost;                              // 0x12B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KneeToWaistClimbStaminaCost;                               // 0x12B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaistToChestClimbStaminaCost;                              // 0x12B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultLookPitchTolerance;                                   // 0x12BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VaultForwardDisplacementValue;                             // 0x12C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbForwardDisplacementValue;                             // 0x12C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbDotProdcutTolerance;                                  // 0x12C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsToClimb;                                             // 0x12CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TJ6V[0x3];                                     // 0x12CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VaultNormalThreshold;                                      // 0x12D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LandscapeVaultNormalThreshold;                             // 0x12D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialSpeedFromVault;                                     // 0x12D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialVaultSpeedCancelThreshold;                          // 0x12DC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AINSSoldier*                                 SoldierOwner;                                              // 0x12E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HGAR[0x10];                                    // 0x12E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostChargeSprintBanDuration;                               // 0x12F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeBeginTime;                                           // 0x12FC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargeStaminaCost;                                         // 0x1300(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeRecoilEndTime;                                       // 0x1304(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargeRecoilDuration;                                      // 0x1308(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargeVictimLaunchStrength;                                // 0x130C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargeRecoilDamageVelocityModifier;                        // 0x1310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargeStunDuration;                                        // 0x1314(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseChargeSpeed;                                           // 0x1318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PI6F[0x4];                                     // 0x131C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          ChargeSpeedMultiplierOverTime;                             // 0x1320(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          ChargeSpeedStaminaScaling;                                 // 0x13A8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              ChargeDamage;                                              // 0x1430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FullSprintValue;                                           // 0x1434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastChargeTime;                                            // 0x1438(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintValue;                                               // 0x143C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideMultiplier;                                           // 0x1440(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedMultiplier;                                           // 0x1444(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintMultiplier;                                          // 0x1448(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintValueIncreaseSpeed;                                  // 0x144C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintValueDecreaseSpeed;                                  // 0x1450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y9KQ[0x4];                                     // 0x1454(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Delegate_OnChargeBegin;                                    // 0x1458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnChargeEnd;                                      // 0x1468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Delegate_OnChargeHit;                                      // 0x1478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                                WaterTraceTimer;                                           // 0x1488(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z30Q[0x10];                                    // 0x1490(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SoldierMovementComponent");
		return ptr;
	}



	void Server_ToggleLadderADS(ELadderState ViewState);
	void Server_StopVaulting();
	void Server_PerformVaultAction(const struct FVector& Location, EVaultAction VaultAction, const struct FVector& InVaultTraceImpactPoint, float Speed);
	void Server_LeapFromLadder();
	void Server_ExitLadder(ELadderState ExitState);
	void Server_EnterLadder(ELadderState ExitState, class ALadder* Ladder);
	void Server_EndCharge();
	void Server_Charge();
	void Server_CancelVault();
	void Multicast_HandleChargeRecoil();
	bool IsVaultActionClimbAction();
	bool IsCurrentlyVaulting();
	bool InChargeMode();
	bool HasSprintEnoughForFullSprint();
	float GetWalkingMaxSpeed();
	float GetTimeSinceLastCharge();
	ESoldierStance GetStance();
	float GetMovementSpeedScaling();
	float GetMaxWalkingSpeed();
	float GetMaxSprintSpeed();
	float GetMaxSpeedForStance(ESoldierStance Stance);
	float GetMaxSpeedForCurrentStance();
	float GetMaxSlideSpeed();
	float GetMaxRunSpeed();
	float GetMaxProneSpeed();
	float GetHeightForStance(ESoldierStance Stance);
	void ClientExitLadder(ELadderState ExitState);
	bool CanPerformVaultAction();
	bool AllowVaulting();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SmartActor
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class ASmartActor : public AActor
{
public:
	float                                              Timeout;                                                   // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBotBehaviorPriority                               BehaviorPriority;                                          // 0x0224(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UXP6[0x3];                                     // 0x0225(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumDistance;                                           // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZJG[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSAISoldierController*                     InteractingBot;                                            // 0x0230(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1MLQ[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SmartActor");
		return ptr;
	}



	bool ShouldFinish(class AINSAISoldierController* Me);
	void SetEnabled(bool bNewEnabled);
	void OnUpdate(class AINSAISoldierController* Me);
	void OnStart(class AINSAISoldierController* Me);
	void OnFinish(class AINSAISoldierController* Me);
	bool HasVisibleEnemyAndWithinRadiusToSmartActor(class AINSAISoldierController* Me, float Radius);
	bool CanInteract(class AINSAISoldierController* Me);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SharedCosmeticState
// 0x01A8 (FullSize[0x01D0] - InheritedSize[0x0028])
class USharedCosmeticState : public UObject
{
public:
	class UClass*                                      HeadCosmetic;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                SkinColor;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECosmeticEyeColor                                  EyeColor;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0J9M[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       HeadMorph;                                                 // 0x0044(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHair;                                                  // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasGoatee;                                                // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasBeard;                                                 // 0x004E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasMuttonChop;                                            // 0x004F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFemale;                                                 // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K2M8[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                HairColor;                                                 // 0x0054(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                HairTipColor;                                              // 0x0064(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeadGearMorph;                                             // 0x0074(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EyewearHeadMorph;                                          // 0x007C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterMorphMacro                        HeadMorphStandard;                                         // 0x0084(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterMorphMacro                        HeadMorphExtreme;                                          // 0x008C(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W33X[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               HeadFacialReferencePose;                                   // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                           EyeMaterial;                                               // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTuckedShirt;                                              // 0x00A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTuckedPants;                                              // 0x00A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHeadgear;                                              // 0x00AA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFacewear;                                              // 0x00AB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasEyewear;                                               // 0x00AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0542[0x3];                                     // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       TorsoMorph;                                                // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsMouthVisible;                                           // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8X70[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TorsoCosmetic;                                             // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FeetCosmetic;                                              // 0x00C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HandCosmetic;                                              // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EyewearMorphSuffix;                                        // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LegEquipmentMorph;                                         // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FacewearMorph;                                             // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCosmeticColorGroup                         CamoColor;                                                 // 0x00F0(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                              CamoScaleMultiplier;                                       // 0x0140(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomCamoShift;                                          // 0x0144(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6YLW[0x3];                                     // 0x0145(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture*                                    CamoTexture;                                               // 0x0148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                TattooLeftChannel;                                         // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                TattooRightChannel;                                        // 0x0160(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    TattooLeftTexture1P;                                       // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    TattooLeftTexture3P;                                       // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    TattooRightTexture1P;                                      // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    TattooRightTexture3P;                                      // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGearCombination                                   GearCombination;                                           // 0x0190(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OTES[0x3];                                     // 0x0191(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       FootLegMorph;                                              // 0x0194(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMorphTargetPair                            HandGloveMorph;                                            // 0x019C(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHandFingerlessGloves;                                     // 0x01A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHandFlightGloves;                                         // 0x01A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QRRG[0x2];                                     // 0x01AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TorsoMorphShortSleeve;                                     // 0x01AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TorsoMorphElbows;                                          // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTorsoShortSleeve;                                         // 0x01B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTorsoElbows;                                              // 0x01B5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTorsoGhillie;                                             // 0x01B6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WQPS[0x1];                                     // 0x01B7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       Faction;                                                   // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HairMorph;                                                 // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNVGSoftharness;                                           // 0x01C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T2Z0[0x7];                                     // 0x01C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SharedCosmeticState");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ServerListEntry
// 0x0148 (FullSize[0x0170] - InheritedSize[0x0028])
class UServerListEntry : public UObject
{
public:
	struct FText                                       ServerName;                                                // 0x0028(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	int                                                Ping;                                                      // 0x0040(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Players;                                                   // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPlayers;                                                // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I2P5[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       GameMode;                                                  // 0x0050(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       Level;                                                     // 0x0068(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FString                                     LevelName;                                                 // 0x0080(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPasswordProtected;                                        // 0x0090(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRanked;                                                   // 0x0091(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EServerEntryType                                   ServerType;                                                // 0x0092(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0K0X[0x5];                                     // 0x0093(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int64_t>                                    ModList;                                                   // 0x0098(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               Mutators;                                                  // 0x00A8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintFindSessionResult                 ServerToJoin;                                              // 0x00B8(0x00B8) (BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ServerListEntry");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ScoreboardBadgeSettings
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UScoreboardBadgeSettings : public UDeveloperSettings
{
public:
	TArray<struct FScoreboardBadge>                    AvailableBadges;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ScoreboardBadgeSettings");
		return ptr;
	}



	bool IsValidBadgeIndex(int BadgeIndex);
	class UScoreboardBadgeSettings* GetScoreboardBadgeSettings();
	void GetScoreboardBadgeImage(int BadgeIndex);
	int GetItemIdFromBadgeIndex(int BadgeIndex);
	int GetBadgeIndexByItemId(int ItemId);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ScenarioBase
// 0x0120 (FullSize[0x0150] - InheritedSize[0x0030])
class UScenarioBase : public UPrimaryDataAsset
{
public:
	struct FText                                       ScenarioName;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FString                                     Map;                                                       // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Level[0x28];                                               // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UClass*                                      GameMode;                                                  // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefaultLightingScenario;                                   // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideScenarioImage;                                    // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PQPB[0x7];                                     // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ScenarioImage;                                             // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             URLOptions;                                                // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTheaterDefinition*                          DefaultTheater;                                            // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FScenarioSublevel>                   Sublevels;                                                 // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAdditionalScenarioActors>           AdditionalActors;                                          // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FObjectiveInfo>                      Objectives;                                                // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FObjectiveGroup>                     ObjectiveGroups;                                           // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AdditionalGameTags[0x50];                                  // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
	class UGameModeScenarioData*                       GameModeData;                                              // 0x0148(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ScenarioBase");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ScenarioMultiplayer
// 0x0040 (FullSize[0x0190] - InheritedSize[0x0150])
class UScenarioMultiplayer : public UScenarioBase
{
public:
	unsigned char                                      AttackingTeam;                                             // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OYL0[0x7];                                     // 0x0151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      NeutralSpawnZones[0x10];                                   // 0x0158(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<struct FObjectiveInfo>                      SecondaryObjectives;                                       // 0x0168(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCustomGameConfig;                                      // 0x0178(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MYO9[0x7];                                     // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCustomGameConfig                           CustomGameConfig;                                          // 0x0180(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ScenarioMultiplayer");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ScenarioMission
// 0x0030 (FullSize[0x0180] - InheritedSize[0x0150])
class UScenarioMission : public UScenarioBase
{
public:
	unsigned char                                      PlayerTeam;                                                // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      EnemyTeam;                                                 // 0x0151(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LW2F[0x6];                                     // 0x0152(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             StartingSpawnZoneNames;                                    // 0x0158(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesMissionObjectives;                                    // 0x0168(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QL2M[0x7];                                     // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FObjectiveInfoMissions>              MissionObjectives;                                         // 0x0170(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ScenarioMission");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ScenarioLevelFactory
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AScenarioLevelFactory : public AActor
{
public:
	class USphereComponent*                            Root;                                                      // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ScenarioLevelFactory");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormStatsCollectionComponent
// 0x0020 (FullSize[0x0150] - InheritedSize[0x0130])
class USandstormStatsCollectionComponent : public UGameStatsCollectionComponent
{
public:
	unsigned char                                      UnknownData_ES48[0x20];                                    // 0x0130(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormStatsCollectionComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormGauntletSmokeBuild
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class USandstormGauntletSmokeBuild : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData_MR8R[0x70];                                    // 0x0030(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                HealthSnapshotTimer;                                       // 0x00A0(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormGauntletSmokeBuild");
		return ptr;
	}



	void OnHealthSnapshot();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormGauntletLevelFlythrough
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class USandstormGauntletLevelFlythrough : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData_5XCC[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                HealthSnapshotTimer;                                       // 0x0060(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormGauntletLevelFlythrough");
		return ptr;
	}



	void OnHealthSnapshot();
	void OnBenchmarkStart();
	void OnBenchmarkFinished();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormGauntletGeneratePakOrder
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class USandstormGauntletGeneratePakOrder : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData_RTF5[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormGauntletGeneratePakOrder");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormGauntletBotGameplay
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class USandstormGauntletBotGameplay : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData_38JU[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormGauntletBotGameplay");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormGauntletBootTest
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USandstormGauntletBootTest : public UGauntletTestControllerBootTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormGauntletBootTest");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SandstormGauntletBenchmarkReplay
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class USandstormGauntletBenchmarkReplay : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData_CYRS[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SandstormGauntletBenchmarkReplay");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameModeAchievement
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UGameModeAchievement : public USandstormAchievement
{
public:
	unsigned char                                      UnknownData_B2V1[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameModeAchievement");
		return ptr;
	}



	void OnMatchEnd(unsigned char WinningFaction, class UClass* GameMode);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WetFeet
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UWetFeet : public UGameModeAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WetFeet");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CheckpointVictory
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UCheckpointVictory : public UGameModeAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CheckpointVictory");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PushVictory
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UPushVictory : public UGameModeAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PushVictory");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FirefightVictory
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFirefightVictory : public UGameModeAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FirefightVictory");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SkirmishVictory
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class USkirmishVictory : public UGameModeAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SkirmishVictory");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CTBVictory
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UCTBVictory : public UGameModeAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CTBVictory");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ThereForYou
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UThereForYou : public USandstormAchievement
{
public:
	unsigned char                                      UnknownData_QWCQ[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ThereForYou");
		return ptr;
	}



	void OnRequestSupport(class AINSPlayerController* PlayerController);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayToWin
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPlayToWin : public USandstormAchievement
{
public:
	unsigned char                                      UnknownData_TN9P[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayToWin");
		return ptr;
	}



	void OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MVPAchievement
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UMVPAchievement : public USandstormAchievement
{
public:
	unsigned char                                      UnknownData_CCJW[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MVPAchievement");
		return ptr;
	}



	void OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DesignatedDriverAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDesignatedDriverAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DesignatedDriverAchievement");
		return ptr;
	}



	void OnDesignatedDriver(class AINSBasePlayerController* PC);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TakeTheWheelAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTakeTheWheelAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TakeTheWheelAchievement");
		return ptr;
	}



	void OnSeatTakenOver(class AINSCharacter* OldCharacter, class AController* Controller);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SemperParatus
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class USemperParatus : public USandstormAchievement
{
public:
	unsigned char                                      UnknownData_31BP[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SemperParatus");
		return ptr;
	}



	void OnDamagedBlocked(float Damage, class UClass* DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SABERUtilsWidget
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class USABERUtilsWidget : public UObject
{
public:
	bool                                               bDisableNewsWidgetsForConsoles;                            // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableReplaysForConsoles;                                // 0x0029(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablePartyButtonForConsoles;                            // 0x002A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableProfanityFilterSettingForConsoles;                 // 0x002B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableBindsSettingSectionForConsoles;                    // 0x002C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableTextChatForConsoles;                               // 0x002D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableSubmitFeedbackForConsoles;                         // 0x002E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableCompetitiveModeForConsoles;                        // 0x002F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableDLCContentForConsoles;                             // 0x0030(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableInventoryForConsoles;                              // 0x0031(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableVideoSettingsForConsoles;                          // 0x0032(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablePlayerStatisticsForConsoles;                       // 0x0033(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablePlayerCounterForConsoles;                          // 0x0034(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablePostMatchStatsForConsoles;                         // 0x0035(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7HZP[0x2];                                     // 0x0036(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SABERUtilsWidget");
		return ptr;
	}



	bool IsShippingBuild();
	class USABERUtilsWidget* GetUtilsWidgetInstance();
	bool GetDisableVideoSettingsForConsoles();
	bool GetDisableTextChatForConsoles();
	bool GetDisableSubmitFeedbackForConsoles();
	bool GetDisableReplaysForConsoles();
	bool GetDisableProfanityFilterSettingForConsoles();
	bool GetDisablePostMatchStatsForConsoles();
	bool GetDisablePlayerStatisticsForConsoles();
	bool GetDisablePlayerCounterForConsoles();
	bool GetDisablePartyButtonForConsoles();
	bool GetDisableNewsWidgetsForConsoles();
	bool GetDisableInventoryForConsoles();
	bool GetDisableDLCContentForConsoles();
	bool GetDisableCompetitiveModeForConsoles();
	bool GetDisableBindsSettingSectionForConsoles();
	class USABERUtilsWidget* Get();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SABERUtilsWidgetWorldSubsystem
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class USABERUtilsWidgetWorldSubsystem : public UWorldSubsystem
{
public:
	class USABERUtilsWidget*                           UtilsWidgetInstance;                                       // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SABERUtilsWidgetWorldSubsystem");
		return ptr;
	}



	class USABERUtilsWidget* GetUtilsWidgetWorldSubsystem();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Ruleset
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class URuleset : public UObject
{
public:
	TArray<struct FRulesetProperty>                    GlobalRules;                                               // 0x0028(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCompetitiveRuleset;                                     // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyToChildGameModes;                                    // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F9YI[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GameModeRules[0x50];                                       // 0x0040(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Ruleset");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RoundResetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class URoundResetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RoundResetInterface");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RoundResetComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class URoundResetComponent : public UActorComponent
{
public:
	ERoundResetBehavior                                ResetBehavior;                                             // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_45OD[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRoundResetDelegate;                                      // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RoundResetComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RichTextTeamColorDecorator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class URichTextTeamColorDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RichTextTeamColorDecorator");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RestrictedFireSupportVolume
// 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
class ARestrictedFireSupportVolume : public AVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RestrictedFireSupportVolume");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RestrictedArea
// 0x0028 (FullSize[0x0280] - InheritedSize[0x0258])
class ARestrictedArea : public AVolume
{
public:
	unsigned char                                      UnknownData_RW59[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnabled;                                                  // 0x0260(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      TeamId;                                                    // 0x0261(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnMinimap;                                            // 0x0262(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SFJQ[0x5];                                     // 0x0263(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASpawnZone*                                  LinkedSpawnZone;                                           // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSSoldier*>                         RestrictedPlayers;                                         // 0x0270(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RestrictedArea");
		return ptr;
	}



	bool ShouldBeRestricted(class AINSSoldier* TargetSoldier);
	void SetEnabled(bool bState);
	void OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool IsEnabled();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RenderTargetController
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class URenderTargetController : public UObject
{
public:
	class UINSLocalPlayer*                             OuterLocalPlayer;                                          // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTextureRenderTarget2D*>              RenderTargetTextures;                                      // 0x0030(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RenderTargetController");
		return ptr;
	}



	class UTextureRenderTarget2D* GetTextureRenderTarget(TEnumAsByte<ERenderTargetSlot> TargetType);
	void GetDesiredResolutionForTarget(TEnumAsByte<ERenderTargetSlot> TargetType, struct FIntPoint* OutSize);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ReinforcementSystemComponent
// 0x0060 (FullSize[0x0110] - InheritedSize[0x00B0])
class UReinforcementSystemComponent : public UActorComponent
{
public:
	struct FScriptDelegate                             DeductReinforcementWaveDelegate;                           // 0x00B0(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveDepletionDelegate;                                   // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveGainDelegate;                                        // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4DXM[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATeamInfo*                                   Team;                                                      // 0x00E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      InitialWaves;                                              // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HDEG[0x3];                                     // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeadPlayerRatio;                                           // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnDelay;                                              // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutomaticRespawn;                                         // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWavePending;                                              // 0x00FD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OI13[0x2];                                     // 0x00FE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSGameMode*                                OuterGameMode;                                             // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5M6X[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ReinforcementSystemComponent");
		return ptr;
	}



	void StartWave(float Delay);
	bool ShouldTriggerReinforcementWave();
	bool ShouldDeductReinforcementWave();
	void SetWaves(int Waves);
	void OnWaveGainDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent, int OldWaveCount);
	void OnWaveDepletionDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent);
	void OnRoundReset();
	void OnPlayerDeath();
	int GetWaves();
	void ExecuteRapidDeployment(bool bDeductWave);
	void DeductWave();
	bool DeductReinforcementWaveDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent);
	void CheckStartWave();
	bool CanRedeployPlayers();
	void CancelWave(bool bInformTeam);
	void AddWaves(int Waves);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponUpgradeFilterTest
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponUpgradeFilterTest : public UDataAsset
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponUpgradeFilterTest");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponUpgradeEquippedFilter
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UWeaponUpgradeEquippedFilter : public UWeaponUpgradeFilterTest
{
public:
	unsigned char                                      EquippedItems[0x50];                                       // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponUpgradeEquippedFilter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponUpgradeTagFilter
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UWeaponUpgradeTagFilter : public UWeaponUpgradeFilterTest
{
public:
	unsigned char                                      MatchedTags[0x50];                                         // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponUpgradeTagFilter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponUpgradeFilter
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UWeaponUpgradeFilter : public UDataAsset
{
public:
	EFilterAction                                      FilterAction;                                              // 0x0030(0x0001) ELEMENT_SIZE_MISMATCH  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5V69[0x3];                                     // 0x0031(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData_UNZH[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPlayerEquipmentCollection*>          EquipmentCollections;                                      // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      WeaponUpgrades[0x10];                                      // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<struct FWeaponUpgradeFilterPair>            Filters;                                                   // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponUpgradeFilter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RandomWeaponCrateDataAsset
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class URandomWeaponCrateDataAsset : public UDataAsset
{
public:
	TArray<struct FWeaponCrateWeaponPool>              WeaponPools;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayerEquipmentCollection*>          UpgradeCollections;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PotentialUpgrades[0x10];                                   // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              UnspecifiedSlotUpgradeChance;                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BCNK[0x4];                                     // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<EWeaponUpgradeSlot, float>                    SpecificSlotUpgradeChance;                                 // 0x0068(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UWeaponUpgradeFilter*>                Filters;                                                   // 0x00B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RandomWeaponCrateDataAsset");
		return ptr;
	}



	float GetTotalWeaponPoolChance();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RandomWeaponCrate
// 0x0138 (FullSize[0x0358] - InheritedSize[0x0220])
class ARandomWeaponCrate : public AActor
{
public:
	unsigned char                                      UnknownData_UETM[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URandomWeaponCrateDataAsset*                 CrateData;                                                 // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartEnabled;                                             // 0x0240(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeControlledBySpawnZone;                               // 0x0241(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnabled;                                                  // 0x0242(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOpened;                                                   // 0x0243(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsActive;                                                 // 0x0244(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInUse;                                                  // 0x0245(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasTotalUseLimit;                                         // 0x0246(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YLOR[0x1];                                     // 0x0247(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TotalUseLimit;                                             // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalUses;                                                 // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasPerUserUseLimit;                                       // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GR0W[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PerUserUseLimit;                                           // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSSoldier*>                         RestrictedUsers;                                           // 0x0258(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSSoldier*>                         CurrentUsers;                                              // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PerUserTotalUses[0x50];                                    // 0x0278(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bLinkUseLimits;                                            // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResupplyLoadout;                                          // 0x02C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHealPlayer;                                               // 0x02CA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H622[0x5];                                     // 0x02CB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LinkedWeaponCrates[0x10];                                  // 0x02D0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              OpenTimer;                                                 // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3XDJ[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 MeshOpened;                                                // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MeshInactive;                                              // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MeshActive;                                                // 0x02F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             WeaponSpawnLocationComponent;                              // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemPickupDynamic*                          ActiveWeaponPickup;                                        // 0x0310(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockoutTimer;                                              // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbandonedTimeOut;                                          // 0x031C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  UseImage;                                                  // 0x0320(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ProximityImage;                                            // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnTacticalMap;                                        // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T7MW[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPointOfInterestActorComponent*              PointOfInterestComponent;                                  // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseYawViewLimit;                                           // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HOCU[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               EnableSound;                                               // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               OpenSound;                                                 // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RandomWeaponCrate");
		return ptr;
	}



	void SpawnRandomWeapon(class AINSSoldier* ForUser);
	bool ShowShowPointOfInterest(class AINSSoldier* ForPlayer);
	void SetOpened(bool bNewOpened);
	void SetEnabled(bool bNewEnabled);
	void SetCrateDataAsset(class URandomWeaponCrateDataAsset* NewCrateData);
	void ResupplyLoadout(class AINSSoldier* Pawn);
	void ResetUseLimits();
	void PlaySoundEffect(class UAkAudioEvent* InSoundEffect);
	void OnRep_Opened();
	void OnRep_Enabled();
	void OnPickupPickedUp(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
	void OnPickupDestroyed(class AActor* DestroyedActor);
	void OnPickupClearAmmo(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
	void OnCrateOpened(class AINSSoldier* OpenedBy);
	void IncrementTotalUseCount(int Amount, bool bIncrementLinked);
	void IncrementPlayerUseCount(class AINSSoldier* ForPlayer, int Amount, bool bIncrementTotal, bool bIncrementLinked);
	void GiveLoadoutItems(class AINSSoldier* Pawn, bool bExcludePrimaryFromRemoval);
	void GetLinkedWeaponCrates(TArray<class ARandomWeaponCrate*>* OutLinkedCrates);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RagdollMeshComponent
// 0x00C4 (FullSize[0x0BA0] - InheritedSize[0x0ADC])
class URagdollMeshComponent : public USkeletalMeshComponent
{
public:
	unsigned char                                      UnknownData_ZBDK[0x4];                                     // 0x0ADC(0x0004) Fix Super Size
	unsigned char                                      UnknownData_T0TI[0xC0];                                    // 0x0AE0(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RagdollMeshComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RagdollManager
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class URagdollManager : public UObject
{
public:
	int                                                RagdollMaximum;                                            // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UI7F[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FManagedRagdoll>                     Ragdolls;                                                  // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RagdollManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Ragdoll
// 0x0508 (FullSize[0x0728] - InheritedSize[0x0220])
class ARagdoll : public AActor
{
public:
	unsigned char                                      UnknownData_5C0Z[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URagdollMeshComponent*                       RagdollMesh;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicalAnimationComponent*                 PhysicalAnimationComponent;                                // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DismembermentSet[0x28];                                    // 0x0240(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UBloodSplatterData*                          BloodSplatterData;                                         // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UINSAudioComponent*                          VoiceAudioComponent;                                       // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleSeatComponent*                       VehicleSeatComponent;                                      // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttachedToSeat;                                           // 0x0280(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q6UM[0x7];                                     // 0x0281(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLimbGroupInstanceData>              LimbGroupInstanceData;                                     // 0x0288(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               QueuedLimbs;                                               // 0x0298(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 ReplacementMeshComponents;                                 // 0x02A8(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 CapMeshComponents;                                         // 0x02B8(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FConstraintInstance                         BaseConstraintInstance;                                    // 0x02C8(0x01B8) (Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                             DefaultRoot;                                               // 0x0480(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTransform>                          BoneSpaceTransferTransforms;                               // 0x0488(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTransform>                          CachedComponentSpaceTransferTransforms;                    // 0x0498(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBodyVelocityData>                   StoredBodyData;                                            // 0x04A8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FBoneDamageMod>          BoneDamageModifiers;                                       // 0x04B8(0x0050) (Protected, NativeAccessSpecifierProtected)
	struct FVector                                     CachedDamageForce;                                         // 0x0508(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CachedHitPosition;                                         // 0x0514(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CachedLimbName;                                            // 0x0520(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedDamageAmount;                                        // 0x0528(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeOfDeath;                                               // 0x052C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeOfDismemberment;                                       // 0x0530(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeOfInteraction;                                         // 0x0534(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeOfSplatter;                                            // 0x0538(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BleedOutTime;                                              // 0x053C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBrainActivity;                                            // 0x0540(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bVaporized;                                                // 0x0541(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableTickAfterTears;                                    // 0x0542(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_24BT[0x1];                                     // 0x0543(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PreviousTickVelocitySizeSquared;                           // 0x0544(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldUpdatePhysicsOnNextTick;                            // 0x0548(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldEnablePhysicsOnNextTick;                            // 0x0549(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSleeveless;                                               // 0x054A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_71CX[0x1];                                     // 0x054B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TornLimbs;                                                 // 0x054C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               TornLimbSockets;                                           // 0x0550(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDeathAnimation                             DeathAnimation;                                            // 0x0560(0x0040) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     InitialVelocity;                                           // 0x05A0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R2IP[0x4];                                     // 0x05AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMaterialInstanceDynamic*>            DynamicMaterialInstances;                                  // 0x05B0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DamageTypes[0x50];                                         // 0x05C0(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<ECharacterAppearanceSlot, class UMaterialInstanceDynamic*> ClothingData;                                              // 0x0610(0x0050) (Protected, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    BurnParticleSystemComponent;                               // 0x0660(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>            AttachedParticles;                                         // 0x0668(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                SkinTint;                                                  // 0x0678(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32_t                                           StableTicks;                                               // 0x0688(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldCreateBloodPool;                                    // 0x068C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTickingBloodPool;                                         // 0x068D(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M3VW[0x2];                                     // 0x068E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BloodPoolCreationTime;                                     // 0x0690(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeOfIgnition;                                            // 0x0694(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnited;                                                  // 0x0698(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHidingMaterialSections;                                   // 0x0699(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9WM5[0x6];                                     // 0x069A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDecalComponent*                             BloodPoolDecalComponent;                                   // 0x06A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HRA4[0x80];                                    // 0x06A8(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Ragdoll");
		return ptr;
	}



	void VisualizeDebugInformation();
	void Vaporize(bool bShouldObliterate);
	void UpdateMaterialSlotVisibility(bool bNotViewTarget);
	void UpdateBloodPool();
	void TearRandomLimbs(int Limbs);
	TArray<struct FName> TearLimb(const struct FName& LimbName);
	void SprinkleSprayDecals();
	void SimplifiedDamage(float DamageAmount, class UClass* DamageType, const struct FVector& HitPosition, const struct FVector& DamageForce, class AController* Killer, class AActor* DamageCauser, bool bApplyModifiers);
	void SetupSkinTint(class UMaterialInstanceDynamic* Material, bool bStoreSkinTint, bool bApplySkinTint);
	void SetDismembermentSet(class UDismembermentSet* DismembermentSetIn);
	void RefreshDismembermentData();
	void QueueTearLimb(const struct FName& LimbName);
	void PopQueuedLimb();
	void OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	class URagdollMeshComponent* GetMesh();
	float GetDamageModifierForLimb(const struct FName& LimbName);
	void EnablePhysicsForComponent(class UMeshComponent* Component, bool bShouldEnable);
	void DamageLimb(const struct FName& LimbName, float DamageAmount);
	void CreateRagdollBloodSplatter(const struct FVector& HitPosition, const struct FVector& HitDirection, bool bDismemberment, bool bHeadshot, bool bVaporized);
	void CreateMaterialsForMesh(class UMeshComponent* MeshComponent, bool bStoreSkinTint, bool bApplySkinTint, const struct FName& LimbName);
	void CreateBloodPool();
	void ConstrainLimb(const struct FName& LimbName, const struct FVector& BoneLocation, const struct FQuat& BoneRotation, class UMeshComponent* LimbComponent);
	void ConfigureRagdollMesh(class USkeletalMeshComponent* SkeletalMeshComponent, class UPhysicsAsset* PhysicsAsset);
	void ConfigurePhysicsAnimation();
	void ConfigureMaterialEffects();
	void CheckForSuddenVelocityChanges();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RadialMenu
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class URadialMenu : public UObject
{
public:
	TArray<struct FRadialCommand>                      Commands;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RadialMenu");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PropVehicle
// 0x00D0 (FullSize[0x02F0] - InheritedSize[0x0220])
class APropVehicle : public AActor
{
public:
	unsigned char                                      UnknownData_IX7P[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       PrintName;                                                 // 0x0238(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTransform                                  InitialTransform;                                          // 0x0250(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        VehicleMesh;                                               // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 DestroyedMesh;                                             // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 CleanMesh;                                                 // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleEnginePart*                          EnginePart;                                                // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    EngineParticleEffect;                                      // 0x02A0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    VehicleBlowUpParticleEffect;                               // 0x02A8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UINSAudioComponent*                          AkComponentEngineSounds;                                   // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventModularFireStop;                                    // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventModularFire;                                        // 0x02C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               VehicleFireBox;                                            // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireDamageTickRate;                                        // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireDamage;                                                // 0x02D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WI0H[0xC];                                     // 0x02D8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VehicleFireFadeTime;                                       // 0x02E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1QHC[0x8];                                     // 0x02E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PropVehicle");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PropGib
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class APropGib : public AActor
{
public:
	unsigned char                                      UnknownData_49VC[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBreak;                                                 // 0x0230(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ANMM[0x3];                                     // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Health;                                                    // 0x0234(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BreakParticle;                                             // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PropGib");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PropFan
// 0x0038 (FullSize[0x0460] - InheritedSize[0x0428])
class APropFan : public APropBreakable
{
public:
	class UStaticMeshComponent*                        BladeMeshComponent;                                        // 0x0428(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 BladeMesh;                                                 // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URotatingMovementComponent*                  RotatingMovementComponent;                                 // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRate;                                              // 0x0440(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCeilingFan;                                               // 0x0444(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingFanAudio;                                          // 0x0445(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OO54[0x2];                                     // 0x0446(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAudioComponent*                          AudioComponent;                                            // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartAudioEvent;                                           // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopAudioEvent;                                            // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PropFan");
		return ptr;
	}



	void UpdateFanSpeed(float NewFanSpeed);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileBase
// 0x0118 (FullSize[0x0338] - InheritedSize[0x0220])
class AProjectileBase : public AActor
{
public:
	unsigned char                                      UnknownData_NRIA[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bThrownBack;                                               // 0x0238(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8JQF[0x3];                                     // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AController>                  OriginalInstigator;                                        // 0x023C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachedToPawn;                                           // 0x0244(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RAE4[0x3];                                     // 0x0245(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UShapeComponent*                             CollisionComp;                                             // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSProjectileMovementComponent*             ProjectileMovement;                                        // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExplicitVelocity;                                         // 0x0258(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EDQL[0x3];                                     // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     InitialVelocity;                                           // 0x025C(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ProjectileName;                                            // 0x0268(0x0018) (Edit, NativeAccessSpecifierPublic)
	class UClass*                                      DamageTypeClass;                                           // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bProportionalImpactDamage;                                 // 0x028C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IVPM[0x3];                                     // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ImpulseFactor;                                             // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  InstigatorController;                                      // 0x0294(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z5GH[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      InstigatorActorClass;                                      // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AItemWeapon>                  OriginatingWeapon;                                         // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OriginatingWeaponClass;                                    // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x02B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemovedWhenStopped;                                       // 0x02B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PNGN[0x6];                                     // 0x02BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               LaunchSound;                                               // 0x02C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponentProjectileSounds;                               // 0x02C8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               IncomingSound;                                             // 0x02D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IncomingSoundTime;                                         // 0x02D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PXRS[0x4];                                     // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_IncomingSound;                                 // 0x02E0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XS22[0x10];                                    // 0x02E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             TrailParticle;                                             // 0x02F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    TrailParticleRotation;                                     // 0x0300(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OZB7[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    SpawnedTrailParticle;                                      // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SpectatorParticle;                                         // 0x0318(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SpawnedSpectatorParticle;                                  // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundscapeComponent*                        SoundscapeComponent;                                       // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CurrentWeaponSwitch;                                       // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileBase");
		return ptr;
	}



	void SetupThrow(const struct FTransform& Transform, float ThrowSpeed);
	void SetEstimatedFlightTimeAndLocation(float FlightTime, const struct FVector& Location);
	void PlayIncomingAudio();
	void OnSoundscapeUpdate(const struct FSoundscapeStateRepl& State);
	void OnRep_InitialVelocity();
	void OnProjectileStopped(const struct FHitResult& HitResult);
	void Multicast_SetupThrow(const struct FTransform& Transform, float ThrowSpeed);
	void DetachFromUser();
	void BroadcastIncomingAudio();
	void AttachToUser(class AINSSoldier* User);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileGrenade
// 0x0178 (FullSize[0x04B0] - InheritedSize[0x0338])
class AProjectileGrenade : public AProjectileBase
{
public:
	unsigned char                                      UnknownData_2AZS[0x10];                                    // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ThrowbackUIIcon;                                           // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMeshCollision;                                         // 0x0358(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMeshPhysics;                                           // 0x0359(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisabled;                                                 // 0x035A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BLTO[0x1];                                     // 0x035B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnTime;                                                 // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMeshAfterDetonating;                                  // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QZ60[0x7];                                     // 0x0361(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ExplosionDamageTypeClass;                                  // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionRadius;                                           // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionForce;                                            // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionDamage;                                           // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OUVQ[0x4];                                     // 0x037C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UExplosionPenetrationSettings*               ExplosionPenetrationSettings;                              // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionLifeSpan;                                         // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopMovementOnExplode;                                    // 0x038C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N7OY[0x3];                                     // 0x038D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FoliageExplosionRadiusFactor;                              // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FoliageInteractionLifeSpan;                                // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSurfaceReactionOutput                      ExplosionSurfaceReactionComponents;                        // 0x0398(0x0018) (BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            ExplosionSurfaceReaction;                                  // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            BounceSurfaceReaction;                                     // 0x03B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceSpeedMin;                                            // 0x03C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceSpeedMax;                                            // 0x03C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterResponse                                 ThrowCharacterResponse;                                    // 0x03C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0BI4[0x7];                                     // 0x03C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraShakeClass;                                          // 0x03D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeRadius;                                         // 0x03D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeFalloff;                                        // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShellShockRadius;                                          // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShellShockDuration;                                        // 0x03E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDetonated;                                                // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EPSN[0x3];                                     // 0x03E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExplodeTime;                                               // 0x03EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDud;                                                      // 0x03F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bImpactFuse;                                               // 0x03F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B6YU[0x2];                                     // 0x03F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ArmTimer;                                                  // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CookTimer;                                                 // 0x03F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetonateTimer;                                             // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                            VisibilityBlockerComponent;                                // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlanted;                                                  // 0x0408(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRigged;                                                   // 0x0409(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KH93[0x6];                                     // 0x040A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         PlantAttachmentComponent;                                  // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      PlantAttachmentActor;                                      // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PlantSound;                                                // 0x0420(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterResponse                                 LandResponse;                                              // 0x0428(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2AO[0x7];                                     // 0x0429(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ShrapnelProjectile;                                        // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ShrapnelMinCount;                                          // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ShrapnelMaxCount;                                          // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ShrapnelMinAngle;                                          // 0x0440(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    ShrapnelMaxAngle;                                          // 0x044C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AA9C[0x11];                                    // 0x0458(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHitReaction;                                              // 0x0469(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReactBullets;                                             // 0x046A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReactExplosion;                                           // 0x046B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReactOther;                                               // 0x046C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReactAllowSelfDamage;                                     // 0x046D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReactFriendlyFire;                                        // 0x046E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GJAG[0x1];                                     // 0x046F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReactDamageThreshold;                                      // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ReactDelayRange;                                           // 0x0474(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  ReactInstigatorController;                                 // 0x047C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GUG3[0x4];                                     // 0x0484(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              IgnoredDamageActors;                                       // 0x0488(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFragType;                                                 // 0x0498(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsablePriority                                    UsePriority;                                               // 0x0499(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ALT5[0x6];                                     // 0x049A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ThrowbackWeaponClass;                                      // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachToObjectOnStop;                                     // 0x04A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VBFT[0x7];                                     // 0x04A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileGrenade");
		return ptr;
	}



	void StopActiveGrenadeSurfaceReactions();
	void SetCookTimer(float Timer);
	void PlayGrenadeSurfaceReactionWithHit(class USurfaceReaction* InSurfaceReaction, const struct FHitResult& HitResult);
	void PlayGrenadeSurfaceReactionAtLocation(class USurfaceReaction* InSurfaceReaction, const struct FVector& HitLocation);
	void PlayGrenadeSurfaceReaction(class USurfaceReaction* InSurfaceReaction);
	bool PendingDetonationOrHasDetonated();
	void OnPlantParentEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
	void OnGrenadeBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void MulticastGrenadeBounce(const struct FHitResult& ImpactResult, float Scale);
	void MulticastExplodeAt(const struct FVector& HitLocation, const struct FHitResult& HitResult);
	void MakeDud();
	bool IsDetonationTimerActive();
	bool HasTimedFuze();
	float GetExplosionElapsedTime();
	float GetCookRemainingTime();
	void ExplodeAt(const struct FVector& HitLocation, const struct FHitResult& HitResult);
	void Explode();
	void Detonate();
	void ClearCookTimer();
	void BlueprintOnExplode(const struct FVector& Location);
	void ApplyExplosionDamage(const struct FVector& HitLocation);
	void ApplyExplosionCustomDamage(const struct FVector& HitLocation, float InDamage, float InRadius, bool bApplyForce, bool bDoShellShock);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileSmokeGrenade
// 0x00D8 (FullSize[0x0588] - InheritedSize[0x04B0])
class AProjectileSmokeGrenade : public AProjectileGrenade
{
public:
	class UMaterialInterface*                          OverlayBlendable;                                          // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmokeOverlayFadeDistance;                                  // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D5LR[0x4];                                     // 0x04BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          VisibilityRadiusCurve;                                     // 0x04C0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              AIVisibilityRadiusIncrease;                                // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SWTV[0x4];                                     // 0x054C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SimpleParticleSystem;                                      // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SimpleParticleSystemComponent;                             // 0x0558(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SimpleAudioEvent;                                          // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      SmokeOverlayColor;                                         // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BSH6[0x4];                                     // 0x056C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerSmokeCloud;                                           // 0x0570(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSmokeRadius;                                           // 0x0578(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastHitLocation;                                           // 0x057C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileSmokeGrenade");
		return ptr;
	}



	void OnEndBlockerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginBlockerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileThermiteGrenade
// 0x0050 (FullSize[0x05D8] - InheritedSize[0x0588])
class AProjectileThermiteGrenade : public AProjectileSmokeGrenade
{
public:
	float                                              AreaDamageFrequency;                                       // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AreaDamageMinRadius;                                       // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AreaDamageMaxRadius;                                       // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AreaDamageFleeRadius;                                      // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AreaDamageGrowSpeed;                                       // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AreaDamageAmount;                                          // 0x059C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AreaDamageTime;                                            // 0x05A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NEYF[0x4];                                     // 0x05A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               BurnEndAudioEvent;                                         // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanExtinguish;                                            // 0x05B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZZXN[0x3];                                     // 0x05B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumBurnTimeBeforeExtinguish;                           // 0x05B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            ExtinguishSurfaceReaction;                                 // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFinishedBurning;                                          // 0x05C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N198[0x7];                                     // 0x05C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_AreaDamage;                                    // 0x05C8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimerHandle_Extinguish;                                    // 0x05D0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileThermiteGrenade");
		return ptr;
	}



	bool IsLocationThreatenedByFire(const struct FVector& Location);
	void Extinguish();
	void DoExtinguish();
	void BroadcastExtinguish();
	void BroadcastAreaDamageEnd();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileRocket
// 0x0028 (FullSize[0x04D8] - InheritedSize[0x04B0])
class AProjectileRocket : public AProjectileGrenade
{
public:
	class UBoxComponent*                               SuppressionBoxComponent;                                   // 0x04B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionAmountMin;                                      // 0x04B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionAmountMax;                                      // 0x04BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SuppressionBoxHalfSize;                                    // 0x04C0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F4G8[0x4];                                     // 0x04CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               FlyByAudioEvent;                                           // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileRocket");
		return ptr;
	}



	void SuppressTarget(class AINSSoldier* Soldier);
	void OnSuppressionBoxOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnSuppressionBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileMine
// 0x0068 (FullSize[0x0518] - InheritedSize[0x04B0])
class AProjectileMine : public AProjectileGrenade
{
public:
	unsigned char                                      ActorWhitelist[0x50];                                      // 0x04B0(0x0050) UNKNOWN PROPERTY: SetProperty
	float                                              MinimumMass;                                               // 0x0500(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetectRadius;                                              // 0x0504(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerFriendlies;                                        // 0x0508(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K6HM[0x7];                                     // 0x0509(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            MineCollisionComponent;                                    // 0x0510(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileMine");
		return ptr;
	}



	void OnMineBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool CanActorTriggerMine(class AActor* TriggerActor);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProjectileFlashbang
// 0x0018 (FullSize[0x04C8] - InheritedSize[0x04B0])
class AProjectileFlashbang : public AProjectileGrenade
{
public:
	float                                              FlashAlpha;                                                // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashRadius;                                               // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashHoldTime;                                             // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashFadeTime;                                             // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionHoldTimeFactor;                                 // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionHoldTime;                                       // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProjectileFlashbang");
		return ptr;
	}



	float GetPercentageFlashed(const struct FVector& HitLocation, const struct FVector& VictimLocation, class AINSSoldier* Victim);
	void DoFlashEffect(const struct FVector& HitLocation);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProfaneWordCollection
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UProfaneWordCollection : public UDataAsset
{
public:
	TArray<struct FProfaneWord>                        ProfaneWords;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProfaneWordCollection");
		return ptr;
	}



	bool DoesContainProfaneWord(const struct FString& inString, struct FString* OutString);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PostMergeManager
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UPostMergeManager : public UObject
{
public:
	unsigned char                                      UnknownData_I2V3[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PostMergeManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PointShootingUpgradeInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPointShootingUpgradeInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PointShootingUpgradeInterface");
		return ptr;
	}



	bool ShouldEnterPointShootMode();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PointOfInterestActorComponent
// 0x0040 (FullSize[0x0230] - InheritedSize[0x01F0])
class UPointOfInterestActorComponent : public USceneComponent
{
public:
	class UTexture2D*                                  Icon;                                                      // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInProximity;                                          // 0x01F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnlyClosest;                                          // 0x01F9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnTacticalMap;                                        // 0x01FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideTacticalMapZ;                                     // 0x01FB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TacticalMapZOrder;                                         // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideTacticalMapIcon;                                  // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FG0O[0x7];                                     // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  TacticalMapIcon;                                           // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ShouldShowInProximityDelegate;                             // 0x0210(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ShouldShowOnTacticalMapDelegate;                           // 0x0220(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PointOfInterestActorComponent");
		return ptr;
	}



	bool ShouldShowOnTacticalMap(class AINSSoldier* ForPlayer);
	bool ShouldShowInProximity(class AINSSoldier* ForPlayer);
	void SetShouldShowOnTacticalMapEvent(const struct FScriptDelegate& Event);
	void SetShouldShowInProximityEvent(const struct FScriptDelegate& Event);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlaylistBrowserWidget
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UPlaylistBrowserWidget : public UUserWidget
{
public:
	ENetworkState                                      NewWorldState;                                             // 0x0230(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENetworkState                                      PlatformState;                                             // 0x0231(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C5I4[0x6];                                     // 0x0232(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlaylistBrowserWidget");
		return ptr;
	}



	void OnUpdateNetworkStatus(bool bIsConnectedToWorldServices);
	TArray<class UPlaylist*> GetPlaylistsOfType(EPlaylistType Type);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Playlist
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UPlaylist : public UPrimaryDataAsset
{
public:
	struct FString                                     Key;                                                       // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlaylistType                                      Type;                                                      // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSelectedByDefault;                                        // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_APBA[0x6];                                     // 0x0042(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Title;                                                     // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                AvgMatchLengthMinutesMin;                                  // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AvgMatchLengthMinutesMax;                                  // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayersTeam1;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayersTeamConsole1;                                       // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayersVersusAI;                                          // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7583[0x3];                                     // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PlayersTeam2;                                              // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayersTeamConsole2;                                       // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlaylistLightingType                              LightingType;                                              // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P82O[0x3];                                     // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  HeaderTexture;                                             // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlaylistFeature*>                    Features;                                                  // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Playlist");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlaylistFeature
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UPlaylistFeature : public UDataAsset
{
public:
	struct FText                                       Name;                                                      // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ThumbnailImage;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Image[0x28];                                               // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TArray<struct FText>                               Rules;                                                     // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlaylistFeature");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerVotingStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPlayerVotingStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerVotingStatics");
		return ptr;
	}



	void GetVoteSuccessTextForVoteInfo(const struct FReplicatedVoteInfo& VoteInfo, struct FText* OutSuccessText);
	void GetVotePromptTextForVoteInfo(const struct FReplicatedVoteInfo& VoteInfo, struct FText* OutVotePrompt);
	class UVoteIssue* GetVoteIssueDefaults(class UClass* VoteIssueClass);
	void FormatVotingParameters(const struct FText& FormattingText, const struct FReplicatedVoteInfo& VoteInfo, struct FText* OutVotePrompt);
	bool DoesIssueNeedPlayerList(class UClass* VoteIssueClass);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerVotingComponent
// 0x0108 (FullSize[0x01B8] - InheritedSize[0x00B0])
class UPlayerVotingComponent : public UActorComponent
{
public:
	struct FTimerHandle                                TimerHandle_ResetVote;                                     // 0x00B0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVotableIssue>                       VoteIssuesConfig;                                          // 0x00B8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVoteIssue*>                          VoteIssues;                                                // 0x00C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReplicatedVoteInfo                         ReplicatedVoteInfo;                                        // 0x00D8(0x0048) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    VoteDataChangedDelegate;                                   // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UVoteIssue*                                  ActiveVoteIssue;                                           // 0x0130(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      EligibleTeamId;                                            // 0x0138(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0Q92[0x7];                                     // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FQueuedVote>                         QueuedVotes;                                               // 0x0140(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A39R[0x50];                                    // 0x0150(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerVoteTimeout;                                         // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9OUO[0x4];                                     // 0x01A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_VoteTimeout;                                   // 0x01A8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              VoteTime;                                                  // 0x01B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostVoteTime;                                              // 0x01B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerVotingComponent");
		return ptr;
	}



	void VoteDataChangedDelegate__DelegateSignature();
	void ResetVoteWithDelay(float Time);
	void ResetVote();
	void OnVoteTimeout();
	void OnVoteConcluded();
	void OnRep_ReplicatedVoteInfo();
	bool IsVoteInProgress();
	bool IsEligibleVoter(class APlayerState* PlayerState);
	bool HasVotePassed();
	bool HasVoteFailed();
	bool HasVoteConcluded();
	bool HasRecentlyVoted(class APlayerState* PlayerState);
	class UVoteIssue* GetVoteIssueForClass(class UClass* Issue);
	float GetLastVoteTime(class APlayerState* PlayerState);
	void GetEligibleVoters(TArray<class APlayerState*>* OutPlayers);
	int CountEligibleVoters();
	bool CanVoteStart();
	bool CanStartVote(class APlayerState* PlayerState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerReportsAsync
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UPlayerReportsAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSendReportComplete;                                      // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UINSGameInstance*                            INSGameInstance;                                           // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1ST0[0x68];                                    // 0x0048(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerReportsAsync");
		return ptr;
	}



	class UPlayerReportsAsync* BeginReportSubmit(class UINSGameInstance* INSGameInstance, EReportCategoryEnum Category, const struct FUniqueNetIdRepl& ReporterId, const struct FUniqueNetIdRepl& TargetId, const struct FString& Comments);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.InventoryComponent
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UInventoryComponent : public UActorComponent
{
public:
	TArray<struct FInventorySlot>                      InventoryItems;                                            // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    InventoryChangedDelegate;                                  // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.InventoryComponent");
		return ptr;
	}



	void SortItems();
	void RemoveItem(int ItemIdx);
	void PurgeItems();
	void OnRep_InventoryItems();
	void InventoryChangedDelegate__DelegateSignature();
	bool HasItemInSlot(EItemSlot Slot);
	void GiveItemsReverse(class AINSSoldier* Consumer, bool bConsumeItems);
	void GiveItems(class AINSSoldier* Consumer, bool bConsumeItems);
	class AItemBase* GiveItemAt(int ItemIdx, class AINSSoldier* Consumer, bool bDeferSpawn, bool bConsumeItem);
	void GiveFallbackItems(class AINSSoldier* Consumer);
	void GetInventoryItemsFilteredByItemSlot(TArray<struct FInventorySlot>* OutItems, EItemSlot Slot);
	void EmptyItems(bool bIgnoreLockedSlots);
	bool ContainsItem(bool bIncludeChildren);
	void CollectFallbackItemsFor(TArray<class UClass*>* OutFallbackItems);
	void CollectFallbackItems(TArray<class UClass*>* OutFallbackItems);
	void CheckFallbackFor(class AINSSoldier* Consumer);
	void BlueprintOnGiveItem(const struct FInventorySlot& Slot, class AItemBase* SpawnedItem);
	void AddItem(const struct FInventorySlot& Slot, bool bSortNow);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerInventoryComponent
// 0x0108 (FullSize[0x01D8] - InheritedSize[0x00D0])
class UPlayerInventoryComponent : public UInventoryComponent
{
public:
	class AINSPlayerController*                        OuterPlayerController;                                     // 0x00D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForMainMenu;                                              // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2H0[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    PurchaseFailDelegate;                                      // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RefundFailDelegate;                                        // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AvailableSupplyChangedDelegate;                            // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TotalSupplyChangedDelegate;                                // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bLoadoutLocked;                                            // 0x0120(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1Y8I[0x3];                                     // 0x0121(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LockedItemSlots;                                           // 0x0124(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalSupply;                                               // 0x0128(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AvailableSupply;                                           // 0x012C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastAwardedSupply;                                         // 0x0130(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPurchaseActionTimestamp;                               // 0x0134(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      FiremodePreferences[0x50];                                 // 0x0138(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      OpticPreferences[0x50];                                    // 0x0188(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerInventoryComponent");
		return ptr;
	}



	void UpdateOpticPreference(int Mode);
	void UpdateFiremodePreference(EFirearmFiremode Firemode);
	void SetLoadout(TArray<struct FBasicLoadoutItem> Loadout);
	void SetItemSlotLocked(EItemSlot ItemSlot, bool Blocked);
	void ServerUpdateOpticPreference(class UClass* OpticClass, int Mode);
	void ServerUpdateFiremodePreference(class UClass* FirearmClass, EFirearmFiremode Firemode);
	void ServerSetLoadout(TArray<struct FBasicLoadoutItem> Loadout);
	void ServerResetLoadout();
	void ServerRefundWeaponUpgrade(int WeaponIndex);
	void ServerRefundItem(int Index);
	void ServerPurchaseWeaponUpgrade(int PurchaseIndex);
	void ServerPurchaseItem(int SubSlot);
	void ServerEmptyLoadout();
	void ResetSupplyPoints();
	void ResetLoadoutToPlayerClass(class UPlayerClass* PlayerClass);
	void ResetLoadoutLocks();
	void ResetLoadout();
	ERefundResult RefundWeaponUpgrade(int WeaponIndex, class UClass* UpgradeClass);
	ERefundResult RefundItem(int Index, bool bCheckSlots, bool bForceLocked);
	EPurchaseResult PurchaseWeaponUpgrade(int PurchaseIndex, class UClass* UpgradeClass);
	void PurchaseLoadoutItem(const struct FLoadoutWeapon& PurchaseWeapon);
	void PurchaseItems(TArray<struct FLoadoutWeapon> InLoadout);
	EPurchaseResult PurchaseItem(class UClass* ItemClass, int SubSlot, bool bLockSlot, bool bSortNow, bool bCheckRedirect);
	void PlayerInventorySupplyChangedDelegate__DelegateSignature(int AvailableSupply);
	void PlayerInventoryRefundFailDelegate__DelegateSignature(ERefundResult Result);
	void PlayerInventoryPurchaseFailDelegate__DelegateSignature(EPurchaseResult Result);
	void OnRep_TotalSupply();
	void OnRep_AvailableSupply();
	bool IsWeaponUpgradeAllowedOnWeapon(class UClass* Upgrade, class UClass* Weapon, bool bIsAlreadyAllowed);
	bool IsWeaponUpgradeAllowed(class UClass* Upgrade);
	bool IsItemSlotLocked(EItemSlot CheckSlot);
	bool IsItemAllowed(class UClass* Item);
	bool HasUpgradeInSlot(int PurchaseIndex, EWeaponUpgradeSlot UpgradeSlot);
	bool HasUpgradeBeenAttachedToWeapon(class UClass* Weapon, class UClass* Upgrade);
	bool HasAllowedWeaponUpgradesForWeapon(class UClass* For);
	bool HasAllowedItemsForSlot(EItemSlot Slot);
	void GiveInventoryItems();
	class UClass* GetUpgradeMutalExclusion(int PurchaseIndex, class UClass* Upgrade);
	int GetSupplyCostForWeaponUpgradeClass(class UClass* WeaponUpgradeClass);
	int GetSupplyCostForWeaponUpgrade(class UWeaponUpgradeComponent* WeaponUpgradeInstance);
	int GetSupplyCostForItemClass(class UClass* ItemClass);
	int GetSupplyCostForItem(class AItemBase* ItemInstance);
	void GetSubslotUnlockItems(EItemSlot Slot, int SubSlot, TArray<class UClass*>* OutItems);
	class USquadLayout* GetSquadLayout();
	int GetSpentSupply();
	bool GetShouldShowSupplyCostForWeaponUpgradeClass(class UClass* WeaponUpgradeClass);
	void GetPotentialCapacityForSlots(TMap<EItemSlot, int>* OutSlotMap);
	int GetPotentialCapacityForSlot(EItemSlot Slot);
	class AINSPlayerState* GetOuterPlayerState();
	class UPlayerClass* GetOuterPlayerClass();
	class UFactionDefinition* GetOuterFaction();
	void GetLoadout(TArray<struct FBasicLoadoutItem>* OutLoadout, bool bIncludeLocked);
	int GetItemSlotValue(EItemSlot Slot, int SubSlot);
	int GetItemIndexForSlot(EItemSlot Slot, int SubSlot);
	int GetItemEquippedCount(class UClass* Item);
	int GetItemCountForSlot(EItemSlot Slot);
	int GetFirearmsInCategoryCount(EFirearmCategory Category);
	int GetFirearmCategoryLimit(EFirearmCategory Category);
	void GetFilteredWeaponUpgradesForWeaponInSlot(TArray<class UClass*> InUpgrades, class UClass* For, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults);
	void GetFilteredWeaponUpgradesForWeapon(TArray<class UClass*> InUpgrades, class UClass* For, TArray<class UClass*>* OutResults);
	void GetFilteredWeaponUpgradesForSlot(TArray<class UClass*> InUpgrades, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults);
	void GetFilteredItemsForSlot(TArray<class UClass*> InItems, EItemSlot Slot, TArray<class UClass*>* OutResults, int SubSlot);
	int GetCapacityForSlot(EItemSlot Slot);
	int GetAvailableItemSlot(EItemSlot Slot);
	void GetAllowedWeaponUpgradesForWeaponInSlot(class UClass* For, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults);
	void GetAllowedWeaponUpgradesForWeapon(class UClass* For, TArray<class UClass*>* OutResults);
	void GetAllowedWeaponUpgradesForPlayerWithoutSort(TArray<class UClass*>* OutResults);
	void GetAllowedWeaponUpgradesForPlayer(TArray<class UClass*>* OutResults);
	void GetAllowedItemsWithoutSort(TArray<class UClass*>* OutResults);
	void GetAllowedItemsForSlot(EItemSlot Slot, TArray<class UClass*>* OutResults, int SubSlot);
	void GetAllowedItems(TArray<class UClass*>* OutResults);
	void GearCheckWeaponSlots();
	void ForwardInventoryPreferences(class UINSPlayerLocalProfile* Profile);
	void EmptyLoadout(bool bForceLocked);
	void ClientRefundFail(ERefundResult Result);
	void ClientPurchaseFail(EPurchaseResult Result);
	EPurchaseResult CanPurchaseWeaponUpgrade(int PurchaseIndex, class UClass* Upgrade, bool bIsAlreadyAllowed);
	EPurchaseResult CanPurchaseItem(class UClass* Item, int SubSlot, bool bIsAlreadyAllowed);
	void AwardSupplyPoints(int Amount);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerEquipmentCollection
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UPlayerEquipmentCollection : public UDataAsset
{
public:
	unsigned char                                      Items[0x50];                                               // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      WeaponUpgrades[0x50];                                      // 0x0080(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerEquipmentCollection");
		return ptr;
	}



	bool ContainsWeaponUpgrade(class UClass* Upgrade);
	bool ContainsItem(class UClass* Item);
	void AppendWeaponUpgradesToUpgradeArray(TArray<class UClass*>* OutUpgradeArray);
	void AppendWeaponUpgradesToSoftUpgradeArray();
	void AppendItemsToSoftItemArray();
	void AppendItemsToItemArray(TArray<class UClass*>* OutItemsArray);
	void AppendAllowedEquipmentArray(TArray<struct FPlayerAllowedEquipment>* OutAllowedEquipmentArray);
	void AddWeaponUpgradesToSet();
	void AddItemsToSet();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerDetailsWidget
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class UPlayerDetailsWidget : public UUserWidget
{
public:
	struct FString                                     PlatformId;                                                // 0x0230(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  AssignedAvatar;                                            // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PlayerName;                                                // 0x0248(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerDetailsWidget");
		return ptr;
	}



	void RequestDetails(const struct FString& SteamId, bool bNameOnly);
	void OnTextureUpdated(class UTexture2D* Texture);
	void OnNameUpdated(const struct FString& Name);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerClassComponent
// 0x0000 (FullSize[0x01F0] - InheritedSize[0x01F0])
class UPlayerClassComponent : public USceneComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerClassComponent");
		return ptr;
	}



	void OnKilled(class AINSSoldier* Soldier);
	void OnDeactivate(class AINSSoldier* Soldier);
	void OnActivate(class AINSSoldier* Soldier);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerClass
// 0x02C8 (FullSize[0x02F0] - InheritedSize[0x0028])
class UPlayerClass : public UObject
{
public:
	struct FText                                       PrintName;                                                 // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       PrintDescription;                                          // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ClassIcon;                                                 // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayerClassFlags;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PZV8[0x4];                                     // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  SpecialUIClassIcon;                                        // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SpecialUIOverviewClassIcon;                                // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowCosmetics;                                           // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowChargeStun;                                          // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S962[0x6];                                     // 0x007A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               MeshCharacter;                                             // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               MeshCharacterCosmeticBase;                                 // 0x0088(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterAttachedModel>             CharacterAttachedMeshes;                                   // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSelectedCosmetic>                   BotCosmetics;                                              // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               MeshArms;                                                  // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLoadoutWeapon>                      DefaultItems;                                              // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterDialogueDictionary*                VoiceDictionary;                                           // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      DefaultGear[0x50];                                         // 0x00D0(0x0050) UNKNOWN PROPERTY: SetProperty
	struct FPlayerAllowedEquipment                     AllowedEquipment;                                          // 0x0120(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      AllowedEquipmentCollections[0x50];                         // 0x0210(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      ExcludedItems[0x10];                                       // 0x0260(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      ExcludedWeaponUpgrades[0x10];                              // 0x0270(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class UClass*>                              ItemsToDestroyOnDeath;                                     // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotPriorityClass;                                         // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotRandomizeLoadout;                                      // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q5M9[0x6];                                     // 0x0292(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBotSkillConfig*                             CustomBotSkillConfig;                                      // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ComponentClass;                                            // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAttributeOverrides;                                    // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7HNN[0x3];                                     // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayerClassAttributes                      AttributeOverrides;                                        // 0x02AC(0x0034) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MeleeDamageOutputMultiplier;                               // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GameStatsKey;                                              // 0x02E4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J9AN[0x4];                                     // 0x02EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerClass");
		return ptr;
	}



	bool PlayerClassHasFlag(EPlayerClassFlags CheckFlag);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayerAccountStatusAsync
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPlayerAccountStatusAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnGetStatusComplete;                                       // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C3JY[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayerAccountStatusAsync");
		return ptr;
	}



	class UPlayerAccountStatusAsync* BeginGetAccountStatus(int userId);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PlayableArea
// 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
class APlayableArea : public AVolume
{
public:
	TArray<class AINSSoldier*>                         TouchingPlayers;                                           // 0x0258(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWorldHasScenarioPlayableAreas;                            // 0x0268(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScenarioArea;                                             // 0x0269(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlayableAreaType                                  PlayableAreaType;                                          // 0x026A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0GFS[0x5];                                     // 0x026B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PlayableArea");
		return ptr;
	}



	void OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool IsValidPlayableArea();
	bool IsScenarioPlayableArea();
	bool IsOverviewArea();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PerFrameCallQueue
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UPerFrameCallQueue : public UObject
{
public:
	unsigned char                                      UnknownData_O13O[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              ActorList;                                                 // 0x0030(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZPTN[0x10];                                    // 0x0040(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PerFrameCallQueue");
		return ptr;
	}



	void OnFrameCall();
	void EventTick(float DeltaTime);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PerFrameCallQueueWorldSubsystem
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPerFrameCallQueueWorldSubsystem : public UWorldSubsystem
{
public:
	class UPerFrameCallQueue*                          PerFrameCallQueue;                                         // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PerFrameCallQueueWorldSubsystem");
		return ptr;
	}



	class UPerFrameCallQueue* GetPerFrameCallQueue();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PainCausingVolumeComponent
// 0x0028 (FullSize[0x0460] - InheritedSize[0x0438])
class UPainCausingVolumeComponent : public UBoxComponent
{
public:
	unsigned char                                      UnknownData_XWRC[0x4];                                     // 0x0438(0x0004) Fix Super Size
	float                                              TickRate;                                                  // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DamageTypeClass;                                           // 0x0440(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TickTimerHandle;                                           // 0x0448(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSSoldier*>                         TrackedActors;                                             // 0x0450(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PainCausingVolumeComponent");
		return ptr;
	}



	void OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.OutpostHUD
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UOutpostHUD : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.OutpostHUD");
		return ptr;
	}



	class UINSGameUserSettings* GetINSUserSettings();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.OSSStatusWidget
// 0x0088 (FullSize[0x02B8] - InheritedSize[0x0230])
class UOSSStatusWidget : public UUserWidget
{
public:
	EOSSNetworkState                                   PlatformState;                                             // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9CFF[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       PlatformError;                                             // 0x0238(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       PlatformErrorDesc;                                         // 0x0250(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EOSSNetworkState                                   NewWorldState;                                             // 0x0268(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F0WT[0x7];                                     // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       NewWorldError;                                             // 0x0270(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       NewWorldErrorDesc;                                         // 0x0288(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UHorizontalBox*                              HorizPlatformBox;                                          // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q3AZ[0x10];                                    // 0x02A8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.OSSStatusWidget");
		return ptr;
	}



	void OnPlatformStateUpdated(EOSSNetworkState OldState, EOSSNetworkState NewState);
	void OnNewWorldStateUpdated(EOSSNetworkState OldState, EOSSNetworkState NewState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.OnlineInventorySubsystem
// 0x0148 (FullSize[0x0178] - InheritedSize[0x0030])
class UOnlineInventorySubsystem : public ULocalPlayerSubsystem
{
public:
	unsigned char                                      UnknownData_K3ZJ[0x28];                                    // 0x0030(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastCosmeticVoiceSamplePlayed;                             // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4WX5[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCosmeticEquippedDelegate;                                // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCosmeticRemovedFromSlotDelegate;                         // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreferredFactionChangedDelegate;                         // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReceivedNewItemClaims;                                   // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int64_t                                            LastInventoryRequestTime;                                  // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8_t                                             InventoryRequestRetries;                                   // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YNQV[0x17];                                    // 0x00A9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnQueryEntitlementsComplete;                               // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bLoadingEntitledItems;                                     // 0x00D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JNMH[0x7];                                     // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FOnlineInventoryOwnedItem>           EntitledItems;                                             // 0x00D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOwnedItemsLoadingCompleteDelegate;                       // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestPurchaseInventoryUpdated;                         // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FString                                     PlayerInventoryRequestError;                               // 0x0108(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EntitlementsOSS;                                           // 0x0118(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PF51[0x8];                                     // 0x0120(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, class UClass*>                PlatformClaimItems;                                        // 0x0128(0x0050) (UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.OnlineInventorySubsystem");
		return ptr;
	}



	bool ValidateCosmeticOwnership(struct FProfileCharacterCosmeticState* State);
	void SwitchToFaction(struct FName* SelectedFaction);
	void SwitchFaction();
	void SetSecuritySelectedGender(ECharacterGender NewGender);
	void SaveCurrentStateAsPreset(struct FText* PresetName, struct FText* PresetDesignation);
	void ResetCurrentCosmeticStateToDefault();
	void RequestPlayerBalance();
	void RequestInventoryTransaction(int ItemDefId);
	void ReQueryEntitlements();
	void RemovePreset(struct FText* PresetName);
	void RemoveCosmeticsInSlot(ECharacterAppearanceSlot Slot, int SubSlot, bool bCallDelegate);
	void RemoveCosmeticFromShoppingCart(int ItemId);
	void RemoveCosmeticFromCurrentState(const struct FSelectedCosmetic& Cosmetic);
	void RefreshEntitledCosmetics();
	void RandomizeCosmeticsForPreferredFaction();
	void PlaySampleFromCosmeticVoiceDictionary(int ItemId);
	void PlayRadialSampleFromCosmeticVoiceDictionary(int ItemId, int SampleIndex);
	bool PlayerOwnsItemId(int ItemId);
	bool OpenDLCLinkForBundle(class UClass* BundleClass);
	void OnRequestSellInventoryUpdated__DelegateSignature();
	void OnRequestPurchaseInventoryUpdated__DelegateSignature(int ItemDefId);
	void OnRequestInventoryTransactionListCompleted__DelegateSignature();
	void OnRequestInventoryTransactionInitCompleted__DelegateSignature();
	void OnRequestInventoryTransactionCompleted__DelegateSignature();
	void OnReceivedNewItemClaims__DelegateSignature(const struct FOnlineItemClaimResult& Claims);
	void OnQueryEntitlementsComplete__DelegateSignature();
	void OnPreferredFactionChangedDelegate__DelegateSignature(const struct FName& Faction);
	void OnOwnedItemsLoadingCompleteDelegate__DelegateSignature();
	void OnCosmeticRemovedFromSlotDelegate__DelegateSignature(ECharacterAppearanceSlot Slot, int SubSlot);
	void OnCosmeticEquippedDelegate__DelegateSignature(const struct FSelectedCosmetic& Cosmetic, ECharacterAppearanceSlot Slot, int SubSlot, bool bActive);
	void LoadPreset(struct FText* PresetName);
	bool IsEntitledToCosmetic(class UClass* Cosmetic);
	bool IsCosmeticIdEquipped(int ItemId, bool bIncludeBase);
	bool IsCosmeticEquippedInCurrentState(const struct FSelectedCosmetic& Cosmetic);
	bool IsCosmeticEquipped(class UClass* Cosmetic, bool bActive);
	bool HasPreOrderEntitlement();
	bool HasEquippedCosmeticForSlot(ECharacterAppearanceSlot Slot, int SubSlot);
	void GrantCosmeticEntitlement(class UClass* Cosmetic, bool bShouldEquip);
	void GiveDefaultCosmeticsForPreferredFaction();
	int GetTotalEntitledCosmeticsForSubSlot(ECharacterAppearanceSlot Slot, int SubSlot, bool bActive);
	int GetTotalEntitledCosmeticsForSlot(ECharacterAppearanceSlot Slot, bool bActive);
	TArray<int> GetTauntSamplesForCosmetic(int ItemId);
	int GetRandomOwnedCosmeticInSlotForState(const struct FProfileCharacterCosmeticState& CosmeticState, ECharacterAppearanceSlot Slot, int SubSlot);
	int GetLastKnownBalance();
	class UClass* GetEquippedCosmeticForSlot(ECharacterAppearanceSlot Slot, int SubSlot);
	TArray<class UClass*> GetEntitledCosmeticsInSlot(ECharacterAppearanceSlot Slot, int SubSlot, bool bActive);
	class UClass* GetDefaultCosmeticForSlot(const struct FName& Faction, ECharacterAppearanceSlot Slot, int SubSlot);
	TArray<class UClass*> GetCosmeticVariationsArray(class UClass* CosmeticClass);
	void GetCosmeticVariations(class UClass* CosmeticClass, TArray<struct FSelectedCosmetic>* CosmeticVariations);
	void GetCosmeticsCountForSlot(const struct FName& FactionRestriction, ECharacterAppearanceSlot Slot, int SubSlot, int* CountOwned, int* CountTotal);
	class UClass* GetCosmeticByItemDefId(int ItemDefId);
	struct FProfileCharacterCosmeticState GetCharacterCosmeticState(struct FName* FactionName, bool bIncludeShoppingCart);
	void GetAvailableScoreboardBadges(TArray<struct FScoreboardBadge>* OutBadges);
	void EquipCosmeticByItemId(int ItemId);
	void EquipCosmetic(const struct FSelectedCosmetic& Cosmetic);
	void EmptyShoppingCart(struct FName* SelectedFaction);
	bool DoesPlayerOwnCosmeticItemId(int ItemId);
	bool DoesPlayerOwnCosmetic(const struct FSelectedCosmetic& Cosmetic);
	bool DoesPlayerOwnCompetitiveCosmeticItemId(int ItemId);
	bool DoesCosmeticSlotSupportEmpty(ECharacterAppearanceSlot Slot, int SubSlot, const struct FName& Faction);
	bool DoesCosmeticSlotContainSubSlots(ECharacterAppearanceSlot Slot);
	bool DoesCosmeticHaveParent(class UClass* Cosmetic);
	bool DoesCosmeticHaveChildren(class UClass* Cosmetic, bool bEquippedOnly);
	bool CanPurchase();
	void AttemptToClaimTutorialCredits();
	void AddNewStoredCosmeticState(struct FText* NewStateName);
	void AddCosmeticToShoppingCart(int ItemId);
	void AddCosmeticToCurrentState(const struct FSelectedCosmetic& NewCosmetic);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveDestructible
// 0x01D0 (FullSize[0x0538] - InheritedSize[0x0368])
class AObjectiveDestructible : public AObjectiveBase
{
public:
	unsigned char                                      UnknownData_GX86[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MeshDefault;                                               // 0x0378(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MeshDamaged;                                               // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MeshDisabled;                                              // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MeshDestroyed;                                             // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialSwap>                       DamagedMaterialSwap;                                       // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialSwap>                       CleanMaterialSwap;                                         // 0x03A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDestructibleObjectiveState                        State;                                                     // 0x03B8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IKAR[0x7];                                     // 0x03B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                   // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ParticleSystemDamaged;                                     // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ParticleSystemDisabled;                                    // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ParticleSystemDestroyed;                                   // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AudioComponent;                                            // 0x03E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventDamaged;                                         // 0x03E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventDisabled;                                        // 0x03F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventDestroyed;                                       // 0x03F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventRig;                                             // 0x0400(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventRigCancel;                                       // 0x0408(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDecoy;                                                    // 0x0410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTakeDamage;                                               // 0x0411(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckDamageType;                                          // 0x0412(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckFriendlyFire;                                        // 0x0413(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowUnknownDamageSources;                                // 0x0414(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3GIH[0x3];                                     // 0x0415(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialHealth;                                             // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Health;                                                    // 0x041C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageLogComponent*                         DamageLogComponent;                                        // 0x0420(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseYawViewLimit;                                           // 0x0428(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SL9P[0x4];                                     // 0x042C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  RigUIIcon;                                                 // 0x0430(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowRigging;                                             // 0x0438(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3817[0x7];                                     // 0x0439(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, float>                         DamageTypeModifiersMap;                                    // 0x0440(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              RiggingTime;                                               // 0x0490(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_76KW[0x4];                                     // 0x0494(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      RiggingExplosiveType[0x28];                                // 0x0498(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FName                                       RiggingAttachSocket;                                       // 0x04C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AProjectileBase*>                     RiggedExplosives;                                          // 0x04C8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSSoldier*>                         CurrentRiggers;                                            // 0x04D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AItemRemoteExplosive*>                CurrentlyRiggingExplosives;                                // 0x04E8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionDamageMinAmount;                                  // 0x04F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionDamageMaxAmount;                                  // 0x04FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionDamageMinRadius;                                  // 0x0500(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionDamageMaxRadius;                                  // 0x0504(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ExplosionDamageTypeClass;                                  // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShellShockRadius;                                          // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShellShockDuration;                                        // 0x0514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionPhysicsForce;                                     // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FoliageExplosionRadiusFactor;                              // 0x051C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FoliageInteractionLifeSpan;                                // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5V8Z[0x4];                                     // 0x0524(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDestructibleObjectiveStateChangedDelegate;               // 0x0528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveDestructible");
		return ptr;
	}



	void OnStateChanged();
	void OnRigObjective(class AINSSoldier* Pawn);
	void OnRep_State();
	void OnPlayDestructionEffects();
	void OnObjectiveDestroyed(class AController* EventInstigator, class AActor* DamageCauser, unsigned char OriginalOwners);
	void OnDestructibleObjectiveStateChangedDelegate__DelegateSignature(class AObjectiveDestructible* Objective, EDestructibleObjectiveState NewState);
	void MulticastPlayDestructionEffects();
	void MulticastCancelRigObjective(class AINSSoldier* Pawn);
	void MulticastBeginRigObjective(class AINSSoldier* Pawn);
	bool IsPlanter(class AINSSoldier* Soldier);
	bool IsDisabledOrDestroyed();
	bool IsDisabled();
	bool IsDestroyed();
	bool IsDecoy();
	bool HasRiggedExplosives();
	bool HasLiveRiggedExplosives();
	void ChangeState(EDestructibleObjectiveState NewState);
	bool BlueprintCanTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void ApplyExplosionDamageAndPhysics(class AController* EventInstigator, class AActor* DamageCauser);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveTruck
// 0x0020 (FullSize[0x0558] - InheritedSize[0x0538])
class AObjectiveTruck : public AObjectiveDestructible
{
public:
	TArray<class UPhysicalMaterial*>                   WeakPointMaterials;                                        // 0x0538(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UseSocket;                                                 // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxUseSocketDistance;                                      // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3I6A[0x4];                                     // 0x0554(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveTruck");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveIcon
// 0x00F0 (FullSize[0x0320] - InheritedSize[0x0230])
class UObjectiveIcon : public UUserWidget
{
public:
	bool                                               bShowCaptureProgress;                                      // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowCaptureProgressSpectator;                             // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFloatingIcon;                                             // 0x0232(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DS8Q[0x1];                                     // 0x0233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistanceScaleMin;                                          // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceScaleMax;                                          // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceAlphaMin;                                          // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceAlphaMax;                                          // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceUnitsMin;                                          // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceUnitsMax;                                          // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlphaIronsightMin;                                         // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlphaIronsightMax;                                         // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlphaMin;                                                  // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlphaMax;                                                  // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeDotMin;                                                // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeDotMax;                                                // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DotMin;                                                    // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DotMax;                                                    // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DotScaleMin;                                               // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DotScaleMax;                                               // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Distance;                                                  // 0x0274(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsOnScreen;                                               // 0x0278(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M9RE[0x3];                                     // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DotAngle;                                                  // 0x027C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultBackgroundAlpha;                                    // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultBackgroundAlphaInactive;                            // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BackgroundAlpha;                                           // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BackgroundAlphaInactive;                                   // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultFillAlpha;                                          // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultFillAlphaInactive;                                  // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FillAlpha;                                                 // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FillAlphaInactive;                                         // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultBorderAlpha;                                        // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultBorderAlphaInactive;                                // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BorderAlpha;                                               // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BorderAlphaInactive;                                       // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActiveObjective;                                          // 0x02B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3MPQ[0x7];                                     // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture*                                    BackgroundTexture;                                         // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                                    CapturePointTexture;                                       // 0x02C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                                    BackgroundDestructibleTexture;                             // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                                    DestructibleTexture;                                       // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FAZK[0x28];                                    // 0x02D8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  TextObjectiveLetter;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                                   IconScaleBox;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CaptureProgress;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                     ObjectiveBorder;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveIcon");
		return ptr;
	}



	void UpdateProgress(class UImage* Image);
	void UpdateIconProgress(float OpacityAlpha);
	void UpdateIcon(float InDistance, float InFrontDot, float InRightDot, float InIronsightFrac, bool bInIsOnScreen);
	bool ShouldShowObjectiveCaptureProgress();
	void SetObjective(class AObjectiveBase* NewObjective);
	void OnSetObjective(class AObjectiveBase* NewObjective);
	void OnRemoveObjective(class AObjectiveBase* OldObjective);
	void OnPlayerChangeTeam(unsigned char TeamId, class ATeamInfo* TeamInfo);
	void OnObjectiveIsCounterAttacked(bool bNewCounterAttackState, class AObjectiveBase* InObjective);
	void OnObjectiveChangeOwner(class AObjectiveBase* InObjective, unsigned char NewOwners);
	void OnObjectiveChangeCapturingTeam(class AObjectiveBase* InObjective, unsigned char NewCapturers);
	void OnObjectiveActive(bool bNewActiveState, class AObjectiveBase* InObjective);
	void OnDestructibleObjectiveStateChanged(class AObjectiveDestructible* InObjective, EDestructibleObjectiveState NewState);
	bool IsObjectiveContested();
	EObjectiveType GetObjectiveType();
	EObjectiveRelationship GetObjectiveRelationship();
	struct FText GetObjectiveLetter();
	struct FLinearColor GetObjectiveIconFillColorAndOpacity();
	struct FLinearColor GetObjectiveIconColorAndOpacity();
	struct FLinearColor GetObjectiveIconBorderColorAndOpacity();
	float GetObjectiveDistance();
	struct FLinearColor GetObjectiveColor();
	float GetObjectiveCaptureProgress();
	class AObjectiveBase* GetObjective();
	struct FSlateColor GetMainOpacity();
	struct FSlateBrush GetIconMaterial();
	struct FSlateColor GetIconCaptureProgressColorAndOpacity();
	ESlateVisibility GetIconBorderVisibility();
	struct FText GetFormattedObjectiveDistance();
	struct FLinearColor GetCapturingColor();
	struct FSlateBrush GetBackgroundMaterial();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveCharacter
// 0x0020 (FullSize[0x0388] - InheritedSize[0x0368])
class AObjectiveCharacter : public AObjectiveBase
{
public:
	class UClass*                                      CharacterClass;                                            // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSSoldier*                                 SpawnedCharacter;                                          // 0x0370(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AINSAISoldierController*                     SpawnedController;                                         // 0x0378(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V0NC[0x8];                                     // 0x0380(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveCharacter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveBriefing
// 0x0080 (FullSize[0x02B0] - InheritedSize[0x0230])
class UObjectiveBriefing : public UUserWidget
{
public:
	class UTextBlock*                                  BriefingHeading;                                           // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                              CaptureObjectiveList;                                      // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USizeBox*                                    ObjectiveBriefingContainer;                                // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBorder*                                     ObjectiveBriefingTeamColorBorder;                          // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  ObjectiveTypePopupText;                                    // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  ObjectiveTypeScoreboardText;                               // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                             ObjectiveTypeTextSwitcher;                                 // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPopUp;                                                    // 0x0268(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVisible;                                                  // 0x0269(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bQueued;                                                   // 0x026A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZWRA[0x1];                                     // 0x026B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastObjectiveBriefingStartTime;                            // 0x026C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ObjectiveBriefingDuration;                                 // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7O10[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ObjectiveBriefingObjectiveTypeText;                        // 0x0278(0x0018) (BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                               bLastObjectiveWasAttack;                                   // 0x0290(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFadingIn;                                                 // 0x0291(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFadingOut;                                                // 0x0292(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_69C1[0x1];                                     // 0x0293(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FadeStartTime;                                             // 0x0294(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeDuration;                                              // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPendingObjectiveUpdate;                                   // 0x029C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BTWX[0x3];                                     // 0x029D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastObjectiveUpdateTimestamp;                              // 0x02A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ObjectiveUpdateDelay;                                      // 0x02A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AINSPlayerController*                        CurrentPlayerController;                                   // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveBriefing");
		return ptr;
	}



	void PopulateObjectiveBriefing(bool bNewObjective);
	void OnScoreboardOpened();
	void OnQueueObjectiveBriefing();
	void OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers);
	void OnObjectiveCaptured(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
	void OnExitSpawnZone();
	class UUserWidget* DoCreateDestructibleObjectiveIcon();
	class UUserWidget* DoCreateCapturingObjectiveIcon();
	void CheckForObjectiveUpdateQueue(unsigned char ObjectiveId);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveAction
// 0x0010 (FullSize[0x0378] - InheritedSize[0x0368])
class AObjectiveAction : public AObjectiveBase
{
public:
	EObjectiveActionType                               ActionType;                                                // 0x0368(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F76D[0x7];                                     // 0x0369(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_CompletionDelay;                               // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveAction");
		return ptr;
	}



	void SetActionCompleted();
	void OnEndObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ActionPerformedBySoldier(class AINSSoldier* Soldier, EObjectiveActionType InputActionType, float CompletionDelay);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveDestructableAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UObjectiveDestructableAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveDestructableAchievement");
		return ptr;
	}



	void OnRecievedObjectiveDestroy(class AINSPlayerController* PC, class AObjectiveDestructible* Objective, bool bFromRig);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DrainedAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDrainedAchievement : public UObjectiveDestructableAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DrainedAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SelfDestructiveAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USelfDestructiveAchievement : public UObjectiveDestructableAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SelfDestructiveAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SpecialDeliveryAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USpecialDeliveryAchievement : public UObjectiveDestructableAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SpecialDeliveryAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TurfWarAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTurfWarAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TurfWarAchievement");
		return ptr;
	}



	void OnRecievedObjectiveReset(class AINSPlayerController* PC, class AObjectiveCapturable* Objective);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CarryingAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCarryingAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CarryingAchievement");
		return ptr;
	}



	void OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveCapturedAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UObjectiveCapturedAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveCapturedAchievement");
		return ptr;
	}



	void OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ObjectiveAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UObjectiveAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ObjectiveAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NonVaultingVolume
// 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
class ANonVaultingVolume : public AVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NonVaultingVolume");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NoiseLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UNoiseLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NoiseLibrary");
		return ptr;
	}



	float SmoothNoise(int X);
	float PerlinNoise(float X, float Persistence, int Octaves);
	float Noise(int N);
	float InterpolatedNoise(float X);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NavQueryFilter_IgnoreDeathArea
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UNavQueryFilter_IgnoreDeathArea : public UNavigationQueryFilter
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NavQueryFilter_IgnoreDeathArea");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NavQueryFilter_ExcludeHazards
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UNavQueryFilter_ExcludeHazards : public UNavigationQueryFilter
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NavQueryFilter_ExcludeHazards");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NavQueryFilter_ExcludeDanger
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UNavQueryFilter_ExcludeDanger : public UNavigationQueryFilter
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NavQueryFilter_ExcludeDanger");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NavAreaExtended
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UNavAreaExtended : public UNavArea
{
public:
	unsigned char                                      UnknownData_6NAB[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NavAreaExtended");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NavArea_Hazard
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UNavArea_Hazard : public UNavAreaExtended
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NavArea_Hazard");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.NavArea_DeathArea
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UNavArea_DeathArea : public UNavAreaExtended
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.NavArea_DeathArea");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator
// 0x0218 (FullSize[0x02C8] - InheritedSize[0x00B0])
class UMutator : public UActorComponent
{
public:
	struct FText                                       DisplayName;                                               // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       Author;                                                    // 0x00C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x00E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      MutualExclusionGroups[0x50];                               // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      MinimumCompatibleGamemode[0x28];                           // 0x0148(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FRulesetGameModeRulesMinimal                GlobalRules;                                               // 0x0170(0x00B8) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      GameModeRules[0x50];                                       // 0x0228(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bCompetitiveRules;                                         // 0x0278(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideGameModeText;                                     // 0x0279(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y4K0[0x6];                                     // 0x027A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       OverridenGameModeName;                                     // 0x0280(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bFormatOverrideGameModeName;                               // 0x0298(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KY2D[0x7];                                     // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FText>                               OverridenGameModeRules;                                    // 0x02A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAppendOverridenRules;                                     // 0x02B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z0T2[0x7];                                     // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSoftObjectPath>                     AdditionalAssets;                                          // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator");
		return ptr;
	}



	bool OnTextMessageSent(class AINSPlayerController* Speaker, const struct FText& Message, bool bTeamOnly);
	void OnTeamInitialized(class ATeamInfo* Team);
	void OnRoundStarted();
	void OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
	void OnPlayerTeamChanged(class AController* Controller, unsigned char NewTeamId, bool bForced, bool bDidKillPlayer);
	bool OnPlayerTakeAnyDamage(class AINSSoldier* Victim, class AController* Attacker, class AActor* DamageCauser, float* OutDamage);
	void OnPlayerSpawned(class AINSSoldier* Soldier, class AController* NewPlayer, const struct FRotator& StartRotation);
	void OnPlayerPostInitialize(class AController* Controller);
	void OnPlayerLogout(class AController* Controller);
	void OnPlayerLogin(class APlayerController* PlayerController, const struct FString& Portal, const struct FString& Options);
	void OnPlayerKilledAnyDamage(class AINSSoldier* Victim, float KillingDamage, class AController* Killer, class AController* Assister, class AActor* DamageCauser);
	void OnPlayerClassChanged(class AController* Controller, class UPlayerClass* PlayerClass);
	void OnObjectiveChangeOwnership(class AObjectiveBase* Objective, unsigned char NewOwners);
	void OnFactionsInitialized(TArray<class ATeamInfo*> Teams);
	void InitializeMutatorPostLoad();
	void InitializeMutator(class AINSGameMode* GameMode, const struct FString& Options);
	bool GivePlayerInventory(class AINSSoldier* Player, bool bFromResupply);
	bool GetRulesForGameModeCopy(class UClass* GameMode, struct FRulesetGameModeRulesMinimal* OutRules);
	void GetRequiredAssets();
	class AINSGameMode* GetOwnerGameMode();
	bool CanItemDrop(class AItemBase* Item, class AINSSoldier* Owner, bool* bCanDrop);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_Vampirism
// 0x0008 (FullSize[0x02D0] - InheritedSize[0x02C8])
class UMutator_Vampirism : public UMutator
{
public:
	bool                                               bCountFriendlyFire;                                        // 0x02C8(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F8GE[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHealth;                                                 // 0x02CC(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_Vampirism");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_Ultralethal
// 0x0000 (FullSize[0x02C8] - InheritedSize[0x02C8])
class UMutator_Ultralethal : public UMutator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_Ultralethal");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_SupplyBase
// 0x0010 (FullSize[0x02D8] - InheritedSize[0x02C8])
class UMutator_SupplyBase : public UMutator
{
public:
	int                                                InitialSupply;                                             // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideMaxSupply;                                        // 0x02CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WDR8[0x3];                                     // 0x02CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxSupply;                                                 // 0x02D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowLoadoutSaving;                                       // 0x02D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MX9N[0x3];                                     // 0x02D5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_SupplyBase");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_NoDrops
// 0x0008 (FullSize[0x02D0] - InheritedSize[0x02C8])
class UMutator_NoDrops : public UMutator
{
public:
	bool                                               bAffectsHumans;                                            // 0x02C8(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsBots;                                              // 0x02C9(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EM9X[0x6];                                     // 0x02CA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_NoDrops");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_LoadoutBase
// 0x0020 (FullSize[0x02E8] - InheritedSize[0x02C8])
class UMutator_LoadoutBase : public UMutator
{
public:
	TArray<struct FLoadoutWeapon>                      Items;                                                     // 0x02C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeSelection;                                       // 0x02D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStripItems;                                               // 0x02D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStripLockedItems;                                         // 0x02DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPurchaseItems;                                            // 0x02DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLockLoadout;                                              // 0x02DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLockItemSlots;                                            // 0x02DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ASMC[0x2];                                     // 0x02DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LockedItemSlots;                                           // 0x02E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyToBots;                                              // 0x02E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipLoadoutMenu;                                          // 0x02E5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A2VG[0x2];                                     // 0x02E6(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_LoadoutBase");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_HotPotato
// 0x0058 (FullSize[0x0320] - InheritedSize[0x02C8])
class UMutator_HotPotato : public UMutator
{
public:
	unsigned char                                      GrenadeClass[0x28];                                        // 0x02C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ThrowbackWeaponClass[0x28];                                // 0x02F0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               bIgnoreHeadshots;                                          // 0x0318(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotsOnly;                                                 // 0x0319(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WFCP[0x6];                                     // 0x031A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_HotPotato");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_HeadshotOnly
// 0x0008 (FullSize[0x02D0] - InheritedSize[0x02C8])
class UMutator_HeadshotOnly : public UMutator
{
public:
	bool                                               bCheckMeleeDamage;                                         // 0x02C8(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsHumans;                                            // 0x02C9(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsBots;                                              // 0x02CA(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MC3L[0x5];                                     // 0x02CB(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_HeadshotOnly");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Mutator_CoopBase
// 0x00B0 (FullSize[0x0378] - InheritedSize[0x02C8])
class UMutator_CoopBase : public UMutator
{
public:
	class USquadLayout*                                AllFactionsBotSquadLayoutOverride;                         // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      BotSquadLayoutOverride[0x50];                              // 0x02D0(0x0050) UNKNOWN PROPERTY: MapProperty
	class UCheckpointCounterAttackTypes*               CounterAttackOverride;                                     // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CounterAttackOverridesByFaction[0x50];                     // 0x0328(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Mutator_CoopBase");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MutatorStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMutatorStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MutatorStatics");
		return ptr;
	}



	void GetMutatorDisplayNames(TArray<struct FName> InNames, TArray<struct FText>* OutDisplayNames);
	void GetMutatorDisplayName(const struct FName& InName, struct FText* OutDisplayName);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MusicManagerComponent
// 0x00C0 (FullSize[0x02B0] - InheritedSize[0x01F0])
class UMusicManagerComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_0YRM[0xA8];                                    // 0x01F0(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGameMusicComponent>                 ActiveComponents;                                          // 0x0298(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K50J[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MusicManagerComponent");
		return ptr;
	}



	void OnPlayerMusicUpdated(const struct FPlayingMusic& PlayingMusic);
	void OnMusicDirectorStateChange(TEnumAsByte<EMusicDirectorState> OldState, TEnumAsByte<EMusicDirectorState> NewState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MusicDirector
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UMusicDirector : public UObject
{
public:
	unsigned char                                      UnknownData_U9RZ[0x48];                                    // 0x0028(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MusicDirector");
		return ptr;
	}



	void OnUIMusicBanksLoaded();
	void MusicDirectorStateUpdate__DelegateSignature(TEnumAsByte<EMusicDirectorState> OldState, TEnumAsByte<EMusicDirectorState> NewState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MountedWeapon
// 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
class AMountedWeapon : public AActor
{
public:
	unsigned char                                      UnknownData_ZJKN[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MountedGunBase;                                            // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        MountedGunYaw;                                             // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       YawAttachPoint;                                            // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WeaponAttachPoint;                                         // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleSeatComponent*                       VehicleSeat;                                               // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      WeaponClass;                                               // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      WeaponAnimInstanceClass;                                   // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  HintImage;                                                 // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MountedWeapon");
		return ptr;
	}



	void OnMountedWeaponReplicated();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ModSubsystem
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class UModSubsystem : public UEngineSubsystem
{
public:
	unsigned char                                      UnknownData_MNUP[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerDefaultMapPostModLoad;                               // 0x0048(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMountedMod>                         ModList;                                                   // 0x0058(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EModPrimaryAssetType, struct FModPrimaryAssetDescription> ModPrimaryAssetTypes;                                      // 0x0068(0x0050) (Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CNG8[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ModSubsystem");
		return ptr;
	}



	void RenewToken();
	void OnSubscribedModActivated(const struct FModState& ModState, bool bIsUpToDate);
	void OnOnlineAuthStateChanged(EModPlatformAuthState NewAuthState);
	void OnModDeactivatedFromCloud(const struct FModState& ModState);
	void OnInitialServerModDownloadsComplete();
	void OnAcceptedServiceTerms();
	void FindThumbnailForLevel(const struct FString& LevelName, const struct FString& Lighting);
	void FindLoadingScreenForLevel(const struct FString& LevelName, const struct FString& Lighting);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ModData
// 0x00E8 (FullSize[0x0118] - InheritedSize[0x0030])
class UModData : public UDataAsset
{
public:
	struct FText                                       InGameName;                                                // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FString                                     WebsiteUrl;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiredByClients;                                        // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J7YR[0x7];                                     // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FModPrimaryAssetDirectory>           PrimaryAssetDirectories;                                   // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FLoadingScreenMap>     LoadingScreens;                                            // 0x0070(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FLoadingScreenMap>     MapThumbnails;                                             // 0x00C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bOnlyContainsMaps;                                         // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2VB5[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ModData");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ModalPopupWidget
// 0x00B0 (FullSize[0x02E0] - InheritedSize[0x0230])
class UModalPopupWidget : public UUserWidget
{
public:
	struct FText                                       MessageText;                                               // 0x0230(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       ConfirmText;                                               // 0x0248(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       CancelText;                                                // 0x0260(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RE40[0x30];                                    // 0x0278(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKeyEvent                                   KeyEvent;                                                  // 0x02A8(0x0038) (BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ModalPopupWidget");
		return ptr;
	}



	void SetVisibleConfirmBtn(bool bVisible);
	void SetVisibleCancelBtn(bool bVisible);
	void OnUpdatedText();
	void OnConfirmed();
	void OnCancelled();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MenuSquadLayout
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UMenuSquadLayout : public UPrimaryDataAsset
{
public:
	class UFactionDefinition*                          Faction;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMenuSquadLayoutSection>             Sections;                                                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MenuSquadLayout");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSBasePlayerController
// 0x02B8 (FullSize[0x0828] - InheritedSize[0x0570])
class AINSBasePlayerController : public APlayerController
{
public:
	class AHUDBase*                                    CachedHUDBase;                                             // 0x0570(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 GenericMenuWidget;                                         // 0x0578(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerSettingsUpdatedDelegate;                           // 0x0580(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class UAkAudioEvent*, struct FPlayerSoundscapeState> SoundscapeState;                                           // 0x0590(0x0050) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ME2D[0x10];                                    // 0x05E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnShowRoundOverUIDelegate;                                 // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHideRoundOverUIDelegate;                                 // 0x0600(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowMatchOverUIDelegate;                                 // 0x0610(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowRoundOverRewardsDelegate;                            // 0x0620(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    MatchStateUpdateDelegate;                                  // 0x0630(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SubMatchStateUpdateDelegate;                               // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RefreshTeamsDelegate;                                      // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RefreshMutatorsDelegate;                                   // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RefreshObjectivesDelegate;                                 // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveCaptureDelegate;                                // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveDestroyedDelegate;                              // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    PawnTookDamageDelegate;                                    // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetViewTargetDelegate;                                   // 0x06B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowCenterMessageDelegate;                               // 0x06C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerKilledDelegate;                                    // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScoreboardShownDelegate;                                 // 0x06E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bShowMap;                                                  // 0x06F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScoreboardActive;                                         // 0x06F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HKTZ[0x6];                                     // 0x06F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUserWidget*                                 ActiveTacticalMapWidget;                                   // 0x06F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      TacticalMapWidget;                                         // 0x0700(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnNewHintDelegate;                                         // 0x0708(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHintExpiredDelegate;                                     // 0x0718(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHintMoreInfoDelegate;                                    // 0x0728(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FHintInfo                                   ActiveHint;                                                // 0x0738(0x0010) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHintIsActive;                                             // 0x0748(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F5O5[0xF];                                     // 0x0749(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHintInfo>                           QueuedHints;                                               // 0x0758(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TFNY[0x8];                                     // 0x0768(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneCaptureComponent2D*                    ScopeSceneCapture;                                         // 0x0770(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKilledFriendlyDelegate;                                  // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          RadioComponent;                                            // 0x0788(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      HighlightsManagerClass[0x28];                              // 0x0790(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class AActor*                                      HighlightsManager;                                         // 0x07B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X8GE[0x8];                                     // 0x07C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OpenNVIDIAHighlightsDelegate;                              // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    DestroyNVIDIAHighlightsDelegate;                           // 0x07D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsAdmin;                                                  // 0x07E8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J5FQ[0x7];                                     // 0x07E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AdminMenuWidget;                                           // 0x07F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsAdminMenuEnabled;                                       // 0x07F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_74TJ[0x7];                                     // 0x07F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    AdminReceivedLevelListDelegate;                            // 0x0800(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AdminReceivedScenarioListDelegate;                         // 0x0810(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2YU2[0x8];                                     // 0x0820(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSBasePlayerController");
		return ptr;
	}



	void UpdateInputMode(bool bForce);
	void UpdatedPlayerSettings();
	void UnmutePlayerState(class APlayerState* OtherPlayerState);
	void ToggleDebugMenu();
	void ToggleAdminMenu();
	void ShowScoreboard(bool bShow);
	void ShowRoundOverUIDelegate__DelegateSignature(const struct FPlayerRoundOverData& UIData);
	void ShowMatchOverUIDelegate__DelegateSignature(const struct FPlayerMatchOverData& UIData);
	void ShowMap();
	class UUserWidget* ShowGenericMenu(class UClass* WidgetClass);
	bool ShouldHintLesson(class UClass* Lesson, class ALessonArea* LessonArea);
	void SetVideo(const struct FString& GroupId, const struct FString& HighlightId, int StartDelta, int EndDelta);
	void SetGenericMenu(class UUserWidget* Widget);
	void SetActiveHint(class UClass* Lesson, float HintTime, bool bPlayVideo, bool bPause);
	void Server_AdminUnbanPlayer(const struct FString& UniqueId);
	void Server_AdminTravelScenario(const struct FString& Scenario);
	void Server_AdminTravelMap(const struct FString& TravelArgs);
	void Server_AdminTravel(const struct FString& Level, const struct FString& Scenario);
	void Server_AdminSetGamemodeProperty(const struct FString& Property, const struct FString& Value);
	void Server_AdminRestartRound(bool bSwitchTeams);
	void Server_AdminRestartLevel();
	void Server_AdminRespawnAllPlayers();
	void Server_AdminRequestScenarios(const struct FString& LevelName);
	void Server_AdminRequestLevels();
	void Server_AdminKickPlayer(int PlayerId);
	void Server_AdminGetGamemodeProperty(const struct FString& Property);
	void Server_AdminForceGameOver();
	void Server_AdminExtendRoundTimer();
	void Server_AdminEndRound(bool bVictory);
	void Server_AdminDebugPlayerState();
	void Server_AdminDebugLightLevels();
	void Server_AdminConsoleCommand(const struct FString& Command);
	void Server_AdminCheat(const struct FString& Command);
	void Server_AdminBypassWaitingState();
	void Server_AdminBroadcastMusic(EMusicEvent Event);
	void Server_AdminBeginProfiling(bool bStopAtRoundEnd);
	void Server_AdminBanPlayer(int PlayerId, float BanDuration);
	void RoundOverRewardsDelegate__DelegateSignature(int RoundNumber, const struct FGameStatsRoundReward& Rewards);
	void ReturnToMainMenu();
	void ResetPlayerAccount();
	void RefreshTeamsDelegate__DelegateSignature();
	void RefreshObjectivesDelegate__DelegateSignature();
	void RefreshMutatorsDelegate__DelegateSignature();
	void PrintAvailableFireSupport();
	void PlayerSettingsUpdatedDelegate__DelegateSignature();
	void PlayerAdminReceivedScenarioList__DelegateSignature(TArray<struct FString> Scenarios);
	void PlayerAdminReceivedLevelList__DelegateSignature(TArray<struct FString> LevelNames);
	void OpenNVIDIAHighlights();
	void OnSoundscapeUpdate(const struct FSoundscapeStateRepl& NewState);
	void OnShowCenterMessageDelegate__DelegateSignature(const struct FText& MessageText);
	void OnSetViewTargetDelegate__DelegateSignature(class AActor* NewViewTarget);
	void OnScoreboardShownDelegate__DelegateSignature(bool bShow);
	void OnQueuedHintReady();
	void OnPlayerReportingStart();
	void OnPlayerReportingEnd();
	void OnPlayerKillEvent(const struct FSoldierKillInfo& SoldierKillInfo);
	void OnLocalPlayerProfileUpdated(EProfileBlockType SavedBlockType);
	void OnHUDDisplayOptionChanged();
	void OnHighlightsPreferencesChanged();
	void OnActiveHintExpired();
	void MutePlayerState(class APlayerState* OtherPlayerState);
	bool IsUsingGamepad();
	bool IsSpectator();
	bool IsReportingPlayer();
	bool IsPlayerStateMuted(class APlayerState* OtherPlayerState);
	bool IsInFirstPersonFor(class UObject* Object);
	void InitNVIDIAHighlights(bool bNeedsPlayerState);
	void InformIncomingHint(class UClass* Lesson, float HintTime, bool bQueueIfBusy, bool bPlayVideo, bool bForceShow, bool bPauseGame, class ALessonArea* LessonArea);
	void HideRoundOverUIDelegate__DelegateSignature();
	void HideOpenMenu();
	void HideMap();
	void HideHint(class UClass* Lesson);
	class UINSPlayerLocalProfile* GetLocalProfile();
	class UINSLocalPlayer* GetLocalPlayer();
	class AINSPlayerState* GetINSPlayerState();
	class AHUDBase* GetHUDBase();
	void DestroyNVIDIAHighlights(bool bDeleteHighlights);
	void ClientTeamMessageText(class APlayerState* SenderPlayerState, const struct FText& InText, const struct FName& Type, float MsgLifeTime);
	void ClientShowFriendlyKillWarning(int TeamKills, int Limit);
	void ClientRoundOverRewards(int RoundNumber, const struct FGameStatsRoundReward& Rewards);
	void ClientReceivedRoundOver(const struct FPlayerRoundOverData& UIData);
	void ClientReceivedMatchOver(const struct FPlayerMatchOverData& UIData);
	void ClientPlayIncomingRadioEventSpectator(class UAkAudioEvent* Event, int Seed, bool bOnlyOfficerOrObserver, unsigned char TeamId);
	void ClientPlayIncomingRadioEvent(class UAkAudioEvent* Event, int Seed);
	void ClientPlayerKillNotice(const struct FPlayerKillNotice& Notice);
	void ClientPawnReceivedDamage(float Damage, class AINSSoldier* Target, const struct FVector& HitSource, const struct FVector& HitDirection, class AController* EventInstigator, class AActor* DamageCauser, const struct FString& BoneName);
	void ClientObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers);
	void ClientObjectiveCapture(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
	void ClientMessageText(const struct FText& Text, const struct FName& Type, float MsgLifeTime);
	void Client_AdminReceiveScenarios(TArray<struct FString> Scenarios);
	void Client_AdminReceiveLevels(TArray<struct FString> LevelNames);
	void AdminUnbanPlayer(const struct FString& UniqueId);
	void AdminTravelScenario(const struct FString& Scenario);
	void AdminTravelMap(const struct FString& TravelArgs);
	void AdminSetGamemodeProperty(const struct FString& Property, const struct FString& Value);
	void AdminRestartRound(bool bSwitchTeams);
	void AdminRespawnAllPlayers();
	void AdminKickPlayer(int PlayerId);
	void AdminGetGamemodeProperty(const struct FString& Property);
	void AdminForceGameOver();
	void AdminExtendRoundTimer();
	void AdminDebugPlayerState();
	void AdminDebugLightLevels();
	void AdminConsoleCommand(const struct FString& Command);
	void AdminCheat(const struct FString& Command);
	void AdminBanPlayer(int PlayerId, float BanDuration);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MenuPlayerController
// 0x00C0 (FullSize[0x08E8] - InheritedSize[0x0828])
class AMenuPlayerController : public AINSBasePlayerController
{
public:
	class UClass*                                      DebugMenuWidget;                                           // 0x0828(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 ActiveDebugMenuWidget;                                     // 0x0830(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoadingCosmetics;                                         // 0x0838(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_886C[0x7];                                     // 0x0839(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AvailableCosmetics[0x10];                                  // 0x0840(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FScriptMulticastDelegate                    RefreshCosmeticsDelegate;                                  // 0x0850(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    PlayerClassChangedDelegate;                                // 0x0860(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AProfileCharacter*                           PreviewCharacter;                                          // 0x0870(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKitPreviewCharacter*                        KitPreviewCharacter;                                       // 0x0878(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKitPreviewWeapon*                           KitPreviewWeapon;                                          // 0x0880(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKitPreviewActorsSet;                                     // 0x0888(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayerInventoryComponent*                   KitMenuInventory;                                          // 0x0898(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMainMenuLoadoutData                        MenuLoadoutData;                                           // 0x08A0(0x0020) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bLoadingMenuSquadLayouts;                                  // 0x08C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoadedMenuSquadLayouts;                                   // 0x08C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T7VH[0x6];                                     // 0x08C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRefreshMenuSquadLayoutsDelegate;                         // 0x08C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UMenuSquadLayout*>                    LoadedMenuSquadLayouts;                                    // 0x08D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MenuPlayerController");
		return ptr;
	}



	void SetupKitPreviewActors(class AKitPreviewCharacter* NewPreviewCharacter, class AKitPreviewWeapon* NewPreviewWeapon);
	void SetPreviewCharacter(class AProfileCharacter* NewPreviewCharacter);
	void SetLoadoutMenuSupplyPoints(int SupplyPoints);
	void SetLoadoutMenuSquadLayoutCollection(class UMenuSquadLayout* MenuSquadLayout, int SectionIndex);
	void SetLoadoutMenuSquadLayoutAndClass(class USquadLayout* SquadLayout, class UPlayerClass* PlayerClass);
	void SaveLoadoutMenuLoadout();
	void RefreshMenuSquadLayoutsDelegate__DelegateSignature();
	void RefreshCosmeticsDelegate__DelegateSignature();
	void PlayerClassChangedDelegate__DelegateSignature(class UPlayerClass* PlayerClass);
	void OnAvailableCosmeticsLoaded();
	void LoadMenuSquadLayouts();
	void KitPreviewActorsSetDelegate__DelegateSignature(class AKitPreviewCharacter* KitPreviewCharacter, class AKitPreviewWeapon* KitPreviewWeapon);
	void ClearLoadoutMenuData();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPlayerCameraManager
// 0x0C24 (FullSize[0x3360] - InheritedSize[0x273C])
class AINSPlayerCameraManager : public APlayerCameraManager
{
public:
	float                                              FreeCamDistanceVehicle;                                    // 0x273C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeCamDistanceTurret;                                     // 0x2740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FUBW[0x4];                                     // 0x2744(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialParameterCollection*                PlayerCollection;                                          // 0x2748(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionEffectMaximum;                                  // 0x2750(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q0VP[0x4];                                     // 0x2754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    SuppressionEffectMaterial;                                 // 0x2758(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BlendableSuppressionEffectMaterial;                        // 0x2760(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    BlindEffectMaterial;                                       // 0x2768(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BlendableBlindEffectMaterial;                              // 0x2770(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    GaussianBlurEffectMaterial;                                // 0x2778(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BlendableGaussianBlurEffectMaterial;                       // 0x2780(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BlendablePainEffectMaterial;                               // 0x2788(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    PainEffectMaterial;                                        // 0x2790(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BlendableSharpenEffectMaterial;                            // 0x2798(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    SharpenEffectMaterial;                                     // 0x27A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          CustomDepthBlendableMaterial;                              // 0x27A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    CustomDepthBlendable;                                      // 0x27B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    SmokeEffectMaterial;                                       // 0x27B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BlendableSmokeEffectMaterial;                              // 0x27C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bXRay;                                                     // 0x27C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EFVP[0x7];                                     // 0x27C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPostProcessSettings                        PostProcessSettings;                                       // 0x27D0(0x0540) (BlueprintVisible, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      ScopeTargetTexture;                                        // 0x2D10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*                    ScopeSceneCapture;                                         // 0x2D18(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUICamera;                                                 // 0x2D20(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VHSW[0x63F];                                   // 0x2D21(0x063F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPlayerCameraManager");
		return ptr;
	}



	void UpdateDefaultFOV();
	void OnOwnerChangeTeam(unsigned char TeamId, class ATeamInfo* TeamInfo);
	bool IsFirstPersonCamera();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MenuPlayerCameraManager
// 0x0110 (FullSize[0x3470] - InheritedSize[0x3360])
class AMenuPlayerCameraManager : public AINSPlayerCameraManager
{
public:
	TArray<struct FMenuExternalLight>                  CharacterCustomizationLights;                              // 0x3360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMenuExternalLight>                  DefaultMenuLights;                                         // 0x3370(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                       CharacterCustomizePostProcess;                             // 0x3380(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsingCustomizationLights;                                 // 0x3388(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F9ZH[0x3];                                     // 0x3389(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LightToggleElapsedTime;                                    // 0x338C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightBlendTime;                                            // 0x3390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X8RP[0x4];                                     // 0x3394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACameraActor*                                MainCamera;                                                // 0x3398(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ECharacterAppearanceSlot, class ACameraActor*> CosmeticSlotCameras;                                       // 0x33A0(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int, class ACameraActor*>                     CosmeticSubSlotCameras;                                    // 0x33F0(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	ECharacterAppearanceSlot                           CurrentCosmeticSlot;                                       // 0x3440(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VCNV[0x3];                                     // 0x3441(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentCosmeticSubSlot;                                    // 0x3444(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACameraActor*                                LoadoutCharacterCamera;                                    // 0x3448(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACameraActor*                                LoadoutWeaponCamera;                                       // 0x3450(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SetUsingCustomizationLightsEvent;                          // 0x3458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G9E4[0x8];                                     // 0x3468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MenuPlayerCameraManager");
		return ptr;
	}



	void SwitchToMainCamera();
	void SwitchToLoadoutCamera(bool bCharacter);
	void SwitchToCosmeticCamera(ECharacterAppearanceSlot CosmeticSlot, int SubSlot, bool bForce);
	void SmoothTransitionToCamera(class ACameraActor* DesiredCamera);
	void SetUsingCustomizationLightsEvent__DelegateSignature(bool bEnabled);
	void SetUsingCustomizationLights(bool bNewUsingCustomizationLights);
	void SetupMainCamera(class ACameraActor* InMainCamera);
	void SetLoadoutCameras(class ACameraActor* InLoadoutCharacterCamera, class ACameraActor* InLoadoutWeaponCamera);
	void RegisterMenuDynamicLights(TArray<class ALight*> InCustomizationLights, TArray<class ALight*> InDefaultLights);
	void RegisterCosmeticCameras(TMap<ECharacterAppearanceSlot, class ACameraActor*> InCosmeticSlotCameras, TMap<int, class ACameraActor*> InCosmeticSubSlotCameras);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MenuGameMode
// 0x0000 (FullSize[0x0308] - InheritedSize[0x0308])
class AMenuGameMode : public AGameMode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MenuGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ProfileCharacter
// 0x00B0 (FullSize[0x0330] - InheritedSize[0x0280])
class AProfileCharacter : public APawn
{
public:
	class UINSLocalPlayer*                             LocalPlayer;                                               // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   Mesh;                                                      // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CosmeticMeshesLoadedCount;                                 // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VTMV[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSelectedCosmetic>                   AppliedCosmetics;                                          // 0x0298(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCosmeticItem*>                       SpawnedCosmetics;                                          // 0x02A8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerClass*                                PreviewPlayerClass;                                        // 0x02B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemBase*                                   SpawnedCarrier;                                            // 0x02C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemBase*                                   SpawnedArmor;                                              // 0x02C8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotPlaySpecialMontage;                                  // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCustomIdleAnim;                                        // 0x02D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHidePreviewWeapon;                                        // 0x02D2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9TXP[0x1];                                     // 0x02D3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimationRotation;                                         // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemBase*                                   WeaponModel3P;                                             // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TRU6[0x10];                                    // 0x02E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FProfileCharacterCosmeticState              CurrentSelectedState;                                      // 0x02F0(0x0030) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FName                                       Faction;                                                   // 0x0320(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USharedCosmeticState*                        SharedCosmeticState;                                       // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ProfileCharacter");
		return ptr;
	}



	void UpdateVisibility();
	void StopAnimMontage(class UAnimMontage* AnimMontage);
	void SpawnPreviewWeapon();
	void SetPreviewWeapon(class AItemBase* PreviewWeapon);
	void SetMeshVisibility(bool bVisible);
	void SetCosmeticsFromState(struct FProfileCharacterCosmeticState* NewCosmeticState);
	void SetCosmeticMeshVisibility(bool bVisible);
	void RemoveCosmeticByClass(class UClass* Cosmetic);
	void RefreshAppliedCosmetics();
	float PlayAnimMontage(class UAnimMontage* AnimMontage, float InPlayRate, const struct FName& StartSectionName);
	void OnSwitchFaction();
	void OnProfileBlockLoaded(EProfileBlockType Type, bool bFromCloud);
	void OnCustomizeMenuChanged(bool bIsCustomizing);
	void OnCosmeticMeshesLoaded(class UCosmeticItem* Cosmetic);
	void OnAllCosmeticMeshesLoaded();
	void InitProfileCharacter(class UINSLocalPlayer* InPlayer);
	class USharedCosmeticState* GetSharedCosmeticState();
	class UAnimMontage* GetCurrentMontage();
	void DetachCosmeticFromMesh(class UClass* Cosmetic);
	void DetachAllCosmeticsFromMesh();
	void AttachCosmeticToMesh(const struct FSelectedCosmetic& SelectedCosmetic, bool bStartVisible);
	void AttachCosmeticsToMesh();
	void ApplyCosmetic(const struct FSelectedCosmetic& SelectedCosmetic);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MarketingProfileCharacter
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class AMarketingProfileCharacter : public AProfileCharacter
{
public:
	unsigned char                                      LoadedCosmetics[0x10];                                     // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MarketingProfileCharacter");
		return ptr;
	}



	void LoadCosmetics();
	void GetWeaponFallbackDetails(const struct FWeaponFallbackModel& InWeaponFallbackModel, int* OutSlot, EAttachmentFallbackMode* OutFallbackMode);
	void BP_UpdateEnum(const struct FString& EnumName, TArray<struct FName> Names);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapVoteWidget
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class UMapVoteWidget : public UUserWidget
{
public:
	bool                                               bCanVoteRefresh;                                           // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMapVoteSelection                                  SelectedVoteOption;                                        // 0x0231(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J7OL[0x2];                                     // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EndTimeWorldSec;                                           // 0x0234(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMapVoteOption>                      VoteChoices;                                               // 0x0238(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapVoteWidget");
		return ptr;
	}



	void SubmitMapVote(EMapVoteSelection Selection);
	void RestoreWidgetFocus();
	void OnVoteWinnerChosen(EMapVoteSelection Selection);
	void OnVoteCountUpdated(TArray<struct FMapVoteCount> Data);
	void OnMapVoteStarted(TArray<struct FMapVoteOption> Maps, float EndTime, bool bInCanVoteRefresh);
	void OnLocalOptionSelected(EMapVoteSelection Selection);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapVoteButtonInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMapVoteButtonInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapVoteButtonInterface");
		return ptr;
	}



	void SetVoteCount(int NewVoteCount);
	void SetLocalVoteState(bool bSelected);
	void PlayWinningVoteAnimation();
	void PlayLosingVoteAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapVoteManager
// 0x0180 (FullSize[0x01A8] - InheritedSize[0x0028])
class UMapVoteManager : public UObject
{
public:
	unsigned char                                      UnknownData_7O4E[0x20];                                    // 0x0028(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bOldMapVoteRandomization;                                  // 0x0048(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q7OY[0xF];                                     // 0x0049(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMapVoteOption                              WinningOption;                                             // 0x0058(0x00A8) (NativeAccessSpecifierPrivate)
	TArray<struct FMapVoteOption>                      RemainingVoteOptions;                                      // 0x0100(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMapVoteOption>                      CurrentVoteOptions;                                        // 0x0110(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q4R7[0x88];                                    // 0x0120(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapVoteManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapIconWidget
// 0x0040 (FullSize[0x0270] - InheritedSize[0x0230])
class UMapIconWidget : public UUserWidget
{
public:
	int                                                DefaultZOrder;                                             // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseBackgroundLayer;                                       // 0x0234(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XKFB[0x3];                                     // 0x0235(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     IconWorldLocation;                                         // 0x0238(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    IconWorldRotation;                                         // 0x0244(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bFitIconWithinMapBounds;                                   // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFollowRotation;                                           // 0x0251(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRotateEntireWidget;                                       // 0x0252(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8S04[0x1];                                     // 0x0253(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FollowRotationOffset;                                      // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUpdatedFrequently;                                        // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveOnTeamChange;                                       // 0x0259(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsTeamChangeEvent;                                     // 0x025A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OG9R[0x5];                                     // 0x025B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTacticalMapWidget*                          TacticalMap;                                               // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      IconImage;                                                 // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapIconWidget");
		return ptr;
	}



	void BlueprintOnTeamChange(unsigned char TeamId, class ATeamInfo* TeamInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapActorWidget
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UMapActorWidget : public UMapIconWidget
{
public:
	unsigned char                                      UnknownData_92WV[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SizeToActorScale;                                          // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8ALG[0x4];                                     // 0x027C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapActorWidget");
		return ptr;
	}



	bool UpdateFollowActor();
	void SizeToActorBounds();
	void SetToTeamColor(bool bHasNoTeam);
	void GetRepresentativeLocation(struct FVector* OutLocation, struct FRotator* OutRotation);
	class AActor* GetFollowedActor();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapVehicleWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UMapVehicleWidget : public UMapActorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapVehicleWidget");
		return ptr;
	}



	class AVehicleBase* GetFollowedVehicle();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapSupplyCrateActor
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UMapSupplyCrateActor : public UMapActorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapSupplyCrateActor");
		return ptr;
	}



	class ASupplyCrate* GetFollowedCrate();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapSpawnZoneWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UMapSpawnZoneWidget : public UMapActorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapSpawnZoneWidget");
		return ptr;
	}



	class ASpawnZone* GetFollowedSpawnZone();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapSoldierWidget
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UMapSoldierWidget : public UMapActorWidget
{
public:
	bool                                               bLocalViewTarget;                                          // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHovered;                                                // 0x0281(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XUD1[0xE];                                     // 0x0282(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapSoldierWidget");
		return ptr;
	}



	void UpdatePlayerZOrder();
	void OnUpdateObjective(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective);
	class AINSSoldier* GetFollowedSoldier();
	void BlueprintOnUpdateObjective(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective);
	void BlueprintOnUpdateLocalViewTarget();
	void BlueprintOnObjectiveStateChange();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapRestrictedAreaWidget
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UMapRestrictedAreaWidget : public UMapActorWidget
{
public:
	TArray<struct FVector2D>                           AreaClipBounds;                                            // 0x0280(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapRestrictedAreaWidget");
		return ptr;
	}



	class ARestrictedArea* GetFollowedRestrictedArea();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapItemPickupWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UMapItemPickupWidget : public UMapActorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapItemPickupWidget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MapIconPointOfInterestWidget
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UMapIconPointOfInterestWidget : public UMapActorWidget
{
public:
	unsigned char                                      UnknownData_L0AT[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MapIconPointOfInterestWidget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MainMenuSettings
// 0x0090 (FullSize[0x00C8] - InheritedSize[0x0038])
class UMainMenuSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             WelcomeScreenMap;                                          // 0x0038(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             MainMenuMap;                                               // 0x0050(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             WelcomeScreenMapConsole;                                   // 0x0068(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             MainMenuMapConsole;                                        // 0x0080(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMainMenuMusic                              Music;                                                     // 0x0098(0x0020) (Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FHolidayMainMenuTakeover>            HolidayTakeovers;                                          // 0x00B8(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MainMenuSettings");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MainMenuWidget
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class UMainMenuWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_7DTN[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldDisplayPostMatch;                                   // 0x0238(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDisplayServerBrowser;                               // 0x0239(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsViewingPostMatch;                                       // 0x023A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z1B2[0x5];                                     // 0x023B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MainMenuWidget");
		return ptr;
	}



	void InitMenu();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PhysicalDebris
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class APhysicalDebris : public AActor
{
public:
	unsigned char                                      UnknownData_ZF6B[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            SurfaceReaction;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurfaceReactionMinimumSpeed;                               // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurfaceReactionMaximumSpeed;                               // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastEffectTime;                                            // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenEffects;                                        // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxBounceEffects;                                          // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BounceCount;                                               // 0x024C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PhysicalDebris");
		return ptr;
	}



	void OnBounce(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MagazineDebris
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
class AMagazineDebris : public APhysicalDebris
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MagazineDebris");
		return ptr;
	}



	void SetFromAmmoContainer(class UClass* AmmoContainerClass);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LocalizableObjectInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class ULocalizableObjectInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LocalizableObjectInterface");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LoadingScreenStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class ULoadingScreenStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LoadingScreenStatics");
		return ptr;
	}



	void HideViewportLoadingScreen(class UObject* WorldContext);
	float GetLoadingScreenProgress();
	TArray<struct FLoadingScreenHint> GetLoadingHints();
	void DisplayViewportLoadingScreen(class UObject* WorldContext, const struct FLoadingScreenSetup& Setup);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LoadingScreenSettings
// 0x1580 (FullSize[0x15B8] - InheritedSize[0x0038])
class ULoadingScreenSettings : public UDeveloperSettings
{
public:
	TMap<struct FString, struct FLoadingScreenMap>     Maps;                                                      // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FLoadingScreenMap>     MapThumbnails;                                             // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleGamemode;                                             // 0x00D8(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleLevel;                                                // 0x0340(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleGamemodeHints;                                        // 0x05A8(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleLoadingText;                                          // 0x0810(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleRandomHint;                                           // 0x0A78(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BrushDetailsPanel;                                         // 0x0CE0(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BrushHintPanel;                                            // 0x0D68(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BrushRulesDivider;                                         // 0x0DF0(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleMotdHeader;                                           // 0x0E78(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             StyleMotdBody;                                             // 0x10E0(0x0268) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BrushMotdBackground;                                       // 0x1348(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BrushMotdAccent;                                           // 0x13D0(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	unsigned char                                      DefaultLoadingScreenTexture[0x28];                         // 0x1458(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FSlateBrush                                 LoadingScreenSpinnerBrush;                                 // 0x1480(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 HintBulletBrush;                                           // 0x1508(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	unsigned char                                      LoadingHintDatatable[0x28];                                // 0x1590(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LoadingScreenSettings");
		return ptr;
	}



	void GetThumbnailForLevel(const struct FString& LevelName, const struct FString& Lighting);
	void GetLoadingScreenTextureAsset(const struct FString& Name, const struct FString& LightingName);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LoadCollectibleItemDataAsync
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class ULoadCollectibleItemDataAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnItemDataLoaded;                                          // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QSOA[0x28];                                    // 0x0040(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FOnlineItemClaimResponse>            Results;                                                   // 0x0068(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LoadCollectibleItemDataAsync");
		return ptr;
	}



	class ULoadCollectibleItemDataAsync* LoadCollectibleItemData(class UObject* WorldContextObject, TArray<int> InItemIds);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LightStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class ULightStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LightStatics");
		return ptr;
	}



	class ALightSampler* GetLightSampler(class UObject* WorldContextObject);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LightSampler
// 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
class ALightSampler : public AInfo
{
public:
	unsigned char                                      UnknownData_UMSV[0x78];                                    // 0x0220(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LightSampler");
		return ptr;
	}



	void UntrackNamedLightSource(const struct FName& Name);
	void TrackNamedLightSource(const struct FName& Name, const struct FVector& Position, float Intensity, float Radius, class UActorComponent* Parent, float InnerConeAngle, float OuterConeAngle, const struct FVector& Direction);
	float GetVolumetricLightingIntensity(const struct FVector& Position);
	struct FLinearColor GetVolumetricLightingForPosition(const struct FVector& Position);
	struct FLinearColor GetVolumetricLighting(const struct FVector& Position);
	float GetUnfilteredVolumetricLightingIntensity(const struct FVector& Position);
	struct FLinearColor GetUnfilteredVolumetricLightingForPosition(const struct FVector& Position);
	struct FLinearColor GetUnfilteredVolumetricLighting(const struct FVector& Position);
	float GetLightingIntensity(const struct FVector& Position);
	TArray<struct FSampledLightSource> GetDynamicLightSources(const struct FVector& Position);
	float GetDynamicLightIntensityFromSources(TArray<struct FSampledLightSource> LightSources);
	float GetDynamicLightIntensity(const struct FVector& Position);
	void DrawDebugInformation();
	bool AffectsBoundsVirtualSource(const struct FSampledLightSource& LightSource, const struct FBoxSphereBounds& Bounds);
	void AddLightSource(const struct FVector& Position, float Intensity, float Duration, float Radius, class UActorComponent* Parent, float InnerConeAngle, float OuterConeAngle, const struct FVector& Direction);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LessonLoadingWidget
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class ULessonLoadingWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_NUNT[0x28];                                    // 0x0230(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LessonLoadingWidget");
		return ptr;
	}



	void SetLessonVideo();
	void OnVideoAsyncLoadComplete();
	void OnLessonVideoLoadedEvent();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LessonArea
// 0x0088 (FullSize[0x02E0] - InheritedSize[0x0258])
class ALessonArea : public AVolume
{
public:
	class UClass*                                      AssociatedLesson;                                          // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AssociatedLessonPS4;                                       // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AssociatedLessonXBOX;                                      // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HintDisplayTime;                                           // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceHintDisplay;                                         // 0x0274(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHintShouldQueue;                                          // 0x0275(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPauseOnDisplay;                                           // 0x0276(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GHXN[0x1];                                     // 0x0277(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ControllersHinted[0x50];                                   // 0x0278(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bEnabled;                                                  // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9S8W[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLessonTriggered;                                         // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LessonArea");
		return ptr;
	}



	void ToggleLesson(bool bNewEnabled);
	void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void LessonAreaEventDelegate__DelegateSignature(class AINSBasePlayerController* PlayerController);
	bool HasHintedController(class AINSBasePlayerController* Controller);
	void ControllerConfirmedHint(class AINSBasePlayerController* Controller);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LagCompensationComponent
// 0x04B0 (FullSize[0x0560] - InheritedSize[0x00B0])
class ULagCompensationComponent : public UActorComponent
{
public:
	class USkeletalMeshComponent*                      BodyComponent;                                             // 0x00B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCompensateActorPosition;                                  // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRecordBodies;                                             // 0x00B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YP67[0x4A6];                                   // 0x00BA(0x04A6) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LagCompensationComponent");
		return ptr;
	}



	void RewindToTime(float Time);
	void RestorePosition();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Ladder
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class ALadder : public AActor
{
public:
	unsigned char                                      UnknownData_7B7D[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EUsablePriority                                    UsePriority;                                               // 0x0228(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3TBH[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInstancedStaticMeshComponent*               ModularMeshComponent;                                      // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TopMeshComponent;                                          // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        BottomMeshComponent;                                       // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               BoxComponent;                                              // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELadderType                                        LadderType;                                                // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96WC[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               TopBoxComponent;                                           // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderTopThreshold;                                        // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderBottomThreshold;                                     // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderOffset;                                              // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationOffset;                                           // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ModularLadderPieces;                                       // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NOF7[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  LadderUpUIIcon;                                            // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LadderDownUIIcon;                                          // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LadderSlideUIIcon;                                         // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LadderExitUIIcon;                                          // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QH9Y[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Ladder");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitSelect_UpgradeButton
// 0x0130 (FullSize[0x0360] - InheritedSize[0x0230])
class UKitSelect_UpgradeButton : public UUserWidget
{
public:
	class UBorder*                                     MainButtonArea;                                            // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  LeftTextWidget;                                            // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SupplyCostWidget;                                          // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             LeftTab;                                                   // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       UnequipInvalidationBox;                                    // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       BackgroundInvalidationBox;                                 // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       NameInvalidationBox;                                       // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      UpgradeClass;                                              // 0x0268(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemSlot                                          ParentItemSlot;                                            // 0x0270(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2D9L[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SupplyCost;                                                // 0x0274(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSupplyCostVisible;                                        // 0x0278(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSelected;                                                 // 0x0279(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPurchasable;                                              // 0x027A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldHide;                                               // 0x027B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsNewGear;                                                // 0x027C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_748V[0x3];                                     // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       UpgradePrintName;                                          // 0x0280(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bHovered;                                                  // 0x0298(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O6W2[0xC7];                                    // 0x0299(0x00C7) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitSelect_UpgradeButton");
		return ptr;
	}



	void UpdateVisualComponents();
	void UpdateUpgradeData(class UClass* InUpgradeClass, EItemSlot InParentItemSlot, int InSupplyCost, bool bInSupplyCostVisible, bool bInSelected, bool bInPurchasable, bool bInIsNewGear);
	void RefreshColors();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitSelect_ItemButton
// 0x0168 (FullSize[0x0398] - InheritedSize[0x0230])
class UKitSelect_ItemButton : public UUserWidget
{
public:
	class UNamedSlot*                                  HighlightsNotificationSlot;                                // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    SizeBox_2;                                                 // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                     Background;                                                // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  LeftTextWidget;                                            // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      WeaponIcon;                                                // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SupplyCostWidget;                                          // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                UnequipButtonCanvas;                                       // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     Button_1;                                                  // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                     LeftSelectHighlight;                                       // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       BackgroundInvalidationBox;                                 // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       NameInvalidationBox;                                       // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaberInvalidationBox*                       IconInvalidationBox;                                       // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ItemClass;                                                 // 0x0290(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LoadoutCategoryIndex;                                      // 0x0298(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SubSlot;                                                   // 0x029C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSelected;                                                 // 0x02A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsNewGear;                                                // 0x02A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemSlot                                          ItemSlot;                                                  // 0x02A2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPurchasable;                                              // 0x02A3(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHovered;                                                  // 0x02A4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3A4I[0xF3];                                    // 0x02A5(0x00F3) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitSelect_ItemButton");
		return ptr;
	}



	void UpdateNotificationVisibility();
	void UpdateItemData(class UClass* InItemClass, int InSubSlot, bool bInSelected, bool bInIsNewGear, bool bLoadoutChanged, int InLoadoutCategoryIndex);
	void SetUnequipButtonVisibility();
	void RefreshColors();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitSelect_ItemAttribute
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class UKitSelect_ItemAttribute : public UUserWidget
{
public:
	float                                              InfoProgressPercent;                                       // 0x0230(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InfoComparisonPercent;                                     // 0x0234(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       InfoText;                                                  // 0x0238(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       DifferenceInfoText;                                        // 0x0250(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitSelect_ItemAttribute");
		return ptr;
	}



	void DoSetImages(TArray<class UTexture2D*> Images);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MainMenuPanelWidget
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class UMainMenuPanelWidget : public UUserWidget
{
public:
	class UAccountNickname*                            AccountNickname;                                           // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FText>                               BreadcrumbText;                                            // 0x0238(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMenuBackgroundOverlay;                                // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8CQ9[0xF];                                     // 0x0249(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EUserPrivilegeResult                               CurrentPrivilegeResult;                                    // 0x0258(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M2TV[0xF];                                     // 0x0259(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MainMenuPanelWidget");
		return ptr;
	}



	void TryEnterMiltiplayerGame();
	void SetTutorialPromptResult(bool bOpeningTutorial);
	void SetActiveMapPageSelect(int InValue);
	bool OnRequestNavigateBack();
	void OnPanelOpened();
	void OnPanelClosed();
	class UTutorialList* GetLessonList();
	void DisplayRestrictionDialog(EUserPrivilegeResult PrivilageRestriction);
	class AINSWorldSettings* BPGetINSWorldSetting();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitSelectMenu
// 0x0040 (FullSize[0x02A8] - InheritedSize[0x0268])
class UKitSelectMenu : public UMainMenuPanelWidget
{
public:
	bool                                               bForMainMenu;                                              // 0x0268(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C66M[0x7];                                     // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             ItemTypeSwitcher;                                          // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                FirearmAttributes;                                         // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CurrentlyHoveredItemClass;                                 // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CurrentlyHoveredUpgradeClass;                              // 0x0288(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      LastSelectedItemClass;                                     // 0x0290(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EItemSlot                                          LastShoppingItemSlot;                                      // 0x0298(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HNYJ[0x3];                                     // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastShoppingItemSubSlot;                                   // 0x029C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHoverUnequipIntended;                                     // 0x02A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FYQ5[0x7];                                     // 0x02A1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitSelectMenu");
		return ptr;
	}



	void UpdateFirearmAttributes(class UClass* InFirearmClass, class UClass* InAmmoTypeClass, class UClass* InOriginalAmmoTypeClass, class UKitSelect_ItemAttribute* CaliberAttribute, class UKitSelect_ItemAttribute* MuzzleVelocityAttribute, class UKitSelect_ItemAttribute* PenetrationAttribute, class UKitSelect_ItemAttribute* EffectiveRangeAttribute, class UKitSelect_ItemAttribute* MagSizeAttribute, class UKitSelect_ItemAttribute* FireModesAttribute, class UKitSelect_ItemAttribute* FireRateAttribute, class UKitSelect_ItemAttribute* VerticalHandlingAttribute, class UKitSelect_ItemAttribute* HorizontalHandlingAttribute);
	bool HasWeaponUpgradeEquipped(class UClass* WeaponUpgrade, EItemSlot ItemSlot, int SubSlot);
	bool HasItemInSlot(EItemSlot ItemSlot, int SubSlot);
	bool HasItemEquipped(class UClass* Item, int SubSlot);
	class UPlayerInventoryComponent* GetPlayerInventory();
	class UPlayerClass* GetPlayerClass();
	bool DoHasActiveHoverComparison();
	void DoDetermineFireModeImages(class UClass* InFirearmClass, TArray<class UTexture2D*>* OutFireModeImages);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitPreviewActor
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AKitPreviewActor : public AActor
{
public:
	bool                                               bAutoRegisterPlayer;                                       // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4VGE[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AINSBasePlayerController>     OwnerPC;                                                   // 0x0224(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFactionDefinition>           CachedFactionDefinition;                                   // 0x022C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_32NP[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UArrowComponent*                             ArrowComponent;                                            // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitPreviewActor");
		return ptr;
	}



	void RegisterPlayer(class AINSBasePlayerController* InPlayerController);
	void OnUpdatePlayerClass(class UFactionDefinition* FactionDefinition, class UPlayerClass* PlayerClass);
	void OnUpdateInventory(class UPlayerInventoryComponent* InventoryComponent);
	void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
	void OnPlayerClassChanged(class UPlayerClass* PlayerClass);
	void OnInventoryChanged();
	void OnFirstPersonWeaponMeshSet(class UINSSkeletalMeshComponent* NewMesh);
	class UPlayerInventoryComponent* GetOwnerInventory();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitPreviewWeapon
// 0x0040 (FullSize[0x0280] - InheritedSize[0x0240])
class AKitPreviewWeapon : public AKitPreviewActor
{
public:
	class UClass*                                      WeaponAnimClass;                                           // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemBase*                                   SpawnedItem;                                               // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemSlot                                          CurrentItemSlot;                                           // 0x0250(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5OPJ[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentItemSubSlot;                                        // 0x0254(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStoredInventoryItem                        CurrentWeapon;                                             // 0x0258(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnViewedWeaponSlotUpdated;                                 // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitPreviewWeapon");
		return ptr;
	}



	void UpdateWeaponModel(const struct FStoredInventoryItem& Item);
	void UpdateViewedWeaponSlot(EItemSlot Slot, int SubSlot, bool bForceRefresh);
	void RemoveWeapon();
	void OnViewedWeaponSlotUpdated__DelegateSignature();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KitPreviewCharacter
// 0x0038 (FullSize[0x0278] - InheritedSize[0x0240])
class AKitPreviewCharacter : public AKitPreviewActor
{
public:
	class UCapsuleComponent*                           PreviewCapsuleComponent;                                   // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AProfileCharacter*                           SpawnedCharacter;                                          // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCharacterCosmeticsAllowed;                                // 0x0250(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3G29[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CharacterAnimClass;                                        // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemBase*                                   PrimaryWeapon;                                             // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AItemBase*>                           OtherItems;                                                // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KitPreviewCharacter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KillerInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKillerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KillerInterface");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.TraumaAchievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTraumaAchievement : public USandstormAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.TraumaAchievement");
		return ptr;
	}



	void OnDismemberRagdoll(class ARagdoll* Ragdoll, class AController* Controller);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KillAchievement
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKillAchievement : public USandstormAchievement
{
public:
	unsigned char                                      UnknownData_VJMF[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KillAchievement");
		return ptr;
	}



	void OnRecievedKill(const struct FSoldierKillInfo& SoldierKillInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BangedAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBangedAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BangedAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BlindFireAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBlindFireAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BlindFireAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.LuckyAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class ULuckyAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.LuckyAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ExploitativeAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UExploitativeAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ExploitativeAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CinematicAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UCinematicAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CinematicAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RuthlessAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class URuthlessAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RuthlessAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RoadHazardAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class URoadHazardAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RoadHazardAchievement");
		return ptr;
	}



	void OnRecievedVehicleKill(const struct FSoldierKillInfo& SoldierKillInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.JR50Achievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UJR50Achievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.JR50Achievement");
		return ptr;
	}



	void OnRecievedVehicleKill(const struct FSoldierKillInfo& SoldierKillInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ThanksStationAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UThanksStationAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ThanksStationAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WallbangerAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UWallbangerAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WallbangerAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HSLDAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UHSLDAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HSLDAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItsAllInTheReflxesAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UItsAllInTheReflxesAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItsAllInTheReflxesAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EfficientAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UEfficientAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EfficientAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ShotgunShotgunAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UShotgunShotgunAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ShotgunShotgunAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KnockKnockAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UKnockKnockAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KnockKnockAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.MountAndGunAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UMountAndGunAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.MountAndGunAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PointShootingAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UPointShootingAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PointShootingAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HitAndRunAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UHitAndRunAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HitAndRunAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.PersonalAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UPersonalAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.PersonalAchievement");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GroundedAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UGroundedAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GroundedAchievement");
		return ptr;
	}



	void OnDownedFireSupport(class AINSPlayerController* Killer);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FlaccidParalysisAchievement
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UFlaccidParalysisAchievement : public UKillAchievement
{
public:
	unsigned char                                      UnknownData_8BG0[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FlaccidParalysisAchievement");
		return ptr;
	}



	void OnOwningSoldierKilled();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FirstBloodAchievement
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFirstBloodAchievement : public UKillAchievement
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FirstBloodAchievement");
		return ptr;
	}



	void OnRecievedFirstBlood(class AINSPlayerController* Killer);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KeyIconWidget
// 0x0310 (FullSize[0x0418] - InheritedSize[0x0108])
class UKeyIconWidget : public UWidget
{
public:
	struct FLessonInputAction                          Input;                                                     // 0x0108(0x0070) (Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                               bVisibleToKeyboard;                                        // 0x0178(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVisibleToGamepad;                                         // 0x0179(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D78I[0x6];                                     // 0x017A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 FallbackBrush;                                             // 0x0180(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 FallbackOuterBrush;                                        // 0x0208(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                              FallbackFont;                                              // 0x0290(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                     FallbackPadding;                                           // 0x02E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                FallbackBackgroundColor;                                   // 0x02F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                        FallbackKey;                                               // 0x0300(0x0018) (Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       UnboundText;                                               // 0x0318(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bShowWhenUnbound;                                          // 0x0330(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D9EW[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKey                                        IconKey;                                                   // 0x0338(0x0018) (BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGamepadIcon;                                              // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOwnerUsingGamepad;                                        // 0x0351(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsingImage;                                               // 0x0352(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisplayingFallbackKey;                                    // 0x0353(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D3VM[0xC4];                                    // 0x0354(0x00C4) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KeyIconWidget");
		return ptr;
	}



	void UpdateAction(const struct FLessonInputAction& NewAction);
	bool SetKey(const struct FKey& InKey);
	void SetFallbackKey(const struct FKey& InFallbackKey);
	void RebuildKeyIcon();
	void OnUsingControllerUpdated(bool bUsingController, EeInputIconType NewIconType);
	void OnSettingsUpdated();
	bool IsUsingGamepad();
	class UTexture2D* GetTextureForKey(const struct FKey& InKey);
	class UTexture2D* GetTextureForInput();
	struct FKey GetKeyForInput(bool bIsUsingGamepad);
	EeInputIconType GetInputIconType();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KeyIconSettings
// 0x0250 (FullSize[0x0288] - InheritedSize[0x0038])
class UKeyIconSettings : public UDeveloperSettings
{
public:
	unsigned char                                      UnknownData_H7KJ[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      KeyIconsPC[0x28];                                          // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      KeyIconsPS4[0x28];                                         // 0x0088(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      KeyIconsX1[0x28];                                          // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UKeyIconImageData*                           LoadedKeyIconsPC;                                          // 0x00D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKeyIconImageData*                           LoadedKeyIconsPS4;                                         // 0x00E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKeyIconImageData*                           LoadedKeyIconsX1;                                          // 0x00E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       UnboundText;                                               // 0x00F0(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 FallbackBrush;                                             // 0x0108(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 FallbackOuterBrush;                                        // 0x0190(0x0088) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                              FallbackFont;                                              // 0x0218(0x0050) (Edit, BlueprintVisible, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                     FallbackPadding;                                           // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                FallbackBackgroundColor;                                   // 0x0278(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KeyIconSettings");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KeyIconImageData
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UKeyIconImageData : public UDataAsset
{
public:
	TMap<struct FKey, class UTexture2D*>               KeyToTextureMap;                                           // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KeyIconImageData");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KeyHintDecorator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKeyHintDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KeyHintDecorator");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.KeyBindingsMenu
// 0x0020 (FullSize[0x0258] - InheritedSize[0x0238])
class UKeyBindingsMenu : public UOptionsMenu
{
public:
	TArray<struct FKeyBindingSection>                  KeyBindingSections;                                        // 0x0238(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RefreshAllKeysDelegate;                                    // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.KeyBindingsMenu");
		return ptr;
	}



	void UpdateKeyBindings();
	void UpdateKeyBinding(const struct FKeyBindingOption& Binding, const struct FInputChord& NewInput);
	void SaveKeyMappings();
	void ResetBindingsToDefaults();
	void RemoveAllMappingsFromKeyWithExemptions(const struct FKey& Key, TArray<struct FName> ExemptActions);
	void RemoveAllMappingsFromKey(const struct FKey& Key);
	void RemoveActionMapping(struct FInputActionKeyMapping* KeyMapping);
	void RefreshAllKeysDelegate__DelegateSignature();
	void RefreshAllKeys();
	bool HasKeyConflict(const struct FKeyBindingOption& Binding, const struct FKey& TestKey, struct FName* OutConflictingAction);
	void GetLocalizedActionName(const struct FName& Action, struct FText* OutLocalized);
	TMap<struct FName, struct FActionMapList> GetActionMappings();
	void ApplyDirtyKeyBindings();
	void AddActionMapping(struct FInputActionKeyMapping* KeyMapping);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemStripper
// 0x0060 (FullSize[0x02B8] - InheritedSize[0x0258])
class AItemStripper : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData_67SH[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStartEnabled;                                             // 0x0260(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnabled;                                                  // 0x0261(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceRemoval;                                             // 0x0262(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5WS7[0x5];                                     // 0x0263(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      IgnoreItemSlots[0x50];                                     // 0x0268(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemStripper");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemBase
// 0x09B0 (FullSize[0x0BD0] - InheritedSize[0x0220])
class AItemBase : public AActor
{
public:
	unsigned char                                      UnknownData_4FI9[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EItemSlot                                          ItemSlot;                                                  // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsumesCapacity;                                         // 0x0231(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I7VF[0x2];                                     // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                EquipLimit;                                                // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRestrictSubSlot;                                          // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T77X[0x3];                                     // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MinSubSlot;                                                // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSubSlot;                                                // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreviewActor;                                             // 0x0244(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OZL7[0x3];                                     // 0x0245(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AProfileCharacter*                           PreviewPawn;                                               // 0x0248(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ItemName;                                                  // 0x0250(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ItemDescription;                                           // 0x0268(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FItemIcons                                  ItemIcons;                                                 // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FLessonInputAction>                  Actions;                                                   // 0x0290(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDropped;                                                // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1U4Z[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastDropTime;                                              // 0x02A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_CheckPhysicsSleep;                             // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSSoldier*                                 PawnOwner;                                                 // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AINSSoldier>                  PreviousOwner;                                             // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                           LocalPlayerController;                                     // 0x02C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDrop;                                                  // 0x02C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartDropped;                                             // 0x02C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DYF2[0x2];                                     // 0x02CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Weight;                                                    // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BaseSupplyCost;                                            // 0x02D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XCYR[0x4];                                     // 0x02D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SkeletalMesh3P[0x28];                                      // 0x02D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FScriptMulticastDelegate                    OnMesh3PLoadedDelegate;                                    // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   Mesh3P;                                                    // 0x0310(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldAttachedToThirdPersonMesh;                          // 0x0318(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMeshUseMasterPoseComponent;                               // 0x0319(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DO4Z[0x6];                                     // 0x031A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      RequiredAudioBanks[0x50];                                  // 0x0320(0x0050) UNKNOWN PROPERTY: SetProperty
	class USurfaceReaction*                            CollisionSurfaceReaction;                                  // 0x0370(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CollisionEventMinSpeed;                                    // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CollisionEventMaxSpeed;                                    // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastCollisionEvent;                                        // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CollisionEventMinTimeBetween;                              // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2FAH[0x48];                                    // 0x0388(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimationRotation;                                         // 0x03D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GL1S[0x4];                                     // 0x03D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterAnim                              ThirdPersonCharacterAnimsNative;                           // 0x03D8(0x07F8) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemBase");
		return ptr;
	}



	void ReattachMasterPosedChildMeshes(class USkinnedMeshComponent* NewParent);
	void PlaySoundEventPairOnOwner(struct FAkComponentCameraPair* AudioEvent);
	void PlaySoundEventOnOwnerFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
	void PlaySoundEventOnOwner(class UAkAudioEvent* Event, bool bThirdPerson);
	void OnSpawnedPreviewActor(bool bFirstPerson, class UPlayerInventoryComponent* PlayerInventory);
	void OnRep_PawnOwner();
	void MigrateStructsToNative();
	bool IsOwnerLocallyControlled();
	float GetWeight();
	EItemSlot GetRepresentativeItemSlot();
	class USkeletalMeshComponent* GetOwnerMesh3P();
	class UINSSkeletalMeshComponent* GetMesh3P();
	float GetDroppedLifeSpan();
	bool DropItem();
	void DetachMeshFromPawn();
	bool ConsumesSlotCapacity();
	void CheckPhysicsSleep();
	bool CanShowCosmeticEffects();
	bool CanBeDropped();
	void BlueprintSpawnedPreviewActor(bool bFirstPerson, class UPlayerInventoryComponent* PlayerInventory);
	void BlueprintPreItemRemovedFromInventory();
	void BlueprintPostItemRemovedFromInventory(class AINSSoldier* PreviousOwnerPawn);
	void BlueprintOnPickedUp();
	void BlueprintOnDropped();
	void BlueprintOnDetachMeshFromPawn(class UINSSkeletalMeshComponent* Mesh);
	void BlueprintOnDeath();
	void BlueprintOnAttachMeshToPawn(class UINSSkeletalMeshComponent* Mesh);
	void BlueprintCalcOwnerCamera(float DeltaTime, struct FMinimalViewInfo* OutResult);
	void AttachMeshToPawn();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemEquipable
// 0x0EB8 (FullSize[0x1A88] - InheritedSize[0x0BD0])
class AItemEquipable : public AItemBase
{
public:
	unsigned char                                      UnknownData_5W8J[0x10];                                    // 0x0BD0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EUsablePriority                                    UsePriority;                                               // 0x0BE0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanPickup;                                                // 0x0BE1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6DT6[0x6];                                     // 0x0BE2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    ItemEquipDelegate;                                         // 0x0BE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bPreviouslyEquipped;                                       // 0x0BF8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DRR8[0x7];                                     // 0x0BF9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    ItemUnequipDelegate;                                       // 0x0C00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bUseCustomBackAttach;                                      // 0x0C10(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RKCF[0x3];                                     // 0x0C11(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       UnequippedAttachmentSocket;                                // 0x0C14(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCachedAnimTimes;                                          // 0x0C1C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AQLG[0x3];                                     // 0x0C1D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EquipDuration;                                             // 0x0C20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstEquipDuration;                                        // 0x0C24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsFirstEquip;                                          // 0x0C28(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IDCF[0x3];                                     // 0x0C29(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnderbarrelTransitionDuration;                             // 0x0C2C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnequipDuration;                                           // 0x0C30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowUseInVehicle;                                        // 0x0C34(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CI4I[0xB];                                     // 0x0C35(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EEquipableState                                    EquipableState;                                            // 0x0C40(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipableState                                    SimulatedEquipableState;                                   // 0x0C41(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YD1Q[0x6];                                     // 0x0C42(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAudioComponent*                          WeaponAudioComponent;                                      // 0x0C48(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLocalRTPCState;                                           // 0x0C50(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3L4Q[0x7];                                     // 0x0C51(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMesh1PLoadedDelegate;                                    // 0x0C58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      SkeletalMesh1P[0x28];                                      // 0x0C68(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UINSSkeletalMeshComponent*                   Mesh1P;                                                    // 0x0C90(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPickedUp;                                                 // 0x0C98(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z55U[0x3];                                     // 0x0C99(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FreeaimSensitivity;                                        // 0x0C9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeaimDistance;                                           // 0x0CA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeaimScreenWeaponRatio;                                  // 0x0CA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GamepadFreeaimSensitivity;                                 // 0x0CA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GamepadFreeaimDistance;                                    // 0x0CAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GamepadFreeaimScreenWeaponRatio;                           // 0x0CB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T2OV[0x4];                                     // 0x0CB4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFirstPersonAnims                           FirstPersonAnimations;                                     // 0x0CB8(0x09F8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FThirdPersonAnims                           ThirdPersonAnimations;                                     // 0x16B0(0x03B8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bAllowVaultingFire;                                        // 0x1A68(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowVaultingMelee;                                       // 0x1A69(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_66HS[0x2];                                     // 0x1A6A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ItemPickupTime;                                            // 0x1A6C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ItemPickupUIIcon;                                          // 0x1A70(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ItemScavengeUIIcon;                                        // 0x1A78(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReleaseFireOnOpenRadialMenu;                              // 0x1A80(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceWeaponAudioComponentAlwaysActive;                    // 0x1A81(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C4HZ[0x6];                                     // 0x1A82(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemEquipable");
		return ptr;
	}



	void UpdateLocalRTPC();
	bool ShouldShowItemsOnBack();
	bool ShouldPlayFirstEquip();
	void SetWeaponRTPC(const struct FString& RTPCName, float Value);
	void SetEquipableState(EEquipableState NewState);
	int PlaySoundEventPair(struct FAkComponentCameraPair* AudioEvent);
	int PlaySoundEventFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
	int PlaySoundEvent(class UAkAudioEvent* Event, bool bApplySpeedOfSound);
	void OnRep_EquipableState();
	void ItemUnequipDelegate__DelegateSignature(bool bInstant, class AItemEquipable* SwitchingTo);
	void ItemEquipDelegate__DelegateSignature(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip);
	bool IsViewTarget();
	bool IsUnequippingOrUnequipped();
	bool IsUnequipping();
	bool IsUnequipped();
	bool IsOwnerUsingGamepad();
	bool IsMeshVisibleWhenUnequipped();
	bool IsFreeaimEnabled();
	bool IsFirstPersonViewTarget();
	bool IsEquippingOrEquipped();
	bool IsEquipping();
	bool IsEquippedOrNearlyEquipped(float Tolerance);
	bool IsEquipped();
	bool IsAIControlled();
	float GetUnequipDurationModifier(bool bSwitchingFrom);
	class AINSSoldier* GetOwningPawn();
	class UINSSkeletalMeshComponent* GetMesh1P();
	float GetFreeaimFraction();
	float GetEquipDurationModifier(bool bSwitchingFrom);
	EEquipableState GetEquipableState();
	class AController* GetController();
	void ClientCancelUnequip();
	void ClientCancelEquip();
	bool CanEquipBlueprint();
	void BlueprintOnUpdateFirstPersonVisibility(bool bFirstPersonVisibile);
	void BlueprintOnUnequipped();
	void BlueprintOnUnequip();
	void BlueprintOnEquipped();
	void BlueprintOnEquip();
	void BlueprintOnAttachToBack(class UINSSkeletalMeshComponent* Mesh);
	void AttachMeshToBack();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemWeapon
// 0x02F8 (FullSize[0x1D80] - InheritedSize[0x1A88])
class AItemWeapon : public AItemEquipable
{
public:
	unsigned char                                      UnknownData_AVJ1[0x10];                                    // 0x1A88(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnUpgradeMesh1PLoadedDelegate;                             // 0x1A98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpgradeAllMeshes1PLoadedDelegate;                        // 0x1AA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpgradeMesh3PLoadedDelegate;                             // 0x1AB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpgradeAllMeshes3PLoadedDelegate;                        // 0x1AC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U3GY[0x18];                                    // 0x1AD8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWeaponFallbackModel>                FallbackModels1P;                                          // 0x1AF0(0x0010) (Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFallbackModel>                FallbackModels3P;                                          // 0x1B00(0x0010) (Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpgradeInstalledDelegate;                                // 0x1B10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpgradeRemovedDelegate;                                  // 0x1B20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<EWeaponUpgradeSlot, class UWeaponUpgradeComponent*> EquippedUpgrades;                                          // 0x1B30(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UpgradeTags[0x50];                                         // 0x1B80(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<class UClass*>                              IntegratedUpgrades;                                        // 0x1BD0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAttach;                                                // 0x1BE0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IKH9[0x7];                                     // 0x1BE1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AttachUsing;                                               // 0x1BE8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemWeapon*                                 AttachedParent;                                            // 0x1BF0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMuzzleAttachment;                                      // 0x1BF8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMuzzleComponentAttached;                                  // 0x1BF9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0BFF[0x2];                                     // 0x1BFA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptDelegate                             OverrideShotOrigin;                                        // 0x1BFC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OverrideShotDirection;                                     // 0x1C0C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PWPE[0x4];                                     // 0x1C1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              AcceptedAmmo;                                              // 0x1C20(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisposableWeapon;                                         // 0x1C30(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V0WP[0x7];                                     // 0x1C31(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DefaultAmmoContainer;                                      // 0x1C38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundCapacity;                                             // 0x1C40(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSinglyLoaded;                                             // 0x1C44(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSinglyLoadedOnEmpty;                                      // 0x1C45(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpeedReloadUsesMagazineReloads;                           // 0x1C46(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDumpAmmoOnReload;                                         // 0x1C47(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClosedBolt;                                               // 0x1C48(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBeltFed;                                                  // 0x1C49(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInfiniteAmmo;                                             // 0x1C4A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveOnEmpty;                                            // 0x1C4B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZQIG[0x4];                                     // 0x1C4C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      LoadedAmmoContainer;                                       // 0x1C50(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  CachedMaterials;                                           // 0x1C58(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ALF4[0x10];                                    // 0x1C68(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PendingAmmoContainer;                                      // 0x1C78(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      VisibleAmmoContainer[0x28];                                // 0x1C80(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UINSSkeletalMeshComponent*                   AmmoMesh1P;                                                // 0x1CA8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   AmmoMesh3P;                                                // 0x1CB0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultAmmoType;                                           // 0x1CB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LoadedAmmoType;                                            // 0x1CC0(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LoadedAmmo;                                                // 0x1CC8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SimulatedLoadedAmmo;                                       // 0x1CCC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6BPI[0x2];                                     // 0x1CD0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bChamberedRound;                                           // 0x1CD2(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSimulatedChamberedRound;                                  // 0x1CD3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowMelee;                                               // 0x1CD4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowMeleeProne;                                          // 0x1CD5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BC56[0x2];                                     // 0x1CD6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMeleeConfig                                GenericMeleeConfig;                                        // 0x1CD8(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bInGenericMeleeAttack;                                     // 0x1D18(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YHMI[0x3];                                     // 0x1D19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GenericMeleeAttackRemainingTime;                           // 0x1D1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBash;                                                   // 0x1D20(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VO55[0x7];                                     // 0x1D21(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_GenericMeleeAttackDelay;                       // 0x1D28(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>                 GenericMeleeAffectedComponents;                            // 0x1D30(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGenericMeleeAttackDelegate;                              // 0x1D40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              NextGenericMeleeAttack;                                    // 0x1D50(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveOnDeath;                                            // 0x1D54(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0CCQ[0x3];                                     // 0x1D55(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BarrelSocketName;                                          // 0x1D58(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSingleHanded;                                             // 0x1D60(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDriverWield;                                           // 0x1D61(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreRestrictedAreaGraceTime;                            // 0x1D62(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMountedShootVectorsUseLocation;                           // 0x1D63(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFromFireSupport;                                          // 0x1D64(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OCEJ[0x3];                                     // 0x1D65(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             MountedComponent;                                          // 0x1D68(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_83BE[0x8];                                     // 0x1D70(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMeleeCharging;                                            // 0x1D78(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VAY6[0x7];                                     // 0x1D79(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemWeapon");
		return ptr;
	}



	void WeaponUpgradeRemovedDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade);
	void WeaponUpgradeInstalledDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade);
	bool UsesReloadSequences();
	bool UsesMagazineReloads();
	void UpdateVisibleAmmoContainerToDefault(bool bForceFirstPerson);
	void UpdateVisibleAmmoContainerForMeshes(class UClass* NewContainer, class USkeletalMeshComponent* ParentMesh1P, bool bForce1P, class USkeletalMeshComponent* ParentMesh3P, bool bForce3P);
	void UpdateVisibleAmmoContainerForMesh(class UClass* NewContainer, class USkeletalMeshComponent* ParentMesh, bool bFirstPerson, bool bForce);
	void UpdateVisibleAmmoContainer(class UClass* NewContainer, bool bForceFirstPerson, bool bForceThirdPerson);
	void UpdateUpgradeFallbackThirdPersonMeshes();
	void UpdateUpgradeFallbackFirstPersonMeshes(class USkeletalMeshComponent* ParentSkeletalMesh);
	void UpdateLoadedAmmo(int NewLoadedAmmo);
	class UWeaponUpgradeComponent* SpawnWeaponUpgrade(class UClass* UpgradeClass);
	bool ShouldRemoveOnUnequip();
	void SetChamberedRound(bool bNewChamberedRound);
	void ServerInformGenericMeleeHit(const struct FHitResult& Hit);
	void ServerDoGenericMeleeAttack();
	void ServerCheckEmpty();
	void Server_OnMeleeChargeEnd();
	void Server_OnMeleeChargeBegin();
	void RemoveFirstPersonUpgradeMeshes();
	void RemoveFirstPersonAttachedMeshes();
	void ReloadLoadAmmo();
	void PullBolt();
	class UClass* PeekPendingAmmoContainer();
	void OnRep_PendingAmmoContainer();
	void OnRep_MountedComponent();
	void OnRep_MeleeCharging();
	void OnRep_LoadedAmmoContainer();
	void OnRep_LoadedAmmo();
	void OnRep_ChamberedRound();
	void OnRep_AttachedParent();
	void OnGenericMeleeAttackDelegate__DelegateSignature(bool bBash);
	void OnAmmoUpdated();
	bool NeedsBoltPull();
	void MountWeaponOnComponent(class USceneComponent* Component, const struct FName& SocketName);
	int MagazineCapacity();
	void LoadAmmo();
	bool IsWeaponFull();
	bool IsWeaponAttachedTo(class AItemWeapon* Other);
	bool IsSingleReload();
	bool IsOpenBolt();
	bool IsMounted();
	bool IsAttackRestricted();
	bool IsAttached();
	bool IsAtLargestMagazine();
	bool IsAmmoContainerSupported(class UClass* AmmoType);
	void InteractUpgradeSlot(EWeaponUpgradeSlot Slot);
	bool InGenericMeleeAttack();
	void IncrementLoadedAmmo(int AddedAmmo);
	bool HasVisibleMagazine();
	bool HasUpgradeWithTag(const struct FName& Tag);
	bool HasUpgradeInSlot(EWeaponUpgradeSlot Slot);
	bool HasRoundInChamber();
	bool HasLoadedAmmo();
	bool HasAttachedMagazine();
	void GiveDefaultAmmo();
	class UWeaponUpgradeComponent* GetUpgradeInSlot(EWeaponUpgradeSlot Slot);
	int GetReserveAmmo();
	class UAmmoContainer* GetPendingAmmoContainer();
	int GetNextMagazineSize();
	class USceneComponent* GetMountedComponent();
	class UAmmoType* GetLoadedAmmoType();
	float GetLoadedAmmoFrac();
	class UAmmoContainer* GetLoadedAmmoContainer();
	int GetLoadedAmmo();
	int GetLargestMagazine();
	int GetEquippedUpgradeSlotsMask();
	class UClass* GetDefaultAmmoType();
	class UClass* GetDefaultAmmoContainerType();
	int GetCompatibleAmmo(TArray<struct FStoredAmmo> Ammo);
	void GenericMeleeAttack();
	void EquipMountedWeapon(class AINSCharacter* Character);
	void DoGenericMeleeAttack();
	void DestroyVisibleAmmoContainerMesh(bool bFirstPerson);
	void DecrementAmmo(int Amount);
	bool ConsumesAmmo();
	void CheckEmpty();
	void ChamberRound();
	bool CanGenericMeleeAttack();
	void CalcShotOriginDelegate__DelegateSignature(struct FVector* OutShotOrigin);
	void CalcShotDirectionDelegate__DelegateSignature(struct FVector* OutShotDirection);
	void CalcShootVectors(struct FVector* OutShootPosition, struct FVector* OutShootDirection);
	void CalcShootOffset(struct FVector* Location, struct FRotator* Rotation);
	void BroadcastGenericMeleeHit(const struct FHitResult& Hit);
	void BroadcastDoGenericMeleeAttack();
	void BlueprintOnUpdateVisibleAmmoContainer(bool bVisible);
	void BeginGenericMeleeAttack();
	void AddChildMesh(struct FWeaponAttachedModel* AttachedModel, class USkeletalMeshComponent* ParentMeshComponent, bool bIsFirstPerson);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemAimableWeapon
// 0x01F0 (FullSize[0x1F70] - InheritedSize[0x1D80])
class AItemAimableWeapon : public AItemWeapon
{
public:
	bool                                               bAllowEnterPointShootMode;                                 // 0x1D80(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAimingDownSights;                                         // 0x1D81(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bQueuedAimingDownSights;                                   // 0x1D82(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasScope;                                                 // 0x1D83(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasOptic;                                                 // 0x1D84(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowAimDownSights;                                       // 0x1D85(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ENCZ[0x2];                                     // 0x1D86(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimDownSightsTime;                                         // 0x1D88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimDownSightsFOV;                                          // 0x1D8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAimDownSightsFOVAbsolute;                                 // 0x1D90(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSmoothAimDownSightsFOV;                                   // 0x1D91(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMeshFullyZoomed;                                      // 0x1D92(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V7DN[0x1];                                     // 0x1D93(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimDownSightsViewModelFOV;                                 // 0x1D94(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimDownSightsViewModelFocusFOV;                            // 0x1D98(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimDownSightsViewModelDistance;                            // 0x1D9C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimDownSightsViewModelAngle;                               // 0x1DA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseParentSight;                                           // 0x1DA4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0TPO[0x1B];                                    // 0x1DA5(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      EnterADSThirdPerson[0x28];                                 // 0x1DC0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ExitADSThirdPerson[0x28];                                  // 0x1DE8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      EnterADSFirstPerson[0x28];                                 // 0x1E10(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ExitADSFirstPerson[0x28];                                  // 0x1E38(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FRuntimeFloatCurve                          AimDownSightsSpeedByWeight;                                // 0x1E60(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          SprintAimDownSightsSpeedByWeight;                          // 0x1EE8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemAimableWeapon");
		return ptr;
	}



	void ToggleSights();
	bool ShouldEnterPointShootMode();
	void SetSights(bool bNewAimingDownSights, bool bFromReplication);
	void ServerSetSights(bool bNewAimingDownSights);
	void OnRep_AimingDownSights();
	bool IsRaisingOrLoweringSights();
	bool IsFullySighted();
	bool IsAimingDownSights();
	bool IsAimingDownScope();
	float GetZoomProgress();
	float GetCachedSightsFraction();
	void ExitSights();
	void EnterSights();
	bool CanAimDownSights();
	float CalcSightsFraction();
	void BlueprintOnToggleSights(bool bNewAimingDownSights, bool bFromReplication);
	bool AllowSightsChange();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemFirearm
// 0x22A0 (FullSize[0x4210] - InheritedSize[0x1F70])
class AItemFirearm : public AItemAimableWeapon
{
public:
	struct FFirearmAnimsGroup                          FirstPersonFirearmAnims;                                   // 0x1F70(0x0DE0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCharacterAnimFirearm                       ThirdPersonFirearmAnimsNative;                             // 0x2D50(0x0598) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PTO6[0x8];                                     // 0x32E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCachedFirearmAnimationData                 CachedFirearmAnimationData;                                // 0x32F0(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	EFirearmBoltState                                  BoltState;                                                 // 0x33F0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirearmBoltState                                  SimulatedBoltState;                                        // 0x33F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z4V8[0x2];                                     // 0x33F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedBoltFinishTime;                                      // 0x33F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CachedBoltCycledTime;                                      // 0x33F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EJQD[0x4];                                     // 0x33FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UForceFeedbackEffect*                        ForceFeedbackShot;                                         // 0x3400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoLockOnTraceDistance;                                   // 0x3408(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ConsecutiveShots;                                          // 0x340C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirearmCategory                                   FirearmCategory;                                           // 0x3410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A648[0x7];                                     // 0x3411(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFirearmConfig                              WeaponConfig;                                              // 0x3418(0x0768) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HFIO[0xC];                                     // 0x3B80(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bTriggerPullPending;                                       // 0x3B8C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F58N[0x3];                                     // 0x3B8D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BarrelLengthObstruction;                                   // 0x3B90(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBarrelLengthObstructionCheckTime;                      // 0x3B94(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBarrelObstructedByPawn;                                   // 0x3B98(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bQueuedReload;                                             // 0x3B99(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YQN2[0x2];                                     // 0x3B9A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              QueuedReloadTime;                                          // 0x3B9C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeHeldToStartAmmoCheck;                                  // 0x3BA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ActiveAmmoParticleIndex;                                   // 0x3BA4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ActiveAmmoContainerParticleIndex;                          // 0x3BA8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UMKJ[0x4];                                     // 0x3BAC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UParticleSystemComponent*>            SpawnedBrasses;                                            // 0x3BB0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>            SpawnedShotEjectionBrass;                                  // 0x3BC0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    FlashParticle;                                             // 0x3BD0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    ShellParticle;                                             // 0x3BD8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaxSpawnBrassCount;                                        // 0x3BE0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_42NW[0x4];                                     // 0x3BE4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BrassParticle;                                             // 0x3BE8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             EjectionBrassParticle;                                     // 0x3BF0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>                     BrassParticlesSystem;                                      // 0x3BF8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>                     EjectionBrassParticleParticlesSystem;                      // 0x3C08(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     MuzzleSmoke;                                               // 0x3C18(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MuzzleSmokeEffect[0x28];                                   // 0x3C20(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              MuzzleSmokeStartTime;                                      // 0x3C48(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleSmokeTimeLeft;                                       // 0x3C4C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleSmokeFadeInTime;                                     // 0x3C50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleSmokeMinDuration;                                    // 0x3C54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleSmokeMaxDuration;                                    // 0x3C58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleSmokeTimeIncrementPerShot;                           // 0x3C5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MuzzleSmokeFadeParameterName;                              // 0x3C60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MuzzleFlashEffects[0x10];                                  // 0x3C68(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      MuzzleFlashEffectsTP[0x10];                                // 0x3C78(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      NightMuzzleFlashEffects[0x10];                             // 0x3C88(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      NightMuzzleFlashEffectsTP[0x10];                           // 0x3C98(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FName                                       MuzzleSocketName;                                          // 0x3CA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MagazineSocketName;                                        // 0x3CB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            DustKickupSurfaceReaction;                                 // 0x3CB8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOwnerKilledWhileReloading;                                // 0x3CC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q3O2[0x3];                                     // 0x3CC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptDelegate                             AllowFireDelegate;                                         // 0x3CC4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             AllowNextShotDelegate;                                     // 0x3CD4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8HBA[0x4];                                     // 0x3CE4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnFireDelegate;                                            // 0x3CE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDryFireDelegate;                                         // 0x3CF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFireStartDelegate;                                       // 0x3D08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFireStopDelegate;                                        // 0x3D18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCycleFiremodeDelegate;                                   // 0x3D28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadDelegate;                                          // 0x3D38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpeedReloadDelegate;                                     // 0x3D48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadInterruptDelegate;                                 // 0x3D58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBoltCycleDelegate;                                       // 0x3D68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMagOutDelegate;                                          // 0x3D78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMagInDelegate;                                           // 0x3D88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAmmoCheckDelegate;                                       // 0x3D98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              SprayAmount;                                               // 0x3DA8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprayAmountIncrement;                                      // 0x3DAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprayAmountCooldown;                                       // 0x3DB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFireEnabled;                                              // 0x3DB4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFirearmFiremode                                   CycleStartFireMode;                                        // 0x3DB5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFirearmFiremode                                   CurrentFireMode;                                           // 0x3DB6(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1WF3[0x1];                                     // 0x3DB7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FiremodeBurstRemainder;                                    // 0x3DB8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastBurstSize;                                             // 0x3DBC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireStartTime;                                             // 0x3DC0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastFireTime;                                              // 0x3DC4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWaitingForDelayedProjectile;                              // 0x3DC8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AA9E[0x3];                                     // 0x3DC9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastFiremodeCycleTime;                                     // 0x3DCC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPullingTrigger;                                           // 0x3DD0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPendingFire;                                              // 0x3DD1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R4PR[0x2];                                     // 0x3DD2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RefireTime;                                                // 0x3DD4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireAnimationEndTime;                                      // 0x3DD8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInInitialDelay;                                           // 0x3DDC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RSHW[0x1B];                                    // 0x3DDD(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AkEventFire[0x28];                                         // 0x3DF8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFire1P[0x28];                                       // 0x3E20(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFire3P[0x28];                                       // 0x3E48(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFireStart[0x28];                                    // 0x3E70(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFireStart1P[0x28];                                  // 0x3E98(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFireStart3P[0x28];                                  // 0x3EC0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventTriggerPull[0x28];                                  // 0x3EE8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventTriggerPull1P[0x28];                                // 0x3F10(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventTriggerPull3P[0x28];                                // 0x3F38(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFireEnd[0x28];                                      // 0x3F60(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFireEnd1P[0x28];                                    // 0x3F88(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventFirstEnd3P[0x28];                                   // 0x3FB0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bPlayEjectAfterFiringLast;                                 // 0x3FD8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BVH3[0x3];                                     // 0x3FD9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayEjectAfterFiringLastDelay;                             // 0x3FDC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AkEventEjectLast1P[0x28];                                  // 0x3FE0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AkEventEjectLast3P[0x28];                                  // 0x4008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FTimerHandle                                TimerHandle_DelayedFiringAudio;                            // 0x4030(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayRocketAlertOnFire;                                    // 0x4038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstShotTapEvent;                                        // 0x4039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSpeedOfSoundWhenFiring;                                // 0x403A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingLoopingAudio;                                      // 0x403B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingLoopingAudio1P;                                    // 0x403C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingLoopingAudio3P;                                    // 0x403D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T81K[0x2];                                     // 0x403E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastStartFireTimeSeconds;                                  // 0x4040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastStartFireTimeFrac;                                     // 0x4044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasPlayedTriggerHoldYell;                                 // 0x4048(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8PAO[0x7];                                     // 0x4049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ShellEjectParticle[0x28];                                  // 0x4050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FName                                       ShellEjectSocketName;                                      // 0x4078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bManualShellEject;                                         // 0x4080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowFocusWhileMoving;                                    // 0x4081(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirearmState                                      FirearmState;                                              // 0x4082(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirearmState                                      SimulatedFirearmState;                                     // 0x4083(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPendingReload;                                            // 0x4084(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JFSV[0x3];                                     // 0x4085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PendingReloadTimeout;                                      // 0x4088(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadStartTime;                                           // 0x408C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPendingAmmoUpdate;                                        // 0x4090(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPendingAmmoEject;                                         // 0x4091(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BD1V[0x2];                                     // 0x4092(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedReloadFinishTime;                                    // 0x4094(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedReloadEjectTime;                                     // 0x4098(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedReloadInsertTime;                                    // 0x409C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedReloadChamberTime;                                   // 0x40A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastReloadInterruptTime;                                   // 0x40A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AmmoCheckFinishTime;                                       // 0x40A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStartedAmmoCheck;                                         // 0x40AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N7KP[0x3];                                     // 0x40AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FReloadTimesGroup                           DefaultReloadTimes;                                        // 0x40B0(0x00E0) (Edit, BlueprintVisible, DisableEditOnInstance, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FReloadTimesGroup>      ReloadTimesByContainer;                                    // 0x4190(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	float                                              EquipRoundChamberDuration;                                 // 0x41E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipRoundChamberTime;                                     // 0x41E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSpeedReloadFinishTime;                                 // 0x41E8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBipodTimesGroup                            CachedBipodTimes;                                          // 0x41EC(0x0010) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                              VaultingRecoilPenalty;                                     // 0x41FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PendingEjectedContainer;                                   // 0x4200(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9O9G[0x8];                                     // 0x4208(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemFirearm");
		return ptr;
	}



	bool SupportsSpeedReload();
	void StartReload(bool bReloadIfFull, bool bFromClientReplication);
	void StartAmmoCheck(bool bFromClientReplication);
	bool ShouldSingleReload();
	bool ShouldFireTracerRound();
	bool ShouldDryReload();
	void SetFiremode(EFirearmFiremode NewFiremode);
	void SetFireEnabled(bool bNewFireEnabled);
	void SetBoltState(EFirearmBoltState NewBoltState);
	void ServerStartSpeedReload();
	void ServerStartReload();
	void ServerStartAmmoCheck();
	void ServerSetFiringState(bool bNewIsFiring);
	void ServerInterruptReload();
	void ServerFireWeapon(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& Direction, int RandomSeed, float Timestamp, int ClientBulletId);
	void ServerDryFire();
	void ServerDelayedFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir, int RandomSeed, float ClientTimestamp, int ClientBulletId);
	void ServerCycleFiremode(EFirearmFiremode Firemode);
	void ServerBeginBoltCycle();
	bool ReleaseTrigger();
	bool PullTrigger();
	void PlayEjectAfterFiringLast();
	void OnSpeedReloadDelegate__DelegateSignature(bool bDryReload, float RateMultiplier);
	void OnRep_FirearmState();
	void OnRep_BoltState();
	void OnReloadInterruptDelegate__DelegateSignature();
	void OnReloadDelegate__DelegateSignature(bool bDryReload, bool bSingleReload, float RateMultiplier);
	void OnMagOutDelegate__DelegateSignature();
	void OnMagInDelegate__DelegateSignature();
	void OnFireStopDelegate__DelegateSignature();
	void OnFireStop();
	void OnFireStartDelegate__DelegateSignature();
	void OnFireStart();
	void OnFireDelegate__DelegateSignature(const struct FVector& FireOrigin, const struct FVector& FireDirection);
	void OnFire(const struct FVector& Origin, const struct FVector& ShootDir, bool bFromReplication);
	void OnFindParticleSystemForAmmoTypeStaticMesh(bool bIsAmmoContainer);
	void OnDryFireDelegate__DelegateSignature();
	void OnCycleFiremodeDelegate__DelegateSignature(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
	void OnBoltCycleDelegate__DelegateSignature();
	void OnAmmoCheckDelegate__DelegateSignature();
	void NetMulticastStartAmmoCheck();
	void MulticastFireWeapon(const struct FVector& Origin, const struct FVector& Direction, int RandomSeed);
	void MulticastFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir, int RandomSeed);
	void MulticastDryFire();
	void Multicast_PlayEjectAfterFiringLast();
	bool IsWaitingToFire();
	bool IsTacticalReload();
	bool IsSpeedReloading();
	bool IsReloadingOrFinishingReload();
	bool IsReloadingInsertLoop();
	bool IsReloading();
	bool IsPullingTrigger();
	bool IsPlayerControlled();
	bool IsManualAction();
	bool IsLocallyControlled();
	bool IsInStandardReload();
	bool IsInSingleReload();
	bool IsInMagazineStyleReload();
	bool IsInInterruptableState();
	bool IsInFiringAnimation();
	bool IsIdle();
	bool IsFocusing();
	bool IsFiring();
	bool IsFireEnabled();
	bool IsFinishingReload();
	bool IsDryReload();
	bool IsCyclingBolt();
	bool IsCheckingAmmo();
	bool IsChangingFiremode();
	bool IsBoltReady();
	bool IsBarrelObstructed();
	bool IsBarrelAtLeastPartiallyObstructed();
	bool HasMultipleFiremodes();
	bool HasFiremode(EFirearmFiremode Firemode);
	bool HasBipodDeployed();
	struct FReloadTimes GetReloadTimesForState(EFirearmState ReloadState);
	struct FReloadTimesGroup GetReloadTimesForContainer(class UClass* ContainerType);
	float GetRecoilRestRate(int ShotCount);
	float GetProjectileSpread();
	void GetMuzzleSocketFromMesh(class USkeletalMeshComponent* Component, struct FVector* OutShootPosition, struct FVector* OutShootDirection);
	class USkeletalMeshComponent* GetMuzzleMesh(bool bForceFirstPerson);
	void GetMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection, bool bFirstPerson);
	float GetLastFireTime();
	bool GetFreeaimMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection);
	void GetFirstPersonMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection);
	int GetFiremodeCount();
	EFirearmFiremode GetFiremode();
	EFirearmState GetFirearmState();
	class USkeletalMeshComponent* GetEffectTargetMesh(bool bForceFirstPerson);
	struct FReloadTimes GetContainerReloadTimesForState(class UClass* ContainerType, EFirearmState ReloadState);
	EFirearmBoltState GetBoltState();
	class UWeaponBipodComponent* GetBipod();
	class UClass* GetAmmoContainerForReloadStart();
	void ForceStopFire();
	void ForceChangeFiremode(EFirearmFiremode Firemode);
	void FireWeapon();
	void FireProjectile(const struct FVector& Origin, const struct FVector& ShootDir, int RandomSeed, float ClientTimestamp, int ClientBulletId, bool bClientReplication);
	void FinishBoltCycle();
	bool DoesBoltNeedCycling();
	void CreateRecoil();
	void ClientLoadMagAmmo();
	void ClientInterruptReload();
	void ClientFinishReloading();
	bool CanStartFire();
	bool CanInterruptFire();
	bool CanFire();
	bool CanContinueFiring();
	void CancelBoltCycle();
	float CalcRecoilModifier();
	void BroadcastFiremodeChange(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
	void BlueprintOnSpeedReload();
	void BlueprintOnReloadInterrupted();
	void BlueprintOnReloaded();
	void BlueprintOnReload();
	void BlueprintOnFireStopping();
	void BlueprintOnFireStop();
	void BlueprintOnFireStart();
	void BlueprintOnFire(const struct FVector& Origin, const struct FVector& Direction);
	void BlueprintOnDryFire();
	void BlueprintOnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
	void BlueprintOnBoltCycle();
	void BeginBoltCycle(bool bFromReplication);
	bool AllowNextShotDelegate__DelegateSignature();
	bool AllowNextShot();
	bool AllowFireDelegate__DelegateSignature();
	bool AllowFire();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemRevolver
// 0x0040 (FullSize[0x4250] - InheritedSize[0x4210])
class AItemRevolver : public AItemFirearm
{
public:
	struct FTimerHandle                                TimerHandle_SetChambers;                                   // 0x4210(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<ERevolverChamberState>                      ChamberStates;                                             // 0x4218(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentChamberIndex;                                       // 0x4228(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8EKE[0x4];                                     // 0x422C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnChamberStatesUpdateDelegate;                             // 0x4230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActiveChamberUpdatedDelegate;                            // 0x4240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemRevolver");
		return ptr;
	}



	void OnRep_CurrentChamberIndex();
	void OnRep_ChamberStates();
	void OnChamberStatesUpdateDelegate__DelegateSignature();
	void OnActiveChamberUpdatedDelegate__DelegateSignature();
	bool HasAnyChamberInState(ERevolverChamberState ChamberState);
	ERevolverChamberState GetCurrentChamberState();
	int CountFiredChambers();
	int CountChambersInState(ERevolverChamberState ChamberState);
	bool AreAllChambersEmpty();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemGear
// 0x0040 (FullSize[0x0C10] - InheritedSize[0x0BD0])
class AItemGear : public AItemBase
{
public:
	bool                                               bStayAttached;                                             // 0x0BD0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ODV3[0x7];                                     // 0x0BD1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              ProtectedDamageTypes;                                      // 0x0BD8(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCosmeticAttachedModel>     AttachmentSubmodels;                                       // 0x0BE8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UINSSkeletalMeshComponent*>           AttachmentMeshComponents;                                  // 0x0BF8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemGearLevel                                     GearLevel;                                                 // 0x0C08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SJH9[0x7];                                     // 0x0C09(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemGear");
		return ptr;
	}



	bool ShouldSpawnAttachmentMesh(const struct FName& AttachmentSocket);
	void Interact();
	void BlueprintOnTransferToRagdoll(class ARagdoll* Ragdoll);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemRadio
// 0x0018 (FullSize[0x0C28] - InheritedSize[0x0C10])
class AItemRadio : public AItemGear
{
public:
	class USphereComponent*                            RadioRadiusComponent;                                      // 0x0C10(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSSoldier*>                         OverlappingOfficers;                                       // 0x0C18(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemRadio");
		return ptr;
	}



	void RadiusEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void RadiusBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemGrenade
// 0x0730 (FullSize[0x24B0] - InheritedSize[0x1D80])
class AItemGrenade : public AItemWeapon
{
public:
	struct FExplosiveAnimsGroup                        FirstPersonExplosiveAnims;                                 // 0x1D80(0x0270) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCharacterAnimExplosive                     ThirdPersonExplosiveAnimsNative;                           // 0x1FF0(0x03B0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrenadeConfig                              GrenadeConfig;                                             // 0x23A0(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	EGrenadeState                                      GrenadeState;                                              // 0x23F8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrenadeState                                      SimulatedGrenadeState;                                     // 0x23F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrenadeThrowMode                                  ThrowMode;                                                 // 0x23FA(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrenadeThrowMode                                  SimulatedThrowMode;                                        // 0x23FB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      GrenadesThrown;                                            // 0x23FC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyThrowWithLOS;                                         // 0x23FD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UIJU[0x2];                                     // 0x23FE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGrenadeStateChangedDelegate;                             // 0x2400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeThrowModeChangedDelegate;                         // 0x2410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadePullbackDelegate;                                 // 0x2420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeBeginCookDelegate;                                // 0x2430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeBeginThrowDelegate;                               // 0x2440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeSpawnedDelegate;                                  // 0x2450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeReloadDelegate;                                   // 0x2460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHotGrenadePickedUpDelegate;                              // 0x2470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KXDL[0x1];                                     // 0x2480(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPendingPullback;                                          // 0x2481(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPendingThrow;                                             // 0x2482(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_494V[0x5];                                     // 0x2483(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StartCookTime;                                             // 0x2488(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KIPT[0x18];                                    // 0x248C(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsHot;                                                    // 0x24A4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bThrowingBack;                                             // 0x24A5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHolding;                                                  // 0x24A6(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_205P[0x1];                                     // 0x24A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AProjectileBase*                             ProjectileInHand;                                          // 0x24A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemGrenade");
		return ptr;
	}



	void SetThrowMode(EGrenadeThrowMode NewThrowMode);
	void SetGrenadeState(EGrenadeState NewGrenadeState);
	void ServerStartCook();
	void ServerSetHold(bool Val);
	void ServerReleaseThrow();
	void ServerPullBack(EGrenadeThrowMode NewThrowMode);
	void OnRep_ThrowMode();
	void OnRep_ProjectileInHand();
	void OnRep_GrenadeState();
	void OnHotGrenadePickedUpDelegate__DelegateSignature();
	void OnGrenadeThrowModeChangedDelegate__DelegateSignature(EGrenadeThrowMode OldThrowMode);
	void OnGrenadeStateChangedDelegate__DelegateSignature(EGrenadeState OldState);
	void OnGrenadeSpawnedDelegate__DelegateSignature(class AProjectileBase* NewProjectile);
	void OnGrenadeReloadDelegate__DelegateSignature();
	void OnGrenadePullbackDelegate__DelegateSignature(EGrenadeThrowMode ThrowMode);
	void OnGrenadeBeginThrowDelegate__DelegateSignature();
	void OnGrenadeBeginCookDelegate__DelegateSignature(EGrenadeThrowMode NewThrowMode);
	bool IsThrowingAndInHand();
	bool IsThrowing();
	bool IsPullingBack();
	bool IsPrimedForThrow();
	bool IsPinPulled();
	bool IsOverhandThrow();
	bool IsInCookingState();
	bool IsGrenadeBusy();
	bool IsCooking();
	float GetUpwardsThrowSpeed();
	float GetThrowSpeed();
	EGrenadeThrowMode GetThrowMode();
	float GetSpawnedGrenadeTimer();
	EGrenadeState GetGrenadeState();
	void DropGrenade(bool bDeath);
	bool CanThrow();
	bool CanPullback();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemRemoteExplosive
// 0x0010 (FullSize[0x24C0] - InheritedSize[0x24B0])
class AItemRemoteExplosive : public AItemGrenade
{
public:
	class UClass*                                      DetonatorType;                                             // 0x24B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemDetonator*                              ActiveDetonator;                                           // 0x24B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemRemoteExplosive");
		return ptr;
	}



	void SwitchToDetonator();
	void OnGrenadeSpawned(class AProjectileBase* NewProjectile);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemPlantedExplosive
// 0x00A0 (FullSize[0x2560] - InheritedSize[0x24C0])
class AItemPlantedExplosive : public AItemRemoteExplosive
{
public:
	bool                                               bCanPlant;                                                 // 0x24C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlantUprightOnly;                                         // 0x24C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanThrow;                                                 // 0x24C2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PN5B[0x1];                                     // 0x24C3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlantDuration;                                             // 0x24C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlantTraceDistance;                                        // 0x24C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    PlantExplosiveRotation;                                    // 0x24CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bPlanting;                                                 // 0x24D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O1YS[0x7];                                     // 0x24D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_Planting;                                      // 0x24E0(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MXVI[0x8];                                     // 0x24E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  PlantTransform;                                            // 0x24F0(0x0030) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPrimitiveComponent>          PlantAttachComponent;                                      // 0x2520(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlantStartDelegate;                                      // 0x2528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlantAbandonedDelegate;                                  // 0x2538(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlantFinishedDelegate;                                   // 0x2548(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OND6[0x8];                                     // 0x2558(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemPlantedExplosive");
		return ptr;
	}



	bool TracePlantTargetDest(struct FHitResult* OutHitResult, const struct FVector& FromLocation, const struct FVector& DestLocation);
	bool TracePlantTarget(struct FHitResult* OutHitResult);
	void SetupPlant(const struct FHitResult& PlantTrace);
	void SetPlantLocationFromTrace(const struct FHitResult& PlantTrace);
	void ServerStartPlant();
	void ServerPlantAbandoned();
	void OnRep_Planting();
	void OnPlantStartDelegate__DelegateSignature();
	void OnPlantFinishedDelegate__DelegateSignature();
	void OnPlantAbandonedDelegate__DelegateSignature();
	void MulticastOnPlantComplete();
	void ClientAbandonPlant();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemPickup
// 0x0128 (FullSize[0x0348] - InheritedSize[0x0220])
class AItemPickup : public AActor
{
public:
	unsigned char                                      UnknownData_L1Q1[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAudioComponent*                          AkComponent;                                               // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_EnablePickup;                                  // 0x0238(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               SkeletalMesh3P;                                            // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 StaticMesh3P;                                              // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePhysics;                                               // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPickupType                                        ItemPickupType;                                            // 0x0251(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisabled;                                                 // 0x0252(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartDisabled;                                            // 0x0253(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PickupDisableTimer;                                        // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGiveAmmoOnPickup;                                         // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGiveMaxAmmo;                                              // 0x0259(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyOldWeaponOnPickup;                                 // 0x025A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemSlot                                          ItemEquipmentSlot;                                         // 0x025B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4TAA[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPickedupDelegate;                                        // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClearAmmoDelegate;                                       // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      LinkedObjective[0x28];                                     // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_YGYG[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSSkeletalMeshComponent*                   Mesh3P;                                                    // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        StaticMesh3PComponent;                                     // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReplicateItemClass;                                       // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1YYK[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ItemClass;                                                 // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Upgrades;                                                  // 0x02D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_ResetItemClassNextFrame;                       // 0x02E0(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       DefaultUseText;                                            // 0x02E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                                  DefaultUseImage;                                           // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TacticalMapImage;                                          // 0x0308(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PickupEvent;                                               // 0x0310(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UINSSkeletalMeshComponent*>           Attachments;                                               // 0x0318(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAddtoGameStateItemPickupCache;                            // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisplayOnTacticalMap;                                     // 0x0329(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5WQ2[0x1E];                                    // 0x032A(0x001E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemPickup");
		return ptr;
	}



	void ResetPickup();
	void OnSetItemClass();
	void OnRep_Upgrades();
	void OnRep_ItemClass();
	void OnRep_Disabled();
	void OnPickupEnabledOrDisabled(bool bNewIsDisabled);
	void OnLinkedObjectiveActivated(bool bNewState, class AObjectiveBase* Objective);
	void OnItemClassChanged();
	void Multicast_SetDisabled(bool IsDisabled);
	void Multicast_PlayPickupEvent();
	void ItemPickupDelegate__DelegateSignature(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
	bool IsPickupDisabled();
	void EnablePickup();
	void DisablePickup(float PickupTimer);
	void ClearAmmoDelegate__DelegateSignature(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemPickupDynamic
// 0x0020 (FullSize[0x0368] - InheritedSize[0x0348])
class AItemPickupDynamic : public AItemPickup
{
public:
	bool                                               bRemoveOnRoundReset;                                       // 0x0348(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveOnPickup;                                           // 0x0349(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UHMM[0x2];                                     // 0x034A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefaultLockoutTimer;                                       // 0x034C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSSoldier*                                 LockedUser;                                                // 0x0350(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockoutTimeRemaining;                                      // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DX5J[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_LockOutExpired;                                // 0x0360(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemPickupDynamic");
		return ptr;
	}



	void SetPickupItemAndUpgrades(class UClass* InItemClass, TArray<class UClass*> InUpgrades);
	void SetPickupItem(class UClass* InItemClass);
	void SetLockedUser(class AINSSoldier* InLockedUser, float OverrideLockoutTimer);
	void ClearLockedUser();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemInteractableGear
// 0x0A58 (FullSize[0x1668] - InheritedSize[0x0C10])
class AItemInteractableGear : public AItemGear
{
public:
	struct FTimerHandle                                TimerHandle_TransitionComplete;                            // 0x0C10(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastInteractTime;                                          // 0x0C18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractTimeoutTime;                                       // 0x0C1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirstPersonAnims                           FirstPersonAnimations;                                     // 0x0C20(0x09F8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               Mesh1P;                                                    // 0x1618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipableState                                    EquipableState;                                            // 0x1620(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipableState                                    SimulatedEquipableState;                                   // 0x1621(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W9C5[0x2];                                     // 0x1622(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EquipDuration;                                             // 0x1624(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipDurationFallback;                                     // 0x1628(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnequipDuration;                                           // 0x162C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnequipDurationFallback;                                   // 0x1630(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PFEJ[0x4];                                     // 0x1634(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    InteractableStateChangedDelegate;                          // 0x1638(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bPutAwayWeaponOnToggle;                                    // 0x1648(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CB3N[0x7];                                     // 0x1649(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_StateChangeDelay;                              // 0x1650(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisallowEquipDuringTransition;                            // 0x1658(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPendingInteract;                                          // 0x1659(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NFTA[0x2];                                     // 0x165A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedEquipCancelDisallowTime;                             // 0x165C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CachedUnequipCancelDisallowTime;                           // 0x1660(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAnimationComplete;                                      // 0x1664(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInteractableGearType                              InteractableGearType;                                      // 0x1665(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowMesh;                                                 // 0x1666(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z9SS[0x1];                                     // 0x1667(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemInteractableGear");
		return ptr;
	}



	void ToggleGear();
	void SetEquipableState(EEquipableState NewState);
	void OnTransitionComplete();
	void OnRep_EquipableState();
	void OnPutAwayWeaponForToggle(float WeaponUnequipDuration);
	void MulticastOnCanceled();
	bool IsUnequippingOrUnequipped();
	bool IsUnequipping();
	bool IsUnequipped();
	bool IsTransitioningTo();
	bool IsInWeaponTransitionDelay();
	bool IsEquippingOrEquipped();
	bool IsEquipping();
	bool IsEquipped();
	void InteractableStateChangedDelegate__DelegateSignature(class AItemInteractableGear* Gear, EEquipableState NewState);
	EInteractableGearType GetInteractableGearType();
	EEquipableState GetEquipableState();
	void BlueprintInteractableStateChanged(EEquipableState NewState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemGoggles
// 0x0088 (FullSize[0x16F0] - InheritedSize[0x1668])
class AItemGoggles : public AItemInteractableGear
{
public:
	struct FTimerHandle                                TimerHandle_MaskTransitionComplete;                        // 0x1668(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                AudioCueAudioTimerHandle;                                  // 0x1670(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActiveByDefault;                                          // 0x1678(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0GC3[0x7];                                     // 0x1679(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          PostProcessMaterial;                                       // 0x1680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeferBlendableInsertionToCameraManager;                   // 0x1688(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JDZ4[0x7];                                     // 0x1689(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AkEventToggleOn1P;                                         // 0x1690(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventToggleOn3P;                                         // 0x1698(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventToggleOff1P;                                        // 0x16A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventToggleOff3P;                                        // 0x16A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayToggleEventsOnInteract;                               // 0x16B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActive;                                                   // 0x16B1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCustomExposure;                                        // 0x16B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7H85[0x1];                                     // 0x16B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExposureBiasOffset;                                        // 0x16B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseOverexposedMaterials;                                  // 0x16B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanUseWithBinoculars;                                     // 0x16B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStaminaAudioSwitch;                                       // 0x16BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInfrared;                                             // 0x16BB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GogglesEnterEyesDuration;                                  // 0x16BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CacheGogglesEnterEyesTime;                                 // 0x16C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GogglesPlayEquipAudioTime;                                 // 0x16C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GogglesLeaveEyesDuration;                                  // 0x16C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CacheGogglesLeaveEyesTime;                                 // 0x16CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GogglesPlayUnequipAudioTime;                               // 0x16D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ADSInTime;                                                 // 0x16D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ADSOutTime;                                                // 0x16D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnterPointShootModeOnADS;                                 // 0x16DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F7EZ[0x3];                                     // 0x16DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PointShootInTime;                                          // 0x16E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PointShootOutTime;                                         // 0x16E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashbangHoldTimeDurationMultiplier;                       // 0x16E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L5VB[0x4];                                     // 0x16EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemGoggles");
		return ptr;
	}



	void OnRep_Active();
	void MulticastPlayToggleAudioCue(bool bEquip);
	void AttachGogglesToComponent(class UINSSkeletalMeshComponent* TargetComponent);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemNightVision
// 0x0000 (FullSize[0x16F0] - InheritedSize[0x16F0])
class AItemNightVision : public AItemGoggles
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemNightVision");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemHeavyMachineGun
// 0x00C0 (FullSize[0x42D0] - InheritedSize[0x4210])
class AItemHeavyMachineGun : public AItemFirearm
{
public:
	bool                                               bCanOverheat;                                              // 0x4210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WUKO[0x3];                                     // 0x4211(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HeatRate;                                                  // 0x4214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoolRate;                                                  // 0x4218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverheatedCoolRate;                                        // 0x421C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverheatThreshold;                                         // 0x4220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HF2T[0x4];                                     // 0x4224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      OverheatAudioEvent[0x28];                                  // 0x4228(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      OverheatMuzzleEffect1P[0x28];                              // 0x4250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      OverheatMuzzleEffect3P[0x28];                              // 0x4278(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      CooldownAudioEvent[0x28];                                  // 0x42A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              WeaponHeat;                                                // 0x42C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverheated;                                               // 0x42CC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1XW9[0x3];                                     // 0x42CD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemHeavyMachineGun");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemMinigun
// 0x0030 (FullSize[0x4300] - InheritedSize[0x42D0])
class AItemMinigun : public AItemHeavyMachineGun
{
public:
	float                                              SpinUpTime;                                                // 0x42D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XGEK[0x4];                                     // 0x42D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               SpinUpAudioEvent1P;                                        // 0x42D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SpinUpAudioEvent3P;                                        // 0x42E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SpinDownAudioEvent1P;                                      // 0x42E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SpinDownAudioEvent3P;                                      // 0x42F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingSpinUpAudio;                                       // 0x42F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingSpinUpAudio1P;                                     // 0x42F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingSpinUpAudio3P;                                     // 0x42FA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0S0P[0x1];                                     // 0x42FB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpinAmount;                                                // 0x42FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemMinigun");
		return ptr;
	}



	bool IsUsingSpinUpTime();
	bool IsSpunUp();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemMeleeWeapon
// 0x0510 (FullSize[0x2290] - InheritedSize[0x1D80])
class AItemMeleeWeapon : public AItemWeapon
{
public:
	int                                                CurrentAttackIndex;                                        // 0x1D80(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastAttackIndex;                                           // 0x1D84(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClientRangeCheckBloat;                                     // 0x1D88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClientVictimDistanceCheck;                                 // 0x1D8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSwingTime;                                             // 0x1D90(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PQ7E[0x4];                                     // 0x1D94(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 AffectedComponents;                                        // 0x1D98(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMeleeAnimsGroup                            FirstPersonMeleeAnims;                                     // 0x1DA8(0x01B0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCharacterAnimKnife                         ThirdPersonMeleeAnimsNative;                               // 0x1F58(0x02B8) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMeleeConfig                                MeleeConfig;                                               // 0x2210(0x0040) (Deprecated, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMeleeConfig>                        MeleeAttacks;                                              // 0x2250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultDamageTypeClass;                                    // 0x2260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            DefaultSurfaceReaction;                                    // 0x2268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeSwingDelegate;                                      // 0x2270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeHitDelegate;                                        // 0x2280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemMeleeWeapon");
		return ptr;
	}



	void ServerStartSwing(int AttackIndex);
	void ServerNotifyHit(const struct FHitResult& Hit, float ClientTime);
	bool IsSwinging();
	bool InSwingDelay();
	float GetSwingRemainingTime();
	float GetSwingPercentage();
	float GetNextSwingTime();
	bool CanSwing();
	void BroadcastStartSwing(int AttackIndex);
	void BroadcastHit(const struct FHitResult& Hit);
	void BlueprintOnSwing();
	void BlueprintOnHit(const struct FHitResult& Hit);
	void ApplyDamageForHit(const struct FHitResult& Hit);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemDetonator
// 0x02A8 (FullSize[0x1D30] - InheritedSize[0x1A88])
class AItemDetonator : public AItemEquipable
{
public:
	float                                              DetonatorTime;                                             // 0x1A88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IQ5F[0x4];                                     // 0x1A8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_DetonatorAutoSwitch;                           // 0x1A90(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDetonatorUsedDelegate;                                   // 0x1A98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      PlantedExplosives;                                         // 0x1AA8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IMQ3[0x7];                                     // 0x1AA9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AProjectileBase*>                     Grenades;                                                  // 0x1AB0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AObjectiveDestructible*                      LinkedDestructible;                                        // 0x1AC0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterAnimMisc                          ThirdPersonMiscAnimsNative;                                // 0x1AC8(0x0268) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemDetonator");
		return ptr;
	}



	void ServerDetonate();
	void OnDetonatorUsedDelegate__DelegateSignature();
	void MulticastDetonate();
	void CheckDetonated();
	void BlueprintOnDetonated();
	void AddGrenade(class AProjectileBase* Projectile);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemBinocular
// 0x02A0 (FullSize[0x2210] - InheritedSize[0x1F70])
class AItemBinocular : public AItemAimableWeapon
{
public:
	unsigned char                                      UnknownData_TY4W[0x10];                                    // 0x1F70(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          PostProcessMaterial;                                       // 0x1F80(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SpawnedIndicatorParticle;                                  // 0x1F88(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             CooldownParticleSystem;                                    // 0x1F90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterAnimMisc                          ThirdPersonMiscAnimsNative;                                // 0x1F98(0x0268) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UTR9[0x10];                                    // 0x2200(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemBinocular");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemArmor
// 0x0178 (FullSize[0x0D88] - InheritedSize[0x0C10])
class AItemArmor : public AItemGear
{
public:
	class UPhysicsAsset*                               PhysicsAssetOverride;                                      // 0x0C10(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          ImpactSpeedLossByPenetrationPower;                         // 0x0C18(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ImpactSpeedLossModifier;                                   // 0x0CA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9Q85[0x4];                                     // 0x0CA4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          RoundSpeedModifierByPenetrationPower;                      // 0x0CA8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              DamageModifier;                                            // 0x0D30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R66N[0x4];                                     // 0x0D34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, float>                         DamageTypeModifier;                                        // 0x0D38(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemArmor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemAmmoVest
// 0x0180 (FullSize[0x0D90] - InheritedSize[0x0C10])
class AItemAmmoVest : public AItemGear
{
public:
	TMap<EItemSlot, int>                               AdditionalEquipmentSlots;                                  // 0x0C10(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      AdditionalAmmoByAmmoContainer[0x50];                       // 0x0C60(0x0050) UNKNOWN PROPERTY: MapProperty
	TMap<EItemSlot, float>                             AdditionalAmmoByWeight;                                    // 0x0CB0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<EFirearmCategory, struct FAmmoVestExtraAmmo>  AdditionalAmmoByFirearmCategory;                           // 0x0D00(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bRanInitialChecks;                                         // 0x0D50(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QD0J[0x7];                                     // 0x0D51(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSSoldier*                                 INSSoldier;                                                // 0x0D58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AProfileCharacter*                           ProfileCharacter;                                          // 0x0D60(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Faction;                                                   // 0x0D68(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFemale;                                                 // 0x0D70(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_81UV[0x7];                                     // 0x0D71(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCosmeticItem*                               BackPackCosmetic;                                          // 0x0D78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCosmeticItem*                               CarrierCosmetic;                                           // 0x0D80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemGearLevel                                     CurrentArmourLevel;                                        // 0x0D88(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TNCY[0x7];                                     // 0x0D89(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemAmmoVest");
		return ptr;
	}



	void UpdatePreviewVisuals(bool bPreviewFemale, EItemGearLevel PreviewArmorLevel);
	void UpdateEquipmentVisualsInternal(bool bForce, bool bProfile, class UInventoryComponent* Inventory, bool bDontRunOnProfile);
	void UpdateEquipmentVisuals(bool bForce, bool bProfile, class UInventoryComponent* Inventory);
	void UpdateEquipmentChangeInterface();
	void SetCarrierCosmetic(class UCosmeticItem* NewCarrierCosmetic);
	void SetCarrierArmourCombination(EItemGearLevel Item);
	void SetBackpackCosmetic(class UCosmeticItem* NewBackPackCosmetic);
	void OnUpdateCosmeticMeshesMorphs(bool bProfile);
	void OnUpdateCharacterAnimInstance(bool bProfile);
	void OnSettingsChanged();
	void OnMeshLoaded(class UINSSkeletalMeshComponent* INSSkeletalMeshComponent);
	void OnMergedMesh();
	void OnExitVehicle(class UVehicleSeatComponent* VehicleSeat);
	void OnEnteredVehicle(class UVehicleSeatComponent* VehicleSeat);
	void OnAttachMeshToPawn(class UINSSkeletalMeshComponent* Mesh);
	void GetSkeletalMesh3P(EItemGearLevel Item);
	EItemGearLevel GetCurrentArmourLevel();
	int GetAdditionalAmmoForWeapon(class AItemWeapon* Weapon);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ItemAmmoPickup
// 0x0050 (FullSize[0x0398] - InheritedSize[0x0348])
class AItemAmmoPickup : public AItemPickup
{
public:
	TMap<EFirearmCategory, int>                        AmmoToGiveForCategory;                                     // 0x0348(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ItemAmmoPickup");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.IntroCameraActor
// 0x0010 (FullSize[0x07A0] - InheritedSize[0x0790])
class AIntroCameraActor : public ACameraActor
{
public:
	bool                                               bEnabled;                                                  // 0x0790(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TL9G[0xF];                                     // 0x0791(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.IntroCameraActor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSWorldSettings
// 0x02E0 (FullSize[0x0680] - InheritedSize[0x03A0])
class AINSWorldSettings : public AWorldSettings
{
public:
	TArray<struct FDefaultScenarios>                   DefaultScenarios;                                          // 0x03A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundscapeDefinition*                       DefaultSoundscape;                                         // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UAkComponent>>         PendingSoundscapeComponents;                               // 0x03B8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ASoundscapeEmitter>>   PendingSoundscapeEmitters;                                 // 0x03C8(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FName>                   LightingScenarios;                                         // 0x03D8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bRandomLightingScenario;                                   // 0x0428(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F5GM[0x3];                                     // 0x0429(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DefaultLightingScenario;                                   // 0x042C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAlwaysNight;                                              // 0x0434(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VOAK[0x3];                                     // 0x0435(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       LoadedLightingScenario;                                    // 0x0438(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6SXO[0x10];                                    // 0x0440(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          TacticalMapMaterial;                                       // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LevelCenter;                                               // 0x0458(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                        LevelBounds;                                               // 0x0464(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     ScenarioCenter;                                            // 0x0480(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                        ScenarioBounds;                                            // 0x048C(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FName, class UMaterialInterface*>      TacticalMapMaterialLightingOverride;                       // 0x04A8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              CompassOffset;                                             // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A2L4[0x4];                                     // 0x04FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAkAudioBank*>                        LevelBanks;                                                // 0x0500(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     DefaultBankNames;                                          // 0x0510(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     UIBankNames;                                               // 0x0520(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     BaseBankNames;                                             // 0x0530(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRaycastDistance;                                        // 0x0540(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NPKA[0x4];                                     // 0x0544(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BenchmarkSublevels[0x50];                                  // 0x0548(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      BenchmarkSequences[0x50];                                  // 0x0598(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bShowBreath;                                               // 0x05E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PQ2S[0x7];                                     // 0x05E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BreathParticleSystemOverride;                              // 0x05F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AdditionalGameTags[0x50];                                  // 0x05F8(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_G307[0x20];                                    // 0x0648(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULevelSequencePlayer*                        SequencePlayer;                                            // 0x0668(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALevelSequenceActor*                         SequencePlayerActor;                                       // 0x0670(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAutomatedBenchmark;                                       // 0x0678(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VOPI[0x7];                                     // 0x0679(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSWorldSettings");
		return ptr;
	}



	void OnRep_LoadedLightingScenario();
	void LoadAndPlayBenchmarkSequence(bool bAutomated);
	void BenchmarkOnStop();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.InsurgencyGlobals
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UInsurgencyGlobals : public UObject
{
public:
	struct FSoftObjectPath                             GameUIDataRef;                                             // 0x0028(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameUIData*                                 GameUIData;                                                // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.InsurgencyGlobals");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameState
// 0x0330 (FullSize[0x05C0] - InheritedSize[0x0290])
class AINSGameState : public AGameState
{
public:
	TArray<class ARestrictedFireSupportVolume*>        RestrictedFireSupportVolumes;                              // 0x0290(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APlayableArea*>                       PlayableAreas;                                             // 0x02A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ANavMeshBoundsVolume*>                NavMeshAreas;                                              // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASupplyCrate*>                        SupplyCrates;                                              // 0x02C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPointOfInterestActorComponent*>      PointsOfInterest;                                          // 0x02D0(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASpawnZone*>                          SpawnZones;                                                // 0x02E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARestrictedArea*>                     RestrictedAreas;                                           // 0x02F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AItemPickup*>                         ItemPickups;                                               // 0x0300(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                        LevelBounds;                                               // 0x0310(0x001C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FBox                                        TacticalMapScenarioOverviewArea;                           // 0x032C(0x001C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               GameTagsCollection;                                        // 0x0348(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ActiveScenarioAsset;                                       // 0x0358(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ActiveTheaterOverride;                                     // 0x0368(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ActiveTravelURL;                                           // 0x0378(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ActiveScenarioLocalized;                                   // 0x0388(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FText                                       ActiveGamemodeLocalized;                                   // 0x03A0(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FText>                               ActiveGamemodeRulesLocalized;                              // 0x03B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ActiveMutators[0x10];                                      // 0x03C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               bDynamicInGameLessonsAllowed;                              // 0x03D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7RJL[0x7];                                     // 0x03D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    RoundResetDelegate;                                        // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RoundOverDelegate;                                         // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    MatchEndedDelegate;                                        // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AItemRadio*>                          Radios;                                                    // 0x0410(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATeamInfo*>                           Teams;                                                     // 0x0420(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                       TeamsReplicated;                                           // 0x0430(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NumTeams;                                                  // 0x0440(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JL5D[0x7];                                     // 0x0441(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AObjectiveBase*>                      Objectives;                                                // 0x0448(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayerTeamSelectAllowed;                                  // 0x0458(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeam0Locked;                                              // 0x0459(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeam1Locked;                                              // 0x045A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BEN1[0x5];                                     // 0x045B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    TeamLockUpdateDelegate;                                    // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamInfoReplicatedDelegate;                              // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bFreezeTime;                                               // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWorldContainsPlayableAreas;                               // 0x0481(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWorldContainsScenarioPlayableArea;                        // 0x0482(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFireSupportAllowed;                                       // 0x0483(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideRoundTimer;                                           // 0x0484(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JFTR[0x3];                                     // 0x0485(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMatchStateUpdateDelegate;                                // 0x0488(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchSubStateUpdateDelegate;                             // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FName                                       SubMatchState;                                             // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBotGrenadeTarget>                   GrenadeTargets;                                            // 0x04B0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABulletManager*                              BulletManager;                                             // 0x04C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBrassManager*                               BrassManager;                                              // 0x04C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URagdollManager*                             RagdollManager;                                            // 0x04D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z06Z[0x10];                                    // 0x04D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFoliageInteractionManager*                  FoliageInteractionManager;                                 // 0x04E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CGZZ[0x8];                                     // 0x04F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPostMergeManager*                           PostMergeManager;                                          // 0x04F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AM94[0x30];                                    // 0x0500(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ALightSampler*                               LightSampler;                                              // 0x0530(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundscapeState*                            SoundscapeState;                                           // 0x0538(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDecalManager*                               DecalManager;                                              // 0x0540(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVoiceRouting*                               VoiceRouting;                                              // 0x0548(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPopulatedScenarioAssets;                                  // 0x0550(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U9RH[0x3];                                     // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RemainingLoads;                                            // 0x0554(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsMatchmakingSession;                                     // 0x0558(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRankedSession;                                            // 0x0559(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UT2J[0x2];                                     // 0x055A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MatchStartDeadline;                                        // 0x055C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ExpectedMatchPlayers;                                      // 0x0560(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CurrentMatchPlayers;                                       // 0x0561(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCoopSession;                                            // 0x0562(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RMB4[0x1];                                     // 0x0563(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsCompetitiveSession;                                     // 0x0564(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OY16[0x3];                                     // 0x0565(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      LastFireSupportTime;                                       // 0x0568(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMapVoteManager*                             MapVoteManager;                                            // 0x0578(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMapVoteInProgress;                                        // 0x0580(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GYQP[0x3];                                     // 0x0581(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayerClassAttributes                      RulesetAttributeOverrides;                                 // 0x0584(0x0034) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseAttributeOverrides;                                    // 0x05B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F674[0x7];                                     // 0x05B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameState");
		return ptr;
	}



	void OnTeamInfoReady(unsigned char ID);
	void OnRep_UseAttributeOverrides();
	void OnRep_TeamLockState();
	void OnRep_SubMatchState();
	void OnRep_RulesetAttributeOverrides();
	void OnRep_IsCompetitiveSession();
	void OnRep_FreezeTime();
	void OnRep_ActiveScenarioLocalized();
	void OnRep_ActiveMutators();
	void OnMapVoteStarted();
	void OnMapVoteEnded();
	void MulticastTextMessage(const struct FText& Message, const struct FName& Type);
	void MulticastSetActiveMutators();
	bool IsTeamVisuallyLocked(unsigned char TeamIndex);
	bool IsRoundRunning();
	bool IsPostRoundOrGame();
	bool IsPostRound();
	bool IsMapVoteInProgress();
	bool IsGameOver();
	bool InRoundIntermission();
	class ATeamInfo* GetTeam(unsigned char ID);
	class ATeamInfo* GetFaction(unsigned char FactionId);
	void DebugStartMapVoteFromCycle();
	void CollectInterestingTaglines(TArray<struct FOtherPlayerAwardedTagline>* OutTaglines);
	bool CanResupplyInCurrentGameState(class AINSSoldier* Soldier);
	void BroadcastShowPlayerExperience();
	void BroadcastRoundReset();
	void BroadcastRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines);
	void BroadcastMatchEnded(unsigned char WinningFaction);
	int AddTeam(class ATeamInfo* InTeam);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMultiplayerGameState
// 0x0078 (FullSize[0x0638] - InheritedSize[0x05C0])
class AINSMultiplayerGameState : public AINSGameState
{
public:
	float                                              GameStartTime;                                             // 0x05C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundNumber;                                               // 0x05C4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundsPlayed;                                              // 0x05C8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoundStartTime;                                            // 0x05CC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoundEndTime;                                              // 0x05D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRoundTimerExpired;                                        // 0x05D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOvertime;                                                 // 0x05D5(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_71YA[0xA];                                     // 0x05D6(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FNetworkedServerSettings                    NetworkedServerSettings;                                   // 0x05E0(0x0058) (BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMultiplayerGameState");
		return ptr;
	}



	void SetRoundTimer(int Seconds);
	void OnRoundStarted();
	void OnRoundEnded();
	void OnRep_EndRoundTime();
	void OnPreRoundStarted();
	bool IsWaitingForPlayers();
	bool IsThirdPersonSpectatorAllowed();
	bool IsRoundActive();
	bool IsInPreRound();
	bool IsGameStarting();
	bool IsDeathCameraEnabled();
	void InvalidateRoundTimer();
	float GetRoundTimeRemaining();
	float GetRoundTimeElapsed();
	void ExtendRoundTimer(int Seconds);
	bool AreClassLevelRestrictionsEnabled();
	bool AllowPlayerMove();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSurvivalGameState
// 0x0068 (FullSize[0x06A0] - InheritedSize[0x0638])
class AINSSurvivalGameState : public AINSMultiplayerGameState
{
public:
	int                                                CurrentWave;                                               // 0x0638(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalWaves;                                                // 0x063C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDefendingExtractionPoint;                               // 0x0640(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESurvivalWaveType                                  CurrentWaveType;                                           // 0x0641(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NBVJ[0xE];                                     // 0x0642(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCurrentWaveChangedDelegate;                              // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTotalWavesChangedDelegate;                               // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDefendingExtractionPointChangeDelegate;                  // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SurvivalPrepareNextWaveDelegate;                           // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SurvivalIncomingWaveDelegate;                              // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSurvivalGameState");
		return ptr;
	}



	void SetCurrentWave(int NewCurrentWave);
	void OnSurvivalWaveChangedDelegate__DelegateSignature(int NewWave);
	void OnSurvivalPrepareNextWaveDelegate__DelegateSignature();
	void OnSurvivalIncomingWaveDelegate__DelegateSignature(ESurvivalWaveType WaveType);
	void OnSurvivalDefendExtractionPointDelegate__DelegateSignature(bool bIsDefending);
	void OnRep_TotalWaves();
	void OnRep_IsDefending();
	void OnRep_CurrentWave();
	void Multicast_SurvivalPrepareNextWaveEvent();
	void Multicast_SurvivalIncomingWaveEvent(ESurvivalWaveType NewCurrentWaveType);
	void Multicast_StartHelicopterSequence(class ALevelSequenceActor* Sequence, class AVehicleHoveringBase* Helicopter);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameMode
// 0x0430 (FullSize[0x0738] - InheritedSize[0x0308])
class AINSGameMode : public AGameMode
{
public:
	struct FText                                       LocalizedName;                                             // 0x0308(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       LocalizedType;                                             // 0x0320(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FText>                               LocalizedRules;                                            // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      DiagramTexture[0x28];                                      // 0x0348(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_I0DR[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsMatchServer;                                            // 0x0380(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E97I[0xF];                                     // 0x0381(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WarmupEnterTime;                                           // 0x0390(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OIBI[0x4];                                     // 0x0394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerHostname;                                            // 0x0398(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5BJJ[0x18];                                    // 0x03A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class URuleset*>                            Rulesets;                                                  // 0x03C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWaitingRulesetLoad;                                       // 0x03D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MCUS[0x7];                                     // 0x03D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMutator*>                            Mutators;                                                  // 0x03D8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWaitingMutatorLoad;                                       // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BIHZ[0x7];                                     // 0x03E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSGameState*                               INSGameState;                                              // 0x03F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, int>                            ScoringAmounts;                                            // 0x03F8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UScenarioBase*                               Scenario;                                                  // 0x0448(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ScenarioDataClass;                                         // 0x0450(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OverrideTheaterDefinition[0x28];                           // 0x0458(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UTheaterDefinition*                          LoadedOverrideTheaterDefinition;                           // 0x0480(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULevelStreaming*>                     ScenarioPendingSublevels;                                  // 0x0488(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_65RL[0x50];                                    // 0x0498(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      RequiredScenarioBanks[0x50];                               // 0x04E8(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bAssetLoadingComplete;                                     // 0x0538(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q9GF[0x57];                                    // 0x0539(0x0057) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USquadLayout*                                OverrideSquadLayoutAllFactions;                            // 0x0590(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OverrideSquadLayouts[0x50];                                // 0x0598(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bDisableRestrictedAreasOnWaveDepletion;                    // 0x05E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7R3C[0x7];                                     // 0x05E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TeamInfoClass;                                             // 0x05F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3R22[0x1];                                     // 0x05F8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bKillFeed;                                                 // 0x05F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bKillFeedSpectator;                                        // 0x05FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bKillerInfo;                                               // 0x05FB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bKillerInfoRevealDistance;                                 // 0x05FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KY8A[0x3];                                     // 0x05FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TeamKillLimit;                                             // 0x0600(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamKillGrace;                                             // 0x0604(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamKillReduceTime;                                        // 0x0608(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumTotalFriendlyFireDamageToReflect;                   // 0x060C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnforceFriendlyFireReflect;                               // 0x0610(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowRestrictedAreas;                                     // 0x0611(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableVehicles;                                          // 0x0612(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CC5O[0x1];                                     // 0x0613(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnProtectionTime;                                       // 0x0614(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnProtectionTimeOutsideSpawn;                           // 0x0618(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoseSpawnProtectionOnMove;                                // 0x061C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CPS8[0x3];                                     // 0x061D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LoseSpawnProtectionOnMoveGrace;                            // 0x0620(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GN79[0x4];                                     // 0x0624(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnFireSupportKilledDelegate;                               // 0x0628(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	float                                              ObjectiveCaptureTime;                                      // 0x0638(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObjectiveResetTime;                                        // 0x063C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObjectiveSpeedup;                                          // 0x0640(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObjectiveRadioSpeedup;                                     // 0x0644(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ObjectiveMaxSpeedupPlayers;                                // 0x0648(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFloatingObjectiveVisibilitySetting                FloatingObjectiveVisibility;                               // 0x0649(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z6IO[0x6];                                     // 0x064A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnObjectiveCaptureDelegate;                                // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveDestroyedDelegate;                              // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      PlayerPawnObject[0x28];                                    // 0x0670(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	int                                                PlayersSpawnedThisFrame;                                   // 0x0698(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSpawnedPlayersEachFrame;                                // 0x069C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeadSay;                                                  // 0x06A0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeadSayTeam;                                              // 0x06A1(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVoiceAllowDeadChat;                                       // 0x06A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVoiceEnemyHearsLocal;                                     // 0x06A3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IRE3[0x4];                                     // 0x06A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DroppedWeaponLifespan;                                     // 0x06A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AEWZ[0x4];                                     // 0x06AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GamemodeAssets[0x50];                                      // 0x06B0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_AXY1[0x10];                                    // 0x0700(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAIDirector*                              AIDirector;                                                // 0x0710(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsManager*                          StatsManager;                                              // 0x0718(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTagline*>                            Taglines;                                                  // 0x0720(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_07F5[0x8];                                     // 0x0730(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameMode");
		return ptr;
	}



	void SwapSides(bool bKillAlivePlayers);
	void SetRestrictedAreas(bool bState, unsigned char TeamId);
	bool SetPropertyValueFromString(const struct FName& PropertyName, const struct FString& NewPropertyValue);
	bool SetPropertyValueFromFloat(const struct FName& PropertyName, float NewPropertyValue);
	int RespawnTeam(unsigned char TeamId, bool bIncludingAlive);
	void RespawnPlayers(unsigned char TeamId);
	void RespawnPlayer(class AINSPlayerController* PlayerController);
	bool RespawnBot(class AINSAISoldierController* BotController);
	int RespawnAllTeams(bool bIncludingAlive);
	int ReinforceTeam(unsigned char TeamId);
	int ReinforceAllTeams();
	void PerformResupplyForSoldier(class AINSSoldier* Player, bool bRemoveCurrentItems);
	void OnWavesDepleted_DisableRestricted(class UReinforcementSystemComponent* Component);
	void OnWaveGained_ReenableRestricted(class UReinforcementSystemComponent* Component, int OldWaveCount);
	void OnVehicleEngineDestroyed(class UVehicleEnginePart* EnginePart, class AController* KillerPlayer, TArray<class AController*> AssisterPlayers);
	bool OnTextMessageSent(class AINSPlayerController* Speaker, const struct FText& Message, bool bTeamOnly);
	float OnSoldierTakeRadialDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo);
	float OnSoldierTakePointDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType, const struct FHitResult& HitInfo, const struct FVector& ShotFromDirection);
	float OnSoldierTakeAnyDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType);
	void OnScenarioSublevelLoaded();
	void OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers);
	void OnObjectiveChangeOwnership(class AObjectiveBase* Objective, unsigned char PreviousOwner, unsigned char NewOwners);
	void OnObjectiveBeginRig(class AObjectiveDestructible* Objective, class AINSSoldier* Rigger);
	void OnLoadedRulesets();
	void OnLoadedMutators();
	void OnFireSupportCalled(class AFireSupportBase* FireSupportActor, class AController* OfficerController, class AController* ObserverController);
	void OnFirearmFired(class AItemFirearm* Firearm, const struct FVector& Origin, const struct FVector& ShootDir);
	void OnEnterInitialMatchState();
	void OnCaptureObjectiveStartCapture(class AObjectiveCapturable* Objective, unsigned char NewOwners);
	void OnCaptureObjectiveProgressTick(class AObjectiveCapturable* Objective, unsigned char CapturingTeamId, unsigned char TeamWithMostPlayersId, TArray<class AINSPlayerState*> Tickers);
	void OnCaptureObjectiveProgressReset(class AObjectiveCapturable* Objective, TArray<class AINSPlayerState*> Resetters, float MaxCaptureProgress);
	void OnCaptureObjectiveChangeOwnership(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
	void OnCaptureObjectiveBeginOverlap(class AObjectiveCapturable* Objective, class AINSSoldier* Overlapper);
	bool OnCanBeDropped(class AItemBase* Item, class AINSSoldier* ItemOwner, bool* bCanDrop);
	bool NeedsBots();
	bool IsUsingOfficialRuleset();
	bool IsNightLightingLoaded();
	bool IsMutatedMode();
	bool IsFinalObjective(unsigned char ObjectiveId);
	bool IsCenterObjective(unsigned char ObjectiveId);
	bool IsAttackDefend();
	bool HasEnabledSpawnZones(unsigned char TeamId);
	void GiveSoldierInventory(class AINSSoldier* Player, bool bFromResupply);
	class UTheaterDefinition* GetTheaterDefinition();
	class ATeamInfo* GetTeam(unsigned char ID);
	class USquadLayout* GetSquadLayoutForFaction(class UFactionDefinition* Faction);
	int GetScoringFor(const struct FName& ScoreableAction);
	bool GetPropertyValueAsString(const struct FName& PropertyName, struct FString* OutPropertyValue);
	bool GetPropertyValueAsFloat(const struct FName& PropertyName, float* OutPropertyValue);
	int GetObjectiveCount();
	class AObjectiveBase* GetObjective(unsigned char ObjectiveId);
	void GetMutatorShortNames(TArray<struct FName>* OutNames);
	void GetInactiveObjectives(TArray<class AObjectiveBase*>* OutObjectives);
	class AObjectiveBase* GetFirstObjective();
	class AObjectiveBase* GetFirstActiveObjective();
	class AObjectiveBase* GetFinalObjective();
	class AObjectiveDestructible* GetDestructibleObjective(unsigned char ObjectiveId);
	unsigned char GetDefendingTeam();
	class AObjectiveBase* GetCenterObjective();
	class AObjectiveCapturable* GetCapturableObjective(unsigned char ObjectiveId);
	unsigned char GetAttackingTeam();
	class UINSAIDirector* GetAIDirector();
	void GetActiveObjectives(TArray<class AObjectiveBase*>* OutObjectives);
	int GetActiveObjectiveCount();
	void DisableSpawns(unsigned char TeamId);
	void DisableAllActiveObjectives(bool bHideFromHud);
	void ChangeTeam(class AController* Controller, unsigned char NewTeamId, bool bForce, bool bSuicideIfAlive);
	bool CanUseMutator(class UClass* MutatorClass);
	void CancelPendingRespawns(unsigned char TeamId);
	void BroadcastTextMessageTeam(unsigned char TeamId, const struct FText& Message, const struct FName& Type);
	void BroadcastTextMessageAllPlayers(const struct FText& Message, const struct FName& Type);
	void BroadcastTeamResponseEvent(const struct FCharacterResponseRequest& Request, unsigned char TeamId, class AINSSoldier* SpeakingSoldier, float Delay, bool bPrioritizeFirst);
	void BroadcastTeamRadioEvent(class UAkAudioEvent* Event, unsigned char TeamId, const struct FText& SubtitleText, class AActor* AssociatedActor, bool bInterrupt, float Delay, bool bOnlyOfficerAndObserver, bool bPrioritizeFirst, float QueuedTimeout);
	void BroadcastTeamMusicEvent(EMusicEvent Event, unsigned char TeamId, bool bIncludeSpectators);
	void BroadcastStationResponse(EStationResponse StationResponse, unsigned char TeamId, class AActor* AssociatedActor, bool bInterrupt, float Delay, bool bOnlyOfficerAndObserver);
	void BroadcastMusicEvent(EMusicEvent Event);
	void BroadcastCenterMessageTeam(unsigned char TeamId, const struct FText& Message);
	void BroadcastCenterMessageAllPlayers(const struct FText& Message);
	void BlueprintOnSoldierKilled(class AINSSoldier* SoldierPawn, float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AController* Assister, class AActor* DamageCauser);
	void BlueprintOnPlayerScoreChanged(class AINSPlayerState* PlayerState, int NewScore, int IncrementAmount, bool bIncrementedTeam);
	void BlueprintFactionsInitialized();
	void AssignPawnTeam(class APawn* Soldier, class AController* Controller);
	bool AllowObjectiveFullCapture(class AObjectiveCapturable* Objective, class AObjectiveBase** OutBlockedBy);
	void AdvanceSpawns(unsigned char ObjectiveId, unsigned char TeamId);
	float AdjustObjectiveCaptureSpeed(class AObjectiveCapturable* Objective, unsigned char TeamWithMostPlayers, int PlayerDifference, int Defenders);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMultiplayerMode
// 0x0230 (FullSize[0x0968] - InheritedSize[0x0738])
class AINSMultiplayerMode : public AINSGameMode
{
public:
	unsigned char                                      MinimumPlayers;                                            // 0x0738(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMinimumPlayersRequiresSingleTeam;                         // 0x0739(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasSeparateMinimumPlayersInProgress;                      // 0x073A(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MinimumPlayersInProgress;                                  // 0x073B(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GameStartingIntermissionTime;                              // 0x073C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GameStartingIntermissionTimeMatch;                         // 0x0740(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundLimit;                                                // 0x0744(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesPointsScoring;                                        // 0x0748(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetPointsEachRound;                                     // 0x0749(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRoundWonOnceWinLimitReached;                              // 0x074A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XSH4[0x1];                                     // 0x074B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                WinLimit;                                                  // 0x074C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GameTimeLimit;                                             // 0x0750(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreRoundTime;                                              // 0x0754(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundTime;                                                 // 0x0758(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                OvertimeTime;                                              // 0x075C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOvertime;                                                 // 0x0760(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRedoRoundOnDraw;                                          // 0x0761(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLastRoundDraw;                                            // 0x0762(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGamemodeOvertime;                                         // 0x0763(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGamemodeHasOvertime;                                      // 0x0764(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LZDQ[0x3];                                     // 0x0765(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                GamemodeOvertimeAdditionalRounds;                          // 0x0768(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                GamemodeOvertimeAdditionalWins;                            // 0x076C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                GamemodeOvertimeSwitchTeamsEveryRound;                     // 0x0770(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WinTime;                                                   // 0x0774(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostRoundTime;                                             // 0x0778(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostGameTime;                                              // 0x077C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostGameTimeExp;                                           // 0x0780(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0OZU[0xC];                                     // 0x0784(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TeamSwitchTime;                                            // 0x0790(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowUnbalancedTeams;                                     // 0x0794(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoAssignTeams;                                          // 0x0795(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoAssignClass;                                          // 0x0796(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPromptKitMenuIfAutoAssignedClass;                         // 0x0797(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SwitchTeamsEveryRound;                                     // 0x0798(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowPlayerTeamSelect;                                    // 0x079C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowThirdPersonSpectate;                                 // 0x079D(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDeathCamera;                                         // 0x079E(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W94X[0x1];                                     // 0x079F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScoreboardConfig                           ScoreboardConfig;                                          // 0x07A0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class AINSMultiplayerGameState*                    MultiplayerGameState;                                      // 0x07C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScenarioMultiplayer*                        MultiplayerScenario;                                       // 0x07D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseEliminationRules;                                      // 0x07D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SY4H[0x7];                                     // 0x07D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRoundOverDelegate;                                       // 0x07E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      LastWinningTeam;                                           // 0x07F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H40U[0x7];                                     // 0x07F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPreRoundStartedDelegate;                                 // 0x07F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRoundActiveDelegate;                                     // 0x0808(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FName                                       SubMatchState;                                             // 0x0818(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHeroCaptureDelegate;                                     // 0x0820(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsArcadeMode;                                             // 0x0830(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFireSupportAllowed;                                       // 0x0831(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDynamicInGameLessonsAllowed;                              // 0x0832(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ActiveObjectiveId;                                         // 0x0833(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPlayerStartsToScore;                                    // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePlayerStartScoring;                                    // 0x0838(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowFriendlyFire;                                        // 0x0839(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LLL2[0x2];                                     // 0x083A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FriendlyFireModifier;                                      // 0x083C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FriendlyFireReflect;                                       // 0x0840(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckLastPersonStanding;                                  // 0x0844(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstBloodObtained;                                       // 0x0845(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesAdvancedSpawning;                                     // 0x0846(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayersFrozen;                                            // 0x0847(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerSpawnedDelegate;                                   // 0x0848(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              BotWanderRadius;                                           // 0x0858(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotTerritoryRadius;                                        // 0x085C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotAmbushRadius;                                           // 0x0860(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotAmbushRatio;                                            // 0x0864(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLocalGame;                                                // 0x0868(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBots;                                                     // 0x0869(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D8DO[0x2];                                     // 0x086A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                BotQuota;                                                  // 0x086C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPendingBotQuotaAdjustment;                                // 0x0870(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TVXG[0x1];                                     // 0x0871(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAutoBalanceTeams;                                         // 0x0872(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableAutoBalanceTeamsAtZeroWaves;                       // 0x0873(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q3UB[0x4];                                     // 0x0874(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AutoBalanceDelay;                                          // 0x0878(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRestrictClassByPlayerLevel;                               // 0x087C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KOIL[0x3];                                     // 0x087D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AutobalanceRoundEndThreshold;                              // 0x0880(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutobalanceCheckInterval;                                  // 0x0884(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RF38[0x8];                                     // 0x0888(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_TeamBalance;                                   // 0x0890(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bMapVoting;                                                // 0x0898(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMapCycle;                                              // 0x0899(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseObjectiveCaptureGraceRespawn;                          // 0x089A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_USNA[0x1];                                     // 0x089B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ObjectiveCaptureGraceRespawnTime;                          // 0x089C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IB0K[0x15];                                    // 0x08A0(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      InitialSupply;                                             // 0x08B5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaximumSupply;                                             // 0x08B6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSupplyGainEnabled;                                        // 0x08B7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAwardSupplyInstantly;                                     // 0x08B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XCU2[0x3];                                     // 0x08B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SupplyGainFrequency;                                       // 0x08BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreRoundOver;                                          // 0x08C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreBotPurge;                                           // 0x08C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IVSP[0x6];                                     // 0x08C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     GameModeTagName;                                           // 0x08C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVoiceIntermissionAllowAll;                                // 0x08D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVoiceRadioBroadcastLocal;                                 // 0x08D9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZG5Z[0x16];                                    // 0x08DA(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAutoRecordReplaysDedicated;                               // 0x08F0(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D372[0x2F];                                    // 0x08F1(0x002F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PlaylistName;                                              // 0x0920(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IdleLimit;                                                 // 0x0930(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IdleLimitLowReinforcements;                                // 0x0934(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IdleLimitLastOneStandingSpawnZone;                         // 0x0938(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IdleLimitLastOneStandingCombatZone;                        // 0x093C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IdleCheckFrequency;                                        // 0x0940(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastIdleCheckTimestamp;                                    // 0x0944(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeaverPenaltyPlayerLeaveTime;                              // 0x0948(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeaverPenaltyGameStartTimeLimit;                           // 0x094C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeaverPenaltyPlayerLeftTimeLimit;                          // 0x0950(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VOCG[0x4];                                     // 0x0954(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                HealthSnapshotTimer;                                       // 0x0958(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameStatsSession*                           GameStatsMatchSession;                                     // 0x0960(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMultiplayerMode");
		return ptr;
	}



	void UpdateVoiceChatChannelFlagsForPlayer(class AINSPlayerController* PlayerController);
	void UpdateVoiceChatChannelFlagsForAll();
	void SetTransitionTimer(float Timer);
	void SetSubMatchState(const struct FName& NewState);
	void SetRoundTimer(int Timer);
	void SetNeutralSpawnZones(bool bEnabled);
	float ScorePlayerStart(class AController* Player, class APlayerStart* PlayerStart);
	void RoundStateChangeDelegate__DelegateSignature();
	void RoundRestart();
	void RoundReset();
	void RoundOverDraw(ERoundConclusion RoundEndReason);
	void RoundOverByTeam(ERoundConclusion RoundEndReason, class ATeamInfo* TeamInfo);
	void RoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
	void RoundActiveTick();
	void RespawnAllBots();
	void ResetRoundWins(bool bResetScores);
	void PlayObjectiveAnnouncement(class UAkAudioEvent* Sound, int ObjectiveId, unsigned char TeamId);
	void PlayAnnouncement(class UAkAudioEvent* Sound, unsigned char TeamId);
	void OnUpdateServerSettings(class AINSMultiplayerGameState* InMultiplayerGameState);
	void OnTeamChanged(class AController* Controller, unsigned char NewTeamId, bool bForced, bool bDidKillPlayer);
	bool OnRoundTimerExpired();
	void OnRoundStarted();
	void OnRoundReset();
	void OnRoundOverDelegate__DelegateSignature(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
	void OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
	void OnResetObjectives();
	void OnPreRoundStarted();
	void OnPreRoundPreReset();
	void OnPlayerConfirmedLoadout(class AINSPlayerController* PlayerController, bool bWasAlreadyConfirmed);
	void OnPlayerClassAssigned(class AController* Controller, class UPlayerClass* PlayerClass);
	bool OnPlayerBecomeSpectator(class AINSPlayerController* PlayerController);
	void OnInitObjectives();
	void OnHeroCaptureDelegate__DelegateSignature(class AINSPlayerState* HeroPlayer);
	void OnGameStatsRoundSubmitted(const struct FGameStatsRoundRewards& Rewards, int RoundNumber);
	bool IsValidPlayerStart(class AController* Player, class APlayerStart* Start);
	bool IsSingleRoundMode();
	bool IsRoundRunning();
	bool IsRoundExpired();
	bool IsPreRound();
	bool IsPlayerStartEnabled(class AController* Player, class APlayerStart* Start);
	bool IsGameOver();
	bool IsCoop();
	bool IsArcade();
	void InvalidateRoundTimer();
	void IncrementTeamPointsById(unsigned char TeamId, int Amount, bool bCheckWinningConditions);
	void IncrementTeamPoints(class ATeamInfo* Team, int Amount, bool bCheckWinningConditions);
	EVoiceChatChannelFlags GetVoiceChatChannelFlagsForPlayer(class AINSPlayerController* PlayerController);
	class ATeamInfo* GetTeamWithMostPoints();
	class ATeamInfo* GetTeamWithMajorityControl(bool bIncludeContested);
	float GetRoundTimer();
	float GetRoundTimeElapsed();
	int GetRoundsPlayed();
	bool GetRoundOverText(ERoundConclusion RoundEndReason, unsigned char WinningTeam, struct FText* OutText);
	int GetRoundNumber();
	class UPlayerClass* GetPlayerClassForBot(class AINSAISoldierController* Bot, class ATeamInfo* Team);
	int GetNumObjectivesOwnedForTeam(unsigned char TeamId, bool bIncludeContested);
	int GetNumObjectivesContested();
	class ATeamInfo* GetDefaultWinningTeam();
	class UPlayerClass* GetAutoAssignPlayerClass(class AController* Controller, class ATeamInfo* DesiredTeam, bool* bOutPromptLoadoutMenu);
	void FreezePlayers(bool bFrozen);
	void ExtendRoundTimer(int Seconds);
	void DefaultRoundExpiry();
	void ClearTransitionTimer();
	void ClearPendingWaves();
	void ClearLastOneStanding(class ATeamInfo* Team);
	void CheckTeamEliminationSingleLife();
	void CheckSupplyReward(class AINSPlayerController* Controller);
	void CheckPointsWinningConditions();
	void CheckIdlePlayers();
	void CheckFullCapture();
	void CheckForLastPersonStanding(class ATeamInfo* Team);
	void CheckEliminationRules();
	void CheatCaptureObjective();
	void BenchmarkOnGameHealthSnapshot();
	void BalanceTeams();
	void AwardTeamSupply(unsigned char TeamId, int SupplyAmount);
	unsigned char AutoAssignTeam(class AController* Controller);
	bool AtWinningCondition();
	bool AtOvertimeCondition();
	bool AtGameOverCondition();
	bool AreTeamsCurrentlyUnbalanced();
	bool AreAnyObjectivesContested();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCoopMode
// 0x0120 (FullSize[0x0A88] - InheritedSize[0x0968])
class AINSCoopMode : public AINSMultiplayerMode
{
public:
	bool                                               bBotsUseHumanLoadouts;                                     // 0x0968(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7WJ8[0x7];                                     // 0x0969(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USquadLayout*                                OverrideBotSquadLayoutAllFactions;                         // 0x0970(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OverrideBotSquadLayouts[0x50];                             // 0x0978(0x0050) UNKNOWN PROPERTY: MapProperty
	class AVehicleBase*                                PlayerInsertionVehicle;                                    // 0x09C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AVehicleBase*>                        InsertionVehicles;                                         // 0x09D0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASpawnerVehicle*>                     InsertionVehicleSpawners;                                  // 0x09E0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReinforcementSystemComponent*               SoloReinforcementSystem;                                   // 0x09F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SoloWaves;                                                 // 0x09F8(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SoloWaveIncrementOnObjectiveCapture;                       // 0x09F9(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U5OS[0x2];                                     // 0x09FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SoloReinforcementTime;                                     // 0x09FC(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SoloRoundTime;                                             // 0x0A00(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxPlayersToScaleEnemyCount;                               // 0x0A04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseVehicleInsertion;                                      // 0x0A08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TDA3[0x3];                                     // 0x0A09(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AIDifficulty;                                              // 0x0A0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FriendlyBotQuota;                                          // 0x0A10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SoloEnemies;                                               // 0x0A14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinimumEnemies;                                            // 0x0A18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumEnemies;                                            // 0x0A1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoseWhenAllPlayersDead;                                   // 0x0A20(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_40MW[0x3];                                     // 0x0A21(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AlarmDuration;                                             // 0x0A24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2ABT[0x8];                                     // 0x0A28(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UPlayerClass*, float>                   ClassDeathTimestamp;                                       // 0x0A30(0x0050) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NUDR[0x8];                                     // 0x0A80(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCoopMode");
		return ptr;
	}



	void StartAlarms();
	void RetreatBotsFromObjective(class AObjectiveBase* RetreatObjective);
	void OnAllHumanPlayersEliminated();
	bool IsSplitScreen();
	void EnableBotSenses();
	void DisableBotSenses();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSurvivalGameMode
// 0x01B0 (FullSize[0x0C38] - InheritedSize[0x0A88])
class AINSSurvivalGameMode : public AINSCoopMode
{
public:
	class AINSSurvivalGameState*                       SurvivalGameState;                                         // 0x0A88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundTimeExtension;                                        // 0x0A90(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumWaves;                                                  // 0x0A94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentWave;                                               // 0x0A98(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableExtractionObjective;                                // 0x0A9C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExtractionInProgress;                                     // 0x0A9D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KEUF[0x2];                                     // 0x0A9E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExtractionObjectiveHoldTime;                               // 0x0AA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtractionSpawnStopTime;                                   // 0x0AA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotDPRRespawnFinal;                                        // 0x0AA8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotDPRRespawnFirst;                                        // 0x0AAC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumBotsPerCompletedObjective;                          // 0x0AB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumBotsPerCompletedObjective;                          // 0x0AB4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetLoadoutOnNewRound;                                   // 0x0AB8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BBR4[0x3];                                     // 0x0AB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ObjectiveDefendDistance;                                   // 0x0ABC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotMinimumSpawnRange;                                      // 0x0AC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotMaximumSpawnRange;                                      // 0x0AC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotRespawnDistance;                                        // 0x0AC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotSpawnDelay;                                             // 0x0ACC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotRespawnDelay;                                           // 0x0AD0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotRepositionDelay;                                        // 0x0AD4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotFleeDuration;                                           // 0x0AD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NJHR[0x4];                                     // 0x0ADC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SurvivalWaveConfigAssetPath[0x28];                         // 0x0AE0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SurvivalNightTimeWaveConfigAssetPath[0x28];                // 0x0B08(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class USurvivalWaveConfig*                         SurvivalWaveConfig;                                        // 0x0B30(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USurvivalWaveConfig*                         SurvivalNightTimeWaveConfig;                               // 0x0B38(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AObjectiveBase*>                      ObjectiveOrder;                                            // 0x0B40(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ExtractionFireSupport[0x28];                               // 0x0B50(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bUseSpecialWaves;                                          // 0x0B78(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGL8[0x3];                                     // 0x0B79(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpecialWaveFrequency;                                      // 0x0B7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PZUZ[0xB8];                                    // 0x0B80(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSurvivalGameMode");
		return ptr;
	}



	void SkipToExtraction();
	void SetupObjectives();
	void PopulateHelicopterWithPlayers();
	bool IsFinalWave();
	class USurvivalWaveConfig* GetWaveConfig();
	class USurvivalScenarioData* GetSurvivalScenarioData();
	class AVehicleHoveringBase* FindExtractionHelicopter();
	void ActivateNextObjective();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.SurvivalWaveConfig
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class USurvivalWaveConfig : public UDataAsset
{
public:
	TArray<struct FSurvivalCustomWave>                 CustomWaves;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSurvivalSpecialWave>                SpecialWaves;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSurvivalFinalWave                          FinalWaveSettings;                                         // 0x0050(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.SurvivalWaveConfig");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSpectatorPawn
// 0x0080 (FullSize[0x0328] - InheritedSize[0x02A8])
class AINSSpectatorPawn : public ASpectatorPawn
{
public:
	TWeakObjectPtr<class AINSPlayerState>              MostRecentViewedPlayer;                                    // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               CameraModes;                                               // 0x02B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentSpectatorMode;                                      // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YS1G[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowFreeRoamPlayerCycle;                                 // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCameraSmoothing;                                       // 0x02C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XFE3[0x56];                                    // 0x02CA(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AdminMenuWidget;                                           // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSpectatorPawn");
		return ptr;
	}



	void ToggleAdminMenu();
	void SpectatePreviousPlayer();
	void SpectatePlayerOnTeam(unsigned char TeamIndex, int Offset, bool bIgnoreDead);
	void SpectateNextPlayer();
	void SetViewTargetPlayerState(class APlayerState* InPlayerState);
	void SetViewTarget(class AActor* Target, const struct FViewTargetTransitionParams& TransitionParams);
	void Server_AdminCheat(const struct FString& Command);
	void ResetCameraPosition();
	void AdminCheat(const struct FString& Command);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCharacter
// 0x0258 (FullSize[0x0710] - InheritedSize[0x04B8])
class AINSCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData_NHYM[0x8];                                     // 0x04B8(0x0008) Fix Super Size
	struct FRotator                                    ReplicatedControllerRotation;                              // 0x04C0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SmoothedReplicatedControllerRotation;                      // 0x04CC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AController*                                 LastPossesser;                                             // 0x04D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3E3B[0x28];                                    // 0x04E0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDamageLogComponent*                         DamageLogComponent;                                        // 0x0508(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bIsDying : 1;                                              // 0x0510(0x0001) BIT_FIELD  (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EJ7L[0x7];                                     // 0x0511(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ServerTimeSpawned;                                         // 0x0518(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CachedDamage;                                              // 0x051C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageEvent                                CachedDamageEvent;                                         // 0x0520(0x0010) (NativeAccessSpecifierPublic)
	class AController*                                 CachedEventInstigator;                                     // 0x0530(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      CachedDamageCauser;                                        // 0x0538(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CachedHitPosition;                                         // 0x0540(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CachedDamageForce;                                         // 0x054C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfDeath;                                               // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Health;                                                    // 0x055C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                 // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGodMode;                                                  // 0x0564(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PWX1[0x3];                                     // 0x0565(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FBoneDamageMod>          BoneDamageModifiers;                                       // 0x0568(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               PhysicsAssetOverrideAlive;                                 // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               PhysicsAssetOverrideDead;                                  // 0x05C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInRagdoll;                                                // 0x05C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldSpawnRagdoll;                                       // 0x05C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3MLI[0x6];                                     // 0x05CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USurfaceReaction*                            RagdollCollisionSurfaceReaction;                           // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollCollisionEventMinSpeed;                             // 0x05D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollCollisionEventMaxSpeed;                             // 0x05DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRagdollCollisionEvent;                                 // 0x05E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollCollisionEventMinTimeBetween;                       // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageVelocityModifier;                                    // 0x05E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageVelocityModifierRecoveryRate;                        // 0x05EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterTakeDamage;                                     // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            DamageSurfaceReactionDefault;                              // 0x0600(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ParticleSystemDeath;                                       // 0x0608(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBloodSplatterData*                          BloodSplatterData;                                         // 0x0610(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDismembermentSet*                           DismembermentSet;                                          // 0x0618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IgniteFinishTimestamp;                                     // 0x0620(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnFire;                                                   // 0x0624(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1V0A[0x3];                                     // 0x0625(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_FireDamage;                                    // 0x0628(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    BurnParticleSystemComponent;                               // 0x0630(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          FireAkComponent;                                           // 0x0638(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventBurningStart;                                       // 0x0640(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventBurningFinish;                                      // 0x0648(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                BloodPoolTimer;                                            // 0x0650(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKilledDelegate;                                          // 0x0658(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ARagdoll>                     RagdollActor;                                              // 0x0668(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3C6A[0x10];                                    // 0x0670(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKilledInVehicleSeatDelegate;                             // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnteredVehicleDelegate;                                  // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnExitedVehicleDelegate;                                   // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UVehicleSeatComponent*                       VehicleSeat;                                               // 0x06B0(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVehicleSeatComponent*                       LastSeat;                                                  // 0x06B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  InitialMeshTransform;                                      // 0x06C0(0x0030) (Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class AActor*                                      LastHitActor;                                              // 0x06F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QCH2[0x14];                                    // 0x06F8(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastResetId;                                               // 0x070C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCharacter");
		return ptr;
	}



	void TickFireDamage();
	void Server_ToggleVehicleLights();
	void Server_StopHonkHorn();
	void Server_StopHandbreak();
	void Server_StartHonkHorn();
	void Server_StartHandbreak();
	void ResetMeshTransform();
	void OnRep_VehicleSeat();
	void OnRep_OnFire();
	void OnRep_IsDying();
	void OnRagdollHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnCapsuleOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnAuthoritiveDamageReaction(const struct FNetHitReaction& Hit);
	void MulticastResetCharacterAt(const struct FVector_NetQuantize100& NewLocation, int ResetId);
	void MulticastHideCharacter(int ResetId);
	void MulticastAuthoritiveDamageReaction(const struct FNetHitReaction& Hit);
	bool IsAIControlled();
	void Ignite(float Duration);
	bool HasRecentlySpawned(float Threshold);
	bool GetVehicleSeatCameraLocation(struct FVector* OutLocation, struct FRotator* OutRotation);
	class UVehicleSeatComponent* GetVehicleSeat();
	float GetTimeSinceSpawn();
	unsigned char GetSignificanceLevel();
	struct FRotator GetRepresentativeRotation();
	int GetCharacterMeshLOD();
	void DoBloodSplatterEffect(const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, TEnumAsByte<EPhysicalSurface> PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot, bool bBroadcast);
	float CalcGenericDamageVelocityModifier(float Damage, const struct FName& HitBone);
	float CalcDamageVelocityModifier(float Damage, const struct FDamageEvent& DamageEvent, const struct FName& HitBone);
	void BroadcastSurfaceHitReaction(class USurfaceReaction* SurfaceReaction, const struct FHitResult& Hit);
	void BroadcastDeath(float KillingDamage, class UClass* DamageType, const struct FVector& HitPosition, const struct FVector& DamageForce, class AController* Killer, class AActor* DamageCauser);
	void BroadcastBloodSplatterEffect(const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, TEnumAsByte<EPhysicalSurface> PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSoldier
// 0x1850 (FullSize[0x1F60] - InheritedSize[0x0710])
class AINSSoldier : public AINSCharacter
{
public:
	unsigned char                                      UnknownData_ZN3P[0x20];                                    // 0x0710(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EUsablePriority                                    UsePriority;                                               // 0x0730(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NVRE[0x7];                                     // 0x0731(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UCosmeticItem*>                       SpawnedCosmetics;                                          // 0x0738(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAI;                                                     // 0x0748(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WHOK[0x7];                                     // 0x0749(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USharedCosmeticState*                        FallbackSharedCosmeticState;                               // 0x0750(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                               PlaceholderCharacterMesh;                                  // 0x0758(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFactionDefinition*                          PlaceholderCosmeticFaction;                                // 0x0760(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCurrentAppearanceInvalidated;                             // 0x0768(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1K4I[0x7];                                     // 0x0769(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Delegate_OnMergedMeshSet;                                  // 0x0770(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPlayerClassAttributes                      PlayerClassAttributes;                                     // 0x0780(0x0034) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A4Z7[0x4];                                     // 0x07B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnClassAttributesUpdatedDelegate;                          // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayerClass*                                PlayerClass;                                               // 0x07C8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerClassChanged;                                      // 0x07D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayerClassComponent*                       PlayerClassComponent;                                      // 0x07E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequestRadioTimestamp;                                     // 0x07E8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequestBackupTimestamp;                                    // 0x07EC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   ArmMesh1P;                                                 // 0x07F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSSkeletalMeshComponent*                   WeaponMesh1P;                                              // 0x07F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CAC4[0x8];                                     // 0x0800(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSSkeletalMeshComponent*                   BodyMesh1P;                                                // 0x0808(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMeshComponent*>              Mesh3PAttachedMeshes;                                      // 0x0810(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewModelFOV;                                              // 0x0820(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseTurnRateMouse;                                         // 0x0824(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseLookUpRateMouse;                                       // 0x0828(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseTurnRateGamepad;                                       // 0x082C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseLookUpRateGamepad;                                     // 0x0830(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GamePadFocusMultiplier;                                    // 0x0834(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeLockOnAngleThreshold;                                // 0x0838(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeLockOnMaxMultiplier;                                 // 0x083C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseStrafeLockOn;                                          // 0x0840(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NX1O[0x1F];                                    // 0x0841(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSPawnSensingComponent*                    PawnSensing;                                               // 0x0860(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPawnNoiseEmitterComponent*                  PawnNoiseEmitter;                                          // 0x0868(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGivenInventory;                                           // 0x0870(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_47RO[0x7];                                     // 0x0871(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DefaultInventory[0x10];                                    // 0x0878(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class AItemBase*>                           Inventory;                                                 // 0x0888(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int, class AItemGrenade*>                     OrderedInventoryGrenades;                                  // 0x0898(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AItemEquipable*                              CurrentWeapon;                                             // 0x08E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemEquipable*                              PreviousWeapon;                                            // 0x08F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemEquipable*                              PendingWeapon;                                             // 0x08F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemEquipable*                              SimulatedPendingWeapon;                                    // 0x0900(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemEquipable*                              CurrentPrimaryWeapon;                                      // 0x0908(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AItemBase>>            DroppedItems;                                              // 0x0910(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStoredAmmo>                         Ammo;                                                      // 0x0920(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastResupplyTime;                                          // 0x0930(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0J4A[0x4];                                     // 0x0934(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    NotifyInventoryItemAdded;                                  // 0x0938(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    NotifyInventoryItemRemoved;                                // 0x0948(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInventoryChangedDelegate;                                // 0x0958(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              Weight;                                                    // 0x0968(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SimulatedWeight;                                           // 0x096C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          MaxStaminaByWeight;                                        // 0x0970(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCollisionPrevention>       IgnoredCharacters;                                         // 0x09F8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JV9W[0x4];                                     // 0x0A08(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedPlayerSpeed;                                         // 0x0A0C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLandedFromJump;                                           // 0x0A10(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJumped;                                                   // 0x0A11(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R00E[0x2];                                     // 0x0A12(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LandingVelocity;                                           // 0x0A14(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingTime;                                               // 0x0A18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpLandWeaponRestrictTime;                                // 0x0A1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSurfaceReactionPair                        JumpReaction;                                              // 0x0A20(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceReactionPair                        LandReaction;                                              // 0x0A30(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceReactionPair                        ProneReaction;                                             // 0x0A40(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceReactionPair                        UnproneReaction;                                           // 0x0A50(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              TimeBetweenJumps;                                          // 0x0A60(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BunnyhopTimer;                                             // 0x0A64(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBreachTime;                                            // 0x0A68(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToKickDoor;                                            // 0x0A6C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotalTimeToKickDoor;                                       // 0x0A70(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoorBreachTimer;                                           // 0x0A74(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotalTimeToKickDoorTimer;                                  // 0x0A78(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ReplicatedbIsKickInProgress;                               // 0x0A7C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsKickInProgress;                                         // 0x0A7D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KHIU[0x2];                                     // 0x0A7E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Delegate_OnDoorKick;                                       // 0x0A80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ADoor*                                       DoorToKick;                                                // 0x0A90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoorKickYawPivot;                                          // 0x0A98(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoorKickYawLimit;                                          // 0x0A9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoldierStance                                     Stance;                                                    // 0x0AA0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoldierStance                                     ReplicatedStance;                                          // 0x0AA1(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FH2P[0x1];                                     // 0x0AA2(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ESoldierStance                                     DesiredStance;                                             // 0x0AA3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoldierStance                                     ReplicatedDesiredStance;                                   // 0x0AA4(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReloadingProneTransition;                                 // 0x0AA5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELadderState                                       LadderState;                                               // 0x0AA6(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O33Z[0x1];                                     // 0x0AA7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInertialEasingContainer1D                  CrawlingEasing;                                            // 0x0AA8(0x0018) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bWasCrawling;                                              // 0x0AC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L8B0[0x3];                                     // 0x0AC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CrawlingTime;                                              // 0x0AC4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrawlingGraceTime;                                         // 0x0AC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInertialEasingContainer1D                  SprintEasing;                                              // 0x0ACC(0x0018) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4DKY[0x4];                                     // 0x0AE4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StanceDownProneTime;                                       // 0x0AE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StanceDoubleClickTime;                                     // 0x0AEC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoldierStanceTransition                           CurrentStanceTransition;                                   // 0x0AF0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_09TS[0x3];                                     // 0x0AF1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StanceTransitionTime;                                      // 0x0AF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInSprintMode;                                             // 0x0AF8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInWalkMode;                                               // 0x0AF9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P38O[0xA];                                     // 0x0AFA(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPressedSprint;                                            // 0x0B04(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPressedSprintDuringWeaponInteraction;                     // 0x0B05(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5CPL[0x1];                                     // 0x0B06(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bReachedSprintingSpeed;                                    // 0x0B07(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bToggledSprint;                                            // 0x0B08(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPressedWalk;                                              // 0x0B09(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J7UG[0x2];                                     // 0x0B0A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FatalFallSpeed;                                            // 0x0B0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SafeFallSpeed;                                             // 0x0B10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneYawLimit;                                             // 0x0B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneYawPivot;                                             // 0x0B18(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideYawLimit;                                             // 0x0B1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideYawPivot;                                             // 0x0B20(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderYawLimit;                                            // 0x0B24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderADSYawLimit;                                         // 0x0B28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderYawPivot;                                            // 0x0B2C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodYawPivot;                                             // 0x0B30(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodYawLimit;                                             // 0x0B34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseYawPivot;                                               // 0x0B38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BipodPronePitchLimits;                                     // 0x0B3C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BipodLowestStandingPitchLimits;                            // 0x0B44(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BipodHighestStandingPitchLimits;                           // 0x0B4C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodMaxPitchHeight;                                       // 0x0B54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BipodMinPitchHeight;                                       // 0x0B58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultYawPivot;                                             // 0x0B5C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultYawLimit;                                             // 0x0B60(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PHJX[0x294];                                   // 0x0B64(0x0294) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bFocusMode;                                                // 0x0DF8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FBA7[0x3];                                     // 0x0DF9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocusTime;                                                 // 0x0DFC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NextFocusTime;                                             // 0x0E00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFocusTime;                                              // 0x0E04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PFYL[0x18];                                    // 0x0E08(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          FocusTimeByStamina;                                        // 0x0E20(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          FocusCooldownByStamina;                                    // 0x0EA8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              SimulatedStamina;                                          // 0x0F30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Stamina;                                                   // 0x0F34(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxStamina;                                                // 0x0F38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinStaminaToBreachDoor;                                    // 0x0F3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintStaminaConsumptionRate;                              // 0x0F40(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpStaminaConsumption;                                    // 0x0F44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreachingStaminaConsumption;                               // 0x0F48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRecoveryRate;                                       // 0x0F4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRecoveryStandFactor;                                // 0x0F50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRecoveryCrouchFactor;                               // 0x0F54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRecoveryProneFactor;                                // 0x0F58(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRecoveryMoveFactor;                                 // 0x0F5C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGamepadHoldingSprint;                                     // 0x0F60(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TI2O[0x1];                                     // 0x0F61(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPressedFire;                                              // 0x0F62(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPressedAltFire;                                           // 0x0F63(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPressedSights;                                            // 0x0F64(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPressedToggleSights;                                      // 0x0F65(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bToggledSights;                                            // 0x0F66(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPressedReload;                                            // 0x0F67(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadPressTime;                                           // 0x0F68(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QBOK[0x4];                                     // 0x0F6C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedViewHeight;                                          // 0x0F70(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LastControlRotation;                                       // 0x0F74(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              CameraAnimationAlpha;                                      // 0x0F80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XZEL[0x4];                                     // 0x0F84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSmoothTransition                           SmoothTransition;                                          // 0x0F88(0x0060) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              StandEyeHeight;                                            // 0x0FE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneEyeHeight;                                            // 0x0FEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInertialEasingContainer1D                  CrouchViewEasing;                                          // 0x0FF0(0x0018) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FInertialEasingContainer1D                  ProneViewEasing;                                           // 0x1008(0x0018) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       DeathCameraSocketName;                                     // 0x1020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SideRollSpeed;                                             // 0x1028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SideRollAngle;                                             // 0x102C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewBobFrequency;                                          // 0x1030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewBobAmplitude;                                          // 0x1034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchIronsightOffset;                                     // 0x1038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   TurningSpringSensitivity1P;                                // 0x103C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   MovementSpringMaxSpeed1P;                                  // 0x1044(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   MovementSpringMaxOffset1P;                                 // 0x104C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDampingEasingContainer3D                   TurningSpring1P;                                           // 0x1054(0x0040) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FDampingEasingContainer3D                   MovementSpring1P;                                          // 0x1094(0x0040) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FInertialEasingContainer1D                  IntertiaSpring1P;                                          // 0x10D4(0x0018) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FDampingEasingContainer3D                   SightTransitionDiveSpring1P;                               // 0x10EC(0x0040) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FInertialEasingContainer1D                  SightTransitionDiveInertia1P;                              // 0x112C(0x0018) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SightsTransitionDive1P;                                    // 0x1144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MeshOffsetCrouching1P;                                     // 0x1148(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MeshOffsetProne1P;                                         // 0x1154(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MeshOffsetBase1P;                                          // 0x1160(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MeshOffsetPointShooting1P;                                 // 0x116C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyStanceMeshOffset;                                    // 0x1178(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IOUM[0x3];                                     // 0x1179(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeshZOffset;                                               // 0x117C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshZOffsetProne;                                          // 0x1180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeaimAlpha1P;                                            // 0x1184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                MeshPitchOffsetCurve1P;                                    // 0x1188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSPlayerState*                             INSPlayerState;                                            // 0x1190(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APlayerState>                 LastPlayerState;                                           // 0x1198(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NSQN[0x4];                                     // 0x11A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimedUsableActor                           CurrentHeldUsableActor;                                    // 0x11A4(0x001C) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	float                                              UseTapTime;                                                // 0x11C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseSphereSize;                                             // 0x11C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseSphereSizeVehicle;                                      // 0x11C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseDistance;                                               // 0x11CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUseActorInteractedDelegate;                              // 0x11D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIncapacitated;                                            // 0x11E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N5LX[0x3];                                     // 0x11E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeathFadeOutTimeFromHeadshot;                              // 0x11E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathFadeOutTime;                                          // 0x11E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3WTY[0x4];                                     // 0x11EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          LandingViewDipScale;                                       // 0x11F0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9WCK[0x8];                                     // 0x1278(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                DeathUnpossesTimer;                                        // 0x1280(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchExplosiveDamageModifier;                             // 0x1288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneExplosiveDamageModifier;                              // 0x128C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastBulletId;                                              // 0x1290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EW5W[0x4];                                     // 0x1294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 KilledBy;                                                  // 0x1298(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeathCamera                                DeathCamera;                                               // 0x12A0(0x0070) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bCameraIsTargetingKillLocation;                            // 0x1310(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JA4H[0x7];                                     // 0x1311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             ParticleSystemHeadshot;                                    // 0x1318(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventHeadshot;                                           // 0x1320(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadshotAudioAttenuationDist;                              // 0x1328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TKTZ[0x4];                                     // 0x132C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AkEventBulletShot;                                         // 0x1330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BulletHitAudioAttenuationDist;                             // 0x1338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C8O0[0x4];                                     // 0x133C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    Freeaim;                                                   // 0x1340(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                ReplicatedFreeaim;                                         // 0x134C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    FreeaimSimulatedProxy;                                     // 0x1350(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              FreeaimSprintCenterTime;                                   // 0x135C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RYT7[0x8];                                     // 0x1360(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ServerUpdateFreeaimTimeout;                                // 0x1368(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    AimPunchAngle;                                             // 0x136C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     AimPunchAngleVel;                                          // 0x1378(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchRecoilAccumulator;                                    // 0x1384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawRecoilAccumulator;                                      // 0x1388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRecoilTime;                                            // 0x138C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilTimeRemaining;                                       // 0x1390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RecoilShots;                                               // 0x1394(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ViewPunchAngle;                                            // 0x1398(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     WeaponLocationBob;                                         // 0x13A4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponHeightBob;                                           // 0x13B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    WeaponRotationBob;                                         // 0x13B4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZL7Y[0xC];                                     // 0x13C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SwayFactor;                                                // 0x13CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESuppressionContext                                SuppressionContext;                                        // 0x13D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7FV3[0x3];                                     // 0x13D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Suppression;                                               // 0x13D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionHoldTime;                                       // 0x13D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionDecayRate;                                      // 0x13DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionMaxHoldTime;                                    // 0x13E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashDuration;                                             // 0x13E4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashFadeTime;                                             // 0x13E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashAlpha;                                                // 0x13EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          SensitivityScalingForBlindness;                            // 0x13F0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              StunDuration;                                              // 0x1478(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFactionAnimationStyle                             FactionWeaponAnimationStyle;                               // 0x147C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHardcoreMovementAnimations;                               // 0x147D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x147E(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInRestrictedArea;                                         // 0x147F(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RestrictedAreaCount;                                       // 0x1480(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOutsidePlayableArea;                                      // 0x1481(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PlayableAreaCount;                                         // 0x1482(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RZLB[0x1];                                     // 0x1483(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayableAreaLeaveTime;                                     // 0x1484(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayableAreaKillTime;                                      // 0x1488(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RestrictedAreaEnterTime;                                   // 0x148C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponRestrictionTime;                                     // 0x1490(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoredByAI;                                              // 0x1494(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W4HV[0x3];                                     // 0x1495(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAISquad*                                 AISquad;                                                   // 0x1498(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AkComponent;                                               // 0x14A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          StaminaAkComponent;                                        // 0x14A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UVoiceComponent>              ActiveVoiceComponent;                                      // 0x14B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UINSAudioComponent*                          AkTempComponent;                                           // 0x14B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               AkEventStaminaBreathing;                                   // 0x14C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLeanOutFP;                                          // 0x14C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLeanInFP;                                           // 0x14D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLeanOutTP;                                          // 0x14D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLeanInTP;                                           // 0x14E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLadderSlide;                                        // 0x14E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLadderSlideOff;                                     // 0x14F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventLadderSlideOn;                                      // 0x14F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventFallDamage;                                         // 0x1500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToPlayFullSlideAudio;                                  // 0x1508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoverySoundQueueThreshold;                               // 0x150C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoverySoundPlayThreshold;                                // 0x1510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S7CM[0xC];                                     // 0x1514(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterDialogueComponent*                 CharacterDialogueComponent;                                // 0x1520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterDialogueDictionary*                DialogueDictionary;                                        // 0x1528(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFireSupportRequest                         LastOfficerRequest;                                        // 0x1530(0x0028) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XI4D[0x8];                                     // 0x1558(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_QueuedDialogue;                                // 0x1560(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCharacterResponseRequest                   LastQueuedDialogue;                                        // 0x1568(0x0040) (NativeAccessSpecifierPrivate)
	struct FTimerHandle                                ObserverResponseTimerHandle;                               // 0x15A8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFireSupportRequest                         LastFireSupportRequest;                                    // 0x15B0(0x0028) (NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MWV4[0x8];                                     // 0x15D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          LeanCurveStandingStationary;                               // 0x15E0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          LeanCurveStandingMoving;                                   // 0x1668(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          LeanCurveCrouchingStationary;                              // 0x16F0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          LeanCurveCrouchingMoving;                                  // 0x1778(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              LeanStandingYOffset;                                       // 0x1800(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanCrouchingYOffset;                                      // 0x1804(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanSpeed;                                                 // 0x1808(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleLeanSpeed;                                          // 0x180C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanAutoWallDistance;                                      // 0x1810(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanAutoClearDistance;                                     // 0x1814(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanRollAmount;                                            // 0x1818(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReplicatedLeanAmount;                                      // 0x181C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanAmount;                                                // 0x1820(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanTarget;                                                // 0x1824(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FPAutoLeanAmount;                                          // 0x1828(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FPAutoLeanTarget;                                          // 0x182C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELeanDirection                                     LeanDirection;                                             // 0x1830(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I2HL[0x3];                                     // 0x1831(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeanAutoDistanceInvalidate;                                // 0x1834(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAtMaxLean;                                                // 0x1838(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CFV3[0x17];                                    // 0x1839(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PainEffectWeight;                                          // 0x1850(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PainEffectTime;                                            // 0x1854(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionDirtDuration;                                   // 0x1858(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSuppressionTime;                                       // 0x185C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageSuppressionIncrement;                                // 0x1860(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageSuppressionHoldTime;                                 // 0x1864(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ExplosionCenterUV;                                         // 0x1868(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZGZE[0x4];                                     // 0x1874(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFoliageInteractionComponent*                FoliageInteractionComponent;                               // 0x1878(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AProjectileSmokeGrenade*>             SmokeGrenades;                                             // 0x1880(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRelaxed;                                                // 0x1890(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PAZ3[0x7];                                     // 0x1891(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundscapeComponent*                        SoundscapeComponent;                                       // 0x1898(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CurrentWeaponSwitch;                                       // 0x18A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, float>                        FootstepRTPCModifiers;                                     // 0x18A8(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          FootstepDelayBySpeed;                                      // 0x18F8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              FootstepSurfaceTraceLength;                                // 0x1980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8RCH[0x4];                                     // 0x1984(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USurfaceReaction*                            FootstepSurfaceReaction_1P;                                // 0x1988(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_3P;                                // 0x1990(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Sprinting_1P;                      // 0x1998(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Sprinting_3P;                      // 0x19A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Crawling_1P;                       // 0x19A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Crawling_3P;                       // 0x19B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Layered;                           // 0x19B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Sliding_1P;                        // 0x19C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            FootstepSurfaceReaction_Sliding_3P;                        // 0x19C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                           BloodMaterial;                                             // 0x19D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootOffsetLeft;                                            // 0x19D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootOffsetRight;                                           // 0x19DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal                   FootNormalLeft;                                            // 0x19E0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal                   FootNormalRight;                                           // 0x19EC(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKUpdateRate;                                              // 0x19F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKTraceLengthStanding;                                     // 0x19FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKTraceLengthCrouching;                                    // 0x1A00(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_12HT[0xC];                                     // 0x1A04(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicalMaterial*                           FootprintSurfaceLeft;                                      // 0x1A10(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPhysicalMaterial*                           FootprintSurfaceRight;                                     // 0x1A18(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VHJQ[0x20];                                    // 0x1A20(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULagCompensationComponent*                   LagCompensationComponent;                                  // 0x1A40(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R3ML[0x4];                                     // 0x1A48(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UseDelay;                                                  // 0x1A4C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T1VZ[0x8];                                     // 0x1A50(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsSliding;                                                // 0x1A58(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RA9R[0x7];                                     // 0x1A59(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaminaCostToSlide;                                        // 0x1A60(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JN6M[0xC];                                     // 0x1A64(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LandedOnTopOfSuppressionValue;                             // 0x1A70(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LandedOnTopOfSuppressionHoldTime;                          // 0x1A74(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          VelocityImpactDamage;                                      // 0x1A78(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          StaminaLossFromFallCurve;                                  // 0x1B00(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          SuprressionFromFallCurve;                                  // 0x1B88(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          SpeedLossHoldTimeFromFallCurve;                            // 0x1C10(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          SpeedLossScalingFromFallCurve;                             // 0x1C98(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              SpeedLossHoldTime;                                         // 0x1D20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedLossFromFallVelocityModifier;                         // 0x1D24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedLossFromFallScalingRecoveryRate;                      // 0x1D28(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRecoveringFromVault;                                      // 0x1D2C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSlideStrafeMode;                                          // 0x1D2D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I77W[0x2];                                     // 0x1D2E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          MeleeStaminaFrac;                                          // 0x1D30(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              MeleeSuppressionHoldTime;                                  // 0x1DB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVehicleStance                                     VehicleStance;                                             // 0x1DBC(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SAF4[0x3];                                     // 0x1DBD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInertialEasingContainer1D                  DuckViewEasing;                                            // 0x1DC0(0x0018) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     DuckViewOffset;                                            // 0x1DD8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleViewCache;                                          // 0x1DE4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TNDP[0x58];                                    // 0x1DF0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AKScavengeEvent;                                           // 0x1E48(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScavengeAudioAttenuationDist;                              // 0x1E50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeTurnRate;                                            // 0x1E54(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                PlayerCollection;                                          // 0x1E58(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UYZ4[0x8];                                     // 0x1E60(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bVaulting;                                                 // 0x1E68(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6EM5[0x7];                                     // 0x1E69(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVaultSmoothTransition                      VaultCameraSmoothTransition;                               // 0x1E70(0x0070) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCurveVector*                                LowVaultCameraOffset;                                      // 0x1EE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                LowClimbCameraOffset;                                      // 0x1EE8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                HighVaultCameraOffset;                                     // 0x1EF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                HighClimbCameraOffset;                                     // 0x1EF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultZOffsetPivot;                                         // 0x1F00(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaultAction                                       ReplicatedVaultAction;                                     // 0x1F04(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4NUY[0x3];                                     // 0x1F05(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAimAssistTargetComponent*                   AimAssistTarget;                                           // 0x1F08(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldUseFastPathAnimations;                              // 0x1F10(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PAM8[0x3];                                     // 0x1F11(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastRenderTime;                                            // 0x1F14(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreviousLastRenderTime;                                    // 0x1F18(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LastMoveFallingContext;                                    // 0x1F1C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MouthSocketName;                                           // 0x1F24(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SV7N[0x4];                                     // 0x1F2C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BreathParticleSystem;                                      // 0x1F30(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreathingMinFrequency;                                     // 0x1F38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreathingMaxFrequency;                                     // 0x1F3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBreathEffectTime;                                      // 0x1F40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_55KX[0x4];                                     // 0x1F44(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SpectatorParticle;                                         // 0x1F48(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SpawnedSpectatorParticle;                                  // 0x1F50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JW8Q[0x8];                                     // 0x1F58(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSoldier");
		return ptr;
	}



	void UpdateWeightMovementParameters();
	void UpdateLocalRTPC();
	void UpdateFirstPersonVisibility();
	void UnequipAllItems(class AItemEquipable* IgnoreItem, bool bInstant);
	void SpawnRandomInventoryFromAvailableItems();
	void SoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door);
	bool ShouldDealDamageInSpawnZone();
	void SetWeight(float NewWeight);
	bool SetStance(ESoldierStance NewStance, bool bClientSimulation);
	void SetStamina(float NewStaminaValue);
	void SetInSpawnZone(bool bSpawnZone);
	void SetFocusMode(bool bNewState, bool bFromReplication);
	void ServerUse(class AActor* UseActor, const struct FHitResult& HitResult);
	void ServerUpdateInputLeanDirection(ELeanDirection NewInputLeanDirection);
	void ServerUpdateFreeaim(int CompressedAngle);
	void ServerStopSlide();
	void ServerSoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door);
	void ServerSoldierDoorKick(class ADoor* Door);
	void ServerSetFocusMode(bool bNewState);
	void ServerSetCameraIsTargetingKillLocation(bool bActive);
	void ServerOnUseReleased();
	void ServerMelee();
	void ServerInteractGearInSlot(EItemSlot GearSlot);
	void ServerInformBulletHit(const struct FClientBulletHit& BulletHit);
	void ServerHandleVehicleUse();
	void ServerEquipInventoryItem(class AItemEquipable* Item);
	void ServerBreachDoor(class ADoor* Door);
	void ServerAttemptToSlide();
	void Server_SetVehicleStance(EVehicleStance NewStance);
	void Server_FindWeaponForDriver();
	void Server_DriverPutAwayWeapon();
	bool SelectInventorySlot(EItemSlot Slot);
	bool SelectFirstAvailableInventoryItem();
	void Revive();
	bool Resupply();
	void ResetResupplyCooldown();
	bool RemoveMagazine(class UClass* AmmoType, int NumToRemove);
	void RemoveInventoryItems(bool bForce);
	bool RemoveFromInventory(class AItemBase* Item);
	void RemoveCosmetics();
	void RefreshFirstPersonCosmeticVisibility();
	bool ReequipWeapon(bool bFallbackSelectFirst);
	void RecoverStamina(float Amount);
	void RecalculateWeight();
	void PlaySurfaceReactionPair(const struct FSurfaceReactionPair& Pair, const struct FHitResult& Trace);
	void PlaySurfaceReactionGround(const struct FSurfaceReactionPair& Pair);
	void PlaySurfaceReaction(const struct FSurfaceReactionPair& Pair, const struct FHitResult& Trace, const struct FWWiseData& CustomAudioData);
	void PlayQueuedResponse();
	void PlayPainSound(class UINSDamageType* DamageType, float Damage, bool bWasFriendlyFire, bool bHeadshot);
	void PlayObserverThank();
	void PlayGenericSoundEventMulticast(class UAkAudioEvent* Event);
	void PlayGenericParticleEffectMulticast(class UParticleSystem* Event, const struct FVector& Location);
	void PlayFallDamageMulticast();
	bool PlayDialogue(const struct FCharacterResponseRequest& SpeakRequest);
	void PlayCharacterSoundEvent(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
	void PerformResupply();
	void OnSoundscapeUpdate(const struct FSoundscapeStateRepl& State);
	void OnSlideStopped(float SlideTransitionDuration);
	void OnResponseSpoken(ECharacterResponse Response);
	void OnResponseInterrupted(ECharacterResponse Response);
	void OnReserveAmmoUpdated();
	void OnRep_Weight();
	void OnRep_VehicleStance();
	void OnRep_Vaulting();
	void OnRep_TeamId();
	void OnRep_Stamina();
	void OnRep_ReplicatedStance();
	void OnRep_ReplicatedFreeaim();
	void OnRep_ReplicatedDesiredStance();
	void OnRep_PlayerClass();
	void OnRep_PendingWeapon();
	void OnRep_KilledBy();
	void OnRep_KickInProgress();
	void OnRep_IsAI();
	void OnRep_Inventory();
	void OnRep_Incapacitated();
	void OnRep_FocusMode();
	void OnRep_DialogueDictionary();
	void OnRep_CurrentWeapon();
	void OnRep_CurrentHeldUsableActor();
	void OnRep_Ammo();
	void OnFireSupportFinishedSuccesfully(class AFireSupportBase* FireSupport);
	void OnCharacterMovementChanged(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void MulticastSpeakPlayDialogue(const struct FCharacterResponseRequest& SpeakRequest, uint32_t Seed);
	void MulticastSoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door);
	void MulticastScavenge(class AItemWeapon* Weapon);
	void MulticastOnUseActorInteracted(class AActor* UsingActor, EUseItem Item);
	void MulticastMelee();
	void MulticastLanded(const struct FWWiseData& AudioData, const struct FHitResult& GroundTrace);
	void MulticastIncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc);
	void MulticastIncrementRecoil(const struct FRotator& RecoilIncrement, const struct FVector& RecoilViewIncrement, float AimPunchFrac, float RecoilPunchAdditiveFactor, bool bIncludeOwner);
	void MulticastBlind(float BlindHoldTime, float BlindFadeTime, float BlindAlpha, float SuppressionIncrement, float FlashSuppressionHoldTime);
	void MulticastApplyStun(float InStunDuration);
	void LoadSelectedCosmetics();
	int ItemCapacityForSlot(EItemSlot Slot);
	bool IsWeaponRestricted();
	bool IsViewTarget();
	bool IsUsingGamepad();
	bool IsUseProgressInTapTime();
	bool IsUseInProgress();
	bool IsStunned();
	bool IsStanding();
	bool IsSprinting();
	bool IsSpecialPlayerClass();
	bool IsRestricted();
	bool IsReloading();
	bool IsProne();
	bool IsPressingWeaponInteractionKey();
	bool IsOutsidePlayableArea();
	bool IsOfficer();
	bool IsObserver();
	bool IsNearSupplyCrate(float Tolerance);
	bool IsMoving();
	bool IsLeaning();
	bool IsInProneTransition();
	bool IsFullyCrawling();
	bool IsFocusing();
	bool IsFirstPersonViewTarget();
	bool IsDoorKickInProgress();
	bool IsCurrentlySliding();
	bool IsCrouching();
	bool IsCrawling();
	bool IsCompletelyBlind();
	bool IsClimbing();
	bool IsClientUpdating();
	bool IsBusy();
	bool IsBlind();
	bool IsAtSprintingSpeed();
	bool IsAimingDownSights();
	void InvalidatePlayerAppearance(bool bClearCosmeticCache);
	void InteractWeaponUpgrade(EWeaponUpgradeSlot InSlot);
	void InteractWeaponUnderbarrelUpgrade();
	void InteractWeaponStockUpgrade();
	void InteractWeaponSiderailUpgrade();
	void InteractWeaponOpticUpgrade();
	void InteractGearInSlot(EItemSlot GearSlot, bool bFallbackEquipable);
	void InteractGearAccessoryCycleOptic();
	void InteractGearAccessory();
	bool InStanceTransition();
	bool InSpawnZone();
	void IncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc);
	void IncrementScore(int Amount);
	void IncrementRecoil(const struct FRotator& RecoilIncrement, const struct FVector& RecoilViewIncrement, float AimPunchFrac, float RecoilPunchAdditiveFactor);
	void IncrementFreeaim(const struct FRotator& Amount);
	void Incapacitate();
	bool HasTeamInfoReplicated();
	bool HasRadio();
	bool HasNearbyRadio();
	bool HasJustLandedJump();
	bool HasJumped();
	bool HasInventoryItem(class UClass* ItemClass);
	void GiveInventoryItems(bool bSelectFirstItem);
	void GiveAmmoFromStoredAmmo(TArray<struct FStoredAmmo> StoredAmmo);
	void GiveAmmoForWeapon(class AItemWeapon* Weapon, int Amount);
	void GiveAmmo(class UClass* AmmoType, int Amount, class UClass* AmmoTypeOverride, int MaxCarryOverride);
	float GetWeight();
	class UINSSkeletalMeshComponent* GetWeaponMesh1P();
	float GetWalkingFrac();
	float GetUseProgress();
	float GetUseElapsedTime();
	float GetTopSpeedFraction();
	float GetTopSpeed();
	float GetToleranceForNonSprintingFire();
	float GetTimeSinceLastRenderTime();
	float GetTimeOutsidePlayableArea();
	unsigned char GetTeamId();
	class ATeamInfo* GetTeam();
	float GetStaminaFrac();
	float GetStamina();
	float GetSprintAlpha();
	void GetSortedEquipableItems(TArray<class AItemEquipable*>* OutEquipables);
	struct FRotator GetShootAngles();
	class USharedCosmeticState* GetSharedCosmeticState();
	class UINSPawnSensingComponent* GetSensingComponent();
	int GetReserveAmmoForWeapon(class AItemWeapon* Weapon);
	int GetReserveAmmo(class UClass* AmmoType);
	float GetRemoteViewPitch();
	float GetRelativeMeshZForStance(ESoldierStance NewStance);
	float GetRelativeMeshZForCurrentStance();
	float GetRecentMaxVelocity(float Time);
	struct FVector GetRecentLocalVelocity(float Time);
	float GetRadioSignalQuality(float Distance);
	class AItemEquipable* GetPreviousItemInSlot(EItemSlot Slot, class AItemEquipable* CurrentItem, bool bFallbackToLast, bool bIgnoreCanEquip);
	EPlayerSpeedClassification GetPlayerSpeedClassification();
	class AINSPlayerController* GetPlayerController();
	class AItemEquipable* GetPendingOrActiveItem();
	class AItemEquipable* GetPendingItem();
	int GetNumNearbyTeammates(float Radius);
	bool GetNextMagazine(class UClass* AmmoType, struct FStoredMagazine* OutMagazine);
	class AItemEquipable* GetNextItemInSlot(EItemSlot Slot, class AItemEquipable* CurrentItem, bool bFallbackToFirst, bool bIgnoreCanEquip);
	int GetNextBulletId();
	class ASupplyCrate* GetNearbySupplyCrate(float Tolerance);
	TArray<class AItemRadio*> GetNearbyRadios();
	float GetMovingFrac();
	class UCosmeticItem* GetMergedMesh();
	float GetMeleeStaminaFrac();
	float GetMaxLeaningViewXOffset(ELeanDirection NewInputLeanDirection, bool bMoving);
	int GetMaxAmmoForWeapon(class AItemWeapon* Weapon);
	int GetMaxAmmo(class UClass* AmmoContainer);
	float GetLeaningViewYOffset(float DesiredLeanAmount);
	float GetLeaningViewXOffset(float DesiredLeanAmount);
	float GetLastMovementTimeServer();
	class AItemBase* GetItemInSlot(EItemSlot Slot);
	class AItemBase* GetItemInInventory(class UClass* ItemClass);
	int GetItemEquippedCountByClass(class UClass* ItemClass);
	int GetItemEquippedCount(class AItemBase* ItemClass);
	struct FVector GetGroundLocation();
	class AItemGrenade* GetGrenadeInInventory(bool bLethal);
	class AItemGear* GetGearInSlot(EItemSlot GearSlot);
	class AItemFirearm* GetFirearmInCategory(EFirearmCategory Category, bool bIncludingNonConsumingItems);
	int GetFirearmCategoryEquipLimit(EFirearmCategory Category);
	class UFactionDefinition* GetFactionDefinition();
	int GetEquippedItemSlotsMask();
	int GetEquippedCountInFirearmCategory(EFirearmCategory Category, bool bIncludingNonConsumingItems);
	void GetEquipableItems(TArray<class AItemEquipable*>* OutEquipables);
	class AItemEquipable* GetEquipableInSlot(EItemSlot Slot);
	ESoldierStance GetDesiredStance();
	struct FName GetCurrentWeaponSwitch();
	class AItemEquipable* GetCurrentWeapon();
	class AActor* GetCurrentUseActor();
	float GetCrawlingAlpha();
	struct FHitResult GetComplexGroundTrace();
	class APawn* GetClosestRadioSupportPawn();
	class APawn* GetClosestOfficerPawn();
	class UINSSkeletalMeshComponent* GetBodyMesh1P();
	float GetBlindFrac();
	class UINSSkeletalMeshComponent* GetArmMesh1P();
	struct FStoredAmmo GetAmmo(class UClass* AmmoType);
	class UINSAISquad* GetAISquad();
	class AINSAISoldierController* GetAIController();
	int GetAdditionalAmmoForWeapon(class AItemWeapon* Weapon);
	unsigned char GetActiveObjectiveId();
	class AObjectiveBase* GetActiveObjective();
	void FinishObserverResponse();
	bool FindUseActors(TArray<struct FUsableActor>* OutUsableActors, float DistanceOverride, float RadiusOverride);
	class AActor* FindUseActor(struct FHitResult* OutHitResult);
	class ADoor* FindDoor();
	bool EquipInventoryItem(class AItemEquipable* Item, bool bFromServer);
	void DropWeapons();
	void DrainStamina(float Amount);
	int CountItemsInSlot(EItemSlot Slot, bool bIncludingNonConsumingItems);
	void ClientSetHeldUsableActor(const struct FTimedUsableActor& UsableActorInfo);
	void ClientIncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc, const struct FVector& Origin);
	void ClientEquipInventoryItem(class AItemEquipable* Item, class AItemEquipable* Previous);
	void CenterFreeaim(float Fraction);
	bool CanShowCosmeticEffects();
	bool CanScore();
	bool CanChangeStance();
	void CancelUse();
	void CancelSprint();
	struct FVector CalcViewLocation(bool bApplyLeanOffset, bool bApplyViewBob);
	void CalcRecoilOffset(struct FVector* Position, struct FRotator* Angles, const struct FRotator& OriginalAngles);
	float CalcFocusFraction();
	void BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible);
	void BlueprintOnStanceChanged(ESoldierStance OldStance);
	void BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV);
	void Blind(float BlindHoldTime, float BlindFadeTime, float BlindAlpha, float SuppressionIncrement, float FlashSuppressionHoldTime);
	void BeginObserverResponse();
	void ApplyStun(float InStunDuration);
	void ApplyAttributes(const struct FPlayerClassAttributes& Attributes);
	bool AllowWeaponReload();
	bool AllowWeaponFocus();
	bool AllowWeaponFire();
	bool AllowUseInVehicle();
	bool AllowSprint();
	bool AllowRun();
	bool AllowResupply();
	bool AllowMove();
	bool AllowJumpShoot();
	bool AllowFreeaim();
	bool AllowFiremodeToggle();
	bool AllowEquipmentPhysics();
	bool AllowAimDownSights();
	void AddWeight(float Delta);
	void AddViewPunchRotator(const struct FRotator& ViewPunchIncrement);
	void AddViewPunch(float Pitch, float Yaw, float Roll);
	bool AddToInventory(class AItemBase* Item, bool bFromReplication);
	void AddCosmetic(const struct FSelectedCosmetic& Cosmetic, bool bDeferInit);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSkirmishGameMode
// 0x0018 (FullSize[0x0980] - InheritedSize[0x0968])
class AINSSkirmishGameMode : public AINSMultiplayerMode
{
public:
	int16_t                                            DefaultReinforcementWaves;                                 // 0x0968(0x0002) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16_t                                            CaptureBonusWaves;                                         // 0x096A(0x0002) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KD05[0x4];                                     // 0x096C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UReinforcementSystemComponent*               FactionOneReinforcementSystem;                             // 0x0970(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               FactionTwoReinforcementSystem;                             // 0x0978(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSkirmishGameMode");
		return ptr;
	}



	int GetTotalActiveObjectives();
	int GetNumActiveObjectivesOwnedForTeam(unsigned char TeamId, bool bIncludeContested);
	bool CheckWinConditions();
	void CheckCustomEliminationRules();
	void CheckAllPointsSecure();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSkeletalMeshMerge
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UINSSkeletalMeshMerge : public UObject
{
public:
	unsigned char                                      UnknownData_LYR9[0x20];                                    // 0x0028(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                MergeTaskTimer;                                            // 0x0048(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCosmeticCache*                              Cache;                                                     // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_49P3[0x18];                                    // 0x0058(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSkeletalMeshMerge");
		return ptr;
	}



	void Tick();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSkeletalMeshComponent
// 0x0084 (FullSize[0x0B60] - InheritedSize[0x0ADC])
class UINSSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	float                                              MeshFOV;                                                   // 0x0ADC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseParentFOV;                                             // 0x0AE0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseFOVMultiplier;                                         // 0x0AE1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ODBM[0x2];                                     // 0x0AE2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FOVMultiplier;                                             // 0x0AE4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SocketsToTransform[0x50];                                  // 0x0AE8(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bLoadingSkeletalMesh;                                      // 0x0B38(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I95N[0x27];                                    // 0x0B39(0x0027) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSkeletalMeshComponent");
		return ptr;
	}



	bool UsesCustomFOV();
	void ReprojectTransform(struct FTransform* InOutTransform);
	void ReprojectMatrix(struct FMatrix* InMatrix);
	void OnSkeletalMeshLoaded();
	float GetCustomFOV();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSignificanceManager
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class UINSSignificanceManager : public USignificanceManager
{
public:
	unsigned char                                      UnknownData_SRFU[0x8];                                     // 0x0120(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSignificanceManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSessionHelper
// 0x0128 (FullSize[0x0150] - InheritedSize[0x0028])
class UINSSessionHelper : public UObject
{
public:
	class UClass*                                      BeaconClientClass;                                         // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AINSMatchBeaconClient*                       PartyBeaconClient;                                         // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T4WV[0xD8];                                    // 0x0038(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentSessionName;                                        // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<EPartyReservationResult>               LastBeaconResponse;                                        // 0x0118(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<EUTSessionHelperJoinState>             CurrentJoinState;                                          // 0x0119(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<EINSSessionHelperJoinResult>           CurrentJoinResult;                                         // 0x011A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OJ01[0x35];                                    // 0x011B(0x0035) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSessionHelper");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSJoinSessionCallbackProxy
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UINSJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_78NO[0xF0];                                    // 0x0050(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSJoinSessionCallbackProxy");
		return ptr;
	}



	class UINSJoinSessionCallbackProxy* JoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FBlueprintFindSessionResult& SearchResult, const struct FString& ServerPassword);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSFindSessionCallbackProxy
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class UINSFindSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ON86[0x70];                                    // 0x0050(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSFindSessionCallbackProxy");
		return ptr;
	}



	void SortServerListEntries(TArray<class UServerListEntry*>* ServerList, EServerListSortType SortType, bool bInverse);
	void OnCompleted(bool bSuccess);
	class UServerListEntry* MakeServerListEntry(const struct FBlueprintFindSessionResult& Result);
	class UServerListEntry* MakeDummyServerListEntry(const struct FText& Name, const struct FText& Map, const struct FText& Mode, int Players, int MaxPlayers, int Ping, bool bPassworded, bool bOfficialRuleset, bool bRanked, bool bModded, const struct FBlueprintFindSessionResult& ServerToJoin);
	void JoinSession(class UObject* WorldContextObject, int LocalUserNum, const struct FBlueprintFindSessionResult& Result, const struct FString& ServerPassword);
	bool IsVersusServer(const struct FBlueprintFindSessionResult& Result);
	bool IsUsingOfficialRuleset(const struct FBlueprintFindSessionResult& Result);
	bool IsRunningMutators(const struct FBlueprintFindSessionResult& Result);
	bool IsRunningMods(const struct FBlueprintFindSessionResult& Result);
	bool IsRankedServer(const struct FBlueprintFindSessionResult& Result);
	bool IsPasswordProtected(const struct FBlueprintFindSessionResult& Result);
	bool IsCoopServer(const struct FBlueprintFindSessionResult& Result);
	struct FString GetServerName(const struct FBlueprintFindSessionResult& Result);
	EServerEntryType GetServerEntryType(const struct FBlueprintFindSessionResult& Result);
	int GetPingInMs(const struct FBlueprintFindSessionResult& Result);
	int GetMaxPlayers(const struct FBlueprintFindSessionResult& Result);
	struct FString GetLevel(const struct FBlueprintFindSessionResult& Result);
	struct FString GetGamemode(const struct FBlueprintFindSessionResult& Result);
	int GetCurrentPlayers(const struct FBlueprintFindSessionResult& Result);
	class UINSFindSessionCallbackProxy* FindServerSessionsFiltered(class UObject* WorldContextObject, class APlayerController* PlayerController, int MaxResults, bool bUseLAN, bool bUseFavorite, const struct FServerBrowserPreferences& Filters, class UINSSingleRequestQueryQueue* Queue);
	class UINSFindSessionCallbackProxy* FindServerSessions(class UObject* WorldContextObject, class APlayerController* PlayerController, int MaxResults, bool bUseLAN, bool bCoopSearch, bool bVersusSearch, class UINSSingleRequestQueryQueue* Queue);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSingleRequestQueryQueue
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
class UINSSingleRequestQueryQueue : public UObject
{
public:
	unsigned char                                      UnknownData_KAH6[0x88];                                    // 0x0028(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSingleRequestQueryQueue");
		return ptr;
	}



	void OnComplete(bool bSuccess);
	void OnCancelFindComplete(bool bSuccess);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSSandboxGameMode
// 0x0000 (FullSize[0x0968] - InheritedSize[0x0968])
class AINSSandboxGameMode : public AINSMultiplayerMode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSSandboxGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.RichPresenceManager
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class URichPresenceManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_4D2M[0x68];                                    // 0x0030(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.RichPresenceManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSRangeMode
// 0x0030 (FullSize[0x0998] - InheritedSize[0x0968])
class AINSRangeMode : public AINSMultiplayerMode
{
public:
	unsigned char                                      UnknownData_6ZH0[0x8];                                     // 0x0968(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRangeResetDelegate;                                      // 0x0970(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FLoadoutWeapon>                      NightStartingItems;                                        // 0x0980(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanRequestSquad;                                          // 0x0990(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanRequestVehicle;                                        // 0x0991(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanRequestHelicopter;                                     // 0x0992(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4SBX[0x5];                                     // 0x0993(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSRangeMode");
		return ptr;
	}



	void SetPlayerAndBotTeam(unsigned char NewPlayerTeam, unsigned char NewBotTeam);
	void ResetRange();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPushGameMode
// 0x0088 (FullSize[0x09F0] - InheritedSize[0x0968])
class AINSPushGameMode : public AINSMultiplayerMode
{
public:
	int                                                RoundTimeExtension;                                        // 0x0968(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AttackerWavesPerObjective;                                 // 0x096C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackerWaveDPR;                                           // 0x0970(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackerWaveTimer;                                         // 0x0974(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DefenderWavesPerObjective;                                 // 0x0978(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefenderWaveDPR;                                           // 0x097C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefenderWaveTimer;                                         // 0x0980(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGPL[0x4];                                     // 0x0984(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AObjectiveBase*                              ActiveObjective;                                           // 0x0988(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               AttackerReinforcementSystem;                               // 0x0990(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               DefenderReinforcementSystem;                               // 0x0998(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasLastStand;                                             // 0x09A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLastStand;                                                // 0x09A1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NQ5K[0x2];                                     // 0x09A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnProtectionLastStandAddtionalTime;                     // 0x09A4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLastStandDelegate;                                       // 0x09A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              LastStandSetupDelay;                                       // 0x09B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdvanceAttackerSpawnsDelay;                                // 0x09BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_DisableInitialSpawns;                          // 0x09C0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastManStandingClockTime;                                  // 0x09C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WavesDepletedClockTime;                                    // 0x09CC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1KUJ[0x20];                                    // 0x09D0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPushGameMode");
		return ptr;
	}



	void RespawnAttackingTeamPostObjective();
	void OnWavesDepleted_DisableAutoBalance(class UReinforcementSystemComponent* Component);
	void OnWaveGained_ReenableAutoBalance(class UReinforcementSystemComponent* Component, int OldWaveCount);
	void OnLastStandDelegate__DelegateSignature();
	void LastStandDeferredSetup();
	void DisableInitialSpawnZones();
	void AdvanceAttackerSpawns();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSProjectileMovementComponent
// 0x0020 (FullSize[0x01F0] - InheritedSize[0x01D0])
class UINSProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	float                                              AccelerationRate;                                          // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccelerationStartTime;                                     // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccelerationDuration;                                      // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreFoliage;                                            // 0x01DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LVAV[0x3];                                     // 0x01DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AProjectileBase*                             OuterProjectile;                                           // 0x01E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JTF9[0x8];                                     // 0x01E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSProjectileMovementComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPlayerState
// 0x0638 (FullSize[0x0958] - InheritedSize[0x0320])
class AINSPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData_QDWD[0x8];                                     // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsPlaying;                                                // 0x0328(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RMG8[0x7];                                     // 0x0329(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnIsPlayingStateChanged;                                   // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsFriend;                                                 // 0x0340(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDeveloper;                                              // 0x0341(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasDeveloperTag;                                          // 0x0342(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HDK[0x5];                                     // 0x0343(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerUpdateDeveloperStatusDelegate;                     // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                ScoreboardBadge;                                           // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KTIR[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerUpdateScoreboardBadgeStatusDelegate;               // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bInSpawnZone;                                              // 0x0370(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasLeftSpawnZone;                                         // 0x0371(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConfirmedLoadout;                                         // 0x0372(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2M8W[0x1];                                     // 0x0373(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TotalFriendlyFireDamageDealt;                              // 0x0374(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerStatGroup                            MatchStats;                                                // 0x0378(0x00D8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FPlayerStatGroupMinimal                     ReplicatedMatchStats;                                      // 0x0450(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerStatGroup                            RoundStats;                                                // 0x0468(0x00D8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C7X5[0x50];                                    // 0x0540(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastTeamKill;                                              // 0x0590(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentTeamKillCount;                                      // 0x0594(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x0598(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PreviousTeamId;                                            // 0x0599(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_068N[0x2];                                     // 0x059A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TeamChangeTime;                                            // 0x059C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamChange;                                              // 0x05A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayerClass*                                PlayerClass;                                               // 0x05B0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ActiveObjectiveId;                                         // 0x05B8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z0SA[0x7];                                     // 0x05B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AObjectiveBase*                              ActiveObjective;                                           // 0x05C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActiveObjectiveChangedDelegate;                          // 0x05C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AObjectiveBase*                              KilledOnObjective;                                         // 0x05D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayerExperience;                                          // 0x05E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G1IW[0x4];                                     // 0x05E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerUpdateExperienceDelegate;                          // 0x05E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerSpawnedDelegate;                                   // 0x05F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerClassChanged;                                      // 0x0608(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerResupplied;                                        // 0x0618(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerKilledSoldierDelegate;                             // 0x0628(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerKilledSoldierInVehicleDelegate;                    // 0x0638(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerTakeOverSeatDelegate;                              // 0x0648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScoreObjectiveCapturedDelegate;                          // 0x0658(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScoreObjectiveResetDelegate;                             // 0x0668(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveDestroyedDelegate;                              // 0x0678(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirstBloodDelegate;                                      // 0x0688(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDownedFireSupportDelegate;                               // 0x0698(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    DesignatedDriverDelegate;                                  // 0x06A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObserverCalledFireSupportDelegate;                       // 0x06B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveBeginOverlapDelegate;                           // 0x06C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageIgnoredDelegate;                                   // 0x06D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDeathDelegate;                                     // 0x06E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestFireSupport;                                      // 0x06F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelectNewFireSupport;                                    // 0x0708(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShouldHintAmmoCheck;                                     // 0x0718(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHintSpeedReloadSuppressedLowAmmo;                        // 0x0728(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShouldHintSuppression;                                   // 0x0738(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShouldHintStamina;                                       // 0x0748(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFireDelegate;                                            // 0x0758(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCycleFiremodeDelegate;                                   // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSightDelegate;                                           // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeAttackDelegate;                                     // 0x0788(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadDelegate;                                          // 0x0798(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpeedReloadDelegate;                                     // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAmmoCheckDelegate;                                       // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDryFireDelegate;                                         // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScavengeMagazineDelegate;                                // 0x07D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemEquipDelegate;                                       // 0x07E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEquipDelegate;                                           // 0x07F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFocusDelegate;                                           // 0x0808(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponUpgradeInstalledDelegate;                          // 0x0818(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorPeekedDelegate;                                      // 0x0828(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorOpenedDelegate;                                      // 0x0838(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorKickedDelegate;                                      // 0x0848(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RHCP[0x8];                                     // 0x0858(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnVaultDelegate;                                           // 0x0860(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSprintDelegate;                                          // 0x0870(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEndSprintDelegate;                                       // 0x0880(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPositionUpdateDelegate;                                  // 0x0890(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeanDelegate;                                            // 0x08A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAutoLeanPossibleDelegate;                                // 0x08B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStanceChangeDelegate;                                    // 0x08C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNewSeatDelegate;                                         // 0x08D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSupplyCrateInteraction;                                  // 0x08E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSelectedCosmetic>                   Cosmetics;                                                 // 0x08F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CosmeticsSet;                                              // 0x0900(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RCIR[0x7];                                     // 0x0901(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCosmeticCache*                              CosmeticsCache;                                            // 0x0908(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QOTS[0x18];                                    // 0x0910(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USharedCosmeticState*                        SharedCosmeticState;                                       // 0x0928(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnSetPlayerNameDelegate;                                   // 0x0930(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerIsMutedChangedDelegate;                            // 0x0940(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USandstormStatsCollectionComponent*          GameStats;                                                 // 0x0950(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPlayerState");
		return ptr;
	}



	void SetIsPlaying(bool InIsPlaying);
	void ResetRoundStats();
	void PreLoadCosmetics();
	void OnRep_TeamId();
	void OnRep_ScoreboardBadge();
	void OnRep_PlayerExperience();
	void OnRep_PlayerClass();
	void OnRep_HasDeveloperTag();
	void OnRep_Cosmetics();
	void OnRep_ActiveObjectiveId();
	void OnKilledOther(const struct FSoldierKillInfo& SoldierKillInfo);
	bool IsSpectatingSpectator();
	bool IsFactionValid();
	bool IsDedicatedSpectator();
	void IncrementScore(int Amount, bool bIncrementTeam, EScoreType ScoreType);
	bool HasSelectedOfficer();
	bool HasSelectedObserver();
	struct FUniqueNetIdRepl GetUniqueNetId();
	void GetUniqueIdStringWithPlatform(struct FString* OutUniqueId);
	void GetUniqueIdString(struct FString* OutUniqueId);
	struct FName GetUniqueIdPlatform();
	class ATeamInfo* GetTeamInfo();
	unsigned char GetTeamId();
	class USharedCosmeticState* GetSharedCosmeticState();
	class ATeamInfo* GetPreviousTeamInfo();
	bool GetNemesisStatsForCopy(class AINSPlayerState* PlayerState, struct FNemesisStats* OutStats);
	bool GetIsPlaying();
	struct FLinearColor GetColor(class AINSPlayerState* RelativePlayer);
	class AINSSoldier* FindSoldier();
	void ClientUpdateSoldierPosition(class AINSSoldier* Soldier, bool bCanLean);
	void ClientUpdateLastRoundMostUsed(const struct FPlayerRoundSummary& RoundSummary);
	void ClientUpdateLastRoundExperience(const struct FPlayerRoundExpSummary& ExpResult);
	void ClientScoreObjectiveReset(class AObjectiveCapturable* Objective);
	void ClientScoreObjectiveCaptured(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
	void ClientOnSight(class AItemWeapon* Weapon);
	void ClientOnSeatTakenOver(class AINSCharacter* OldCharacter, class AController* Controller);
	void ClientOnReload(class AItemWeapon* Weapon, bool bSpeedReload);
	void ClientOnPlayerSpawned(class AINSSoldier* Player);
	void ClientOnOpenDoor(class ADoor* Door, bool bKicked);
	void ClientOnObserverCalledFireSupport();
	void ClientOnMeleeAttack(class AItemWeapon* Weapon);
	void ClientOnKilledOtherInVehicle(const struct FSoldierKillInfo& SoldierKillInfo);
	void ClientOnFirstBlood();
	void ClientOnFire(class AItemWeapon* Weapon);
	void ClientOnEquip(class AINSSoldier* Soldier, class AItemEquipable* Item);
	void ClientOnDryFire(class AItemWeapon* Weapon);
	void ClientOnDownedFireSupport();
	void ClientOnBeginOverlapObjective(class AObjectiveBase* Objective);
	void ClientOnAmmoCheck(class AItemWeapon* Weapon);
	void ClientObjectiveDestroyed(class AObjectiveDestructible* Objective, bool bFromRig);
	void ClearSharedCosmeticState();
	void ChangePlayerClass(class UPlayerClass* NewPlayerClass);
	void AwardTaglineWithFloatContext(class UClass* TaglineClass, float ContextValue, bool bAsPercentage);
	void AwardTaglineWithContext(class UClass* TaglineClass, int ContextValue);
	void AwardTagline(class UClass* TaglineClass);
	void AddTagline(const struct FPlayerAwardedTagline& TaglineAward);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPlayerStart
// 0x0040 (FullSize[0x0290] - InheritedSize[0x0250])
class AINSPlayerStart : public APlayerStart
{
public:
	unsigned char                                      UnknownData_PZZZ[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnabled;                                                  // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeamSpecific;                                             // 0x0259(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x025A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0EKU[0x5];                                     // 0x025B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASpawnZone*                                  AssociatedSpawnZone;                                       // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundscapeDefinition*                       SoundscapeOverride;                                        // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAdjustedLocation;                                         // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1XBD[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AdjustedLocation;                                          // 0x0274(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPlayerSpawnTime;                                       // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YTY3[0xC];                                     // 0x0284(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPlayerStart");
		return ptr;
	}



	void SetAssociatedSpawnZone(class ASpawnZone* Zone);
	void GetSpawnLocation(struct FVector* OutLocation);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPlayerLocalProfile
// 0x08E0 (FullSize[0x0908] - InheritedSize[0x0028])
class UINSPlayerLocalProfile : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnProfileBlockLoadedDelegate;                              // 0x0028(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProfileBlockSavedDelegate;                               // 0x0038(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                SavedProfileVersion;                                       // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastKnownPVPExperience;                                    // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastKnownBalance;                                          // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N2GL[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FProfileCharacterCosmeticState              CurrentSecurityFemaleCosmeticState;                        // 0x0058(0x0030) (BlueprintVisible, NativeAccessSpecifierPublic)
	ECharacterGender                                   CurrentSecurityCosmeticGender;                             // 0x0088(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TUT1[0x7];                                     // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FProfileCharacterCosmeticState              CurrentSecurityCosmeticState;                              // 0x0090(0x0030) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FProfileCharacterCosmeticState              CurrentSecurityShoppingCart;                               // 0x00C0(0x0030) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FProfileCharacterCosmeticState              CurrentInsurgentsCosmeticState;                            // 0x00F0(0x0030) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FProfileCharacterCosmeticState              CurrentInsurgentsShoppingCart;                             // 0x0120(0x0030) (BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FProfileCharacterCosmeticState> StoredCosmeticStates;                                      // 0x0150(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FText>                 StoredCosmeticChoices;                                     // 0x01A0(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	int                                                ScoreboardBadge;                                           // 0x01F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HFG2[0x4];                                     // 0x01F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<EProfileBlockType, struct FProfileSaveBlock>  ProfileBlocks;                                             // 0x01F8(0x0050) (NativeAccessSpecifierPrivate)
	class UControllerLayout*                           ControllerLayout;                                          // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNVIDIAHighlightsInfo                       NVIDIAHighlightsInfo;                                      // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerControlSettings                      PlayerControls;                                            // 0x0258(0x0158) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTheaterPreferences                         TheaterPreferences;                                        // 0x03B0(0x0140) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FServerBrowserPreferences                   ServerBrowserPreferences;                                  // 0x04F0(0x0030) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FCosmeticDefinition>                 EntitledCosmetics;                                         // 0x0520(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PreferredFaction;                                          // 0x0530(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PreferredFirearm[0x28];                                    // 0x0538(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FString>                             LessonHintsReceived;                                       // 0x0560(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, unsigned char>                LessonLeftCount;                                           // 0x0570(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1F7X[0x40];                                    // 0x05C0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayerLastGameSummary                      LastMatchStats;                                            // 0x0600(0x00D8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      EquippedItems[0x50];                                       // 0x06D8(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      EquippedWeaponUpgrades[0x50];                              // 0x0728(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnviewedItems[0x50];                                       // 0x0778(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      PreviewedCosmeticItems[0x50];                              // 0x07C8(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<int>                                        HiddenReplays;                                             // 0x0818(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVaultKeyBound;                                            // 0x0828(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q8CY[0x7];                                     // 0x0829(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FUserInterfacePreferences                   UserInterfacePreferences;                                  // 0x0830(0x0058) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUIOptionChangedDelegate;                                 // 0x0888(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameAchievements                           GameAchievements;                                          // 0x0898(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3MZT[0x20];                                    // 0x08E8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPlayerLocalProfile");
		return ptr;
	}



	void UpdateServerBrowserPreferences(const struct FServerBrowserPreferences& NewPreferences);
	void UpdatePlayerClassDefaultLoadout(TArray<struct FBasicLoadoutItem> Items);
	void UpdateOpticPreference(int Mode);
	void UpdateFiremodePreference(EFirearmFiremode Firemode);
	bool ShouldHideReplayFromHistory(int ReplayID);
	void SetUseScopeSensitivityScale(bool bGamepad, bool bNewSetting);
	void SetToDefaults();
	void SetSensitivityScaleForOpticZoom(bool bGamepad, EOpticZoomLevel ZoomLevel, float NewVal);
	void SetScoreboardBadgeFromItemId(int NewScoreboardBadgeItemId);
	void SetScoreboardBadge(int NewScoreboardBadge);
	void SetScopeSensitivityScaleUsesWorldFOV(bool bGamepad, bool bNewSetting);
	void SetScopeSensitivityScale(bool bGamepad, float NewSetting);
	void SetRadialToggle(bool bSetting);
	void SetPreferredFirearm();
	void SetPreferredFaction(const struct FName& FactionPref);
	void SetPlaylistSelected(EPlaylistType Type, class UPlaylist* Playlist, bool bSelected);
	void SetMouseSensitivity(float Val);
	void SetManualBipod(bool bSetting);
	void SetKeyBindingsToDefaults();
	void SetInvertedYAxisMouse(bool bSetting);
	void SetInvertedYAxis(bool bSetting);
	void SetGamepadYSensitivity(float Val);
	void SetGamepadXSensitivity(float Val);
	void SetGamepadDampeningSettings(float NewDampeningStrength, float NewDampeningSize, float NewDampeningEaseIn);
	void SetGamepadAimSensitivityCurve(EGamepadSensitivityCurve NewCurve);
	void SetGamepadAccelerationSettings(float NewTimeThreshold, float NewTimeToReachMax, float NewMaxMultiplier);
	void SetGamepadAccelerationEnabled(bool bEnabled);
	void SetFreeaimDeadzoneScale(float NewScale);
	void SetFreeaimDeadzoneMinimumSensitivity(float NewSensitivity);
	void SetFreeaimDeadzoneEnabled(bool bNewEnabled);
	void SetFOVSensitivityScaling(bool bGamepad, bool bNewSetting);
	void SetForceFeedbackIntensity(float Val);
	void SetFocusSensitivityScale(bool bGamepad, float Val);
	void SetControlSettingsToDefaults();
	void SetControllerLayoutName(const struct FString& InName);
	void SetControllerLayout(class UControllerLayout* Layout);
	void SetAutoLean(bool bState);
	void SetAimingSensitivityScale(bool bGamepad, float NewSetting);
	void SaveToCloud();
	void SaveProfileBlockToCloud(const struct FProfileSaveBlock& ProfileBlock);
	void SaveProfileBlock(EProfileBlockType Type, bool bToCloud);
	bool SavePlayerClassLoadout(const struct FText& LoadoutName, TArray<struct FBasicLoadoutItem> Items, bool bNightMode);
	void SaveLocalProfileIfDirty();
	void SaveLocalProfile();
	bool SaveActivePresetIndex(int ActivePresetIndex, bool bNightMode);
	void SaveAchievementPercent(const struct FString& AchType, float Value);
	void ResetServerBrowserPreferences();
	void ResetLessons();
	void ResetLastMatchStats();
	void ResetFavoritedServers();
	void ReplaceActionMappings(const struct FName& OldBinding, const struct FName& NewBinding);
	void ReplaceActionMappingKey(const struct FName& MatchingBinding, const struct FKey& OldKey, const struct FKey& NewKey);
	void ReplaceActionMapping(const struct FName& OldBinding, const struct FName& NewBinding, const struct FKey& Key);
	bool RenameSavedLoadout(int PresetIndex, const struct FText& NewName, bool bNightMode);
	void RemoveFavoritedServer(const struct FBlueprintFindSessionResult& NewRemovedServer);
	void RemoveCloudDelegates();
	void RemoveActionMapping(struct FInputActionKeyMapping* KeyMapping);
	void ReceiveLessonHint(class UClass* Lesson);
	void OnUserConfirmedLicenseAgreement();
	void OnUIOptionChangedDelegate__DelegateSignature();
	void OnProfileBlockSavedDelegate__DelegateSignature(EProfileBlockType Type);
	void OnProfileBlockLoadedDelegate__DelegateSignature(EProfileBlockType Type, bool bFromCloud);
	void MarkDirty();
	void LoadProfileBlock(EProfileBlockType Type, bool bFromCloud);
	void LoadFromCloud();
	bool IsRadialToggle();
	bool IsPlaylistSelected(EPlaylistType Type, class UPlaylist* Playlist);
	bool IsManualBipod();
	bool IsFavoritedServer(const struct FBlueprintFindSessionResult& CheckServer);
	bool IsDirty();
	void IncrementNewHighlights();
	void HideReplayFromHistory(int ReplayID);
	bool HasUserConfirmedLicenseAgreement();
	bool HasPreviewedCosmeticItem(int ItemId);
	int HasPlayerClassLoadoutNamed(const struct FText& LoadoutName, bool bNightMode);
	bool HasEquippedUpgrade();
	bool HasEquippedItem();
	bool HasCosmeticPresetForFaction(const struct FString& InFactionString);
	bool HasCompletedLessonHint(class UClass* Lesson);
	bool GetUseScopeSensitivityScale(bool bGamepad);
	float GetSensitivityScaleForOpticZoom(bool bGamepad, EOpticZoomLevel ZoomLevel);
	bool GetScopeSensitivityScaleUsesWorldFOV(bool bGamepad);
	float GetScopeSensitivityScale(bool bGamepad);
	bool GetSavedLoadouts(TArray<struct FSavedLoadout>* OutSavedLoadouts, bool bNightMode);
	bool GetSavedLoadoutNames(TArray<struct FText>* OutLoadoutNames, bool bNightMode);
	bool GetSavedActivePresetIndex(int* ActivePresetIndex, bool bNightMode);
	float GetMouseSensitivity();
	bool GetItemsForSavedLoadout(int PresetIndex, TArray<struct FBasicLoadoutItem>* Items, bool bNightMode);
	bool GetInvertedYAxisMouse();
	bool GetInvertedYAxis();
	float GetGamepadYSensitivity();
	float GetGamepadXSensitivity();
	void GetGamepadDampeningSettings(float* OutDampeningStrength, float* OutDampeningSize, float* OutDampeningEaseIn);
	EGamepadSensitivityCurve GetGamepadAimSensitivityCurve();
	void GetGamepadAccelerationSettings(float* TimeThreshold, float* TimeToReachMax, float* MaxMultiplier);
	bool GetGamepadAccelerationEnabled();
	float GetFreeaimDeadzoneScale();
	float GetFreeaimDeadzoneMinimumSensitivity();
	bool GetFreeaimDeadzoneEnabled();
	bool GetFOVSensitivityScaling(bool bGamepad);
	float GetForceFeedbackIntensity();
	float GetFocusSensitivityScale(bool bGamepad);
	struct FProfileCharacterCosmeticState GetCurrentCosmeticStateForPreferredFaction();
	struct FProfileCharacterCosmeticState GetCurrentCosmeticStateForFaction(const struct FName& FactionName);
	struct FProfileCharacterCosmeticState GetCurrentCosmeticShoppingCartForPreferredFaction();
	struct FProfileCharacterCosmeticState GetCurrentCosmeticShoppingCartForFaction(struct FName* FactionName);
	TArray<struct FInputActionKeyMapping> GetControlsActionMappings();
	struct FString GetControllerLayoutName();
	class UControllerLayout* GetControllerLayout();
	bool GetAutoLean();
	float GetAimingSensitivityScale(bool bGamepad);
	void ForwardControlSettings();
	bool FindPlayerClassDefaultLoadout(TArray<struct FBasicLoadoutItem>* OutItems);
	bool DeletePlayerClassLoadout(int LoadoutIndex, bool bNightMode);
	void CompleteLesson(class UClass* Lesson);
	void ClearNewHighlights();
	void ClearItemIdFromUnviewedItems(int ItemId);
	void ClearHighlights();
	void AddPreviewedCosmeticItem(int ItemId);
	void AddFavoritedServer(const struct FBlueprintFindSessionResult& NewFavoritedServer);
	void AddEquippedUpgrade();
	void AddEquippedItem();
	void AddCloudDelegates();
	void AddAxisMappingIfNotExisting(const struct FName& NewBinding, const struct FKey& DefaultKey, float NewScale, bool bGamepad);
	void AddActionMappingIfNotExisting(const struct FName& NewBinding, const struct FKey& DefaultKey, bool bGamepad);
	void AddActionMapping(struct FInputActionKeyMapping* KeyMapping);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPlayerInput
// 0x0278 (FullSize[0x0620] - InheritedSize[0x03A8])
class UINSPlayerInput : public UPlayerInput
{
public:
	struct FRuntimeFloatCurve                          SensitivityCurveExponential;                               // 0x03A8(0x0088) (Config, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          SensitivityCurveLinear;                                    // 0x0430(0x0088) (Config, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          SensitivityCurveDynamic;                                   // 0x04B8(0x0088) (Config, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          SensitivityCurveDualZone;                                  // 0x0540(0x0088) (Config, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LSDT[0x58];                                    // 0x05C8(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPlayerInput");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPlayerController
// 0x0518 (FullSize[0x0D40] - InheritedSize[0x0828])
class AINSPlayerController : public AINSBasePlayerController
{
public:
	unsigned char                                      UnknownData_LRBC[0x8];                                     // 0x0828(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FreeaimLastSightsProgress;                                 // 0x0830(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   LastDPadAxisInput;                                         // 0x0834(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6R8L[0x4];                                     // 0x083C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamVoteCallResultDelegate;                              // 0x0840(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamVoteCastResultDelegate;                              // 0x0850(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X98U[0x8];                                     // 0x0860(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamChangedDelegate;                                     // 0x0868(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMenuWidgetOpenedDelegate;                                // 0x0878(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMenuWidgetExitDelegate;                                  // 0x0888(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G4R8[0x58];                                    // 0x0898(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bQueueRestart;                                             // 0x08F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ADW5[0x13];                                    // 0x08F1(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxHQAnnouncements;                                        // 0x0904(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAudioAnnouncementCue>               HQAudioQueue;                                              // 0x0908(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHQAnnouncementPlaying;                                    // 0x0918(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D27P[0x7];                                     // 0x0919(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_PlayingHQAnnouncement;                         // 0x0920(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          LocalAudioComponent;                                       // 0x0928(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_Fading;                                        // 0x0930(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O7RS[0x38];                                    // 0x0938(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPrimaryAssetId>                     ItemFPrimaryAssetId;                                       // 0x0970(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    InventoryItemLoaded;                                       // 0x0980(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bAssetIsLoadProgress;                                      // 0x0990(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8SIA[0x7];                                     // 0x0991(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    PlayerClassChangedDelegate;                                // 0x0998(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayerInventoryComponent*                   InventoryComponent;                                        // 0x09A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    UpdateFiremodeDelegate;                                    // 0x09B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    UpdateOpticDelegate;                                       // 0x09C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    EquipableItemSelectedDelegate;                             // 0x09D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AmmoUpdatedDelegate;                                       // 0x09E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ReserveAmmoUpdatedDelegate;                                // 0x09F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ShowAmmoDisplayDelegate;                                   // 0x0A00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CL2V[0x2];                                     // 0x0A10(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bFireSupportMenuOpen;                                      // 0x0A12(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsingFireSupportMenuKey;                                  // 0x0A13(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireSupportPersonalCooldown;                               // 0x0A14(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastFireSupportTime;                                       // 0x0A18(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YTH9[0x4];                                     // 0x0A1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    FireSupportConfirmedDelegate;                              // 0x0A20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFireSupportDefinition*                      SelectedFireSupportDefinition;                             // 0x0A30(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8R3T[0x8];                                     // 0x0A38(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    AddCompassMarkerDelegate;                                  // 0x0A40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UWX8[0x9];                                     // 0x0A50(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bInGameMenuVisible;                                        // 0x0A59(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9QQT[0x6];                                     // 0x0A5A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInGameMenuVisibleDelegate;                               // 0x0A60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bCanAccessExtraMenus;                                      // 0x0A70(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YCXR[0x3];                                     // 0x0A71(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PendingMenuActions;                                        // 0x0A74(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPendingMenuActionChanged;                                // 0x0A78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowKillerInfoDelegate;                                  // 0x0A88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInGameMenuWidget*                           InGameMenuInstance;                                        // 0x0A98(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      InGameMenuWidget;                                          // 0x0AA0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      FireSupportRadialWidgetClass;                              // 0x0AA8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 FireSupportRadialWidget;                                   // 0x0AB0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CommsRadialWidgetClass;                                    // 0x0AB8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 CommsRadialWidget;                                         // 0x0AC0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MapVoteWidget;                                             // 0x0AC8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ActiveRadialWidget;                                        // 0x0AD0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 ActiveGenericWidget;                                       // 0x0AD8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O8AR[0x2];                                     // 0x0AE0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EIngameMenuType                                    LastOpenedIngameMenu;                                      // 0x0AE2(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4W31[0x5];                                     // 0x0AE3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMapVoteWidget*                              ActiveMapVoteWidget;                                       // 0x0AE8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       ShellShockAkStateGroup;                                    // 0x0AF0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShellShockStartAkState;                                    // 0x0AF8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShellShockStopAkState;                                     // 0x0B00(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShellShockTerminateAkEvent;                                // 0x0B08(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShellShockTinnitusAkEvent;                                 // 0x0B10(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShellShockTinnitusEndAkEvent;                              // 0x0B18(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DeafenAkStateGroup;                                        // 0x0B20(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DeafenStartAkState;                                        // 0x0B28(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DeafenStopAkState;                                         // 0x0B30(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DeafenAkEvent;                                             // 0x0B38(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DeafenEndAkEvent;                                          // 0x0B40(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9LP4[0x18];                                    // 0x0B48(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               AvailableDebugCameras;                                     // 0x0B60(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastChatMessageTime;                                       // 0x0B70(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablePawnInput;                                         // 0x0B74(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRadialMenuActive;                                         // 0x0B75(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInventorySelectActive;                                    // 0x0B76(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_014L[0x1];                                     // 0x0B77(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInventorySelectActiveDelegate;                           // 0x0B78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              ButtonTapTimeThreshold;                                    // 0x0B88(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInventoryMenuVisible;                                     // 0x0B8C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5M7Q[0x3];                                     // 0x0B8D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInventoryMenuVisibleDelegate;                            // 0x0B90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_557L[0x8];                                     // 0x0BA0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMainMenuController;                                       // 0x0BA8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5KBW[0x17];                                    // 0x0BA9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bVoiceLocalPressed;                                        // 0x0BC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVoiceRadioPressed;                                        // 0x0BC1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTalkingOverRadio;                                         // 0x0BC2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5I76[0x55];                                    // 0x0BC3(0x0055) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShowDevTag;                                               // 0x0C18(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ZLZ[0x3];                                     // 0x0C19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ScoreboardBadge;                                           // 0x0C1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMusicManagerComponent*                      MusicManagerComponent;                                     // 0x0C20(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SZEM[0x10];                                    // 0x0C28(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayingMusic                               PlayingMusic;                                              // 0x0C38(0x0008) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XBTI[0x8];                                     // 0x0C40(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSoldierSpawnDelegate;                                    // 0x0C48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeaveSpawnZoneDelegate;                                  // 0x0C58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnterSpawnZoneDelegate;                                  // 0x0C68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowRadialMenuDelegate;                                  // 0x0C78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHideRadialMenuDelegate;                                  // 0x0C88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerMapVotingStarted;                                  // 0x0C98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerResupplied;                                        // 0x0CA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSoldierDespawnDelegate;                                  // 0x0CB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bClientLoadedScenarioAssets;                               // 0x0CC8(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G3IH[0xF];                                     // 0x0CC9(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTutorialLesson*>                     Lessons;                                                   // 0x0CD8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAchievementDataAsset*                       AchievementLists;                                          // 0x0CE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USandstormAchievement*>               Achievements;                                              // 0x0CF0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSSoldier*                                 CachedPawn;                                                // 0x0D00(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowPlayerExperienceDelegate;                            // 0x0D08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WEYL[0x10];                                    // 0x0D18(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USandstormStatsCollectionComponent*          StatsCollection;                                           // 0x0D28(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FGWS[0x10];                                    // 0x0D30(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPlayerController");
		return ptr;
	}



	void UpdateVoiceChatChannels();
	void UpdateOpticPreference(int Mode);
	void UpdateOpticDelegate__DelegateSignature(int Mode);
	void UpdateFiremodePreference(EFirearmFiremode Firemode);
	void UpdateFiremodeDelegate__DelegateSignature(EFirearmFiremode Firemode);
	void ToggleLoadoutMenu();
	void ToggleInGameMenu(EIngameMenuType Menu);
	void StopShellShock(bool bTerminate);
	void StopDeafen(bool bTerminate);
	void SpotEnemy();
	void SpectatePlayer(class AActor* Actor);
	void ShowPlayerExperienceDelegate__DelegateSignature();
	void ShowKillerInfoDelegate__DelegateSignature(const struct FPlayerKillNotice& Notice, const struct FNemesisStats& NemesisStats);
	void ShowInGameMenu(EIngameMenuType Menu, EIngameMenuEntryState FromState);
	class UUserWidget* ShowGenericWidget(class UClass* NewWidget, bool bConsumesInput);
	void ShowFireSupportMenu();
	void ShowCustomRadial(class UUserWidget* CustomRadialWidget);
	void ShowCommsMenu();
	void ShowAmmoDisplayDelegate__DelegateSignature();
	void ShowAmmoDisplay();
	void SetSelectedFireSupport(class UFireSupportDefinition* FireSupportClass);
	void SetCameraForUI(bool SoldierCamera, float TransitionTime);
	void ServerVoiceChatLoggedIn();
	void ServerUpdateShowDevTag(bool bNewShowDevTag);
	void ServerUpdateScoreboardBadge(int NewScoreboardBadge);
	void ServerUpdateFactionCosmetics(const struct FString& FactionName, TArray<int> Cosmetics);
	void ServerSpectatePlayer(class AActor* Actor);
	void ServerSetTalkingOverRadio(bool bState);
	void ServerSetMapVoteSelection(EMapVoteSelection VoteIndex);
	void ServerSendFireSupportRadialCommand(ERadialMenuDirection Direction);
	void ServerSendCommsRadialCommand(ERadialMenuDirection Direction);
	void ServerSendChatMessage(const struct FText& Message, bool bTeamOnly);
	void ServerRequestViewTarget(class AActor* Target, const struct FViewTargetTransitionParams& TransitionParams);
	void ServerRequestSelectedFireSupport();
	void ServerRequestGameChannelToken(const struct FString& Channel);
	void ServerPossessViewTarget();
	void ServerKill();
	void ServerJoinSpectators();
	void ServerJoinPlayerClass(class UPlayerClass* DesiredClass);
	void ServerJoinFaction(unsigned char FactionId);
	void ServerEjectToSpectator();
	void ServerConfirmLoadout();
	void ServerChangeFaction(unsigned char NewFactionId);
	void ServerCastVote(int ChoiceIndex, bool bTeamOnlyVote);
	void ServerCallVote(class UClass* Issue, const struct FString& Option, class APlayerState* TargetPlayer, bool bTeamOnlyVote);
	void ServerAckScenarioAssetsLoaded(TArray<struct FSoftObjectPath> LoadedByClient);
	void SendFireSupportRadialCommand(ERadialMenuDirection Direction);
	void SendCurrentCosmeticPreset();
	void SendCommsRadialCommand(ERadialMenuDirection Direction);
	bool SavePlayerClassLoadout(const struct FText& LoadoutName);
	void SaveCurrentLoadout();
	void ResetCameraFocus(bool bShouldAttemptToViewPlayer);
	void RenewTutorialPause();
	void ReleaseCommsMenu();
	void QueueHQObjectiveAnnouncement(class UAkAudioEvent* AudioEvent, int ObjectiveId);
	void QueueHQAnnouncement(class UAkAudioEvent* AudioEvent);
	void QAGetPos(bool bCopyToClipboard);
	void PressCommsMenu();
	void PossessViewTarget();
	void PlayShellShock(float Duration);
	void PlayingMusicUpdated__DelegateSignature(const struct FPlayingMusic& NewMusic);
	void PlayerClassChangedDelegate__DelegateSignature(class UPlayerClass* PlayerClass);
	void PlayDeafen(float Duration);
	void PendingMenuActionChangedDelegate__DelegateSignature();
	void OnUpdatedLocalProfileHUDPreferences();
	void OnUpdatedHUDPreferences();
	void OnStopShellShock();
	void OnStopDeafen();
	void OnSpawnZoneDelegate__DelegateSignature();
	void OnSoldierSpawnDelegate__DelegateSignature();
	void OnShowRadialMenuDelegate__DelegateSignature(class UUserWidget* ShownRadial);
	void OnRep_PlayingMusic();
	void OnRep_PendingMenuActions();
	void OnPlayerMapVotingStart__DelegateSignature();
	void OnMenuWidgetOpenedDelegate__DelegateSignature(EIngameMenuType Entered);
	void OnMenuWidgetExitDelegate__DelegateSignature();
	void OnInventorySelectActiveDelegate__DelegateSignature(bool bNewInventorySelectActive);
	void OnInventoryMenuVisibleDelegate__DelegateSignature(bool bNewInventorySelectActive, bool bUsingGamepad);
	void OnInGameMenuVisibleDelegate__DelegateSignature(bool bNewVisibility);
	void OnHQAnnouncementFinished();
	void OnHideRadialMenuDelegate__DelegateSignature(class UUserWidget* HiddenRadial);
	void OnFireSupportPersonalCooldownElapsed();
	void OnFireSupportConfirmedDelegate__DelegateSignature(const struct FFireSupportRequest& Request);
	void OnFadeFinished();
	void NotifyOfUsingMultiplayerFeatures(bool bIsUsingMP);
	void LocalProfileSaveOpportunity();
	bool LoadInventoryItem();
	void Kill();
	void JoinSpectators();
	void JoinPlayerClass(class UPlayerClass* DesiredClass);
	void JoinFaction(unsigned char FactionId);
	void JoinClassBySlot(int ClassSlotIndex);
	bool IsVaultKeyBound();
	bool IsTextChatOnCooldown();
	bool IsPlayingShellShock();
	bool IsPlayerAudioInProximity(int PlayerId);
	bool IsInTutorialSession();
	bool IsInSpectatorFaction();
	bool IsFireSupportOnCooldown();
	bool IsFadingInOrOut();
	bool IsDeafened();
	void InventorySelectReleased();
	void InventorySelectPressed();
	void InventoryItemLoaded__DelegateSignature();
	void InitAchievements();
	void HideInGameMenu();
	void HideGenericWidget();
	void HideFireSupportMenu();
	void HideCommsMenu();
	void HideActiveRadialWidget();
	bool HasPendingMenuAction(EPendingMenuAction Action);
	bool HasLocalProfile();
	bool HasConfirmedLoadout();
	bool HasAlivePawn();
	void GetVoteIssues(TArray<struct FVotableIssue>* OutVotableIssues, bool bTeamOnlyVote);
	float GetTimeUntilPersonalCooldownFinished();
	float GetTimeSinceLastChatMessage();
	unsigned char GetTeamId();
	class ATeamInfo* GetTeam();
	class UFireSupportDefinition* GetSelectedFireSupport();
	void GetKeysForActionUsingInputMethod(const struct FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys, bool bGamepad);
	void GetKeysForActionActiveInputMethod(const struct FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys);
	void GetKeysForAction(const struct FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys);
	float GetFireSupportPersonalCooldownDuration();
	class UFactionDefinition* GetFactionDefinition();
	class UPlayerClass* GetCurrentPlayerClass(bool bUseCurrentPawnClass);
	void ForwardInventoryPreferences();
	void EquipableItemSelectedDelegate__DelegateSignature(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem);
	void DPadUpPressed();
	void DPadRightPressed();
	void DPadLeftPressed();
	void DPadDownPressed();
	void DelegateClientScenarioAssetsLoaded();
	void DebugFireSupportRadialMenu();
	void CycleDebugCamera();
	void CreateIndividualAchievement(class UClass* AchievementClass);
	class UUserWidget* CreateCustomRadial(class UClass* NewWidget);
	void ConfirmLoadout();
	void ClientVoteResult(ECallVoteResult Result, bool bTeamOnlyVote);
	void ClientStartOnlineGame();
	void ClientShowMapVoteScreen(TArray<struct FMapVoteOption> Maps, float EndTime, bool bCanVoteRefresh);
	void ClientShowKillerInfo(const struct FPlayerKillNotice& Notice, const struct FNemesisStats& NemesisStats);
	void ClientSetVoiceState(int PlayerId, bool bAudibleProximity, bool bAudibleRadio, bool bIsEnemy, bool bRadioFilter);
	void ClientSetMapVoteWinner(EMapVoteSelection Selection);
	void ClientSetMapVoteCount(TArray<struct FMapVoteCount> Data);
	void ClientSetDeathFade(float FadeTime, bool bApplyHeadshotSwitch);
	void ClientReturnToQueueFromMatch();
	void ClientReceiveScenarioAssets(TArray<struct FSoftObjectPath> AssetsToLoad);
	void ClientReceivedGameChannelToken(const struct FString& Channel, const struct FString& JoinToken);
	void ClientQueueHQObjectiveAnnouncement(class UAkAudioEvent* AudioEvent, int ObjectiveId);
	void ClientQueueHQAnnouncement(class UAkAudioEvent* AudioEvent);
	void ClientPromptTeamMenu();
	void ClientPromptLoadout();
	void ClientPromptCosmeticsMenuIfNeeded();
	void ClientProfileSaveOpportunity();
	void ClientOnPlayerResupplied(class AINSSoldier* Soldier);
	void ClientIdleKickWarning(int SecondsRemaining);
	void ClientFadeOut(const struct FColor& FadeColor, float FadeTime, float HoldTime);
	void ClientFadeIn(const struct FColor& FadeColor, float FadeTime, float HoldTime);
	void ClientEnterMatchTransitionState(const struct FGuid& TicketId, const struct FString& Scenario, const struct FString& Options);
	void ClientEndOnlineRatedMatch(bool bHasRatingUpdate, const struct FMatchScoreChange& PlayerChange);
	void ClientConnectVoiceChat(const struct FString& VoiceSessionId, const struct FString& ConnectToken);
	void ClientConfirmScenarioAssetsLoaded();
	void ClientConfirmMapVoteSelection(EMapVoteSelection VotedIndex);
	void ClientClearDeathFade(float FadeTime);
	void ClientChangeVoiceChatChannels(unsigned char TeamId, EVoiceChatChannelFlags Flags);
	void ClientCastVoteResult(ECastVoteResult Result, bool bTeamOnlyVote);
	void ClientBroadcastPendingMenuAction();
	void ClientAddCompassMarker(const struct FVector_NetQuantize& WorldLocation, class AActor* FollowActor, ECompassMarkerType MarkerType);
	void ChoosePlayerClassLoadout(int LoadoutIndex);
	void CheckInventorySelectType();
	void ChangeFaction(unsigned char NewFactionId);
	void CastVoteChecked(int ChoiceIndex, bool bTeamOnlyVote);
	struct FFireSupportRequestResult CanRequestSelectedFireSupport(const struct FVector& RequestLocation);
	bool CanCallVote();
	void BroadcastMenuStateChange(EIngameMenuType EnteredState);
	void BreakTutorialPause();
	void BindToggleMenuInsteadToggleLessons();
	void BindToggleLessonsInsteadToggleMenu();
	void BenchmarkStart();
	void BeginQueuedFadeIn(const struct FColor& Color, float Duration, float TargetAlpha);
	void AmmoUpdatedDelegate__DelegateSignature();
	void AddHQAnnouncement(const struct FAudioAnnouncementCue& Cue);
	void AddCompassMarkerOnActor(class AActor* Actor, ECompassMarkerType MarkerType);
	void AddCompassMarkerDelegate__DelegateSignature(const struct FVector& WorldLocation, class AActor* FollowActor, ECompassMarkerType MarkerType);
	void AddCompassMarker(const struct FVector& WorldLocation, ECompassMarkerType MarkerType);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPawnSensingComponent
// 0x0020 (FullSize[0x0118] - InheritedSize[0x00F8])
class UINSPawnSensingComponent : public UPawnSensingComponent
{
public:
	float                                              BotOccludedHearingThreshold;                               // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotLOSHearingThreshold;                                    // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SEBA[0x8];                                     // 0x0100(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHearNoiseExtended;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPawnSensingComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSPatrolArea
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AINSPatrolArea : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSPatrolArea");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSParty
// 0x01A8 (FullSize[0x01D0] - InheritedSize[0x0028])
class UINSParty : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnPartyJoinedDelegate;                                     // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyStateUpdateDelegate;                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyLeftDelegate;                                       // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FINSPartyState                              LastPartyState;                                            // 0x0058(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U5D1[0x160];                                   // 0x0070(0x0160) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSParty");
		return ptr;
	}



	void StartLateJoinQueue();
	void PromoteToPartyLeader(const struct FString& PlatformId);
	void OpenInviteInterface();
	void LeaveParty();
	bool IsPartyInGame();
	bool IsLocalPlayerLeader();
	bool IsLateJoinPossible();
	bool IsInParty();
	void INSPartyStateUpdate__DelegateSignature(const struct FINSPartyState& State, const struct FPartySettings& Settings);
	void INSPartyLeft__DelegateSignature();
	void INSPartyJoined__DelegateSignature(const struct FINSPartyState& State);
	void Delegate_OnMatchmakerStateChange(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState);
	void CreateParty();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSOutpostGameState
// 0x0060 (FullSize[0x0698] - InheritedSize[0x0638])
class AINSOutpostGameState : public AINSMultiplayerGameState
{
public:
	int                                                CurrentWave;                                               // 0x0638(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalWaves;                                                // 0x063C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOutpostWaveType                                   CurrentWaveType;                                           // 0x0640(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0Z76[0x7];                                     // 0x0641(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCurrentWaveChangedDelegate;                              // 0x0648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTotalWavesChangedDelegate;                               // 0x0658(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OutpostLostObjectiveDelegate;                              // 0x0668(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OutpostPrepareNextWaveDelegate;                            // 0x0678(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OutpostIncomingWaveDelegate;                               // 0x0688(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSOutpostGameState");
		return ptr;
	}



	void SetCurrentWave(int NewCurrentWave);
	void OnRep_TotalWaves();
	void OnRep_CurrentWave();
	void OnOutpostWaveChangedDelegate__DelegateSignature(int NewWave);
	void OnOutpostPrepareNextWaveDelegate__DelegateSignature();
	void OnOutpostLostObjectiveDelegate__DelegateSignature();
	void OnOutpostIncomingWaveDelegate__DelegateSignature(EOutpostWaveType WaveType);
	void Multicast_OutpostPrepareNextWaveEvent();
	void Multicast_OutpostLostObjectiveEvent();
	void Multicast_OutpostIncomingWaveEvent(EOutpostWaveType NewCurrentWaveType);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSOutpostGameMode
// 0x0188 (FullSize[0x0C10] - InheritedSize[0x0A88])
class AINSOutpostGameMode : public AINSCoopMode
{
public:
	class AINSOutpostGameState*                        OutpostGameState;                                          // 0x0A88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_ForceRetreat;                                  // 0x0A90(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                WavesPlayed;                                               // 0x0A98(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WavesCompleted;                                            // 0x0A9C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSupportsObjectiveGroups;                                  // 0x0AA0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WJK3[0x3];                                     // 0x0AA1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ActiveObjectiveGroup;                                      // 0x0AA4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bContestedObjective;                                       // 0x0AA8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRetreated;                                                // 0x0AA9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRetreatedFromElimination;                                 // 0x0AAA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J4SM[0x1];                                     // 0x0AAB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialPrepareTimer;                                       // 0x0AAC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PrepareTimer;                                              // 0x0AB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WaveSurvivalSupplyAward;                                   // 0x0AB4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumWaves;                                                  // 0x0AB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeductWaveAfterRetreat;                                   // 0x0ABC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetWavesOnRetreat;                                      // 0x0ABD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceRespawnOnRetreat;                                    // 0x0ABE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRetreatOnElimination;                                     // 0x0ABF(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EliminationRetreatDelay;                                   // 0x0AC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowRetreatOnFinalWave;                                  // 0x0AC4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IBHI[0x3];                                     // 0x0AC5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefendTimer;                                               // 0x0AC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FinalDefendTimer;                                          // 0x0ACC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RetreatTimer;                                              // 0x0AD0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinimumBotsPerAdditionalObjective;                         // 0x0AD4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumBotsPerAdditionalObjective;                         // 0x0AD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumBotsPerCompletedWave;                               // 0x0ADC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumBotsPerCompletedWave;                               // 0x0AE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotDPRRespawnFinal;                                        // 0x0AE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotDPRRespawnFirst;                                        // 0x0AE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotDPRMinimumTimeRemaining;                                // 0x0AEC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSpecialWaves;                                          // 0x0AF0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_31S0[0x3];                                     // 0x0AF1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpecialWaveFrequency;                                      // 0x0AF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetLoadoutOnNewRound;                                   // 0x0AF8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ONKP[0x7];                                     // 0x0AF9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       MessageStartDefending;                                     // 0x0B00(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       MessageStartDefendingSpecial;                              // 0x0B18(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FText>                               MessagesStartDefendingFinalWave;                           // 0x0B30(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       MessageStartPreparing;                                     // 0x0B40(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       MessageStartRetreat;                                       // 0x0B58(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       MessageStartForcedRetreat;                                 // 0x0B70(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int                                                MaximumBotFireSupportPerWave;                              // 0x0B88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotFireSupportCooldown;                                    // 0x0B8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireSupportMinimumTimeRemaining;                           // 0x0B90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumBotFireSupportFinalWave;                            // 0x0B94(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotFireSupportFinalWaveCooldown;                           // 0x0B98(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireSupportMinimumTimeRemainingFinalWave;                  // 0x0B9C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DQE3[0x8];                                     // 0x0BA0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLoadoutWeapon>                      StartingItems;                                             // 0x0BA8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OutpostWaveConfigAssetPath[0x28];                          // 0x0BB8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UOutpostWaveConfig*                          OutpostWaveConfig;                                         // 0x0BE0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NXGX[0x28];                                    // 0x0BE8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSOutpostGameMode");
		return ptr;
	}



	bool IsFinalWave();
	int GetRemainingWaves();
	void ForceRetreat();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.OutpostWaveConfig
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UOutpostWaveConfig : public UDataAsset
{
public:
	TArray<struct FOutpostCustomWave>                  CustomWaves;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutpostSpecialWave>                 SpecialWaves;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOutpostFinalWave                           FinalWaveSettings;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X25Z[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.OutpostWaveConfig");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSOperationGameMode
// 0x00E0 (FullSize[0x0B68] - InheritedSize[0x0A88])
class AINSOperationGameMode : public AINSCoopMode
{
public:
	float                                              RetreatTimer;                                              // 0x0A88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y5JW[0x4];                                     // 0x0A8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AObjectiveBase*                              ActiveObjective;                                           // 0x0A90(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AObjectiveCapturable*                        ActiveEvacObj;                                             // 0x0A98(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AObjectiveBase*>                      ObjectiveSequence;                                         // 0x0AA0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AObjectiveBase*>                      CompletedObjectives;                                       // 0x0AB0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AObjectiveCapturable*>                EvacObjectives;                                            // 0x0AC0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UINSAISquad*                                 DefendingSquad;                                            // 0x0AD0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      MortarClass[0x28];                                         // 0x0AD8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      HelicopterClass[0x28];                                     // 0x0B00(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class AVehicleHoveringBase*                        EvacHelicopter;                                            // 0x0B28(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      EvacDestination;                                           // 0x0B30(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GVI7[0x30];                                    // 0x0B38(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSOperationGameMode");
		return ptr;
	}



	void SpawnPlayerTeam();
	void EvacSuccessful();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSOccupyGameMode
// 0x0020 (FullSize[0x0988] - InheritedSize[0x0968])
class AINSOccupyGameMode : public AINSMultiplayerMode
{
public:
	int                                                DefaultReinforcementWaves;                                 // 0x0968(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BonusReinforcementWaves;                                   // 0x096C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               FactionOneReinforcementSystem;                             // 0x0970(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               FactionTwoReinforcementSystem;                             // 0x0978(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AObjectiveBase*                              HillObjective;                                             // 0x0980(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSOccupyGameMode");
		return ptr;
	}



	bool ShouldDeductReinforcementWave(class UReinforcementSystemComponent* ReinforcementSystemComponent);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMultiplayerTestGameMode
// 0x0008 (FullSize[0x0970] - InheritedSize[0x0968])
class AINSMultiplayerTestGameMode : public AINSMultiplayerMode
{
public:
	unsigned char                                      UnknownData_7NDV[0x8];                                     // 0x0968(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMultiplayerTestGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMatchmakingServerMode
// 0x0008 (FullSize[0x0310] - InheritedSize[0x0308])
class AINSMatchmakingServerMode : public AGameMode
{
public:
	bool                                               bIsMatchServer;                                            // 0x0308(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8VJ3[0x7];                                     // 0x0309(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMatchmakingServerMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMatchmaking
// 0x00D8 (FullSize[0x0100] - InheritedSize[0x0028])
class UINSMatchmaking : public UObject
{
public:
	unsigned char                                      UnknownData_1Y3N[0xD0];                                    // 0x0028(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSSessionHelper*                           SessionHelper;                                             // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMatchmaking");
		return ptr;
	}



	void OnMatchmakerSuccess__DelegateSignature();
	void OnMatchmakerStateChange__DelegateSignature(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState);
	void OnMatchmakerFailure__DelegateSignature(TEnumAsByte<EMatchmakingFailure> Error);
	bool IsMatchmakingLateJoin();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMatchBeaconState
// 0x0010 (FullSize[0x0088] - InheritedSize[0x0078])
class UINSMatchBeaconState : public UPartyBeaconState
{
public:
	struct FMatchReservation                           MatchReservation;                                          // 0x0078(0x0010) (Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMatchBeaconState");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMatchBeaconHost
// 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
class AINSMatchBeaconHost : public APartyBeaconHost
{
public:
	unsigned char                                      UnknownData_F262[0x9];                                     // 0x02C0(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bReservationsLocked;                                       // 0x02C9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6LKL[0x16];                                    // 0x02CA(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMatchBeaconHost");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMatchBeaconClient
// 0x0030 (FullSize[0x03A0] - InheritedSize[0x0370])
class AINSMatchBeaconClient : public APartyBeaconClient
{
public:
	float                                              ReconnectionInitialTimeout;                                // 0x0370(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReconnectionTimeout;                                       // 0x0374(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasReconnected;                                           // 0x0378(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JQ7A[0x27];                                    // 0x0379(0x0027) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMatchBeaconClient");
		return ptr;
	}



	void ClientAllowedToProceedFromReservationTimeout();
	void ClientAllowedToProceedFromReservation();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSLocalPlayer
// 0x0940 (FullSize[0x0B98] - InheritedSize[0x0258])
class UINSLocalPlayer : public ULocalPlayer
{
public:
	class URenderTargetController*                     RenderTargetController;                                    // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_POF1[0x18];                                    // 0x0260(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsUsingController;                                        // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IVTL[0x7];                                     // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnUsingControllerUpdate;                                   // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FString                                     PendingJoinPassword;                                       // 0x0290(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSPlayerLocalProfile*                      LoadedLocalProfile;                                        // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HasAchievementDescriptions;                                // 0x02A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V7K4[0x7];                                     // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             AchievementsNames;                                         // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQueryAchievementsComplete;                               // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FPlayerGameAchievement> PlayerAchievements;                                        // 0x02D0(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NV8B[0x10];                                    // 0x0320(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            LastProfileRequestTime;                                    // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8_t                                             ProfileRequestRetries;                                     // 0x0338(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HR73[0x7];                                     // 0x0339(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     StatisticsPlayerAPIEndpoint;                               // 0x0340(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     StatisticsPlayerAPIEndpointBeta;                           // 0x0350(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStatisticsProfile*                          PlayerProfile;                                             // 0x0360(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization)
	struct FScriptMulticastDelegate                    OnRequestPlayerProfileUpdated;                             // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization)
	unsigned char                                      UnknownData_I0NX[0x8];                                     // 0x0378(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PlayerProfileResult;                                       // 0x0380(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64_t                                            LastGamesRequestTime;                                      // 0x0390(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8_t                                             GamesRequestRetries;                                       // 0x0398(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2FVP[0x7];                                     // 0x0399(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRequestPlayerGamesUpdated;                               // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization)
	unsigned char                                      UnknownData_V5ZN[0x8];                                     // 0x03B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PlayerGamesResult;                                         // 0x03B8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64_t                                            LastPostMatchRequestTime;                                  // 0x03C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8_t                                             LastPostMatchRequestRetries;                               // 0x03D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EP4R[0x7];                                     // 0x03D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPostMatchStatsUpdated;                                   // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization)
	struct FString                                     GameStatsResult;                                           // 0x03E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStatisticsLastGameResult                   LastGameResult;                                            // 0x03F8(0x0230) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GKIR[0x8];                                     // 0x0628(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerRatingUpdated;                                     // 0x0630(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FCompetitiveRating                          CompetitiveRating;                                         // 0x0640(0x001C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasReceivedCompetitiveRating;                             // 0x065C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HLR[0x3];                                     // 0x065D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPoolCountsUpdated;                                       // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAbandonedMatchUpdate;                                    // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0YYT[0x20];                                    // 0x0680(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerAvatarLoadedDelegate;                              // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FUniqueNetIdRepl, class UTexture2D*>   CachedUserAvatars;                                         // 0x06B0(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, struct FString>      CachedNicknames;                                           // 0x0700(0x0050) (NativeAccessSpecifierPrivate)
	class UTexture2D*                                  UserAvatar;                                                // 0x0750(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E2Z7[0x20];                                    // 0x0758(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerGearLevelChanged;                                  // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGetAccountStatusResult                     AccountStatus;                                             // 0x0788(0x0030) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAccountStatusUpdatedDelegate;                            // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QLTS[0xA0];                                    // 0x07C8(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLocalVoiceChatStateChanged;                              // 0x0868(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRemoteVoiceChatStateChanged;                             // 0x0878(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProfileBlockLoadedDelegate;                              // 0x0888(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerProfileUpdatedDelegate;                            // 0x0898(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSandstormPlayerProfile                     CachedPlayerProfile;                                       // 0x08A8(0x02C8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchHistoryUpdated;                                     // 0x0B70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMatchHistory                               CachedMatchHistory;                                        // 0x0B80(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSLocalPlayer");
		return ptr;
	}



	void UpdatePoolCounts();
	void UpdatePlayerProfile(bool bForceUpdate);
	void UpdateMatchHistory();
	void UpdateArmorAndCarrierLevels(const struct FName& ArmorLevel, const struct FName& CarrierLevel);
	void SetNextJoinPassword(const struct FString& Password);
	void RequestPostMatchStats();
	void RequestPlayerProfile();
	void RequestPlayerGames(int CurrentPage, int CountPerPage);
	void QueryAchievements(bool bRefresh);
	void OnUsingControllerUpdate__DelegateSignature(bool UsingController, EeInputIconType NewIconType);
	void OnUpdateProfileBlockLoadedDelegate__DelegateSignature(EProfileBlockType Type, bool bFromCloud);
	void OnTutorialComplete();
	void OnTaglinesLoaded();
	void OnRequestPlayerProfileUpdated__DelegateSignature();
	void OnRequestPlayerGamesUpdated__DelegateSignature();
	void OnQueryAchievementsComplete__DelegateSignature();
	void OnProfileBlockLoaded(EProfileBlockType Type, bool bFromCloud);
	void OnPostMatchStatsUpdated__DelegateSignature();
	void OnPoolCountsUpdatedCallback(bool bSuccess, const struct FQueryPoolCountResults& Results);
	void OnPoolCountsUpdated__DelegateSignature(const struct FQueryPoolCountResults& Counts);
	void OnPlayerRatingUpdated__DelegateSignature(const struct FCompetitiveRating& Rating);
	void OnPlayerProfileUpdated__DelegateSignature(const struct FSandstormPlayerProfile& NewData);
	void OnPlayerGearLevelChanged__DelegateSignature(const struct FName& ArmorLevel, const struct FName& CarrierLevel);
	void OnPlayerAvatarLoaded__DelegateSignature(class UTexture2D* Texture);
	void OnMatchHistoryUpdated__DelegateSignature(const struct FMatchHistory& NewHistory);
	void OnExperienceUpdated(int64_t NewExperience);
	void OnAccountStatusUpdatedDelegate__DelegateSignature(const struct FGetAccountStatusResult& Status);
	void OnAbandonedMatchUpdate__DelegateSignature();
	void LoadPlayerAvatar();
	bool HasAbandonedMatchInPool(const struct FString& PoolName);
	void GetVoiceInputDevices(TArray<struct FVoiceChatAvailableDevice>* OutInputDevices);
	void GetTaglinesCount(TMap<struct FString, int>* TaglineCountMap);
	void GetTaglineClassPtr(struct FString* ClassName);
	class UStatisticsProfile* GetPlayerProfile();
	class UINSPlayerLocalProfile* GetLocalProfile();
	int GetEntitledScoreboardBadgeIndex();
	EeInputIconType GetControllerIconType();
	void GetAchievementsCount(int* AchievementsAchieved, int* AchievementsTotal);
	void CreateCustomGame(bool bLocal, const struct FString& Scenario);
	void BroadcastKeyIconUpdate();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSLevelScriptActor
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class AINSLevelScriptActor : public ALevelScriptActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSLevelScriptActor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameViewportClient
// 0x0070 (FullSize[0x03A0] - InheritedSize[0x0330])
class UINSGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData_2JHD[0x68];                                    // 0x0330(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFont*                                       WatermarkFontAsset;                                        // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameViewportClient");
		return ptr;
	}



	void SSForceKeyboardId(int NewControllerId);
	void SSForceGamepadId(int NewControllerId);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameUserSettings
// 0x02E8 (FullSize[0x0408] - InheritedSize[0x0120])
class UINSGameUserSettings : public UGameUserSettings
{
public:
	struct FScriptMulticastDelegate                    OnSettingsUpdated;                                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnConnectionStatusLocationSettingUpdated;                  // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRespawnStatusLocationSettingUpdated;                     // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHUDDisplayOptionChanged;                                 // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSpectatorSettings                          SpectatorSettings;                                         // 0x0160(0x0007) (BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M1LR[0x1];                                     // 0x0167(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     JsonSpectatorSettings;                                     // 0x0168(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, unsigned char>                  VideoOptions;                                              // 0x0178(0x0050) (Config, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnVoiceChatInputDeviceChanged;                             // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnVoiceChatGainSettingChanged;                             // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              MasterVolume;                                              // 0x01E8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MusicVolume;                                               // 0x01EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              VoiceVolume;                                               // 0x01F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EffectsVolume;                                             // 0x01F4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      AudioPanningRule;                                          // 0x01F8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bVoiceMuteRadioTransmitBeep;                               // 0x01F9(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_102Y[0x6];                                     // 0x01FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     VoiceInputDevice;                                          // 0x0200(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              VoiceInputGain;                                            // 0x0210(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CX4T[0x4];                                     // 0x0214(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMatchRegionsChangedDelegate;                             // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchGamemodesChangedDelegate;                           // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClientStatLocationChanged;                               // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      ColorSchemeSetting;                                        // 0x0248(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RespawnStatusLocationSetting;                              // 0x0249(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ConnectionStatusLocationSetting;                           // 0x024A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GN7E[0x1];                                     // 0x024B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                CustomFriendlyColor;                                       // 0x024C(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9G4X[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     CustomFriendlyColorString;                                 // 0x0260(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                CustomEnemyColor;                                          // 0x0270(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CustomEnemyColorString;                                    // 0x0280(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                CustomNeutralColor;                                        // 0x0290(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CustomNeutralColorString;                                  // 0x02A0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                BuddyColor;                                                // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     BuddyColorString;                                          // 0x02C0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                CommanderObserverColor;                                    // 0x02D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CommanderObserverColorString;                              // 0x02E0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBuddyColorOverridesCommanderObserverColor;                // 0x02F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S0BO[0x7];                                     // 0x02F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     CustomLanguage;                                            // 0x02F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLanguageChanged;                                         // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              ObjectiveIndicatorOpacity;                                 // 0x0318(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeammateIndicatorOpacity;                                  // 0x031C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             SeenMenuPrompts;                                           // 0x0320(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                QualityPreset;                                             // 0x0330(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SoldierFOV;                                                // 0x0334(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultSoldierFOV;                                         // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bViewBob;                                                  // 0x033C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableProfanityFilter;                                    // 0x033D(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCameraAnimation;                                          // 0x033E(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDeathCamera;                                              // 0x033F(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRelativeTeamColors;                                       // 0x0340(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysShowCompass;                                        // 0x0341(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowContextualKeyHints;                                   // 0x0342(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowContextualVaultHints;                                 // 0x0343(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowContextualCycleOpticsHint;                            // 0x0344(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAudioVOMuteRadioTransmitBeep;                             // 0x0345(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMuteTinitusEffect;                                        // 0x0346(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O8Y7[0x1];                                     // 0x0347(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ExcludedMatchRegions;                                      // 0x0348(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedMatchGamemodes;                                    // 0x0358(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bClientNetStats;                                           // 0x0368(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowDynamicIngameLessons;                                // 0x0369(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSelectedExcludedRegions;                                  // 0x036A(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowFPS;                                                  // 0x036B(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bClientStatLocation;                                       // 0x036C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableFrameRateSmoothing;                                 // 0x036D(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableHUD;                                                // 0x036E(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysShowFiremode;                                       // 0x036F(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysShowCosmeticSelection;                              // 0x0370(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableObjectiveBriefing;                                  // 0x0371(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableMouseSmoothing;                                     // 0x0372(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K395[0x1];                                     // 0x0373(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           ConfirmedEventMask;                                        // 0x0374(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSoundInBackground;                                        // 0x0378(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UYCT[0x3];                                     // 0x0379(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BackgroundVolumeMultiplier;                                // 0x037C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisplayGamma;                                              // 0x0380(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FrameLimit;                                                // 0x0384(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScreenPercentage;                                          // 0x0388(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B5CJ[0x4];                                     // 0x038C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDateTime                                   LastAnnoucementPanelDate;                                  // 0x0390(0x0008) (ZeroConstructor, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FOverrideSetting>        OverrideOptions;                                           // 0x0398(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8Q8I[0x1];                                     // 0x03E8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bFirstSave;                                                // 0x03E9(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_70LN[0x2];                                     // 0x03EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           GameVersion;                                               // 0x03EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnNVIDIAHighlightPreferencesChangedDelegate;               // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bEnableHighlights;                                         // 0x0400(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowDevTag;                                               // 0x0401(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KREX[0x6];                                     // 0x0402(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameUserSettings");
		return ptr;
	}



	void UpdateLastAnnouncementPanelDate(const struct FDateTime& CurrentAnnouncementDateTime);
	bool ShouldShowAnnouncementPopup(const struct FDateTime& CurrentAnnouncementDateTime);
	void SetVoiceVolume(float Volume);
	void SetVoiceInputGain(float NewInputGain);
	void SetVoiceInputDevice(const struct FString& NewDevice);
	void SetViewBobEnabled(bool bVal);
	void SetToDefaultsVideoSettings();
	void SetToDefaultsGameSettings();
	void SetToDefaultsControlSettings();
	void SetToDefaultsAudioSettings();
	void SetTeammateIndicatorOpacity(float Alpha);
	void SetSpectatorXrayTailsPlayerOnlyEnabled(bool bEnable);
	void SetSpectatorXrayTailsEnabled(bool bEnable);
	void SetSpectatorXrayEnabled(bool bEnable);
	void SetSpectatorControlHintsEnabled(bool bEnable);
	void SetSoundInBackground(bool bEnabledInBG);
	void SetSoldierFOV(float Val);
	void SetShowFPS(bool bEnabled);
	void SetShowDevTag(bool bEnabled);
	void SetShowContextualVaultHints(bool bNewVal);
	void SetShowContextualKeyHints(bool bNewVal);
	void SetShowContextualCycleOpticsHint(bool bNewVal);
	void SetShoutcasterTeamScoresEnabled(bool bEnabled);
	void SetShoutcasterPlayerVitalsEnabled(bool bEnabled);
	void SetShoutcasterMinimapEnabled(bool bEnabled);
	void SetScreenPercentage(float ScreenPercentage);
	void SetRespawnStatusLocationSetting(unsigned char RespawnLocationIndex);
	void SetRelativeTeamColors(bool bVal);
	void SetQualityPreset(int Quality);
	void SetProfanityFilterEnabled(bool bVal);
	void SetPanningRule(unsigned char Rule);
	void SetOverrideVideoOption(const struct FName& ConsoleVariableName, int Value, bool bMakeDefault);
	void SetObjectiveIndicatorOpacity(float Alpha);
	void SetMuteVOTransmitBeep(bool bNewMute);
	void SetMuteTinitusEffect(bool bNewMute);
	void SetMuteRadioTransmitBeep(bool bNewMute);
	void SetMusicVolume(float Volume);
	void SetMouseSmoothing(bool bEnabled);
	void SetMatchRegionEnabled(const struct FName& Mode, bool bEnabled);
	void SetMatchGamemodeEnabled(const struct FName& GameModeName, bool bEnabled);
	void SetMasterVolume(float Volume);
	void SetHasSelectedRegions(bool bEnabled);
	void SetFrameRateSmoothing(bool bEnabled);
	void SetFrameLimit(int FPS);
	void SetEnableObjectiveBriefing(bool bEnable);
	void SetEnableNVIDIAHighlights(bool bEnabled);
	void SetEnableHUD(bool bEnable);
	void SetEffectsVolume(float Volume);
	void SetDisplayGamma(float Gamma);
	void SetDefaultColorScheme();
	void SetDeathCameraEnabled(bool bEnabled);
	void SetCustomNeutralLinearColor(const struct FLinearColor& NewColor);
	void SetCustomNeutralColor(float R, float G, float B);
	bool SetCustomLanguage(const struct FString& InValue, bool bSaveToConfig);
	void SetCustomFriendlyLinearColor(const struct FLinearColor& NewColor);
	void SetCustomFriendlyColor(float R, float G, float B);
	void SetCustomEnemyLinearColor(const struct FLinearColor& NewColor);
	void SetCustomEnemyColor(float R, float G, float B);
	void SetConnectionStatusLocationSetting(unsigned char ConnectionLocationIndex);
	void SetCommanderObserverLinearColor(const struct FLinearColor& NewColor);
	void SetCommanderObserverColor(float R, float G, float B);
	void SetColorSchemeSetting(unsigned char ColorSchemeIndex);
	void SetClientStatsOverlayEnabled(bool bEnabled);
	void SetClientStatLocation(bool bEnabled);
	void SetCameraAnimationEnabled(bool bVal);
	void SetBuddyOverridesCommanderObserverColor(bool bVal);
	void SetBuddyLinearColor(const struct FLinearColor& NewColor);
	void SetBuddyColor(float R, float G, float B);
	void SetBackgroundVolumeMultiplier(float Amount);
	void SetAlwaysShowFiremode(bool bNewVal);
	void SetAlwaysShowCosmeticSelection(bool bNewVal);
	void SetAlwaysShowCompass(bool bNewVal);
	void SetAllowIngameLessons(bool bVal);
	void ResetOverrideVideoOptions(bool bPartialRefresh);
	void ResetOverrideVideoOption(const struct FName& ConsoleVariableName);
	void RefreshOverrideVideoOptions();
	void OnVoiceChatInputDeviceChanged__DelegateSignature(const struct FString& NewInputDevice);
	void OnVoiceChatGainSettingChanged__DelegateSignature(float NewGain);
	void OnSettingsUpdated__DelegateSignature();
	void OnRespawnStatusLocationSettingUpdated__DelegateSignature(unsigned char NewIndex);
	void OnNVIDIAHighlightPreferencesChanged__DelegateSignature();
	void OnMatchRegionsChanged__DelegateSignature();
	void OnMatchGamemodesChanged__DelegateSignature();
	void OnLanguageChanged__DelegateSignature();
	void OnHUDDisplayOptionChanged__DelegateSignature();
	void OnConnectionStatusLocationSettingUpdated__DelegateSignature(unsigned char NewIndex);
	void OnClientStatLocationChanged__DelegateSignature();
	void MarkMenuPromptAsSeen(struct FString* Prompt);
	bool MarkEventAsConfirmed(EConfirmableEvent Event, bool bPersistIfUpdated);
	bool IsViewBobEnabled();
	bool IsProfanityFilterEnabled();
	bool IsObjectiveBriefingEnabled();
	bool IsHUDEnabled();
	bool IsFrameRateSmoothingEnabled();
	bool IsFirstTimeSaving();
	bool IsDeathCameraEnabled();
	bool IsCameraAnimationEnabled();
	bool HasSeenMenuPrompt(struct FString* Prompt);
	bool HasConfirmedEvent(EConfirmableEvent Event);
	float GetVoiceVolume();
	float GetVoiceInputGain();
	struct FString GetVoiceInputDevice();
	bool GetSpectatorXrayTailsPlayerOnlyEnabled();
	bool GetSpectatorXrayTailsEnabled();
	bool GetSpectatorXrayEnabled();
	bool GetSpectatorControlHintsEnabled();
	bool GetSoundInBackground();
	float GetSoldierFOV();
	bool GetShowFPS();
	bool GetShowDevTag();
	bool GetShowContextualVaultHints();
	bool GetShowContextualKeyHints();
	bool GetShowContextualCycleOpticsHint();
	bool GetShoutcasterTeamScoresEnabled();
	bool GetShoutcasterPlayerVitalsEnabled();
	bool GetShoutcasterMinimapEnabled();
	float GetScreenPercentage();
	void GetResolutionScaleInformationSane(float* CurrentScaleNormalized, float* CurrentScaleValue, float* MinScaleValue, float* MaxScaleValue);
	bool GetRelativeTeamColors();
	int GetQualityPreset();
	unsigned char GetPanningRule();
	bool GetNVIDIAHighlightEnabled();
	bool GetMuteVOTransmitBeep();
	bool GetMuteTinitusEffect();
	bool GetMuteRadioTransmitBeep();
	float GetMusicVolume();
	bool GetMouseSmoothing();
	void GetMatchRegions(TArray<struct FName>* Regions, TArray<struct FName>* EnabledRegions);
	void GetMatchGamemodes(bool bCoop, TArray<struct FName>* Modes, TArray<struct FName>* EnabledModes);
	float GetMasterVolume();
	class UINSGameUserSettings* GetInsurgencyGameUserSettings();
	bool GetHasSelectedRegions();
	int GetFrameLimit();
	void GetExcludedMatchRegions(TArray<struct FName>* Regions);
	void GetExcludedMatchGamemodes(TArray<struct FName>* Modes);
	float GetEffectsVolume();
	float GetDisplayGamma();
	struct FString GetCustomLanguage();
	bool GetColorScheme(unsigned char ColorSchemeIndex, struct FColorScheme* OutColorScheme);
	bool GetClientStatsOverlayEnabled();
	bool GetClientStatLocation();
	float GetBackgroundVolumeMultiplier();
	bool GetAlwaysShowFiremode();
	bool GetAlwaysShowCosmeticSelection();
	bool GetAlwaysShowCompass();
	bool GetAllowIngameLessons();
	void CreateOverrideVideoOption(const struct FName& ConsoleVariableName);
	void ClearEventConfirmedState(EConfirmableEvent Event, bool bPersistIfUpdated);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameSession
// 0x0098 (FullSize[0x02D0] - InheritedSize[0x0238])
class AINSGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData_919T[0x20];                                    // 0x0238(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             AdminUniqueIds;                                            // 0x0258(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerBan>                          PlayerBans;                                                // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9HQ5[0x58];                                    // 0x0278(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameSession");
		return ptr;
	}



	void OnGameStatsServerLoginChanged(bool bLoggedIn);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameSessionMatchmaking
// 0x0218 (FullSize[0x04E8] - InheritedSize[0x02D0])
class AINSGameSessionMatchmaking : public AINSGameSession
{
public:
	unsigned char                                      UnknownData_997C[0x140];                                   // 0x02D0(0x0140) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ReservationBeaconHostClass;                                // 0x0410(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      QosBeaconHostClass;                                        // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSessionRegistrationLocked;                                // 0x0420(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZH3E[0xF];                                     // 0x0421(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSMatchBeaconHost*                         ReservationBeaconHost;                                     // 0x0430(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AQosBeaconHost*                              QosBeaconHost;                                             // 0x0438(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6OPX[0xA0];                                    // 0x0440(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                VoteKickRejoinBanTime;                                     // 0x04E0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F2C5[0x4];                                     // 0x04E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameSessionMatchmaking");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameInstance
// 0x06A8 (FullSize[0x0840] - InheritedSize[0x0198])
class UINSGameInstance : public UGameInstance
{
public:
	bool                                               bNeedsToPromptLanguageSelection;                           // 0x0198(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SU5L[0xEF];                                    // 0x0199(0x00EF) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UObject*>                             TempSyncLoadObjects;                                       // 0x0288(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OP3M[0x20];                                    // 0x0298(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMapCycleEntry>                      MapCycle;                                                  // 0x02B8(0x0010) (BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMapCycleEntry>                      CurrentMapPool;                                            // 0x02C8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentMapCycleIndex;                                      // 0x02D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I6RY[0x4];                                     // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FServerCustomWelcome                        ServerCustomWelcomeMessage;                                // 0x02E0(0x0090) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      WidgetModDownloadAsset[0x28];                              // 0x0370(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UUserWidget*                                 WidgetModDownload;                                         // 0x0398(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7WFM[0x10];                                    // 0x03A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LoadingScreenFadeDelay;                                    // 0x03B0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_51CA[0x14];                                    // 0x03B4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUserWidget*                                 TransitionLoadingScreenWidget;                             // 0x03C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      TransitionLoadingScreenAsset[0x28];                        // 0x03D0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_KTJ1[0x10];                                    // 0x03F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LegalTextMinTime;                                          // 0x0408(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6X5R[0x9];                                     // 0x040C(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int8_t                                             NWILoginMaxRetries;                                        // 0x0415(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AGMC[0xA];                                     // 0x0416(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NWILoginMaxRetryTime;                                      // 0x0420(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S6T8[0x2C];                                    // 0x0424(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMatchmakingSearchBeginDelegate;                          // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchmakingErrorDelegate;                                // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReadyCheckUpdate;                                        // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C3RI[0x1B];                                    // 0x0480(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldAutoRequeue;                                        // 0x049B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PZBX[0x4];                                     // 0x049C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDateTime                                   MatchAutoRequeueTime;                                      // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSMatchmaking*                             Matchmaker;                                                // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0595[0x68];                                    // 0x04B0(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAvailablePlaylistsUpdated;                               // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PSQX[0x10];                                    // 0x0528(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAvailablePlaylists                         AvailablePlaylists;                                        // 0x0538(0x0058) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M3BS[0x40];                                    // 0x0590(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ProfaneWordCollections[0x10];                              // 0x05D0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class UProfaneWordCollection*>              LoadedProfaneWordCollections;                              // 0x05E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMusicDirector*                              MusicDirectorInstance;                                     // 0x05F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInitialClassSelection;                                    // 0x05F8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DHKC[0x2F];                                    // 0x05F9(0x002F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              Taglines;                                                  // 0x0628(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTaglinesLoaded;                                           // 0x0638(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTaglineLoadPending;                                       // 0x0639(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0YZY[0x16];                                    // 0x063A(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnNetStatsEnabled;                                         // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNetStatsUpdated;                                         // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4AUS[0x20];                                    // 0x0670(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnNetTimingOutUpdateDelegate;                              // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlatformConnectionStatusChangedDelegate;                 // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y6IO[0x18];                                    // 0x06B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bReturnToServerBrowser;                                    // 0x06C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnteredMainMenu;                                          // 0x06C9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_INNS[0x6];                                     // 0x06CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSParty*                                   Party;                                                     // 0x06D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHighlightsEnabled;                                        // 0x06D8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SE7A[0x27];                                    // 0x06D9(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWelcomeMenuWidget*                          WelcomeMenuWidget;                                         // 0x0700(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ClassWelcomeScreenWidget;                                  // 0x0708(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3VHC[0x130];                                   // 0x0710(0x0130) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameInstance");
		return ptr;
	}



	void UpdateRealtimeMultiplayAndUpdateUserPrivilege(bool RealtimeMultiplay, bool UpdateUserPrivilege);
	void TimerCheckModSubscriptions();
	void ShowAccountPicker();
	void SeamlessLoadingScreen();
	void ReturnToMainMenu();
	void RemoveViewportLoadingScreenWidget();
	void PlayReplayByName(const struct FString& InName, bool bHttp);
	void OnTaglinesLoaded();
	void OnReadyCheckUpdate__DelegateSignature(bool bActive, bool bLocalReady);
	void OnPreLoadMap(const struct FString& LevelName);
	void OnPreClientTravel(const struct FString& PendingURL, TEnumAsByte<ETravelType> TravelType, bool bIsSeamlessTravel);
	void OnPostLoadMapWithWorld(class UWorld* World);
	void OnPlatformConnectionStatusChanged__DelegateSignature(bool bConnected);
	void OnNetTimingOutUpdateDelegate__DelegateSignature(bool bTimingOut);
	void OnNetStatsUpdated__DelegateSignature(const struct FClientNetStats& Stats);
	void OnNetStatEnabled__DelegateSignature(bool bEnabled);
	void OnMatchmakingSearchBegin__DelegateSignature();
	void OnMatchmakingError__DelegateSignature(const struct FText& Error, TEnumAsByte<EMatchmakingFailure> MatchmakingFailureType);
	void OnMatchmakerStateChanged(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState);
	void OnMatchmakerFailed(TEnumAsByte<EMatchmakingFailure> Reason);
	void OnForceLogout(int LocalUserNum);
	void OnCheckHasAbandonedGameComplete(bool bSuccessful, const struct FString& Data);
	void OnAvailablePlaylistUpdated__DelegateSignature(const struct FAvailablePlaylists& Data);
	void OnAvailablePlaylistsFetched(bool bSuccess, const struct FQueryOpenPoolsResults& Results);
	void MountPaksInDirectory(const struct FString& Directory);
	void MountPak(const struct FString& PakPath);
	void MountMod(const struct FString& PluginName, const struct FString& Path);
	void MatchmakingRequeue();
	void MatchmakingAcceptReadyCheck();
	bool JoinSearchResult(class ULocalPlayer* LocalPlayer, const struct FBlueprintFindSessionResult& SearchResult, const struct FString& ServerPassword);
	bool IsMatchmakingInPool(const struct FString& PoolName);
	bool IsMatchmaking();
	bool IsLoggedInNewWorld();
	bool IsConnectedToOnlineServices();
	bool IsClientNetStatsEnabled();
	bool IsAboutToJoinMatch();
	void IndicateGameLoaded();
	bool HostGame(class ULocalPlayer* LocalPlayer, const struct FString& InTravelURL);
	bool HasAllMapsDownloaded();
	void GetThumbnailTextureForLevel(const struct FString& Name, const struct FString& LightingName);
	struct FName GetState();
	bool GetNetPacketLoss(float* InPacketLoss, float* OutPacketLoss);
	float GetMatchmakingTimer();
	struct FText GetMatchmakingProgressText();
	int GetMatchmakingEstimatedTimer();
	bool GetMapCycleTravelUrl(struct FString* TravelUrl);
	bool GetLeaverBanTimer(float* Minutes, float* Seconds);
	struct FText GetLeaverBanText();
	struct FString GetAppId();
	void ForceStopFPSChart();
	void ForceStartFPSChart();
	void FadeLoadingScreen();
	void EndLoadingScreen();
	bool DoesContainProfaneWord(const struct FString& inString, struct FString* OutString);
	void DirectConnectToIP(const struct FString& IpPort, const struct FString& Password);
	bool CanJoinQueue();
	void CancelMatchRequeue();
	void CancelMatchmakingSearch();
	void BeginMatchmakingForPlaylists(TArray<class UPlaylist*> Playlist);
	void BeginLoadingScreenURL(const struct FString& URL, bool bSeamless, bool bMatchTransition);
	void BeginLoadingScreen(const struct FString& Name, const struct FString& Mode, const struct FString& Scenario, const struct FString& LightingName, bool bSeamless, bool bMatchTransition);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSGameEngine
// 0x0000 (FullSize[0x0E70] - InheritedSize[0x0E70])
class UINSGameEngine : public UGameEngine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSGameEngine");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSFrontlineGameMode
// 0x0098 (FullSize[0x0A00] - InheritedSize[0x0968])
class AINSFrontlineGameMode : public AINSMultiplayerMode
{
public:
	int                                                StartingWaves;                                             // 0x0968(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CapturingBonusWave;                                        // 0x096C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RegressSpawnsTimer;                                        // 0x0970(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EGI1[0x4];                                     // 0x0974(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UReinforcementSystemComponent*               Team1ReinforcementSystem;                                  // 0x0978(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               Team2ReinforcementSystem;                                  // 0x0980(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z0QI[0x10];                                    // 0x0988(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastStandDisableSpawnsDelay;                               // 0x0998(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultLastStandDrainRate;                                 // 0x099C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7YKZ[0x8];                                     // 0x09A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LastStandTeam[0x28];                                       // 0x09A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_DUVO[0x8];                                     // 0x09D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_LastStandDisableSpawns;                        // 0x09D8(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_LastStandDrainRate;                            // 0x09E0(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C5S1[0x18];                                    // 0x09E8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSFrontlineGameMode");
		return ptr;
	}



	void OnWavesDepleted_DisableAutoBalance(class UReinforcementSystemComponent* Component);
	void OnWaveGained_ReenableAutoBalance(class UReinforcementSystemComponent* Component, int OldWaveCount);
	void LastStandDisableSpawns();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSFirefightGameMode
// 0x0000 (FullSize[0x0968] - InheritedSize[0x0968])
class AINSFirefightGameMode : public AINSMultiplayerMode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSFirefightGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSMissionGameMode
// 0x0088 (FullSize[0x0B10] - InheritedSize[0x0A88])
class AINSMissionGameMode : public AINSCoopMode
{
public:
	class UScenarioMission*                            MissionScenario;                                           // 0x0A88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AObjectiveBase*                              ActiveObjective;                                           // 0x0A90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MortarClass[0x28];                                         // 0x0A98(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      HelicopterClass[0x28];                                     // 0x0AC0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class AVehicleHoveringBase*                        EvacHelicopter;                                            // 0x0AE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      EvacDestination;                                           // 0x0AF0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                EvacTimerHandle;                                           // 0x0AF8(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartedEvac;                                              // 0x0B00(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UGTE[0x3];                                     // 0x0B01(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TotalDeadPlayers;                                          // 0x0B04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAISquad*                                 DefendingSquad;                                            // 0x0B08(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSMissionGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSFilmingGameMode
// 0x0000 (FullSize[0x0B10] - InheritedSize[0x0B10])
class AINSFilmingGameMode : public AINSMissionGameMode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSFilmingGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSDemoSpectator
// 0x0070 (FullSize[0x0898] - InheritedSize[0x0828])
class AINSDemoSpectator : public AINSBasePlayerController
{
public:
	struct FTimerHandle                                TimerHandle_ScenarioLoad;                                  // 0x0828(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScrubToTimeCompleteDelegate;                             // 0x0830(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScrubbingStateChangedDelegate;                           // 0x0840(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              PlaybackSpeed;                                             // 0x0850(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WGCJ[0x4];                                     // 0x0854(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AHUDReplay*                                  ReplayHud;                                                 // 0x0858(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScrubbingToTime;                                          // 0x0860(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasMenuHiddenOnKeyDown;                                   // 0x0861(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_880R[0x6];                                     // 0x0862(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AHUDMultiplayer*                             MultiplayerHud;                                            // 0x0868(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInGameMenuWidget*                           InGameMenuInstance;                                        // 0x0870(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SQQ8[0x8];                                     // 0x0878(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                HealthSnapshotTimer;                                       // 0x0880(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bBenchmarkStatCapture;                                     // 0x0888(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bBenchmarkStatCaptureActive;                               // 0x0889(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_69Q2[0x2];                                     // 0x088A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BenchmarkStatCaptureStart;                                 // 0x088C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BenchmarkStatCaptureDuration;                              // 0x0890(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BenchmarkStatCaptureWarmup;                                // 0x0894(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSDemoSpectator");
		return ptr;
	}



	void TogglePauseReplay();
	void ToggleInGameMenu();
	void SpectatePreviousPlayer();
	void SpectateNextPlayer();
	void ShowInGameMenu();
	void SetViewTargetPlayerState(class APlayerState* InPlayerState);
	void ScrubToTime(float TimeSeconds);
	void PauseReplay(bool bPaused);
	void OnScrubToTimeComplete__DelegateSignature(bool bSuccessful);
	void OnScrubbingStateChangedDelegate__DelegateSignature(bool bIsScrubbing);
	bool IsReplayPaused();
	void IncreasePlaybackSpeed();
	void HideInGameMenu();
	float GetDemoTimeTotal();
	float GetDemoTimeCurrent();
	float GetCurrentPlaybackSpeed();
	void DecreasePlaybackSpeed();
	void CheckScenarioLoad();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSDemoNetDriver
// 0x0000 (FullSize[0x1120] - InheritedSize[0x1120])
class UINSDemoNetDriver : public UDemoNetDriver
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSDemoNetDriver");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSDamageType
// 0x0060 (FullSize[0x00A0] - InheritedSize[0x0040])
class UINSDamageType : public UDamageType
{
public:
	bool                                               bHasCustomName;                                            // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RLK8[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DamageTypeCustomName;                                      // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bCustomNameReplacesWeaponName;                             // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9JBV[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  DamageTypeIcon;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanArmorMitigate;                                         // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanEffectPlayersInSpawnZone;                              // 0x0071(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayHitReactions;                                         // 0x0072(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayPainSounds;                                           // 0x0073(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayDeathSounds;                                          // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldBloodPool;                                          // 0x0075(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBurns;                                                    // 0x0076(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExplosive;                                                // 0x0077(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bThermiteType;                                             // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bChemical;                                                 // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoteDamageType;                                         // 0x007A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreFriendlyFireDamageModifier;                         // 0x007B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDamageDestructibleObjectives;                             // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3IAU[0x3];                                     // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageBonusObjectives;                                     // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreachesDoors;                                            // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KLMM[0x3];                                     // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageBonusFragileBreakables;                              // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrainStamina;                                             // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XLZX[0x3];                                     // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaminaDrainAmount;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePainOrDeathReponseOverride;                            // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YWGU[0x3];                                     // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeBetweenResponses;                                      // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterResponse                                 PainResponse;                                              // 0x009C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterResponse                                 DeathResponse;                                             // 0x009D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RLBQ[0x2];                                     // 0x009E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSDamageType");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSDamageTypeCheat
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UINSDamageTypeCheat : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSDamageTypeCheat");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSConvoyGameMode
// 0x0020 (FullSize[0x0988] - InheritedSize[0x0968])
class AINSConvoyGameMode : public AINSMultiplayerMode
{
public:
	class UReinforcementSystemComponent*               AttackerReinforcementSystem;                               // 0x0968(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               DefenderReinforcementSystem;                               // 0x0970(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AObjectiveBase*                              ActiveObjective;                                           // 0x0978(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundTimeExtension;                                        // 0x0980(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZTNZ[0x4];                                     // 0x0984(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSConvoyGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCheckpointGameMode
// 0x0160 (FullSize[0x0BE8] - InheritedSize[0x0A88])
class AINSCheckpointGameMode : public AINSCoopMode
{
public:
	float                                              BotAmbushRatioCheckpointMinDeaths;                         // 0x0A88(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotAmbushRatioCheckpointMaxDeaths;                         // 0x0A8C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AVehicleBase*>                        PendingVehicleEnters;                                      // 0x0A90(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCheckpointCounterAttackTypes*               OverrideCounterAttackType;                                 // 0x0AA0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefendTimer;                                               // 0x0AA8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefendTimerFinal;                                          // 0x0AAC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RetreatTimer;                                              // 0x0AB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnDPR;                                                // 0x0AB4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnDelay;                                              // 0x0AB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCounterAttackReinforce;                                   // 0x0ABC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7IN2[0x3];                                     // 0x0ABD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostCaptureRushTimer;                                      // 0x0AC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CounterAttackRespawnDPR;                                   // 0x0AC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CounterAttackRespawnDelay;                                 // 0x0AC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObjectiveTotalEnemyRespawnMultiplierMin;                   // 0x0ACC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObjectiveTotalEnemyRespawnMultiplierMax;                   // 0x0AD0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FinalCacheBotQuotaMultiplier;                              // 0x0AD4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AObjectiveBase*                              ActiveObjective;                                           // 0x0AD8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UQPV[0x17];                                    // 0x0AE0(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseRandomCounterAttackTypes;                              // 0x0AF7(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                CounterAttackResponseTimer;                                // 0x0AF8(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X5PO[0x8];                                     // 0x0B00(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCheckpointCounterAttackDefinition          CounterAttackDefinition;                                   // 0x0B08(0x0030) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_01DY[0x8];                                     // 0x0B38(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AObjectiveBase*, struct FCachedSpawnLocation> SpawnLocationsForObjective;                                // 0x0B40(0x0050) (NativeAccessSpecifierPrivate)
	TMap<class ASpawnZoneCounterAttack*, struct FCachedSpawnLocation> SpawnLocationsForCounterAttack;                            // 0x0B90(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9V3U[0x8];                                     // 0x0BE0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCheckpointGameMode");
		return ptr;
	}



	bool TryPlaceBotsInSpawnedVehicle(class AVehicleBase* Vehicle);
	void RespawnBotTeamPostObjective();
	void PlayCounterAttackResponse();
	void OnStartDefending();
	void OnFinishRetreat();
	void OnFinishDefending();
	class AObjectiveBase* GetActiveObjective();
	void CheatRespawnBotsRandomCounterAttackClass();
	void CheatFinishCounterAttack();
	void CheatCounterAttack();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCheckpointTutorialGameMode
// 0x0010 (FullSize[0x0BF8] - InheritedSize[0x0BE8])
class AINSCheckpointTutorialGameMode : public AINSCheckpointGameMode
{
public:
	class AObjectiveBase*                              ForcedBotObjective;                                        // 0x0BE8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_79SQ[0x8];                                     // 0x0BF0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCheckpointTutorialGameMode");
		return ptr;
	}



	void ForceEnemyBotsToObjective(class AObjectiveBase* Objective);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCheckpointHardcoreGameMode
// 0x0088 (FullSize[0x0C70] - InheritedSize[0x0BE8])
class AINSCheckpointHardcoreGameMode : public AINSCheckpointGameMode
{
public:
	float                                              AmmoBoxSpawnChance;                                        // 0x0BE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxAmmoPerObjective;                                       // 0x0BEC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinAmmoPerObjective;                                       // 0x0BF0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStripWeaponsOnRespawn;                                    // 0x0BF4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AU8D[0x3];                                     // 0x0BF5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLoadoutWeapon>                      RandonPrimaryWeaponsToGiveOnSpawn;                         // 0x0BF8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinObjectiveForCrate;                                      // 0x0C08(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxObjectiveForCrate;                                      // 0x0C0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASupplyCrate*                                RandomSupplyCrate;                                         // 0x0C10(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9J4N[0x8];                                     // 0x0C18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             PlayersWhoHaveSpawnedWithLoadout;                          // 0x0C20(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RespawnLoadoutsDataAssetPath[0x28];                        // 0x0C30(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UCheckpointHardcoreLoadouts*                 RespawnLoadoutsDataAsset;                                  // 0x0C58(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EXUC[0x10];                                    // 0x0C60(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCheckpointHardcoreGameMode");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CheckpointHardcoreLoadouts
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UCheckpointHardcoreLoadouts : public UDataAsset
{
public:
	unsigned char                                      LoadoutsForFaction[0x50];                                  // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CheckpointHardcoreLoadouts");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CheckpointCounterAttackTypes
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UCheckpointCounterAttackTypes : public UDataAsset
{
public:
	TArray<struct FCheckpointCounterAttackDefinition>  CounterAttackDefinitions;                                  // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CheckpointCounterAttackTypes");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCheatManager
// 0x0040 (FullSize[0x00B8] - InheritedSize[0x0078])
class UINSCheatManager : public UCheatManager
{
public:
	unsigned char                                      UnknownData_6OVI[0x8];                                     // 0x0078(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDisplayLicenseAgreementDialogDelegate;                   // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AINSAISoldierController*                     DebugAIController;                                         // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnedAIGoalLocation;                                     // 0x0098(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L8JB[0x14];                                    // 0x00A4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCheatManager");
		return ptr;
	}



	void TestNavSpawning();
	void TeleportToObjective(int ObjectiveId);
	void SuppressMe(float Suppression, float HoldTime);
	void SpewSpawnZones();
	void SpawnFireSupport(struct FString* FireSupportClassName, bool bEnemy);
	void SetRoundTimer(int Seconds);
	void SetExperience(int Experience);
	void SABER_SetMapDownloadSpeed(int SpeedType);
	void RevertConfirmableEvents();
	void ResupplyNow();
	void RespawnMe();
	void RemoveWeaponUpgrade(struct FString* UpgradeClass);
	void OnDisplayLicenseAgreementDialog__DelegateSignature();
	void Noclip();
	void InstaCap();
	void IgnoreRoundOver(bool bIgnoreRoundOver);
	void HurtMe(float DamageAmount);
	void GoToLocation(struct FString* Location);
	void GodMode();
	void GiveWeaponUpgrade(struct FString* UpgradeClass);
	void GiveWeapon(struct FString* WeaponClass);
	void GiveSupplyPoints(int Count);
	void GiveItem(struct FString* ItemClass);
	void GiveAmmo(int Count);
	class AINSSoldier* GetOuterSoldier();
	void ForceObjectiveCapture();
	void Debug_UpdateAchievementProgress(const struct FString& ID, float Percent);
	void BlindMe(float Duration, float FadeTime, float Suppression);
	void AIToggle();
	void AISpawn();
	void AISetBotsAmount(int Amount);
	void AIRespawnFriendlyBots();
	void AIRespawnEnemyBots();
	void AIRespawnBots();
	void AIPurgeFriendly();
	void AIPurgeEnemy();
	void AIPurge();
	void AiPerceptionToggle();
	void AINoTargetPlayer();
	void AIModifyMorale(float Amount);
	void AIDifficulty(float NewDifficulty);
	void AIDebugThreats();
	void AIDebugHUDSpectate();
	void AIDebugHUD();
	void AddCompassTestMarker();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSCaptureTheBaseGameMode
// 0x0018 (FullSize[0x0980] - InheritedSize[0x0968])
class AINSCaptureTheBaseGameMode : public AINSMultiplayerMode
{
public:
	int                                                StartingWaves;                                             // 0x0968(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CapturingBonusWave;                                        // 0x096C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               Team1ReinforcementSystem;                                  // 0x0970(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReinforcementSystemComponent*               Team2ReinforcementSystem;                                  // 0x0978(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSCaptureTheBaseGameMode");
		return ptr;
	}



	void CheckCustomEliminationRules();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UINSBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSBlueprintLibrary");
		return ptr;
	}



	void WWiseGetListenerPositions(TArray<struct FVector>* Positions);
	void UpdateInertialEasing(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject);
	void UpdateDampingEasing(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject);
	bool StringLessThan(const struct FString& Left, const struct FString& Right);
	struct FVector SoftLimitVector(const struct FVector& X, const struct FVector& LimitStart, const struct FVector& LimitEnd);
	float SoftLimitFloat(float X, float LimitStart, float LimitEnd);
	void SimpleAssetUnload(const struct FSoftObjectPath& AssetToUnload);
	void SimpleAssetSyncLoad();
	void SetInertialEasingTarget(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject, float NewTarget);
	void SetDampingEasingTarget(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject, const struct FVector& NewTarget);
	float RotatorAngularDistance(const struct FRotator& rotatorA, const struct FRotator& rotatorB);
	void PlayWorldShellShock(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, class AActor* DamageCauser);
	struct FLinearColor MakeFromColorTemperature(float Temperature);
	bool IsGamePadConnected();
	bool IsFreeWeekendUser();
	bool IsConsolePlatform();
	void GetTotalPlayableArea(class UObject* WorldContextObject, struct FVector* Center, struct FBox* Extents);
	float GetPenetrationPower(class UClass* AmmoClass, float EvaluationVelocity);
	class UINSParty* GetPartyManager();
	void GetOverviewAreaScenario(class UObject* WorldContextObject, struct FVector* Center, struct FBox* Extents);
	struct FText GetLocalizedTextForCharacterResponse(ECharacterResponse Value);
	struct FMatchScoreChange GetLastMatchScoreChange();
	class APlayerController* GetFirstLocalPlayerController(class UObject* WorldContextObject);
	bool GetAllScenariosForMaps(TArray<struct FString> MapNames, TArray<struct FScenarioAssetInfo>* OutScenarioNames);
	bool GetAllScenariosForMap(const struct FString& MapName, TArray<struct FScenarioAssetInfo>* OutScenarioNames);
	bool GetAllMapNames(TArray<struct FString>* OutMapNames);
	bool FirearmHasFiremode(class UClass* FirearmClass, EFirearmFiremode Firemode);
	bool CheckFirstPerson(class UObject* Target);
	void CalcInertialEasing(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject, float* Position, float* Velocity);
	void CalcDampingEasing(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject, struct FVector* Position);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSBlueprintBuildMetadata
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UINSBlueprintBuildMetadata : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSBlueprintBuildMetadata");
		return ptr;
	}



	bool IsCTE();
	struct FString GetGameVersion();
	int GetChangelist();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAIBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UINSAIBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAIBlueprintLibrary");
		return ptr;
	}



	bool IsWithEditor();
	class UClass* GetNavAreaClassAtLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extents);
	class UINSAIDirector* GetAIDirector(class UObject* WorldContextObject);
	void ChangeNavAreaAtLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extents, class UClass* NewAreaClass, float Duration);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAudioComponent
// 0x0040 (FullSize[0x0410] - InheritedSize[0x03D0])
class UINSAudioComponent : public UAkComponent
{
public:
	bool                                               bRegisterWithSoundscape;                                   // 0x03D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9JZY[0x1];                                     // 0x03D1(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnable2DDistanceRTPC;                                     // 0x03D2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableRelativeSpeedRTPC;                                  // 0x03D3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoPlayAssociatedEvent;                                  // 0x03D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G13D[0x3B];                                    // 0x03D5(0x003B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAudioComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAssetManager
// 0x0348 (FullSize[0x0780] - InheritedSize[0x0438])
class UINSAssetManager : public UAssetManager
{
public:
	unsigned char                                      UnknownData_7QQN[0xB8];                                    // 0x0438(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      WorldBankAssets[0x50];                                     // 0x04F0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      BaseBanksInMemory[0x50];                                   // 0x0540(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      ScenarioBanksInMemory[0x50];                               // 0x0590(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      PersistentBanksInMemory[0x50];                             // 0x05E0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      PreloadedCosmetics[0x50];                                  // 0x0630(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_EJE6[0x10];                                    // 0x0680(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, struct FSelectedCosmetic>                CosmeticItems;                                             // 0x0690(0x0050) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2E1[0xA0];                                    // 0x06E0(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAssetManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAIVehicleController
// 0x0080 (FullSize[0x03A8] - InheritedSize[0x0328])
class AINSAIVehicleController : public AAIController
{
public:
	TWeakObjectPtr<class ASpawnerVehicle>              Spawner;                                                   // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Destination;                                               // 0x0330(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6PAC[0x14];                                    // 0x033C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AVehicleBase*                                ConvoyVehicleAhead;                                        // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UINSAISquad*                                 AISquad;                                                   // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L4EC[0x48];                                    // 0x0360(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAIVehicleController");
		return ptr;
	}



	bool IsStuck();
	class AVehicleBase* GetVehicle();
	class UINSAISquad* GetAISquad();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAISquad
// 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
class UINSAISquad : public UObject
{
public:
	unsigned char                                      UnknownData_8PKD[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AINSSoldier*, EAISquadRole>             SquadRoleMap;                                              // 0x0030(0x0050) (NativeAccessSpecifierPublic)
	int                                                MaxSquadSize;                                              // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamId;                                                    // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UE7C[0x28];                                    // 0x0088(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBotInvestigation*                           ActiveInvestigation;                                       // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBotInvestigation*>                   PendingInvestigations;                                     // 0x00B8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AObjectiveBase*                              TargetObjective;                                           // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AINSSoldier>                  SquadLeader;                                               // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1QV7[0x10];                                    // 0x00D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNavigationPath*                             Path;                                                      // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VSZC[0x8];                                     // 0x00F0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAISquad");
		return ptr;
	}



	bool RemovePawnFromSquad(class AINSSoldier* RemovedMember, bool bWasDeath);
	void PurgeInvestigation(class UBotInvestigation* Investigation);
	bool IsSquadMemberPlayingDialogue(ECharacterResponse Response);
	int GetTeamId();
	class AObjectiveBase* GetTargetObjective();
	int GetSquadPosition(class AINSSoldier* Member);
	TArray<class AINSSoldier*> GetSquadMembers();
	class AINSSoldier* GetSquadLeader();
	EAISquadRole GetRoleForSoldier(class AINSSoldier* Soldier);
	TArray<struct FVector> GetPointsToObjective();
	TArray<class UBotInvestigation*> GetPendingInvestigations();
	TArray<class AINSSoldier*> GetMovementGroup(class AINSSoldier* Soldier);
	int GetMaxSquadSize();
	class UBotInvestigation* GetContestedObjective(class AINSSoldier* Investigator);
	class UBotInvestigation* GetActiveInvestigation();
	int CountSquadMembers();
	struct FVector CenterPosition();
	void ArriveAtObjective();
	bool AddPawnToSquad(class AINSSoldier* NewMember, bool bIsLeader);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAISoldierController
// 0x0148 (FullSize[0x0470] - InheritedSize[0x0328])
class AINSAISoldierController : public AAIController
{
public:
	unsigned char                                      UnknownData_JDQS[0x20];                                    // 0x0328(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASpawnerBase*                                ParentSpawner;                                             // 0x0348(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CX1G[0x8];                                     // 0x0350(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAIPerception*                            AiPerception;                                              // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Sight*                        SightConfig;                                               // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_INSHearing*                   HearingConfig;                                             // 0x0368(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U5B7[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    ReceivedEnemySeen;                                         // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ReceivedStateChange;                                       // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    EnemyKilledDelegate;                                       // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    PossessDelegate;                                           // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J1IK[0x8];                                     // 0x03C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFireSupportBase*                            AssociatedFireSupport;                                     // 0x03C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBotSkillConfig*                             DefaultAIConfig;                                           // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBotSkillConfig*                             AIConfig;                                                  // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2KAH[0x28];                                    // 0x03E0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DesiredMoveReason;                                         // 0x0408(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DesiredLookReason;                                         // 0x0420(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UBotMoodHandler*                             MoodHandler;                                               // 0x0438(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotMemoryHandler*                           MemoryHandler;                                             // 0x0440(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotObjectiveHandler*                        ObjectiveHandler;                                          // 0x0448(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotCombatHandler*                           CombatHandler;                                             // 0x0450(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotBehaviorHandler*                         BehaviorHandler;                                           // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotMovementHandler*                         MovementHandler;                                           // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AINSSoldier*                                 CachedPawn;                                                // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAISoldierController");
		return ptr;
	}



	void ToggleMovement(bool bEnabled);
	void StopFiring();
	void StartFiringAtFocalPoint();
	bool Sidestep(float Cooldown);
	void SetDesiredStance(ESoldierStance NewStance);
	void SetAIEnabled(bool bEnabled);
	void SeePawn(class APawn* OtherPawn);
	void OnTargetSpotted(class UBotKnownTargetMemory* Target);
	void OnTargetLostLOS(class UBotKnownTargetMemory* Target);
	void OnTargetKilled(class UBotKnownTargetMemory* Target);
	void OnTargetGainedLOS(class UBotKnownTargetMemory* Target);
	void OnSquadMemberKilled(class AINSSoldier* KilledSoldier, bool bWasSquadLeader);
	void OnFriendlyLeftFiringAngle();
	void OnFriendlyInFiringAngle();
	void OnFinishedPatrol();
	void OnAIStateChange(TEnumAsByte<EAIControllerState>* OldState, TEnumAsByte<EAIControllerState>* NewState);
	TEnumAsByte<EPathFollowingRequestResult> MoveToOverride(const struct FVector& Destination, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath);
	TEnumAsByte<EPathFollowingRequestResult> MoveToLocationSafe(const struct FVector& Destination, const struct FString& Reason, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath);
	TEnumAsByte<EPathFollowingRequestResult> MoveToActorSafe(class AActor* DestinationActor, const struct FString& Reason, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath);
	bool LookAtLocation(const struct FVector& Location, TEnumAsByte<EAIDesiredLookAtPriority> Priority, const struct FString& LookReason, float Duration);
	bool LookAtActor(class AActor* Actor, TEnumAsByte<EAIDesiredLookAtPriority> Priority, const struct FString& LookReason, float Duration);
	bool LineOfSightToLocation(const struct FVector& Location, bool bShowDebug);
	bool IsTeamMate(class AINSSoldier* Target);
	bool IsTargetFacingMe(class UBotKnownTargetMemory* Target, float AngleThreshold);
	bool IsSquadLeader();
	bool IsSmokeBlockingVisionToLocation(const struct FVector& Location);
	bool IsFriendlyInFiringLine();
	bool IsFriendlyInFiringAngle(float AngleThreshold);
	bool IsAIEnabled();
	void HearNoise(class APawn* OtherActor, const struct FVector& Location, float Distance, bool bHasLOS);
	unsigned char GetTeamId();
	class UCoverComponent* GetSquadLeaderCover();
	class UINSAISquad* GetSquad();
	class AINSSoldier* GetSoldier();
	class UBotObjectiveHandler* GetObjectives();
	class UBotMovementHandler* GetMovementHandler();
	class UBotMoodHandler* GetMood();
	class UBotMemoryHandler* GetMemory();
	class AItemFirearm* GetFirearm();
	EAIDesiredLocomotion GetDesiredLocomotionType();
	class UBotCombatHandler* GetCombatHandler();
	float GetChanceToSpotTarget(class UBotKnownTargetMemory* Target);
	class UBotBehaviorHandler* GetBehaviorHandler();
	float GetAngleToLocationFromEyeDirection(const struct FVector& Location);
	void ForgetEverything();
	void ClearLookAt();
	bool CanSidestep();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAIPerception
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UINSAIPerception : public UObject
{
public:
	class AINSAISoldierController*                     Controller;                                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotMemoryHandler*                           Memory;                                                    // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIPerceptionComponent*                      PerceptionComponent;                                       // 0x0038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAIPerception");
		return ptr;
	}



	void SeePawn(class APawn* SeenPawn);
	void OnTargetPerceptionUpdate(class AActor* TriggeringActor, const struct FAIStimulus& Stimulus);
	void Initialize(class AINSAISoldierController* BotController, class UBotMemoryHandler* BotMemory, class UAIPerceptionComponent* Perception);
	void HearPawn(class APawn* HeardPawn, const struct FVector& Location, float Distance, bool bHasLOS);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ModifiedNavArea
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UModifiedNavArea : public UObject
{
public:
	class AActor*                                      Actor;                                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint64_t>                                   Nodes;                                                     // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1WOD[0x28];                                    // 0x0040(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ModifiedNavAreaClass;                                      // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ModifiedNavArea");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotInvestigation
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UBotInvestigation : public UObject
{
public:
	unsigned char                                      UnknownData_ARGO[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     Position;                                                  // 0x0030(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MYC0[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      Actor;                                                     // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBotInvestigationPriority                          Priority;                                                  // 0x0048(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCompleted;                                              // 0x0049(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WGHJ[0x6];                                     // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             SearchedLocations;                                         // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             ClaimedSearchedLocations;                                  // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotInvestigation");
		return ptr;
	}



	float GetTimeUntilFinished();
	float GetTimeSinceStarted();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAIDirector
// 0x0248 (FullSize[0x0270] - InheritedSize[0x0028])
class UINSAIDirector : public UObject
{
public:
	unsigned char                                      UnknownData_DYTF[0x50];                                    // 0x0028(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEnvQuery*                                   QueryTemplate;                                             // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      NavigationDataPawn;                                        // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TimeLimitPerStep;                                          // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E955[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEnvQuery*                                   Query_FindCover;                                           // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_FindFlank;                                           // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_FindInvestigateLocation;                             // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_FindInvestigateLocationOnObjective;                  // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_GenerateSpawnsCloseDestination;                      // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_GenerateSpawnsSurvival;                              // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_FindOutdoorLocation;                                 // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_FindLOSLocation;                                     // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_LeaveFire;                                           // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   Query_TacticalPathFollow;                                  // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEnvNamedValue>                      QueryParams;                                               // 0x00E0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VBLN[0x10];                                    // 0x00F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AProjectileGrenade>>   ActiveGrenades;                                            // 0x0100(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AProjectileGrenade>, TWeakObjectPtr<class AINSAISoldierController>> GrenadeThrowbackBots;                                      // 0x0110(0x0050) (UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FDeathArea>                          DeathAreas;                                                // 0x0160(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UVehicleSeatComponent>> CachedVehicleSeats;                                        // 0x0170(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AINSPatrolArea*>                      CachedPatrolAreas;                                         // 0x0180(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UINSAISquad*>                         CachedSquads;                                              // 0x0190(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCoverComponent*>                     CachedCover;                                               // 0x01A0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ASmartActor>>          CachedSmartActors;                                         // 0x01B0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ADoor>>                CachedDoors;                                               // 0x01C0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ASupplyCrate>>         CachedSupplyCrates;                                        // 0x01D0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AINSSoldier*                                 EQSProbe;                                                  // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AINSAISoldierController*>             SpawnedBots;                                               // 0x01E8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<unsigned char, int8_t>                        AmbusherCountByTeam;                                       // 0x01F8(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PCX4[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UObject*>                             OccupiedWanderAreas;                                       // 0x0250(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UModifiedNavArea*>                    NavAreaModifications;                                      // 0x0260(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAIDirector");
		return ptr;
	}



	void UpdateInvestigations();
	void ToggleAIPerception();
	class AINSAISoldierController* SpawnFakeClient(class ATeamInfo* Faction, class UClass* PawnClass, class UClass* AIControllerClass, TArray<class UPlayerClass*> PlayerClasses, bool bWantsPlayerState);
	class AINSAISoldierController* SpawnBot(class ATeamInfo* Faction, class UClass* PawnClass, const struct FVector& Location, bool bWantsPlayerState, class UPlayerClass* BotClass);
	void SetTargetPlayers(bool bState);
	void SetAINeutral(bool bState);
	void SetAIEnabled(bool bState);
	void SetAIDifficulty(float NewDifficulty);
	void RoundWon(bool bAttackers);
	bool IsInRadiusOfBurningGrenade(const struct FVector& Location);
	bool IsAIPerceptionEnabled();
	bool IsAINeutral();
	bool IsAIEnabled();
	TArray<class AINSAISoldierController*> GetSpawnedBots();
	TArray<struct FBotGrenadeTarget> GetGrenadeTargets();
	TArray<class ADoor*> GetDoors();
	TArray<class UINSAISquad*> GetAllSquads();
	TArray<class UCoverComponent*> GetAllCoverPoints(bool bOccupiedOnly);
	float GetAIDifficulty();
	TArray<class AProjectileGrenade*> GetActiveGrenades();
	TArray<class AProjectileGrenade*> GetActiveAndBurningGrenades();
	class UCoverComponent* FindBestCoverFromLocation(class AINSAISoldierController* Me, const struct FCoverSearchParams& SearchParams);
	bool EQS_GenerateSpawn(class AINSSoldier* Soldier, const struct FVector& GenerationLocation, struct FVector* OutSpawnLocation, bool bTesting);
	bool EQS_FindOutdoorLocation(const struct FVector& Location, float Radius, struct FVector* OutdoorLocation);
	bool EQS_FindNavigatableLocationWithLOS(const struct FVector& LOSLocation, struct FVector* OutLocation);
	bool EQS_FindInvestigation(class AINSSoldier* Soldier, class UBotInvestigation* Investigation, struct FVector* OutInvestigateLocation);
	bool EQS_FindFlank(class AINSSoldier* Soldier, struct FVector* OutFlankLocation);
	bool EQS_FindCover(class AINSSoldier* Soldier, const struct FCoverSearchParams& SearchParams, struct FVector* OutCoverLocation);
	void ClearCoverForBot(class AINSAISoldierController* Bot, const struct FName& ReasonForClearing, bool bAvoidBriefly);
	bool CanTargetPlayers();
	bool AssignCoverToBot(class AINSAISoldierController* Bot, class UCoverComponent* Cover);
	void AddOrphanedBotsToNearbySquads(bool bForceMove, float SearchRadius);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HUDBase
// 0x00F0 (FullSize[0x0400] - InheritedSize[0x0310])
class AHUDBase : public AHUD
{
public:
	bool                                               bMapVoteStarted;                                           // 0x0310(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRoundOverVisible;                                         // 0x0311(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N94Y[0x6];                                     // 0x0312(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PlayerScreenWidgets[0x10];                                 // 0x0318(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class UClass*>                              LoadedPlayerScreenWidgets;                                 // 0x0328(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                         PlayerScreenWidgetInstances;                               // 0x0338(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      FullscreenWidgets[0x10];                                   // 0x0348(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class UClass*>                              LoadedFullscreenWidgets;                                   // 0x0358(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                         FullscreenWidgetInstances;                                 // 0x0368(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ScoreboardWidget[0x28];                                    // 0x0378(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      LoadedScoreboardWidget;                                    // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoreboardBase*                             ScoreboardWidgetInstance;                                  // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCompassVisible;                                           // 0x03B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5EXZ[0x7];                                     // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCompassToggleByUserDelegate;                             // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      DebugOverlayWidget[0x28];                                  // 0x03C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      LoadedDebugOverlayWidget;                                  // 0x03F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 DebugOverlayWidgetInstance;                                // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HUDBase");
		return ptr;
	}



	void ToggleScoreboard();
	void ToggleCompass();
	void TextWithShadowClipped(float PosX, float PosY, const struct FText& Text, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height);
	void ShowScoreboard();
	void ShowCompass();
	void OnRoundOverUIShown(const struct FPlayerRoundOverData& UIData);
	void OnRoundOverUIHidden();
	void OnMapVoteStarted();
	void OnCompassToggledByUserDelegate__DelegateSignature(bool bVisible);
	void HideScoreboard();
	void HideCompass();
	void DrawStringWithShadowClipped(float PosX, float PosY, const struct FString& InputString, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height);
	void DebugToggleOverlay();
	class UUserWidget* CreatePlayerScreenWidget(class UClass* WidgetClass);
	class UUserWidget* CreateFullScreenWidget(class UClass* WidgetClass);
	void BlueprintOnRoundOverUIToggled(bool bNowVisible);
	void BlueprintOnMapVoteStarted();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSAIDebugHUD
// 0x0030 (FullSize[0x0430] - InheritedSize[0x0400])
class AINSAIDebugHUD : public AHUDBase
{
public:
	bool                                               bSpectator;                                                // 0x0400(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YRBB[0x2F];                                    // 0x0401(0x002F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSAIDebugHUD");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.InGameMenuWidget
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UInGameMenuWidget : public UUserWidget
{
public:
	bool                                               bIsReplayPlayback;                                         // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MH2V[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.InGameMenuWidget");
		return ptr;
	}



	void OnPanelOpened(EIngameMenuType DesiredMenu, EIngameMenuEntryState FromState);
	void OnHidePanel();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HUDReplay
// 0x0028 (FullSize[0x0338] - InheritedSize[0x0310])
class AHUDReplay : public AHUD
{
public:
	bool                                               bControlsVisible;                                          // 0x0310(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6VOA[0x7];                                     // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReplayControlsToggledDelegate;                           // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUserWidget*                                 ReplayUI;                                                  // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ReplayUIClass;                                             // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HUDReplay");
		return ptr;
	}



	void ToggleControls();
	void ShowControls();
	void ReplayControlsToggled__DelegateSignature(bool bState);
	void HideControls();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HUDMultiplayer
// 0x00E0 (FullSize[0x04E0] - InheritedSize[0x0400])
class AHUDMultiplayer : public AHUDBase
{
public:
	unsigned char                                      ChatBoxWidgetClass[0x28];                                  // 0x0400(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      LoadedChatBoxWidgetClass;                                  // 0x0428(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChatBox*                                    ChatBoxWidget;                                             // 0x0430(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFont*                                       PlayerTargetFont;                                          // 0x0438(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96JI[0x8];                                     // 0x0440(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  DefaultPlayerIcon;                                         // 0x0448(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawPlayerTargetId;                                       // 0x0450(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WEH0[0x3];                                     // 0x0451(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerTargetCutoffDistance;                                // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetMaxDrawDistance;                               // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetMidrangeDrawDistance;                          // 0x045C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetCloseDrawDistance;                             // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetHeightScalingMin;                              // 0x0464(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetHeightScalingMax;                              // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetHeightCrouchOffset;                            // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetHeightProneOffset;                             // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetTextScaleMin;                                  // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetTextScaleMax;                                  // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconScaleMin;                                        // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconScaleMax;                                        // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconInteractionScaleMin;                             // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconInteractionScaleMax;                             // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconDrawDistance;                                    // 0x048C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndicatorObscuredAlphaFrac;                                // 0x0490(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndicatorFocusedAlpha;                                     // 0x0494(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndicatorFocusedObscuredAlpha;                             // 0x0498(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconAlphaMin;                                        // 0x049C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconAlphaMax;                                        // 0x04A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconDistanceAlpha;                                   // 0x04A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconInteractDistanceAlpha;                           // 0x04A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTextAlphaFrac;                                       // 0x04AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconInteractAlphaMin;                                // 0x04B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconInteractAlphaMax;                                // 0x04B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconShadowAlpha;                                     // 0x04B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconShadowOffset;                                    // 0x04BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerIconInteractionDrawDistance;                         // 0x04C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetFactionColorModifier;                          // 0x04C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashIconScaleOffscreen;                                   // 0x04C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashIconScale;                                            // 0x04CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashSpeedFactor;                                          // 0x04D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashFrequency;                                            // 0x04D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashAmplitude;                                            // 0x04D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMinimal;                                                  // 0x04DC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MGUR[0x3];                                     // 0x04DD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HUDMultiplayer");
		return ptr;
	}



	void StartTeamChatInput();
	void StartGlobalChatInput();
	void StartChatInput(bool bTeamOnly);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HUDContextualHintContainer
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class UHUDContextualHintContainer : public UUserWidget
{
public:
	unsigned char                                      UnknownData_5NI8[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bGamepadCheck;                                             // 0x0238(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_833K[0x7];                                     // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetAnimation*                            FadeOutAnimation;                                          // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                            FadeInAnimation;                                           // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bShowingHints;                                             // 0x0250(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanResupply;                                              // 0x0251(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CPXK[0x6];                                     // 0x0252(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HUDContextualHintContainer");
		return ptr;
	}



	void UsingControllerUpdate(bool bUsingController, EeInputIconType NewIconType);
	void UpdateHintClassImage(class UPlayerClass* PlayerClass);
	void UpdateChildrenVisibility();
	void ShowHints();
	void SetAllowResupply(bool bNewCanResupply);
	void OnSoldierSpawned();
	void OnResupplied(class AINSSoldier* Player);
	void OnItemAddedToInventory(class AINSSoldier* Soldier, class AItemBase* Item);
	void OnInventoryChanged();
	void OnChangedWeapon(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem);
	void HideHints();
	class UWidgetAnimation* GetFadeOutAnimation();
	class UWidgetAnimation* GetFadeInAnimation();
	void GetAssets(EAssetName AssetName, struct FChildAsset* Asset);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HUDWidgetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHUDWidgetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HUDWidgetInterface");
		return ptr;
	}



	void OnRoundOverUIToggled(bool bNowVisible);
	void OnMapVoteStarted();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HelicopterPathFollowingComponent
// 0x0058 (FullSize[0x02B0] - InheritedSize[0x0258])
class UHelicopterPathFollowingComponent : public UPathFollowingComponent
{
public:
	TMap<int, struct FPathHoverProperties>             PathPointHoverProps;                                       // 0x0258(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1R6X[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HelicopterPathFollowingComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HelicopterNavTarget
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AHelicopterNavTarget : public ATargetPoint
{
public:
	bool                                               bOverrideHoverHeight;                                      // 0x0220(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D801[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HoverHeight;                                               // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HelicopterNavTarget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.HelicopterMovementComponent
// 0x0030 (FullSize[0x0168] - InheritedSize[0x0138])
class UHelicopterMovementComponent : public UPawnMovementComponent
{
public:
	float                                              EnginePower;                                               // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotationForce;                                             // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxVelocity;                                               // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              YawSpinMultiplier;                                         // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallingForceScale;                                         // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallingNoSpinForceScale;                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZMP9[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.HelicopterMovementComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GetMotdProxy
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UGetMotdProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnMotdReceived;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V0CE[0x10];                                    // 0x0040(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GetMotdProxy");
		return ptr;
	}



	class UGetMotdProxy* GetMotd(class UObject* WorldContextObject, bool bInForNewsPopup);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GetBannerProxy
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UGetBannerProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnBannerReceived;                                          // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4JFV[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GetBannerProxy");
		return ptr;
	}



	class UGetBannerProxy* GetBanner(class UObject* WorldContextObject);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GenericDialogWidget
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UGenericDialogWidget : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GenericDialogWidget");
		return ptr;
	}



	void BP_OpeningVirtualKeyboard();
	void BP_ClosingVirtualKeyboard();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameUIStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UGameUIStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameUIStatics");
		return ptr;
	}



	void TransformToScreen(class APlayerController* Controller, class UUserWidget* Widget, const struct FVector& InWorldLocation, struct FVector2D* OutScreenLocation, float* OutFrontDot, float* OutRightDot, float* OutDistance, bool* bIsOnScreen);
	void ReplaceKeyWithLessonMarkup(const struct FText& InText, TArray<struct FLessonInputAction> Actions, struct FText* OutText);
	void OpenURLInOverlay(const struct FString& URL);
	void OpenPlatformProfileForPlayer(class APlayerController* Controller, class APlayerState* PlayerState);
	bool IsModSupportedPlatform();
	bool IsDeveloperPlayingLocal();
	void GetUseTimeoutsForUseActor(class AActor* UsableActor, class AINSSoldier* Pawn, float* PrimaryUseTimeoutFrac, float* SecondaryUseTimeoutFrac);
	struct FString GetUserRequestedLanguage(struct FString* OutRawRequestedLang, bool* OutHasUsedFallback);
	void GetUseMessage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, struct FText* OutPrimaryText, struct FText* OutSubText);
	class UTexture2D* GetUseImage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, struct FText* OutAdditionalText);
	void GetUseAction(class AActor* UsableActor, struct FName* PrimaryUseAction, TArray<struct FName>* SubUseActions);
	class UTexture2D* GetSubUseImage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, struct FText* OutAdditionalText);
	struct FVector2D GetRadialOffsetForSize(float Spacing, float Width, float Height, ERadialMenuDirection Direction, int Options);
	struct FVector2D GetRadialOffset(float Spacing, ERadialMenuDirection Direction, int Options);
	EFileSizeUnit GetPreferredFileSizeUnit(int64_t SizeInBytes);
	void GetOtherEarnedTaglineDescription(const struct FOtherPlayerAwardedTagline& EarnedTagline, struct FText* OutDescription);
	void GetObjectPrintName(class UObject* InObject, struct FText* OutPrintName);
	struct FText GetObjectivePhonetic(unsigned char ObjectiveId);
	struct FText GetObjectiveLetter(unsigned char ObjectiveId);
	void GetLocalizedWeaponUpgradeSlot(EWeaponUpgradeSlot WeaponUpgradeSlot, struct FText* OutPrintName);
	void GetLocalizedWeaponName(const struct FString& OriginalWeaponName, struct FText* OutLocalizedWeaponName);
	void GetLocalizedScenarioName(const struct FString& OriginalScenarioName, struct FText* OutScenarioNameText);
	void GetLocalizedMapName(const struct FString& OriginalMapName, struct FText* OutMapNameText);
	void GetLocalizedItemSubSlot(EItemSlot ItemSlot, int SubSlot, struct FText* OutPrintName);
	void GetLocalizedItemSlot(EItemSlot ItemSlot, struct FText* OutPrintName);
	void GetLocalizedCompassHeading(ECardinalDirection Direction, bool bAbbreviated, struct FText* OutHeading);
	class UTexture2D* GetItemIcon(class UClass* ItemClass);
	struct FText GetFormattedShorthandTimespan(const struct FTimespan& InputTimespan);
	struct FText GetFormattedObjectiveName(class AObjectiveBase* Objective, bool bOverrideFactionColor, unsigned char FactionOverride);
	struct FText GetFormattedFileSizeInUnits(int64_t SizeInBytes, EFileSizeUnit FileSizeUnit);
	struct FText GetFormattedFileSize(int64_t SizeInBytes);
	void GetFormattedDistanceMetersTwoPoints(struct FText* OutDistanceText, const struct FVector& PointA, const struct FVector& PointB, bool bShowDecimal);
	struct FText GetFormattedDistanceMetersKilometers(int Meters);
	void GetFormattedDistanceMeters(struct FText* OutDistanceText, float DistanceInUnits, bool bShowDecimal);
	void GetFilteredRadialResponseForPlayer(class AINSSoldier* Player, const struct FRadialCommand& InCommand, ECharacterResponse* OutResponse);
	void GetEarnedTaglineDescription(const struct FPlayerAwardedTagline& EarnedTagline, struct FText* OutDescription);
	void GetDeathDescriptionFromKillNotice(const struct FPlayerKillNotice& KillNotice, struct FText* OutDescription);
	void GetDeathDescription(class UClass* CauserActor, class UClass* DamageType, struct FText* OutDescription);
	float GetCompassAngle(class UObject* WorldContextObject, float YawAngle);
	void GetClipboardContents(struct FString* OutClipboardContents);
	void GetClassPrintName(class UClass* InClass, struct FText* OutPrintName);
	ECardinalDirection GetCardinalFromYaw(class UObject* WorldContextObject, float YawAngle);
	ECardinalDirection GetCardinalFromRotator(class UObject* WorldContextObject, const struct FRotator& Rotation);
	struct FString GetAccountNickname(class UObject* WorldContextObject);
	void FormatTextFromParameterPairs(const struct FText& InFormat, TMap<struct FString, struct FText> InFormatPairs, struct FText* OutText);
	struct FDateTime DateTimeFromUnixTimestamp(int64_t UnixTimeStamp);
	void CopyTextToClipboard(const struct FText& CopyText);
	void CopyStringToClipboard(const struct FString& CopyString);
	void CenterViewportCursor(class APlayerController* PlayerController);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameUIData
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UGameUIData : public UObject
{
public:
	struct FLinearColor                                FriendlyColor;                                             // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyColor;                                                // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameUIData");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameplayEffectsStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UGameplayEffectsStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameplayEffectsStatics");
		return ptr;
	}



	bool HasPlayerInRange(class UObject* WorldContextObject, float Tolerance, const struct FVector& TestLocation);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameInputStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UGameInputStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameInputStatics");
		return ptr;
	}



	bool IsValidKey(const struct FKey& Key);
	bool IsKeyBoundToAction(const struct FName& Action, const struct FKey& Key);
	TArray<struct FInputAxisKeyMapping> GetAxisKeyMappingSource(class UINSPlayerLocalProfile* LocalProfile);
	bool GetAllKeysBoundToGamepad(const struct FName& ActionOrAxis, bool bIsAxis, float AxisScale, bool bGamepad, class UINSPlayerLocalProfile* LocalProfile, TArray<struct FKey>* Keys);
	bool GetAllKeysBoundToAxis(const struct FName& Axis, float Scale, TArray<struct FKey>* Keys, class UINSPlayerLocalProfile* LocalProfile);
	bool GetAllKeysBoundToAction(const struct FName& Action, TArray<struct FKey>* Keys, class UINSPlayerLocalProfile* LocalProfile);
	bool GetAllKeysBoundTo(const struct FName& ActionOrAxis, bool bIsAxis, float AxisScale, class UINSPlayerLocalProfile* LocalProfile, TArray<struct FKey>* Keys);
	TArray<struct FInputActionKeyMapping> GetActionKeyMappingSource(class UINSPlayerLocalProfile* LocalProfile);
	struct FKey FindKeyBoundToAxis(const struct FName& Axis, float Scale, class UINSPlayerLocalProfile* LocalProfile);
	struct FKey FindKeyBoundToAction(const struct FName& Action, class UINSPlayerLocalProfile* LocalProfile);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.GameHUD
// 0x0098 (FullSize[0x02C8] - InheritedSize[0x0230])
class UGameHUD : public UUserWidget
{
public:
	unsigned char                                      UnknownData_DSMN[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APlayerController*                           CurrentPlayerController;                                   // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AlphaMultiplier;                                           // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasValidSoldierPawn;                                      // 0x0244(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasAlivePawn;                                             // 0x0245(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCurrentlySpectating;                                      // 0x0246(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bScoreboardVisible;                                        // 0x0247(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMenuOpen;                                                 // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPaused;                                                   // 0x0249(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMapVoteStarted;                                           // 0x024A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPostRound;                                              // 0x024B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldShowFloatingObjectives;                             // 0x024C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldShowObjectiveBriefing;                              // 0x024D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XEI7[0x2];                                     // 0x024E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidget*                                     BP_PauseDialogue;                                          // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                     BackgroundBlurWidget;                                      // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                RootCanvas;                                                // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                DamageIndicatorContainer;                                  // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ScoreboardHiddenCanvas;                                    // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AlivePawnCanvas;                                           // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                FullScreenScoreboardHiddenCanvas;                          // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                HUDCanvas;                                                 // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                                    ObjectiveBriefingContainer;                                // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 FloatingObjectiveContainer;                                // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 FloatingHintTextContainer;                                 // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 Bound_ResupplyIndication;                                  // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AItemWeapon*                                 Weapon;                                                    // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AItemFirearm*                                Firearm;                                                   // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QJ98[0x8];                                     // 0x02C0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.GameHUD");
		return ptr;
	}



	void UpdateScoreboardActive(bool newScoreboardVisible);
	void UpdatePostRoundState();
	void UpdateMenuOpen(bool newMenuOpen);
	void UpdateElementAlpha();
	void TookDamage(float Damage, class AINSSoldier* Target, const struct FVector& HitSource, const struct FVector& HitDirection, class AController* EventInstigator, class AActor* DamageCauser);
	void ToggleResupplyVisibility(bool bNewVisibility);
	void SetHasAlivePawn(bool newAlivePawn);
	void OnRoundReset();
	void OnRoundOver(const struct FPlayerRoundOverData& UIData);
	void OnQueueObjectiveBriefing();
	void OnPauseStateChanged(bool newPauseState);
	void OnMatchStateUpdate(const struct FName& NewState);
	void OnExitSpawnZone();
	void OnEquipableItemChanged(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem);
	bool IsScoreboardActive();
	bool IsMenuOpen();
	ESlateVisibility GetScoreboardHiddenCanvasVisibility();
	ESlateVisibility GetHUDCanvasVisibility();
	ESlateVisibility GetFullScreenScoreboardHiddenCanvasVisibility();
	void DoMapVoteStarted();
	class UWidget* DoCreateRoundVictory(const struct FPlayerRoundOverData& UIData);
	class UWidget* DoCreateDamageIndicator(const struct FVector& HitSource, float Damage);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FriendlyFireReflectMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFriendlyFireReflectMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FriendlyFireReflectMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FriendlyFireMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFriendlyFireMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FriendlyFireMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.WeaponLightComponent
// 0x0100 (FullSize[0x0478] - InheritedSize[0x0378])
class UWeaponLightComponent : public UWeaponVisualUpgradeComponent
{
public:
	int                                                AvailableLightModes;                                       // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PointShootingLightModes;                                   // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponLightMode                                   CurrentLightMode;                                          // 0x0380(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N5U9[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USpotLightComponent*                         FlashlightComponent1P;                                     // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpotLightComponent*                         FlashlightComponent3P;                                     // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightIntensity;                                            // 0x0398(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightUnits                                        LightIntensityUnit;                                        // 0x039C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F53S[0x3];                                     // 0x039D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LightInnerConeAngle;                                       // 0x03A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightOuterConeAngle;                                       // 0x03A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightAttenuationRadius;                                    // 0x03A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_II8A[0x4];                                     // 0x03AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             LaserParticleSystem1P;                                     // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LaserParticleSystem3P;                                     // 0x03B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLaserHasBeam;                                             // 0x03C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLaserFollowAim3P;                                         // 0x03C1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9OQK[0x2];                                     // 0x03C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LaserTraceDistance;                                        // 0x03C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LaserTracePadding;                                         // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashlightTraceDistance;                                   // 0x03CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowBeamInSmoke;                                          // 0x03D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowLaserParticleSystemInfraredExclusive;                 // 0x03D1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HMY[0x6];                                     // 0x03D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    LaserParticleComponent1P;                                  // 0x03D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    LaserParticleComponent3P;                                  // 0x03E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioToggleOn1P;                                           // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioToggleOn3P;                                           // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioToggleOff1P;                                          // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioToggleOff3P;                                          // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             FlashlightBlindingParticleSystem3P;                        // 0x0408(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    BlindingParticleComponent3P;                               // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BeamParticleSystem;                                        // 0x0418(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    BeamParticleComponent;                                     // 0x0420(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LightSourceLocation;                                       // 0x0428(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LightSourceDirection;                                      // 0x0434(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LightTargetLocation;                                       // 0x0440(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LightTargetRotation;                                       // 0x044C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightTraceMaxDistance;                                     // 0x0458(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightTracePadding;                                         // 0x045C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     LightTraceCollisionChannel;                                // 0x0460(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_58XI[0x3];                                     // 0x0461(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PreviousAttenuation;                                       // 0x0464(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreviousTime;                                              // 0x0468(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FlashLightTargetNotVisibleCount;                           // 0x046C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                LightTargetTaskTimer;                                      // 0x0470(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.WeaponLightComponent");
		return ptr;
	}



	void UpdateLightLocation();
	void UpdateLaserBeam();
	void UpdateBlindingParticle();
	void UpdateBeam();
	void StartTraceTask(float Interval, TEnumAsByte<ECollisionChannel> Channel);
	bool ShouldEnterPointShootMode();
	void SetLightMode(EWeaponLightMode Mode, bool bFromReplication);
	void ServerSetLightMode(EWeaponLightMode Mode);
	void RecreateEffects();
	void RecreateBeamEffects();
	void OnRep_CurrentLightMode();
	bool LocalPlayerCanSeeInfrared();
	void KillLaserSightEffect();
	void KillBlindingEffect();
	void KillAnyEffects();
	bool HasLightingMode(EWeaponLightMode LightMode);
	EWeaponLightMode GetNextLightMode();
	EWeaponLightMode GetFirstLightMode();
	void CreateLaserSightEffect();
	void CalculateLightTargetVisibility();
	void CalculateLightTarget();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ForegripLightcomponent
// 0x0030 (FullSize[0x04A8] - InheritedSize[0x0478])
class UForegripLightcomponent : public UWeaponLightComponent
{
public:
	unsigned char                                      WeaponHandlingModifiers[0x28];                             // 0x0478(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_90ZP[0x8];                                     // 0x04A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ForegripLightcomponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FoliageInteractionManager
// 0x01B0 (FullSize[0x03D0] - InheritedSize[0x0220])
class AFoliageInteractionManager : public AActor
{
public:
	class UMaterialInstanceDynamic*                    MultiplyColorMaterial;                                     // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_96OS[0x148];                                   // 0x0228(0x0148) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APlayerController*                           LocalPC;                                                   // 0x0370(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTarget;                                              // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      RenderTarget2;                                             // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                PlayerCollection;                                          // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          MultiplyColorBaseMaterial;                                 // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          FoliageInteractionBaseMaterial;                            // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  CameraTransform;                                           // 0x03A0(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FoliageInteractionManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FoliageInteractionComponent
// 0x0030 (FullSize[0x0220] - InheritedSize[0x01F0])
class UFoliageInteractionComponent : public USceneComponent
{
public:
	class AFoliageInteractionManager*                  FoliageInteractionManager;                                 // 0x01F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FoliageAudioTimer;                                         // 0x01F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4NHV[0x4];                                     // 0x01FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Scale;                                                     // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Intensity;                                                 // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FoliageAudioInteractionMaxTime;                            // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FoliageAudioInteractionMinTime;                            // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInFoliage;                                                // 0x0210(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFoliageInteractionType                            InteractionType;                                           // 0x0211(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AHR1[0x6];                                     // 0x0212(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           InteractionCapsuleComponent;                               // 0x0218(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FoliageInteractionComponent");
		return ptr;
	}



	void OnInteractionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnInteractionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FloatingPointOfInterestWidget
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class UFloatingPointOfInterestWidget : public UUserWidget
{
public:
	class UImage*                                      IconImage;                                                 // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointOfInterestActorComponent*              PointOfInterest;                                           // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FloatingPointOfInterestWidget");
		return ptr;
	}



	void SetPointOfInterest(class UPointOfInterestActorComponent* InPointOfInterest);
	void OnSetPointOfInterest(class UPointOfInterestActorComponent* InPointOfInterest);
	class AActor* GetPointOfInterestActor();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FloatingObjectiveContainer
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class UFloatingObjectiveContainer : public UUserWidget
{
public:
	class UCanvasPanel*                                WidgetPanel;                                               // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FloatingWidgetClass;                                       // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IronsightFrac;                                             // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraLocation;                                            // 0x0244(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    CameraRotation;                                            // 0x0250(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UFLO[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FloatingObjectiveContainer");
		return ptr;
	}



	void UpdateObjectiveIcons();
	bool ShouldObjectiveBeVisible(class AObjectiveBase* Objective);
	void PopulateObjectiveIcons();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FloatingHintTextContainer
// 0x0258 (FullSize[0x0488] - InheritedSize[0x0230])
class UFloatingHintTextContainer : public UUserWidget
{
public:
	class UCanvasPanel*                                WidgetPanel;                                               // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DynamicHintWidgetClass;                                    // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SupplyCrateHintClass;                                      // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FloatingPointOfInterestWidgetClass;                        // 0x0248(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDynamicHintWidget*                          DynamicHintRef;                                            // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 SupplyCrateHintRef;                                        // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFloatingPointOfInterestWidget*>      FloatingPointOfInterestWidgets;                            // 0x0260(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  IconVehicleLeave;                                          // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  IconVehicleDrive;                                          // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  IconVault;                                                 // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  IconClimb;                                                 // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  IconCycleOptic;                                            // 0x0290(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSupplyCrateRefreshTime;                                // 0x0298(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SupplyCrateMaxDistance;                                    // 0x029C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASupplyCrate*                                CurrentSupplyCrate;                                        // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          SupplyCrateScaleCurve;                                     // 0x02A8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              FindSupplyCrateRefreshRate;                                // 0x0330(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastPointOfInterestRefreshTime;                            // 0x0334(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          PointOfInterestScaleCurve;                                 // 0x0338(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              PointsOfInterestMaxDistance;                               // 0x03C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PointsOfInterestRefreshRate;                               // 0x03C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaximumPointOfInterestHints;                               // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimDownSightsFraction;                                     // 0x03CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HintOpacity;                                               // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimDownSightsHintOpacity;                                  // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowKeyHints;                                             // 0x03D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowVaultHints;                                           // 0x03D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowCycleOpticHints;                                      // 0x03DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LY69[0x1];                                     // 0x03DB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ObjectPosition;                                            // 0x03DC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     UseImpactPoint;                                            // 0x03E8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AEWR[0x4];                                     // 0x03F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      UsedActor;                                                 // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                                  LastHitResult;                                             // 0x0400(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FloatingHintTextContainer");
		return ptr;
	}



	void UpdateSupplyCrateHintLocation();
	void UpdateSupplyCrateHint();
	void UpdateShowKeyHints();
	void UpdatePointsOfInterest();
	void UpdateHints();
	void UpdateDynamicHintLocation(const struct FVector& ObjPos, bool bIsUsableObject, bool bIsVaulting);
	void HidePointsOfInterest();
	struct FVector GetDynamicHintLocationForUseObject(class AActor* UseObject, class AINSSoldier* Soldier, const struct FHitResult& UseHitResult);
	class UTexture2D* GetDriverIconAndLocation(struct FVector* Location);
	bool FindUseActor(TArray<struct FUsableActor>* OutUsableActors);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportOwnerInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFireSupportOwnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportOwnerInterface");
		return ptr;
	}



	class AFireSupportBase* GetFireSupportActor();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportBase
// 0x00E8 (FullSize[0x0308] - InheritedSize[0x0220])
class AFireSupportBase : public AActor
{
public:
	unsigned char                                      UnknownData_Z3HC[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSSoldier*                                 OwnerPawn;                                                 // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                                 InstigatingController;                                     // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSSoldier*                                 AssistingPawn;                                             // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                                 AssistingController;                                       // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     InitialOwnerLocation;                                      // 0x0250(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ExtractionPointLocation;                                   // 0x025C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtractionHoverHeight;                                     // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNoDamage;                                                 // 0x026C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7MTC[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    InitialOwnerRotation;                                      // 0x0270(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      TeamId;                                                    // 0x027C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8N8D[0x3];                                     // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SpottingParticle;                                          // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SpottingConfirmationParticle;                              // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                SpottingColorGrenadeTarget;                                // 0x0290(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                SpottingColorValidLocation;                                // 0x02A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                SpottingColorInvalidLocation;                              // 0x02B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             IndicatorParticle;                                         // 0x02C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bUseFactionColor : 1;                                      // 0x02C8(0x0001) BIT_FIELD  (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G0DQ[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                IndicatorColor;                                            // 0x02CC(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IncomingDialogueDelay;                                     // 0x02DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>            SpawnedIndicatorParticles;                                 // 0x02E0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFireSupportDefinition*                      Definition;                                                // 0x02F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSuccesfullyCompletedDelegate;                            // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportBase");
		return ptr;
	}



	void PlayIncomingDialogue();
	void PlayDestroyedDialogue();
	unsigned char GetTeamId();
	struct FText GetSubtitleText(const struct FText& DisplayText);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportHoveringVehicle
// 0x00D8 (FullSize[0x03E0] - InheritedSize[0x0308])
class AFireSupportHoveringVehicle : public AFireSupportBase
{
public:
	class UClass*                                      VehicleClass;                                              // 0x0308(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnHeight;                                               // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnDistance;                                             // 0x0314(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpawnDelayRange;                                           // 0x0318(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnAboveDestination;                                    // 0x0320(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KV3V[0x7];                                     // 0x0321(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AVehicleHoveringBase*                        SpawnedVehicle;                                            // 0x0328(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EHoveringFireSupportDialogue, struct FFireSupportResponse> Responses;                                                 // 0x0330(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle_VehicleSpawn;                                  // 0x0380(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimerHandle_KillReport;                                    // 0x0388(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimerHandleTakingDamage;                                   // 0x0390(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LP0T[0x3E];                                    // 0x0398(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMuteResponses;                                            // 0x03D6(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LastKillCount;                                             // 0x03D7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      TotalKillCount;                                            // 0x03D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bQueuedKillReport;                                         // 0x03D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      GunnersKilled;                                             // 0x03DA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6RGX[0x5];                                     // 0x03DB(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportHoveringVehicle");
		return ptr;
	}



	void UpdateKillDialogue();
	void PlayTakingFireDialogue();
	void PlayTakingDamageDialogue();
	void PlayFallingDialogue();
	void OnWeaponFired(class AVehicleHoveringBase* HoveringVehicle, class AItemFirearm* Weapon);
	void OnVehicleTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnTryDodge(class AVehicleHoveringBase* HoveringVehicle);
	void OnStartFalling(class AVehicleHoveringBase* HoveringVehicle);
	void OnPartDamaged(class UVehiclePartComponent* Part, float Damage);
	void OnLostPassenger(class AVehicleHoveringBase* HoveringVehicle, class UVehicleSeatComponent* Seat);
	void OnImminentImpact(class AVehicleHoveringBase* HoveringVehicle);
	void OnFireSupportKillsEnemy(class AFireSupportBase* FireSupport);
	void OnFinishDodge(class AVehicleHoveringBase* HoveringVehicle);
	void OnCrashImpact(class AVehicleHoveringBase* HoveringVehicle);
	void OnArriving(class AVehicleHoveringBase* HoveringVehicle);
	bool CanPlayCrewDialogue();
	void BlueprintOnLeaving();
	void BlueprintOnArriving(class AVehicleHoveringBase* HoveringVehicle);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportCharacter
// 0x0010 (FullSize[0x0720] - InheritedSize[0x0710])
class AFireSupportCharacter : public AINSCharacter
{
public:
	unsigned char                                      UnknownData_Q86U[0x8];                                     // 0x0710(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFireSupportBase*                            OwningFireSupport;                                         // 0x0718(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportCharacter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportDefinition
// 0x00A8 (FullSize[0x00D0] - InheritedSize[0x0028])
class UFireSupportDefinition : public UObject
{
public:
	struct FText                                       PrintName;                                                 // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       PrintDescription;                                          // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       OfficerRequestText;                                        // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       ObserverRequestText;                                       // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       ObserverThankText;                                         // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bLethal;                                                   // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowCoopEnemyUse;                                        // 0x00A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLockToGrenadeTargets;                                     // 0x00A2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlockVision;                                              // 0x00A3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumUsesPerRound;                                       // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoundStartDelay;                                           // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Cooldown;                                                  // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlockedAfterDestruction;                                  // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireClearSpaceAbove;                                   // 0x00B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_90WI[0x6];                                     // 0x00B2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      FireSupportActorClass;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinNearbyEnemies;                                          // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NearbyRadius;                                              // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportDefinition");
		return ptr;
	}



	struct FText GetPrintName();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportArtillery
// 0x00A8 (FullSize[0x03B0] - InheritedSize[0x0308])
class AFireSupportArtillery : public AFireSupportBase
{
public:
	struct FTimerHandle                                TimerHandle_RoundQueue;                                    // 0x0308(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TImerHandle_RoundSpawn;                                    // 0x0310(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Projectile;                                                // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FireAudioEvent;                                            // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   InitialDelayRange;                                         // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpawnDelayRange;                                           // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FireDelayRange;                                            // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   VolleyDelayRange;                                          // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NumProjectiles;                                            // 0x0348(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NumVolleys;                                                // 0x0349(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YDVA[0x2];                                     // 0x034A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TargetAreaSpread;                                          // 0x034C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetAreaOffset;                                          // 0x0350(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseGalileanBallistics;                                    // 0x035C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MXU9[0x3];                                     // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinFiringAngle;                                            // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileSpread;                                          // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FallbackSpawnOffset;                                       // 0x0368(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RemainingProjectiles;                                      // 0x0374(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RemainingVolleys;                                          // 0x0375(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SVGT[0x2];                                     // 0x0376(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AArtillerySite*                              ArtillerySite;                                             // 0x0378(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   PlacementQuery;                                            // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             ImpactLocations;                                           // 0x0388(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O3AX[0x18];                                    // 0x0398(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportArtillery");
		return ptr;
	}



	void SpawnRound();
	void QueueNextRound();
	void OnVolleyDelayComplete();
	void OnRoundsImpacted();
	void Multicast_QueuedNextRound();
	struct FVector GetSimpleArtilleryTrajectory(const struct FVector& TargetLocation, const struct FVector& SourceLocation, float Gravity, float* ProjectileSpeed, float* OutFlyTime);
	struct FVector GetArtilleryTrajectory(const struct FVector& TargetLocation, const struct FVector& SourceLocation, float Gravity, float* InOutSpeed, float* OutFlyTime);
	struct FVector GetArtilleryTargetLocation();
	struct FVector GetArtillerySourceLocation(const struct FVector& TargetLocation);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FireSupportAircraft
// 0x0118 (FullSize[0x0420] - InheritedSize[0x0308])
class AFireSupportAircraft : public AFireSupportBase
{
public:
	EAircraftMovementState                             CurrentMovementState;                                      // 0x0308(0x0001) ELEMENT_SIZE_MISMATCH  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XZO2[0x3];                                     // 0x0309(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData_THGZ[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAircraftFormation>                  AircraftFormation;                                         // 0x0310(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    FlyAwayRotation;                                           // 0x0320(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SpawnAltitude;                                             // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnDistance;                                             // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDive;                                                  // 0x0334(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3I82[0x3];                                     // 0x0335(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDiveAltitude;                                           // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpawnDelayRange;                                           // 0x033C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnYawDirectionOffset;                                   // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAircraftMovementState                             FinishMovementState;                                       // 0x0348(0x0001) ELEMENT_SIZE_MISMATCH  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SXH2[0x3];                                     // 0x0349(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	float                                              LeaveDelay;                                                // 0x034C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostStrafeResponseDelay;                                   // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VA36[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               TakingFireEvent;                                           // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ArrivingEvent;                                             // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LeavingEvent;                                              // 0x0368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BeginStrafeEvent;                                          // 0x0370(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FinishStrafeEvent_NoKills;                                 // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FinishStrafeEvent_Kills;                                   // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DroppingPayloadEvent;                                      // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LandedPayloadEvent;                                        // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IN3E[0x50];                                    // 0x0398(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AAircraftBase*>                       SpawnedAircraftList;                                       // 0x03E8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TImerHandle_AircraftSpawn;                                 // 0x03F8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimerHandle_PostStrafeResponse;                            // 0x0400(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimerHandle_Leave;                                         // 0x0408(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1SML[0x10];                                    // 0x0410(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FireSupportAircraft");
		return ptr;
	}



	void PlayKillResponse();
	void OnPayloadDropped(class AAircraftBase* Aircraft);
	void OnPayloadArrived(class AAircraftBase* Aircraft);
	void OnFireSupportKillsEnemy(class AFireSupportBase* FireSupport);
	void OnFinishStrafe(class AAircraftBase* Aircraft);
	void OnBeginStrafe(class AAircraftBase* Aircraft);
	void OnAllPayloadsDropped(class AAircraftBase* Aircraft);
	void BeginLeave();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FeaturedItemsSettings
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UFeaturedItemsSettings : public UDeveloperSettings
{
public:
	unsigned char                                      Items[0x10];                                               // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      WeaponUpgrades[0x10];                                      // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FeaturedItemsSettings");
		return ptr;
	}



	class UFeaturedItemsSettings* GetFeaturedItemsSettings();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.FactionDefinition
// 0x0450 (FullSize[0x0480] - InheritedSize[0x0030])
class UFactionDefinition : public UDataAsset
{
public:
	unsigned char                                      UnknownData_83W3[0xA0];                                    // 0x0030(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       FactionName;                                               // 0x00D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FName                                       CosmeticsKey;                                              // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Emblem;                                                    // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  EmblemColorMasked;                                         // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ScoreboardEmblemMaterial;                                  // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TacticalMapIcon;                                           // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                Color;                                                     // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FireSupportRadialMenu;                                     // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CommsRadialMenu;                                           // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerAllowedEquipment                     AllowedEquipment;                                          // 0x0138(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      AllowedEquipmentCollections[0x50];                         // 0x0228(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      GearRedirects[0x50];                                       // 0x0278(0x0050) UNKNOWN PROPERTY: MapProperty
	EFactionAnimationStyle                             WeaponAnimationStyle;                                      // 0x02C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VUWG[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AvailableFireSupport[0x50];                                // 0x02D0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      FireSupportGameModeOverrides[0x50];                        // 0x0320(0x0050) UNKNOWN PROPERTY: MapProperty
	float                                              FireSupportPersonalCooldown;                               // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireSupportPersonalCooldownCoop;                           // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     MusicFactionKey;                                           // 0x0378(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Cosmetics[0x50];                                           // 0x0388(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FSelectedCosmetic>                   DefaultSelectedCosmetics;                                  // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PlaceholderCharacterMeshes[0x10];                          // 0x03E8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      CharacterVoices[0x50];                                     // 0x03F8(0x0050) UNKNOWN PROPERTY: SetProperty
	class UCharacterDialogueDictionary*                PlaceholderCharacterVoice;                                 // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStationDialogueDictionary*                  StationVoice;                                              // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CounterAttackTypes[0x28];                                  // 0x0458(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.FactionDefinition");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ExternalHyperlinkDecorator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UExternalHyperlinkDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ExternalHyperlinkDecorator");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ExplosionReaction
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AExplosionReaction : public AActor
{
public:
	bool                                               bFireEventDedicatedServer;                                 // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireExplosiveDamageType;                               // 0x0221(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FZZW[0x6];                                     // 0x0222(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ExplosionReaction");
		return ptr;
	}



	void OnExplosion(float Distance, float Damage, const struct FHitResult& HitResult, const struct FVector& ImpulseDir);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ExplosionPenetrationSettings
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UExplosionPenetrationSettings : public UDataAsset
{
public:
	TMap<TEnumAsByte<EPhysicalSurface>, float>         DamageLossPerSurface;                                      // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              DefaultDamageLoss;                                         // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DTC1[0x4];                                     // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USurfaceReaction*                            ExitSurfaceReaction;                                       // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ExplosionPenetrationSettings");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryTest_TeamPresence
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UEnvQueryTest_TeamPresence : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryTest_TeamPresence");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryTest_SpatialVisibility
// 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
class UEnvQueryTest_SpatialVisibility : public UEnvQueryTest
{
public:
	class UClass*                                      VisibilityTo;                                              // 0x01F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryTest_SpatialVisibility");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryTest_OnTacticalGrid
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UEnvQueryTest_OnTacticalGrid : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryTest_OnTacticalGrid");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryTest_OnReachableNavMesh
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UEnvQueryTest_OnReachableNavMesh : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryTest_OnReachableNavMesh");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryTest_ContestedObjective
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UEnvQueryTest_ContestedObjective : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryTest_ContestedObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryTest_ActiveObjective
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UEnvQueryTest_ActiveObjective : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryTest_ActiveObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryGenerator_CoverLocations
// 0x00C0 (FullSize[0x0140] - InheritedSize[0x0080])
class UEnvQueryGenerator_CoverLocations : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderFloatValue                   Radius;                                                    // 0x0080(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue                     SpokeNumber;                                               // 0x00B8(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               bNeedsVision;                                              // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T4DT[0x3];                                     // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ZOffset;                                                   // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallOffset;                                                // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YKRW[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      GenerateAround;                                            // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PositionToHideFrom;                                        // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnvTraceData                               TraceData;                                                 // 0x0110(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryGenerator_CoverLocations");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_SquadPath
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_SquadPath : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_SquadPath");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_SquadMembers
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_SquadMembers : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_SquadMembers");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_SquadDestination
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_SquadDestination : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_SquadDestination");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_SquadCenter
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_SquadCenter : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_SquadCenter");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_NearbyOfficers
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_NearbyOfficers : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_NearbyOfficers");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_GetClaimedSearchAreasForinvestigation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_GetClaimedSearchAreasForinvestigation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_GetClaimedSearchAreasForinvestigation");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_AliveEnemies
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_AliveEnemies : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_AliveEnemies");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_AliveAllies
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_AliveAllies : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_AliveAllies");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnvQueryContext_ActiveObjectives
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvQueryContext_ActiveObjectives : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnvQueryContext_ActiveObjectives");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnumerateReplaysProxy
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UEnumerateReplaysProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnReplaysEnumerated;                                       // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3F24[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnumerateReplaysProxy");
		return ptr;
	}



	class UEnumerateReplaysProxy* EnumerateReplays(class UObject* WorldContextObject, const struct FString& MetaData);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EnumerateReplayEventsProxy
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UEnumerateReplayEventsProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnEventsEnumerated;                                        // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NGHF[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EnumerateReplayEventsProxy");
		return ptr;
	}



	class UEnumerateReplayEventsProxy* EnumerateReplayEvents(class UObject* WorldContextObject, const struct FString& Group);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.EjectedBrass
// 0x0020 (FullSize[0x0270] - InheritedSize[0x0250])
class AEjectedBrass : public APhysicalDebris
{
public:
	struct FVector2D                                   SpeedRange;                                                // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AngularImpulseUpRange;                                     // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AngularImpulseForwardRange;                                // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngularDampingOverride;                                    // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialSpeed;                                              // 0x026C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.EjectedBrass");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DynamicNavModifierVolume
// 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
class ADynamicNavModifierVolume : public AVolume
{
public:
	unsigned char                                      UnknownData_JM0E[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      NavArea;                                                   // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DynamicNavModifierVolume");
		return ptr;
	}



	void ActivateNavModifer();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DynamicHintWidget
// 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
class UDynamicHintWidget : public UUserWidget
{
public:
	class UTexture2D*                                  PrimaryHintImage;                                          // 0x0230(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SubHintImage;                                              // 0x0238(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  PrimaryKeyImage;                                           // 0x0240(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SubKeyImage;                                               // 0x0248(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       AdditionalHintText;                                        // 0x0250(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       AdditionalSubHintText;                                     // 0x0268(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              UsePercentage;                                             // 0x0280(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsableCoolDownRemain;                                      // 0x0284(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreDynamicHintOpacity;                                 // 0x0288(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KIZX[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          ScaleCurve;                                                // 0x0290(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector                                     UseLocation;                                               // 0x0318(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WJUM[0x4];                                     // 0x0324(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DynamicHintWidget");
		return ptr;
	}



	void UpdateVisibility();
	void OnFillRowWithInformationMultipleActions(bool IsPrimaryRow, const struct FText& AdditionalText, class UTexture2D* HintTexture, TArray<struct FName> ActionNames, const struct FVector& Location, float Timeout);
	void OnFillRowWithInformation(bool IsPrimaryRow, const struct FText& AdditionalText, class UTexture2D* HintTexture, const struct FName& ActionName, const struct FVector& Location, float Timeout);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Door
// 0x03D8 (FullSize[0x05F8] - InheritedSize[0x0220])
class ADoor : public AActor
{
public:
	unsigned char                                      UnknownData_B74V[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EUsablePriority                                    UsePriority;                                               // 0x0230(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Blocked;                                                   // 0x0231(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnabled;                                                  // 0x0232(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QSEQ[0x5];                                     // 0x0233(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AINSAISoldierController*>             QueueingBots;                                              // 0x0238(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EDoorBotSlot, class AINSAISoldierController*> InteractingBots;                                           // 0x0248(0x0050) (NativeAccessSpecifierPrivate)
	TMap<EDoorBotSlot, bool>                           BlockedDoorSlots;                                          // 0x0298(0x0050) (NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        FrameMeshComponent;                                        // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        DoorHandleMeshComponent;                                   // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               TopHinge;                                                  // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               BottomHinge;                                               // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               DoorOverlapCollision;                                      // 0x0310(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                           HingePhysMat;                                              // 0x0318(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmoothTransition                           SmoothTransition;                                          // 0x0320(0x0060) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SmoothTransitionCurve;                                     // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 BreachSmoothTransitionCurve;                               // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmoothTransition                           DoorHandleSmoothTransition;                                // 0x0390(0x0060) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DefaultMesh;                                               // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 TopHingeMesh;                                              // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 BottomHingeMesh;                                           // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 NoHingeMesh;                                               // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                         GibMeshes;                                                 // 0x0410(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APhysicalDebris*>                     TrackedDebris;                                             // 0x0420(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorState                                         DoorState;                                                 // 0x0430(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorState                                         DesiredDoorState;                                          // 0x0431(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q8B1[0x2];                                     // 0x0432(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DoorAngle;                                                 // 0x0434(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLaunched;                                                 // 0x0438(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZR71[0x7];                                     // 0x0439(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_CheckFallenDoorIsStuck;                        // 0x0440(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TopHingeHealth;                                            // 0x0448(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BottomHingeHealth;                                         // 0x044C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnOpen;                                                // 0x0450(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorState                                         SimulatedDoorState;                                        // 0x0451(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0AU8[0x2];                                     // 0x0452(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DoorTransitionTime;                                        // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoorAngleDifference;                                       // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTopHingeBroken;                                           // 0x045C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBottomHingeBroken;                                        // 0x045D(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorType                                          DoorType;                                                  // 0x045E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7OXK[0x1];                                     // 0x045F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialDoorHealth;                                         // 0x0460(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bKicked;                                                   // 0x0464(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UGML[0x3];                                     // 0x0465(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDoorKicked;                                              // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorOpened;                                              // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorClosed;                                              // 0x0488(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorFallen;                                              // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoorDestroyedDelegate;                                   // 0x04A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                                     InitialLocation;                                           // 0x04B8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    InitialRotation;                                           // 0x04C4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     AxisLocation;                                              // 0x04D0(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHorizontallyInverted;                                     // 0x04DC(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowTransitionInterruption;                              // 0x04DD(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SXCY[0x2];                                     // 0x04DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UINSAudioComponent*                          AkComponent;                                               // 0x04E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorPeak;                                           // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorOpen;                                           // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorClose;                                          // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorCreakOpen;                                      // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorCreakClose;                                     // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorKick;                                           // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorLock;                                           // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorUnlock;                                         // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorPhysHit;                                        // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventHingeShotOff;                                       // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AkEventDoorBlocked;                                        // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinTimeBetweenNotifies;                                    // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastNotifyTime;                                            // 0x0544(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastBreachTime;                                            // 0x0548(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4BGY[0x4];                                     // 0x054C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              DamageTypeBlacklist;                                       // 0x0550(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DoorKickFX;                                                // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DoorBreachFX;                                              // 0x0568(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DoorDestroyFX;                                             // 0x0570(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             HingeDestroyFX;                                            // 0x0578(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USurfaceReaction*                            GibSurfaceReaction;                                        // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorOpenUI;                                                // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorOutsideOpenUI;                                         // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorPartialOpenUI;                                         // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorOutsidePartialOpenUI;                                  // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorCloseUI;                                               // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorOutsideCloseUI;                                        // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DoorBreachUI;                                              // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BreachDamage;                                              // 0x05C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinDistanceNeededToTakeBreachDamage;                       // 0x05C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinDistanceNeededToTakeSuppression;                        // 0x05C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OUEV[0x4];                                     // 0x05CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMaterialSwap                               DestroyedMaterialSwap;                                     // 0x05D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          InitialDoorMaterial;                                       // 0x05E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          InitialFrameMaterial;                                      // 0x05F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Door");
		return ptr;
	}



	void UpdateLocked(bool bNewLocked);
	void UpdateEnabled(bool bNewEnabled);
	void OnRep_TopHingeBroken();
	void OnRep_DoorState();
	void OnRep_DoorAngle();
	void OnRep_BottomHingeBroken();
	void OnDoorHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	float NormalDotNormal(const struct FVector& HitNormal);
	void Multicast_PlayDoorFX(class UParticleSystem* FX, const struct FVector& Location);
	void Multicast_LaunchDoor(const struct FVector_NetQuantize10& ImpulseLocation, const struct FVector_NetQuantize10& ImpulseForce);
	void Multicast_DoorPostAkEvent(class UAkAudioEvent* Event);
	void LaunchDoor(const struct FVector& ImpulseLocation, const struct FVector& ImpulseForce);
	bool IsFalling();
	bool IsDoorDestroyed();
	bool IsCompletelyOpen();
	bool IsClosed();
	bool IsBroken();
	bool HasFallen();
	EDoorState GetDoorState();
	struct FVector GetCenterLocation();
	float DoorDotProduct(class AINSCharacter* Pawn);
	void CheckLaunchDoor();
	void CheckFallenDoorIsStuck();
	void BreakDown(float DotProduct, float Speed);
	bool AreHingesShotOff();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.INSTeamDeathmatchGameMode
// 0x0040 (FullSize[0x09A8] - InheritedSize[0x0968])
class AINSTeamDeathmatchGameMode : public AINSMultiplayerMode
{
public:
	bool                                               bScoreKills;                                               // 0x0968(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VXYW[0x3];                                     // 0x0969(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnScoringMaxDistance;                                   // 0x096C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnScoringMinDistanceFriendly;                           // 0x0970(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnScoringMinDistanceEnemy;                              // 0x0974(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnScoringFriendyDistanceFactor;                         // 0x0978(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnScoringEnemyDistanceFactor;                           // 0x097C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnScoringRecentSpawnPenalty;                            // 0x0980(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnScoringRecentSpawnCheckTime;                          // 0x0984(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AINSPlayerStart*>                     DeathmatchSpawns;                                          // 0x0988(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathmatchSpawnPointDelay;                                 // 0x0998(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNearWinLimit;                                             // 0x099C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NearWinLimitThreshold;                                     // 0x099D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FHVV[0x2];                                     // 0x099E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_EnableDeathmatchSpawns;                        // 0x09A0(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.INSTeamDeathmatchGameMode");
		return ptr;
	}



	bool ShouldUseDeathmatchSpawns();
	void SetDeathmatchSpawns(bool bEnabled);
	void EnableDeathmatchSpawns();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DominationGameMode
// 0x0010 (FullSize[0x09B8] - InheritedSize[0x09A8])
class ADominationGameMode : public AINSTeamDeathmatchGameMode
{
public:
	float                                              DominationScoreFrequency;                                  // 0x09A8(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GB1Q[0x4];                                     // 0x09AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                TimerHandle_DominationScoring;                             // 0x09B0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DominationGameMode");
		return ptr;
	}



	void CheckDominationScoring();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DismembermentSet
// 0x01C0 (FullSize[0x01E8] - InheritedSize[0x0028])
class UDismembermentSet : public UObject
{
public:
	struct FRotator                                    ReplacementMeshRotationOffset;                             // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QP9S[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          DamageCurve;                                               // 0x0038(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              DamageTypeBlacklist;                                       // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaporizationThreshold;                                     // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObliterationChance;                                        // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaporizationImpulseStrength;                               // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_95ZE[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             VaporizationParticleSystem;                                // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeathSet                                   DefaultDeath;                                              // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FDeathSet>              DeathAnimations;                                           // 0x00F8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FName                                       BrainBoneName;                                             // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeartBoneName;                                             // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               VitalOrganBones;                                           // 0x0158(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FRagdollEffectLayer>    EffectConditions;                                          // 0x0168(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BurnParticleSystem;                                        // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBloodSplatterData*                          BloodSplatterData;                                         // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               HiddenMaterialSlotsFirstPerson;                            // 0x01C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLimbGroup>                          LimbGroups;                                                // 0x01D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DismembermentSet");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DialogLicenseWidget
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UDialogLicenseWidget : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DialogLicenseWidget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DecalPlaneComponent
// 0x0010 (FullSize[0x04B0] - InheritedSize[0x04A0])
class UDecalPlaneComponent : public UStaticMeshComponent
{
public:
	struct FTimerHandle                                TimerHandle_Lifespan;                                      // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A5S1[0x8];                                     // 0x04A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DecalPlaneComponent");
		return ptr;
	}



	void SetDecalScale(float NewScale);
	void SetDecalMaterial(class UMaterialInterface* Material);
	void SetDecalLifespan(float Seconds);
	void OnLifespanExpired();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DecalManager
// 0x2910 (FullSize[0x2938] - InheritedSize[0x0028])
class UDecalManager : public UObject
{
public:
	unsigned char                                      UnknownData_WWJN[0x2910];                                  // 0x0028(0x2910) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DecalManager");
		return ptr;
	}



	class UDecalPlaneComponent* SpawnTranslucentTrackedDecalAttached(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, float LifeSpan, float FadeScreenSize);
	class UDecalComponent* SpawnTrackedDecalAttached(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, float LifeSpan, float FadeScreenSize, float FadeOutDelay, float FadeOutDuration, EDecalChannel DecalChannel, bool bUseFootprintArray);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeMeleeGeneric
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeMeleeGeneric : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeMeleeGeneric");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeImpact
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeImpact : public UDamageTypeMeleeGeneric
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeImpact");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeDoorBreach
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeDoorBreach : public UDamageTypeImpact
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeDoorBreach");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeChargeImpact
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeChargeImpact : public UDamageTypeImpact
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeChargeImpact");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeGrenadeImpact
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeGrenadeImpact : public UDamageTypeImpact
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeGrenadeImpact");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeVehicleImpact
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeVehicleImpact : public UDamageTypeImpact
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeVehicleImpact");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeMeleeClub
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeMeleeClub : public UDamageTypeMeleeGeneric
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeMeleeClub");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeMeleePunch
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeMeleePunch : public UDamageTypeMeleeClub
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeMeleePunch");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeMeleeSlash
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeMeleeSlash : public UDamageTypeMeleeGeneric
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeMeleeSlash");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeExplosionGeneric
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeExplosionGeneric : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeExplosionGeneric");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeExplosionVehicle
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeExplosionVehicle : public UDamageTypeExplosionGeneric
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeExplosionVehicle");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeEnvironmentalFire
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeEnvironmentalFire : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeEnvironmentalFire");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeVehicleFire
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeVehicleFire : public UDamageTypeEnvironmentalFire
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeVehicleFire");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeSuicide
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeSuicide : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeSuicide");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeFall
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeFall : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeFall");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeBullet
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeBullet : public UINSDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeBullet");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageTypeBuckshot
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDamageTypeBuckshot : public UDamageTypeBullet
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageTypeBuckshot");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageReflectionToggledMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UDamageReflectionToggledMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageReflectionToggledMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.DamageLogComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UDamageLogComponent : public UActorComponent
{
public:
	TArray<struct FLoggedDamage>                       DamageEvents;                                              // 0x00B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.DamageLogComponent");
		return ptr;
	}



	void OnOwnerTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	class AController* GetHighestDamager(class AController* Ignore, float MaxTime, bool bCheckTeam);
	void ClearDamageLog();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CoverSystem
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
class UCoverSystem : public UBlueprintFunctionLibrary
{
public:
	unsigned char                                      UnknownData_VVWC[0xD0];                                    // 0x0028(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDebugDraw;                                                // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WMNJ[0x1F];                                    // 0x00F9(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CoverSystem");
		return ptr;
	}



	void RemoveStaleCoverPoints(const struct FVector& Origin, const struct FVector& Extent);
	void RemoveCoverPointsOfObject(class AActor* CoverObject);
	void RemoveAll();
	bool ReleaseCover(const struct FVector& ElementLocation);
	void OnNavMeshTilesUpdated();
	void OnBeginPlay();
	bool HoldCover(const struct FVector& ElementLocation);
	class UCoverSystem* GetCoverSystem(class UObject* WorldContextObject);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CoverGenerator
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class ACoverGenerator : public AActor
{
public:
	class UCoverSystem*                                CoverSystem;                                               // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawDebug;                                                // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OAY9[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CoverGenerator");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CoverComponent
// 0x0040 (FullSize[0x0450] - InheritedSize[0x0410])
class UCoverComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData_D48X[0x8];                                     // 0x0410(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ESoldierStance                                     Stance;                                                    // 0x0418(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_461I[0x3];                                     // 0x0419(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProtectionAngle;                                           // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLauncherPriority;                                         // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScopePriority;                                            // 0x0421(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMachineGunnerPriority;                                    // 0x0422(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAmbushNode;                                               // 0x0423(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Rank;                                                      // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BRAA[0x10];                                    // 0x0428(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSSoldier*                                 Occupier;                                                  // 0x0438(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O36Z[0x2];                                     // 0x0440(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int8_t                                             AssociatedObjectiveId;                                     // 0x0442(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LLJE[0xD];                                     // 0x0443(0x000D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CoverComponent");
		return ptr;
	}



	bool IsOccupierClose();
	bool HasProtectionAgainstLocation(const struct FVector& ThreatLocation, bool bUseLOS);
	float GetProtectionAngle();
	float GetOccupierDistance();
	class AINSSoldier* GetOccupier();
	struct FVector GetLocation();
	struct FVector GetDirection();
	bool CanMachinegunsDeploy();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CoverActor
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class ACoverActor : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CoverActor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.Collectible
// 0x01C8 (FullSize[0x01F0] - InheritedSize[0x0028])
class UCollectible : public UObject
{
public:
	ECollectibleType                                   CollectibleType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BHTG[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DisplayNameText;                                           // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       UnlockDescription;                                         // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ECollectibleRarity                                 Rarity;                                                    // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L10C[0x3];                                     // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCompetitiveUnlockTier                      CompetitiveUnlockableTier;                                 // 0x0064(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NXNO[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FCollectiblePlatformClaim> Claims;                                                    // 0x0070(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FCollectiblePlatformClaim> ClaimsBeta;                                                // 0x00C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FString                                     BackendClaimId;                                            // 0x0110(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAppendPlatformToClaimId;                                  // 0x0120(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotCanEquip;                                              // 0x0121(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FN7U[0x2];                                     // 0x0122(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ItemId;                                                    // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsumable;                                               // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NQUM[0x7];                                     // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      UIIconTexture[0x28];                                       // 0x0130(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bShowOnInventory;                                          // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0NLT[0x7];                                     // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      InventoryIconTexture[0x28];                                // 0x0160(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FText                                       InventoryDisplayName;                                      // 0x0188(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       InventoryDisplayVariant;                                   // 0x01A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       InventoryDescription;                                      // 0x01B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bCanEarnFromLevelUp;                                       // 0x01D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FDXN[0x3];                                     // 0x01D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                UnlockLevelMin;                                            // 0x01D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                UnlockLevelMax;                                            // 0x01D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanObtainWithCredits;                                     // 0x01DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CYDB[0x3];                                     // 0x01DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TokenCost;                                                 // 0x01E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TokenValue;                                                // 0x01E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDefaultForSlot;                                           // 0x01E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDefaultForSubSlot;                                        // 0x01E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeprecated;                                               // 0x01EA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FNGQ[0x5];                                     // 0x01EB(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.Collectible");
		return ptr;
	}



	struct FText GetTokenValueText();
	struct FText GetTokenCostText();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CosmeticVariation
// 0x00D8 (FullSize[0x02C8] - InheritedSize[0x01F0])
class UCosmeticVariation : public UCollectible
{
public:
	bool                                               bOverrideRarity;                                           // 0x01F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideTier;                                             // 0x01F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QJVZ[0x6];                                     // 0x01F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerItemRarityOverride[0x50];                               // 0x01F8(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      PerItemCostOverride[0x50];                                 // 0x0248(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bOverrideTokenCost;                                        // 0x0298(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideFactionRestriction;                               // 0x0299(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LEBJ[0x2];                                     // 0x029A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       FactionRestriction;                                        // 0x029C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablePurchase;                                          // 0x02A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableObtainFromLevelUp;                                 // 0x02A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y6CT[0x2];                                     // 0x02A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCosmeticMaterialSwap>               PrimaryMesh3PMaterialSwaps;                                // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCosmeticMaterialSwap>               PrimaryMesh1PMaterialSwaps;                                // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CosmeticVariation");
		return ptr;
	}



	void RemoveVariation();
	void InitVariation();
	ECollectibleRarity GetRarityWithItem(class UClass* ItemClass);
	class UCosmeticItem* GetOuterCosmetic();
	void BlueprintRemoveVariation(class UCosmeticItem* OuterCosmetic);
	void BlueprintInitVariation(class UCosmeticItem* OuterCosmetic);
	void BlueprintCosmeticItemMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh);
	void BlueprintCosmeticItemAllMeshesLoaded();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CosmeticStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UCosmeticStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CosmeticStatics");
		return ptr;
	}



	bool ValidateCosmeticState(struct FProfileCharacterCosmeticState* State, ECharacterGender Gender);
	int TranslateSlotToIndex(ECharacterAppearanceSlot Slot, int SubSlot);
	bool IsVanityCosmetic(const struct FSelectedCosmetic& SelectedCosmetic);
	int GetSelectedCosmeticValue(const struct FSelectedCosmetic& SelectedCosmetic);
	struct FCompetitiveUnlockTier GetSelectedCosmeticTier(const struct FSelectedCosmetic& SelectedCosmetic);
	ECollectibleRarity GetSelectedCosmeticRarity(const struct FSelectedCosmetic& SelectedCosmetic);
	int GetSelectedCosmeticItemId(const struct FSelectedCosmetic& SelectedCosmetic);
	ECharacterGender GetSelectedCosmeticGender(const struct FSelectedCosmetic& SelectedCosmetic);
	bool GetSelectedCosmeticFromItemId(int ItemId, struct FSelectedCosmetic* OutCosmeticPair);
	int GetSelectedCosmeticCost(const struct FSelectedCosmetic& SelectedCosmetic);
	void GetDefaultSelectedCosmeticForSlot(struct FSelectedCosmetic* SelectedCosmetic, const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int SubSlot);
	int GetCosmeticSlotSubslotCount(ECharacterAppearanceSlot Slot);
	bool DoesCosmeticSlotSupportEmptyForState(ECharacterAppearanceSlot Slot, const struct FProfileCharacterCosmeticState& State, int SubSlot);
	bool DoesCosmeticSlotSupportEmpty(ECharacterAppearanceSlot Slot, int SubSlot, const struct FName& Faction);
	void CosmeticStateRemoveAllInSlot(struct FProfileCharacterCosmeticState* State, ECharacterAppearanceSlot Slot, int SubSlot);
	bool CosmeticStateHasItemInSlot(const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int SubSlot);
	bool CosmeticStateGetItemInSlot(const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int SubSlot, struct FSelectedCosmetic* OutCosmeticPair);
	ECharacterGender CosmeticStateGetGender(const struct FProfileCharacterCosmeticState& State);
	void CosmeticStateGetExclusions(const struct FProfileCharacterCosmeticState& State);
	bool CosmeticStateContainsItem(const struct FProfileCharacterCosmeticState& State);
	bool CosmeticSlotHasSubslots(ECharacterAppearanceSlot Slot);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CosmeticItem
// 0x0250 (FullSize[0x0440] - InheritedSize[0x01F0])
class UCosmeticItem : public UCollectible
{
public:
	unsigned char                                      UnknownData_3M9V[0x10];                                    // 0x01F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAutoAttachMeshes;                                         // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DN0L[0x7];                                     // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterCosmeticAttachedModel             AttachmentModel;                                           // 0x0208(0x0070) (Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCosmeticAttachedModel>     AttachmentSubmodels;                                       // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCosmeticAttachedModel>     AttachmentMeshes1P;                                        // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsBackpack;                                                // 0x0298(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsHeavyBackpack;                                           // 0x0299(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QR7L[0x6];                                     // 0x029A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMaterialInstanceDynamic*>            DynamicMaterials;                                          // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FactionRestriction;                                        // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterGender                                   Gender;                                                    // 0x02B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterAppearanceSlot                           AppearanceSlot;                                            // 0x02B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1LNJ[0x2];                                     // 0x02BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AppearanceSubSlot;                                         // 0x02BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CosmeticParent[0x28];                                      // 0x02C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UCharacterDialogueDictionary*                VoiceDictionary;                                           // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AINSSoldier*                                 OuterSoldier;                                              // 0x02F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AProfileCharacter*                           OuterProfileCharacter;                                     // 0x02F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARagdoll*                                    OuterRagdoll;                                              // 0x0300(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                       OuterPawn;                                                 // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                     OuterObject;                                               // 0x0310(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UINSSkeletalMeshComponent*>           Mesh1PAttachedMeshes;                                      // 0x0318(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UINSSkeletalMeshComponent*>           Mesh3PAttachedMeshes;                                      // 0x0328(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UINSSkeletalMeshComponent*>           MeshBodyAttachedMeshes;                                    // 0x0338(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCosmeticInitializating;                                   // 0x0348(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCosmeticInitialized;                                      // 0x0349(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasDuplicated;                                            // 0x034A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SBY1[0x5];                                     // 0x034B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USharedCosmeticState*                        SharedCosmeticState;                                       // 0x0350(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCached;                                                 // 0x0358(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInCache;                                                  // 0x0359(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNeedsClearing;                                            // 0x035A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceStartLoad;                                           // 0x035B(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoadedFromCache;                                          // 0x035C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9ZMS[0x3];                                     // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharacterCosmeticAttachedModel>     Mesh1PAttachedModels;                                      // 0x0360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCosmeticAttachedModel>     Mesh3PAttachedModels;                                      // 0x0370(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCosmeticAttachedModel>     MeshBodyAttachedModels;                                    // 0x0380(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UCosmeticCache>               CosmeticCache;                                             // 0x0390(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      BundledFromClass[0x28];                                    // 0x0398(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      DefaultVariation;                                          // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              SupportedVariations;                                       // 0x03C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              BotSupportedVariations;                                    // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCosmeticVariation*                          Variation;                                                 // 0x03E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CostMultiplier;                                            // 0x03F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I7IZ[0x4];                                     // 0x03F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              CosmeticExclusions;                                        // 0x03F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPendingCosmeticLoad>                PendingCosmeticLoads;                                      // 0x0408(0x0010) (ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WVT5[0x10];                                    // 0x0418(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMeshesLoaded;                                             // 0x0428(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IX38[0x17];                                    // 0x0429(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CosmeticItem");
		return ptr;
	}



	void UpdateVisibility(bool bNewVisibility);
	void SetupCosmetic(class UClass* VariationClass);
	void RemoveCosmetic();
	void ProcessMeshForCache(class UINSSkeletalMeshComponent* Mesh, class UObject* NewOwner, bool bCleanMaterials);
	void ProcessForCache();
	bool OwnerHasGearLevelInSlot(EItemSlot Slot, EItemGearLevel Level);
	void OnUpdateEquipmentVariation(class UINSSkeletalMeshComponent* Mesh);
	void OnCosmeticMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh);
	bool IsVariationEquippedAnywhere(class UClass* VariationClass, bool bIncludeSubclasses);
	bool IsMeshLoading();
	void InitSharedState(class USharedCosmeticState* NewState);
	void InitializeLoadedCosmeticMesh(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh, bool bFromCache);
	void InitializeFromCache(class UObject* Object, bool OnlyFirstPersonMeshes);
	void InitializeAttachedMesh(class UINSSkeletalMeshComponent* AttachedMesh, struct FCharacterCosmeticAttachedModel* Model, bool bFirstPerson, bool bBodyMesh);
	void InitCosmetic();
	bool HasOtherCosmetic(bool bIncludeSubclasses);
	bool HasGearItem(bool bIncludeSubclasses);
	class UClass* GetVariationInSlot(ECharacterAppearanceSlot Slot, int SubSlot);
	class USkeletalMeshComponent* GetOuterMesh(bool bFirstPerson, bool bBodyMesh);
	void GetOtherCosmeticsWithVariation(TArray<struct FSelectedCosmetic>* OutOtherCosmetics);
	void GetOtherCosmetics(TArray<class UClass*>* OutOtherCosmetics);
	class UCosmeticItem* CreateDuplicate();
	int CountMeshesLoading();
	bool CheckRestriction(const struct FProfileCharacterCosmeticState& CosmeticState);
	void BlueprintRemoveCosmetic();
	void BlueprintOnItemRemoved(class AItemBase* Item);
	void BlueprintOnItemAdded(class AItemBase* Item);
	void BlueprintInitSharedState(class USharedCosmeticState* NewState);
	void BlueprintInitCosmetic(class UClass* VariationClass);
	void BlueprintCosmeticMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh);
	class UINSSkeletalMeshComponent* AttachMesh(struct FCharacterCosmeticAttachedModel* MeshToAttach, bool bFirstPerson, bool bBodyMesh);
	void ApplyMaterialSwaps(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CosmeticItemArms
// 0x0028 (FullSize[0x0468] - InheritedSize[0x0440])
class UCosmeticItemArms : public UCosmeticItem
{
public:
	unsigned char                                      ReplacementArmMesh1P[0x28];                                // 0x0440(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CosmeticItemArms");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CosmeticCache
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UCosmeticCache : public UObject
{
public:
	TArray<struct FCachePoolData>                      CachedCosmeticPools;                                       // 0x0028(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UINSSkeletalMeshMerge*                       SkeletalMeshMerger;                                        // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UINSSkeletalMeshComponent*                   SoldierGhostMesh;                                          // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CosmeticCache");
		return ptr;
	}



	bool SetMergedMeshOnObject(class UObject* Object);
	void PrintCache();
	void OnSkeletalMeshMergeCompleted();
	void OnCosmeticLoaded(class UCosmeticItem* Cosmetic);
	void Merge();
	void MarkCosmeticsSet(class UObject* Object);
	class UCosmeticItem* GetMergedMesh(class UObject* Object);
	class UCosmeticItem* GetCosmeticFromCache(ECharacterAppearanceSlot Slot, int SubSlot, class UObject* Object);
	class UCosmeticItem* CreateNewCosmetic(class UClass* CosmeticClass, class UObject* Object, class USharedCosmeticState* SharedState);
	void ClearCosmeticCache(bool bSwitchedTeams);
	void CheckAllMeshesLoaded(class UObject* Object);
	void CacheCosmetics(TArray<class UCosmeticItem*> Cosmetics, class UObject* Object);
	void CacheCosmetic(class UCosmeticItem* Cosmetic, class UObject* Object);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CopyPoseAnimInstance
// 0x0018 (FullSize[0x0280] - InheritedSize[0x0268])
class UCopyPoseAnimInstance : public UAnimInstance
{
public:
	TArray<struct FMorphTargetPair>                    MorphTargets;                                              // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T62M[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CopyPoseAnimInstance");
		return ptr;
	}



	void SetFollowedSkeletalMesh(class USkeletalMeshComponent* MeshComponent);
	void ApplyMorphTargets();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ControllerLayout
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UControllerLayout : public UDataAsset
{
public:
	TArray<struct FActionMapping>                      ActionMappings;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAxisMapping>                        AxisMappings;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ControllerLayout");
		return ptr;
	}



	void ApplyToProfile(class UINSPlayerLocalProfile* Profile);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ConsumeItemProxy
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UConsumeItemProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnItemConsumed;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemConsumeError;                                        // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4HJQ[0x20];                                    // 0x0050(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ConsumeItemProxy");
		return ptr;
	}



	class UConsumeItemProxy* ConsumeEntitlement(class UObject* WorldContextObject, const struct FString& EntitlementId, int UserIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CompetitiveLeaverPenaltyMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UCompetitiveLeaverPenaltyMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CompetitiveLeaverPenaltyMessage");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CompassHUD
// 0x0078 (FullSize[0x02A8] - InheritedSize[0x0230])
class UCompassHUD : public UUserWidget
{
public:
	class AINSBasePlayerController*                    BasePlayerController;                                      // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                                    Bound_MarkerOverlay;                                       // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      Bound_CompassImage;                                        // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CompassDirectionText;                                // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextN;                                       // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextNE;                                      // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextE;                                       // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextSE;                                      // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextS;                                       // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextSW;                                      // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextW;                                       // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Bound_CardinalTextNW;                                      // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCompassToggledByUser;                                     // 0x0290(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9398[0x3];                                     // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CompassAngle;                                              // 0x0294(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CompassAngleInt;                                           // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysVisible;                                            // 0x029C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRadialMenuActive;                                         // 0x029D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisplayingMarkers;                                        // 0x029E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T6RG[0x1];                                     // 0x029F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetAnimation*                            Animation_FadeOut;                                         // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CompassHUD");
		return ptr;
	}



	void UpdateMarkerAngle(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void UpdateAlwaysVisible();
	void SetDisplayingMarkers(bool bHasMarkers);
	void OnShowRadialMenu(class UUserWidget* Widget);
	void OnRoundReset();
	void OnRoundEnd(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines);
	void OnPlayerKilled(const struct FPlayerKillNotice& KillNotice);
	void OnHideRadialMenu(class UUserWidget* Widget);
	void OnCompassToggledByUser(bool bVisible);
	bool CanFadeOutCompass();
	void BindGameStateEvent(class AGameStateBase* GameState);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CollectibleBundle
// 0x0040 (FullSize[0x0230] - InheritedSize[0x01F0])
class UCollectibleBundle : public UCollectible
{
public:
	TArray<struct FCollectibleBundleItem>              BundleItems;                                               // 0x01F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Tokens;                                                    // 0x0200(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowVariationsInPopup;                                    // 0x0204(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PDO9[0x3];                                     // 0x0205(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      UICustomizeScreenTexture[0x28];                            // 0x0208(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CollectibleBundle");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ChatBox
// 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
class UChatBox : public UUserWidget
{
public:
	class UEditableTextBox*                            Input;                                                     // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxChatLines;                                              // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaxSendLimit;                                              // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ChatMessageReduceTime;                                     // 0x0240(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LastChatMessageSentTime;                                   // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentMessageSentCount;                                   // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInChatMode;                                               // 0x024C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bChatTeamOnly;                                             // 0x024D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q6V4[0x2];                                     // 0x024E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FChatBoxEntry>                       ChatMessages;                                              // 0x0250(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VUPM[0x20];                                    // 0x0260(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ChatBox");
		return ptr;
	}



	void StartChatInput(bool bForTeamOnly);
	void SendChatMessage(const struct FText& Message);
	void ReduceMessagesSentCount();
	void OnChatMessageRecieved(const struct FText& Message);
	void OnChatInputStarted();
	void OnChatInputEnded();
	void HoldMessage(const struct FText& Message);
	struct FText GetChatBody();
	void EndChatInput();
	bool AtMaxSendLimit();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CharacterDialogueStringTable
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UCharacterDialogueStringTable : public UDataAsset
{
public:
	TMap<ECharacterResponse, struct FString>           DialogueMap;                                               // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CharacterDialogueStringTable");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CharacterDialogueDictionary
// 0x0198 (FullSize[0x01C8] - InheritedSize[0x0030])
class UCharacterDialogueDictionary : public UDataAsset
{
public:
	TArray<struct FCharacterPhrase>                    BotPhrases;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPhrase>                    ChatterPhrases;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPhrase>                    GameModePhrases;                                           // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPhrase>                    RadialPhrases;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPhrase>                    PainPhrases;                                               // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFireSupportOfficerPhrase>  FireSupportOfficerRequestPhrases;                          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFireSupportObserverPhrase> FireSupportObserverPhrases;                                // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFireSupportIncomingPhrase> FireSupportIncomingPhrases;                                // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterObjectivePhrase>           ObjectivePhrases;                                          // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCachedDialogueData                         CachedDialogueData;                                        // 0x00C0(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FocusInhale;                                               // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FocusExhale;                                               // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BreathingLoop;                                             // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CharacterDialogueDictionary");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CharacterDialogueComponent
// 0x0090 (FullSize[0x0140] - InheritedSize[0x00B0])
class UCharacterDialogueComponent : public UActorComponent
{
public:
	class UINSAudioComponent*                          TargetComponent;                                           // 0x00B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P2EC[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInterruptDelegate;                                       // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpeakDelegate;                                           // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8NYY[0x8];                                     // 0x0120(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharacterMutedPhrase>               MutedPhrases;                                              // 0x0128(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                FinishDialogueTimerHandle;                                 // 0x0138(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CharacterDialogueComponent");
		return ptr;
	}



	void StopActiveDialogue();
	bool PlayDialogue(const struct FCharacterResponseRequest& SpeakRequest);
	void OnDialogueFinished();
	bool IsPlayingDialogue();
	float GetTimeSinceLastSound();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.CaptureZone
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
class ACaptureZone : public AVolume
{
public:
	class AObjectiveCapturable*                        Objective;                                                 // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.CaptureZone");
		return ptr;
	}



	void OnEndObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BulletPenetrationSettings
// 0x0178 (FullSize[0x01A8] - InheritedSize[0x0030])
class UBulletPenetrationSettings : public UDataAsset
{
public:
	TMap<TEnumAsByte<EPhysicalSurface>, struct FBulletPenetrationPowerValues> Settings;                                                  // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FBulletPenetrationPowerValues               DefaultSettings;                                           // 0x0080(0x0120) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RicochetAudioEvent;                                        // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BulletPenetrationSettings");
		return ptr;
	}



	struct FBulletPenetrationPowerValues GetBulletPenetrationValuesForSurface(TEnumAsByte<EPhysicalSurface>* SurfaceType);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BulletManager
// 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
class ABulletManager : public AInfo
{
public:
	unsigned char                                      UnknownData_H1E1[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SubstepTimer;                                              // 0x0228(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BulletsPresimulatedTicks;                                  // 0x022C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BulletsPresimulatedAccuracy;                               // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_98KH[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BulletMaxLifespan;                                         // 0x0238(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BulletMinSpeed;                                            // 0x023C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bValidateHits;                                             // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N4LB[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ClientsideHitsPingLimit;                                   // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSimulatedBullet>                    Bullets;                                                   // 0x0248(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSimulatedBullet>                    ExpiredBullets;                                            // 0x0258(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQueuedClientBulletHit>              UnknownBulletsQueuedClientHits;                            // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBulletPenetrationSettings*                  DefaultBulletPenetrationSettings;                          // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugTraces;                                              // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugImpacts;                                             // 0x0281(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FA4D[0x6];                                     // 0x0282(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BulletManager");
		return ptr;
	}



	void SetDebugTraces(bool bState);
	void SetDebugImpacts(bool bState);
	float GetPresimulatedTime();
	void AddBullet(const struct FSimulatedBullet& InBullet);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BreakableComponent
// 0x0120 (FullSize[0x05C0] - InheritedSize[0x04A0])
class UBreakableComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_X0WB[0x8];                                     // 0x04A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 Mesh;                                                      // 0x04A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreakable;                                                // 0x04B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnBroken;                                              // 0x04B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O1KS[0x6];                                     // 0x04B2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBreak;                                                   // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bClientsideOnly;                                           // 0x04C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowBreakthrough;                                        // 0x04C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFragile;                                                // 0x04CA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSeeThrough;                                               // 0x04CB(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlockPawns;                                               // 0x04CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5O0Q[0x3];                                     // 0x04CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Health;                                                    // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicateHealth;                                          // 0x04D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDamageFilter;                                          // 0x04D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SXCT[0x2];                                     // 0x04D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              DamageTypeFilter;                                          // 0x04D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDamageFilterIsBlacklist;                                  // 0x04E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U1VI[0x3];                                     // 0x04E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinDamage;                                                 // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMeshOnBreak;                                          // 0x04F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveDecalsOnBreak;                                      // 0x04F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TACO[0x6];                                     // 0x04F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 MeshBroken;                                                // 0x04F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialSwap>                       BreakMaterials;                                            // 0x0500(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BreakParticle;                                             // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    BreakParticleComponent;                                    // 0x0518(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BreakSound;                                                // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachBreakEffects;                                       // 0x0528(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4KP6[0x3];                                     // 0x0529(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       EffectAttachSocket;                                        // 0x052C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y6L8[0x4];                                     // 0x0534(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGib>                                Gibs;                                                      // 0x0538(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GibLifetime;                                               // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBreakableGibs;                                            // 0x054C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DD1F[0x3];                                     // 0x054D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GibHealth;                                                 // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GibImpulseScale;                                           // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGibPhysics;                                               // 0x0558(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CC4F[0x7];                                     // 0x0559(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             GibBreakParticle;                                          // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceSpeedMin;                                            // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceSpeedMax;                                            // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLocallyBroken;                                          // 0x0570(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBrokenAuthority;                                          // 0x0571(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ENSN[0x6];                                     // 0x0572(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USurfaceReaction*                            PhysicsPropSurfaceReaction;                                // 0x0578(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q9N3[0x30];                                    // 0x0580(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastNotify;                                                // 0x05B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinTimeBetweenNotifies;                                    // 0x05B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZLJI[0x8];                                     // 0x05B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BreakableComponent");
		return ptr;
	}



	void SetBrokenMaterials();
	void ResetBreakable();
	void RemoveChildDecals();
	void OnReset();
	void OnRep_Health();
	void OnRep_bBrokenAuthority();
	void MulticastBreak();
	bool IsBroken();
	void ChangeMesh();
	bool CanBreakThrough();
	void Break(const struct FVector& HitLocation, const struct FVector& ShotDirection, float DamageImpulse, const struct FName& BoneName);
	void BlueprintOnHealthChanged();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BrassManager
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UBrassManager : public UObject
{
public:
	int                                                BrassMaximum;                                              // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V70Q[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AEjectedBrass*>                       TrackedBrass;                                              // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BrassManager");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotHandler
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UBotHandler : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotHandler");
		return ptr;
	}



	class AINSAISoldierController* GetController();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotObjectiveHandler
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UBotObjectiveHandler : public UBotHandler
{
public:
	unsigned char                                      UnknownData_1HRV[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotObjectiveHandler");
		return ptr;
	}



	bool HasArrivedAtObjective();
	class AObjectiveBase* GetDesiredObjective();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotMovementHandler
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UBotMovementHandler : public UBotHandler
{
public:
	unsigned char                                      UnknownData_CMLR[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotMovementHandler");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotMoodHandler
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UBotMoodHandler : public UBotHandler
{
public:
	float                                              CombatIntensity;                                           // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EBotAIMood                                         Mood;                                                      // 0x002C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NTH7[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotMoodHandler");
		return ptr;
	}



	EBotAIMood GetMood();
	float GetCombatIntensity();
	void AddCombatIntensity(float Amount);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotMemoryHandler
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UBotMemoryHandler : public UBotHandler
{
public:
	TArray<class UBotKnownTargetMemory*>               KnownTargets;                                              // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BMYE[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotMemoryHandler");
		return ptr;
	}



	class UBotKnownTargetMemory* GetTargetMemoryForPawn(class APawn* Pawn);
	void GetKnownTargets(EBotKnownQuery QueryType, TArray<class UBotKnownTargetMemory*>* KnownTargetArray, bool bVisibleOnly, float MaxTimeSinceLastKnown, bool bIgnoreAwareness);
	int GetKnownCount(EBotKnownQuery QueryType, bool bVisibleOnly, float MaxTimeSinceLastKnown);
	void AddOrUpdateVisiblePawn(class APawn* SeenPawn);
	void AddOrUpdateSound(class APawn* HeardPawn, const struct FVector& Location, float Distance, bool bHasLOS);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotKnownTargetMemory
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UBotKnownTargetMemory : public UObject
{
public:
	TWeakObjectPtr<class APawn>                        TargetPawn;                                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ETQ7[0x60];                                    // 0x0030(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotKnownTargetMemory");
		return ptr;
	}



	bool WasVisibleRecently();
	void SetThreatRanking(float NewThreatRanking);
	void MarkTargetAsDead();
	void MarkStartedEngaging();
	void MarkFinishedEngaging();
	void MarkBloatBoxUpdated(const struct FVector2D& NewBloatBox);
	void MakeAwareOfTargetAtLocation(const struct FVector& Location);
	void MakeAwareOfTarget();
	bool IsValidCombatTarget();
	bool IsUnreachable();
	bool IsTargetAlive();
	bool IsLookingAtMe();
	bool IsEngaging();
	bool IsBlindingMe();
	bool IsAwareOfTarget();
	bool HasLOS();
	bool HasBeenInMeleeFor(float Duration);
	float GetTotalTimeVisible();
	float GetTimeSinceStartedEngaging();
	float GetTimeSinceLastSeen();
	float GetTimeSinceLastKnown();
	float GetTimeSinceLastBloatBoxUpdate();
	float GetThreatRanking();
	class APawn* GetTargetPawn();
	struct FVector2D GetPreviousBloatBox();
	struct FVector GetLastSeenPosition();
	struct FVector GetLastKnownVelocity();
	struct FVector GetLastKnownPosition();
	struct FVector2D GetCurrentBloatBox();
	bool EverHadLOS();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotInteractComponent
// 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
class UBotInteractComponent : public UActorComponent
{
public:
	struct FScriptDelegate                             CanInteract;                                               // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ShouldFinist;                                              // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpdate;                                                  // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnStart;                                                   // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFinish;                                                  // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                              Timeout;                                                   // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBotBehaviorPriority                               BehaviorPriority;                                          // 0x0104(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0CBQ[0x3];                                     // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumDistance;                                           // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J84P[0x4];                                     // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AINSAISoldierController*                     InteractingBot;                                            // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WXAD[0x8];                                     // 0x0118(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotInteractComponent");
		return ptr;
	}



	void SetEnabled(bool bNewEnabled);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotCombatHandler
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
class UBotCombatHandler : public UBotHandler
{
public:
	unsigned char                                      UnknownData_338X[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBotKnownTargetMemory*                       CurrentTarget_Visible;                                     // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBotKnownTargetMemory*                       CurrentTarget_Hidden;                                      // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_70S3[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCoverComponent*                             Cover;                                                     // 0x0058(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2OBH[0x18];                                    // 0x0060(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVehicleSeatComponent*                       TargetSeat;                                                // 0x0078(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9FJE[0x8];                                     // 0x0080(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotCombatHandler");
		return ptr;
	}



	bool SwitchWeapon(EItemSlot Slot);
	bool ShouldWearGasMask();
	bool ShouldSpeakReactions();
	void SetTargetSeat(class UVehicleSeatComponent* Seat);
	void SetSuppressing(bool bState);
	void SetSpeakReactions(bool bShouldSpeak);
	void SetLocationToTakeCoverFrom(const struct FVector& Location);
	void SetDesiredFiremode(EFirearmFiremode NewFiremode);
	void SetAttackState(bool bShouldFire);
	void SelectBestWeapon();
	bool Reload();
	bool IsWeaponEmpty(EItemSlot Slot);
	bool IsValidSeat(class UVehicleSeatComponent* Seat);
	bool IsThreatAimingTowardMe(class AINSSoldier* Threat);
	bool IsSwitchingWeapon();
	bool IsSuppressing();
	float GetTurnSpeed(const struct FRotator& OldRotaton, const struct FRotator& NewRotation);
	class UVehicleSeatComponent* GetTargetSeat();
	float GetMorale();
	struct FVector GetLocationToTakeCoverFrom();
	float GetGrenadeThrowbackRadius();
	struct FFirearmAIConfig GetFirearmCategoryConfig(class AItemFirearm* Firearm);
	class UBotKnownTargetMemory* GetCurrentPriorityTarget(bool bVisibleOnly);
	class UCoverComponent* GetCover();
	float GetChanceToSpotTarget(class UBotKnownTargetMemory* Target);
	float GetAttackDelay();
	struct FVector2D GetAimOffsetForGrenade(const struct FVector& TargetLocation);
	struct FVector GetAimLocationOnTarget(class UBotKnownTargetMemory* MyCurrentTarget);
	void ClearPriorityTargets();
	void AddMorale(float Amount);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotSkillConfig
// 0x01E0 (FullSize[0x0210] - InheritedSize[0x0030])
class UBotSkillConfig : public UDataAsset
{
public:
	float                                              HearAwareDistanceRadial;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearAwareDistanceGunshot;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearAwareDistanceSprintFootstep;                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearAwareDistanceFootsteps;                                // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearAwareDistanceBreach;                                   // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearAwareDistanceDoor;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearAwareDistanceRigExplosive;                             // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearDistanceFootstepsSprinting;                            // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearDistanceFootstepsRunning;                              // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRangeAlert;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRangeIdle;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRangeWithinSmokeGrenade;                              // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRangeWithinSmokeGrenadeEye;                           // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRangeSmokeEyeFrac;                                    // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSpeedMaxAngleThreshold;                                // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSpeedMinAngleThreshold;                                // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSpeedMaxAngle;                                         // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSpeedMinAngle;                                         // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccuracyMultiplier;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionAccuracyMultiplier;                             // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackDelayClose;                                          // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackDelayDistant;                                        // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackDelayMelee;                                          // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceRange;                                             // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CloseRange;                                                // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceAtDistanceStanding;                                  // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceAtCloseRangeStanding;                                // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceAtDistanceCrouched;                                  // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceAtCloseRangeCrouched;                                // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceAtDistanceProne;                                     // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceAtCloseRangeProne;                                   // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceSprintMultiplier;                                    // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceMovingMultiplier;                                    // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NJT0[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<EFirearmCategory, struct FFirearmAIConfig>    WeaponCategoryConfigs;                                     // 0x00B8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFirearmAIConfig                            DefaultCategoryConfig;                                     // 0x0108(0x0028) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      ValidBehaviors[0x50];                                      // 0x0130(0x0050) UNKNOWN PROPERTY: SetProperty
	float                                              DoorBreachAwareDistance;                                   // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FragGrenadeMinDetonateTime;                                // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyGrenadeUnreachable;                                   // 0x0188(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanGrenadeWithLOS;                                        // 0x0189(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VCFU[0x2];                                     // 0x018A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GrenadeMinimumDistance;                                    // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GrenadeInaccuracyMaxDistance;                              // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SquadGrenadeCooldown;                                      // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   GrenadeInaccuracyMin;                                      // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   GrenadeInaccuracyMax;                                      // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RocketMinimumDistance;                                     // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RocketSquadCooldown;                                       // 0x01AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RocketMinimumClusterSize;                                  // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZeroTimeMultiplierEasy;                                    // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZeroTimeMultiplierHard;                                    // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloatBoxMultiplierEasy;                                    // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloatBoxMultiplierHard;                                    // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloatBoxMultiplierDistance;                                // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloatBoxMultiplierMaxDistance;                             // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloatBoxMultiplierMinDistance;                             // 0x01CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotIgnoresDamage;                                         // 0x01D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotHasInfiniteAmmo;                                       // 0x01D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBotUsesVehicles;                                          // 0x01D2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QBT4[0x1];                                     // 0x01D3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MemoryMaxAge;                                              // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverSuppressionToCowerCombat;                             // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverSuppressionToCower;                                   // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverSuppressionToRecover;                                 // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverCowerMinTime;                                         // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AmbushBonusDistance;                                       // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AmbushReactionTimeMultiplier;                              // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AmbushAccuracyMultiplier;                                  // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AmbushTurnSpeedMultiplier;                                 // 0x01F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoraleRestoreTime;                                         // 0x01F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoraleLostOnHeadShot;                                      // 0x01FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoraleLostOnDeath;                                         // 0x0200(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoraleLostOnGruesomeDeath;                                 // 0x0204(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoraleToRetreat;                                           // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoraleToRecover;                                           // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotSkillConfig");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UBotBehavior : public UObject
{
public:
	struct FName                                       BehaviorName;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBotBehaviorPriority                               BehaviorPriority;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2ULU[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior");
		return ptr;
	}



	float GetTimeSinceBehaviorStarted();
	EBotBehaviorPriority GetPriority();
	struct FName GetBehaviorName();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Wander
// 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
class UBotBehavior_Wander : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_KWV5[0x18];                                    // 0x0038(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     ActiveWanderArea;                                          // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                             WanderAreas;                                               // 0x0058(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                             VisitedWanderAreas;                                        // 0x0068(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Wander");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Vehicle
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UBotBehavior_Vehicle : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_V2NT[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AObjectiveBase>               TargetObjective;                                           // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Vehicle");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_UseSmartActor
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UBotBehavior_UseSmartActor : public UBotBehavior
{
public:
	class ASmartActor*                                 SmartActor;                                                // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_UseSmartActor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ThrowSmokeGrenade
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_ThrowSmokeGrenade : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_TYR3[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ThrowSmokeGrenade");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ThrowGrenadeAtWindows
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class UBotBehavior_ThrowGrenadeAtWindows : public UBotBehavior
{
public:
	struct FBotGrenadeTarget                           WindowThrowTarget;                                         // 0x0038(0x005C) (NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1TM2[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBotGrenadeCheckResult                      ThrowResult;                                               // 0x0098(0x0020) (NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AItemGrenade>                 GrenadeToThrow;                                            // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LAAV[0x18];                                    // 0x00C0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ThrowGrenadeAtWindows");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ThrowGrenade
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UBotBehavior_ThrowGrenade : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_PN81[0x18];                                    // 0x0038(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ThrowGrenade");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ThrowBackGrenade
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_ThrowBackGrenade : public UBotBehavior
{
public:
	class AProjectileGrenade*                          TrackedGrenade;                                            // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RGRW[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ThrowBackGrenade");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_TacticalMoveToObjective
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UBotBehavior_TacticalMoveToObjective : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_J1SZ[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_TacticalMoveToObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_SuppressTarget
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_SuppressTarget : public UBotBehavior
{
public:
	class UBotKnownTargetMemory*                       SuppressionTarget;                                         // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W65Y[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_SuppressTarget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_SuicideBomb
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_SuicideBomb : public UBotBehavior
{
public:
	class UBotSuicideBomberConfig*                     BomberConfig;                                              // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OEOM[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_SuicideBomb");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotSuicideBomberConfig
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UBotSuicideBomberConfig : public UDataAsset
{
public:
	class UClass*                                      ExplosionProtectile;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEventPreDetonate;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetonationTime;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetonationRadius;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotSuicideBomberConfig");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_SeekAndDestroy
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_SeekAndDestroy : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_SeekAndDestroy");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Retreat
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UBotBehavior_Retreat : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_LOJG[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Retreat");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_RequestFireSupport
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_RequestFireSupport : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_RequestFireSupport");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ReloadEquippedWeapon
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_ReloadEquippedWeapon : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ReloadEquippedWeapon");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ReloadBackupWeapon
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_ReloadBackupWeapon : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ReloadBackupWeapon");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Pursue
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UBotBehavior_Pursue : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_AHZH[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Pursue");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_OutpostPrepare
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_OutpostPrepare : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_OutpostPrepare");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_MoveToSeat
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_MoveToSeat : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_MoveToSeat");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_MoveToObjective
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UBotBehavior_MoveToObjective : public UBotBehavior
{
public:
	class AObjectiveBase*                              DesiredObjective;                                          // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleSeatComponent*                       DesiredVehicleSeat;                                        // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X4Y8[0x10];                                    // 0x0048(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_MoveToObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Investigate
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UBotBehavior_Investigate : public UBotBehavior
{
public:
	class UBotInvestigation*                           Investigation;                                             // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NPOA[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Investigate");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotFirearmBehavior
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotFirearmBehavior : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotFirearmBehavior");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_HipFireWithPrimary
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_HipFireWithPrimary : public UBotFirearmBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_HipFireWithPrimary");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_FollowSquadLeader
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UBotBehavior_FollowSquadLeader : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_9K74[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_FollowSquadLeader");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_FlushTarget
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_FlushTarget : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_MD2S[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_FlushTarget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_FleeGrenade
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_FleeGrenade : public UBotBehavior
{
public:
	class AProjectileGrenade*                          GrenadeToFlee;                                             // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_64DO[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_FleeGrenade");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_FireRocket
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UBotBehavior_FireRocket : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_26T2[0x18];                                    // 0x0038(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_FireRocket");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Example_Wander
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_Example_Wander : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Example_Wander");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Example_ShootAtTarget
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_Example_ShootAtTarget : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Example_ShootAtTarget");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_DestroyObjective
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_DestroyObjective : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_7QXL[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_DestroyObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ClearObjective
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UBotBehavior_ClearObjective : public UBotBehavior
{
public:
	class UBotInvestigation*                           Investigation;                                             // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PYGI[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ClearObjective");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Blueprint
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_Blueprint : public UBotBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Blueprint");
		return ptr;
	}



	EBotBehaviorReturnResult BlueprintUpdate(class AINSAISoldierController* Me);
	void BlueprintReset();
	EBotBehaviorReturnResult BlueprintOnStart(class AINSAISoldierController* Me);
	void BlueprintOnOtherSoldierKilled(class AINSSoldier* Soldier, float DistanceToVictim, float Damage, class AController* Killer, class AActor* DamageCauser);
	void BlueprintOnMoveCompleted(class AINSAISoldierController* Me, const struct FAIRequestID& RequestID, bool bSuccess, bool bInterrupted);
	void BlueprintOnHeardEnemySound(class AINSAISoldierController* Me, class AActor* Emitter, const struct FVector& Position, bool bHasLOS);
	void BlueprintOnFinish(class AINSAISoldierController* Me);
	bool BlueprintCanEnter(class AINSAISoldierController* Me);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Blink
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_Blink : public UBotBehavior
{
public:
	class UBotBlinkConfig*                             BlinkConfig;                                               // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4S0R[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Blink");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBlinkConfig
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UBotBlinkConfig : public UDataAsset
{
public:
	class UAkAudioEvent*                               AkEventBlink;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CooldownTime;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlinkDistance;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlinkDistanceThreshold;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N1HT[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             VanishParticle;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             AppearParticle;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                                   PlacementQuery;                                            // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBlinkConfig");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_AttackRanged
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UBotBehavior_AttackRanged : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_6AU0[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_AttackRanged");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_AttackMelee
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBotBehavior_AttackMelee : public UBotBehavior
{
public:
	unsigned char                                      UnknownData_E38H[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_AttackMelee");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_Ambush
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UBotBehavior_Ambush : public UBotBehavior
{
public:
	class AObjectiveBase*                              AmbushObjective;                                           // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H3RI[0x10];                                    // 0x0040(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_Ambush");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ADSWithSecondary
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_ADSWithSecondary : public UBotFirearmBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ADSWithSecondary");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehavior_ADSWithPrimary
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UBotBehavior_ADSWithPrimary : public UBotFirearmBehavior
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehavior_ADSWithPrimary");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BotBehaviorHandler
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UBotBehaviorHandler : public UBotHandler
{
public:
	TArray<class UClass*>                              ValidBehaviors;                                            // 0x0028(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBotBehavior*>                        Behaviors;                                                 // 0x0038(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBotBehavior*                                ActiveBehavior;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BotBehaviorHandler");
		return ptr;
	}



	TArray<class UBotBehavior*> GetBehaviors();
	class UBotBehavior* GetActiveBehavior();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BlueprintUsableActor
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class ABlueprintUsableActor : public AActor
{
public:
	unsigned char                                      UnknownData_599T[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	EUsablePriority                                    UsePriority;                                               // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUseHoldBehavior                                   UseHoldBehavior;                                           // 0x0229(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6JZO[0x2];                                     // 0x022A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UseTime;                                                   // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasTapAndHoldBehavior;                                    // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanProneWhileUse;                                         // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasUseYawLimit;                                           // 0x0232(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XNDB[0x1];                                     // 0x0233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              YawLimitWhileUse;                                          // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       UseMessage;                                                // 0x0238(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  UseImage;                                                  // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDynamicUseImage;                                       // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUseItem                                           UseItem;                                                   // 0x0259(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasUseTimeout;                                            // 0x025A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasSubUseAction;                                          // 0x025B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SubUseInputAction;                                         // 0x025C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UXCZ[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               SubUseInputActions;                                        // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       SubUseMessage;                                             // 0x0278(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SubUseImage;                                               // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDynamicSubUseImage;                                    // 0x0298(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasSubUseTimeout;                                         // 0x0299(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I8EZ[0x6];                                     // 0x029A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BlueprintUsableActor");
		return ptr;
	}



	EUseResponse EventTryUse(class AINSSoldier* Pawn, const struct FHitResult& HitResult);
	EUseResponse EventOnUseKeyReleased(class AINSSoldier* Pawn, float ElapsedTime);
	void EventOnUseComplete(class AINSSoldier* Pawn);
	void EventOnUseCancelled(class AINSSoldier* Pawn);
	float EventGetUseTimeoutFraction(class AINSSoldier* Pawn);
	class UTexture2D* EventGetUseImage(class AINSPlayerController* Controller, bool bInProgress, const struct FHitResult& UseHitResult, struct FText* OutAdditonalText);
	float EventGetSubUseTimeoutFraction(class AINSSoldier* Pawn);
	class UTexture2D* EventGetSubUseImage(class AINSPlayerController* Controller, bool bInProgress, const struct FHitResult& UseHitResult, struct FText* OutAdditonalText);
	struct FVector EventGetDynamicHintLocation(class AINSSoldier* Pawn, const struct FHitResult& Hit);
	bool EventCanUse(class AINSSoldier* User);
	bool EventCanContinueUse(class AINSSoldier* User);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.BloodSplatterData
// 0x0130 (FullSize[0x0160] - InheritedSize[0x0030])
class UBloodSplatterData : public UDataAsset
{
public:
	struct FBloodSplatter                              BloodPoolMaterials;                                        // 0x0030(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBloodSplatter                              WallBloodSplatterMaterials;                                // 0x0060(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBloodSplatter                              BloodLeakMaterials;                                        // 0x0090(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBloodSplatter                              GroundBloodSplatterMaterials;                              // 0x00C0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBloodSplatter                              HeadshotBloodSplatterMaterials;                            // 0x00F0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBloodSplatter                              VaporizationBloodSplatterMaterials;                        // 0x0120(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventKillBloodSplatter;                               // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeakingProbability;                                        // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KP08[0x4];                                     // 0x015C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.BloodSplatterData");
		return ptr;
	}



	class UMaterialInterface* GetMaterialFromBloodSplatter(const struct FBloodSplatter& BloodSplatter, struct FVector* MinSize, struct FVector* MaxSize);
	void DetermineSplatterContext(struct FBloodSplatterContext* SplatterContext, class UObject* WorldContextObject, const struct FVector& HitPosition, const struct FVector& HitDirection, bool bHeadshot, bool bLethal, class AActor* IgnoredActor);
	void CreateBloodSplatter(class UObject* WorldContextObject, const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, TEnumAsByte<EPhysicalSurface> PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot);
	class UDecalComponent* CreateBloodPool(class UObject* WorldContextObject, const struct FVector& Position, class AActor* IgnoredActor);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AudioBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAudioBlueprintLibrary : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AudioBlueprintLibrary");
		return ptr;
	}



	void PlayUISound(EUISound Sound);
	void PlayUILoadoutSound(EUILoadoutSound Sound);
	void PlayUIHUDSound(EUIHUDSound Sound);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ArtillerySite
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AArtillerySite : public AActor
{
public:
	unsigned char                                      UnknownData_BFJ7[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TeamId;                                                    // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GEQA[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              ArtilleryWhitelist;                                        // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ArtillerySite");
		return ptr;
	}



	bool IsFireSupportWhitelisted(class UClass* FireSupportClass);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotifyWeapon
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotifyWeapon : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotifyWeapon");
		return ptr;
	}



	class AItemWeapon* GetOuterWeapon(class USkeletalMeshComponent* ContextMeshComp);
	class AINSSoldier* GetOuterSoldier(class USkeletalMeshComponent* ContextMeshComp);
	class AItemFirearm* GetOuterFirearm(class USkeletalMeshComponent* ContextMeshComp);
	class AItemEquipable* GetOuterEquipable(class USkeletalMeshComponent* ContextMeshComp);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_WeaponSound
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UAnimNotify_WeaponSound : public UAnimNotifyWeapon
{
public:
	class UAkAudioEvent*                               Event_FP;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               Event_TP;                                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_WeaponSound");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_WeaponReady
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_WeaponReady : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_WeaponReady");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_StoreAmmo
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_StoreAmmo : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_StoreAmmo");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_SpawnEjectedMag
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UAnimNotify_SpawnEjectedMag : public UAnimNotifyWeapon
{
public:
	bool                                               bIgnoreSpeedReloadState;                                   // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VT8X[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SpeedReloadEjectVelocity;                                  // 0x003C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpeedReloadEjectRelativeLocation;                          // 0x0048(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpeedReloadHideMagazineMesh;                              // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UWTK[0x3];                                     // 0x0055(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_SpawnEjectedMag");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_SpawnBrass
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_SpawnBrass : public UAnimNotifyWeapon
{
public:
	bool                                               bShowBrassOnNotifyMesh;                                    // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F52J[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_SpawnBrass");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_ShowAmmoInfo
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_ShowAmmoInfo : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_ShowAmmoInfo");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_RoundIn
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_RoundIn : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_RoundIn");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_MagOut
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_MagOut : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_MagOut");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_MagIn
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_MagIn : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_MagIn");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_LastRoundEject
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_LastRoundEject : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_LastRoundEject");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_KickDoor
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_KickDoor : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_KickDoor");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_GrenadeSpoonRelease
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_GrenadeSpoonRelease : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_GrenadeSpoonRelease");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_GrenadeRelease
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_GrenadeRelease : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_GrenadeRelease");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_GrenadePullPin
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_GrenadePullPin : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_GrenadePullPin");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_Footstep
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_Footstep : public UAnimNotify
{
public:
	EFootstepFoot                                      Foot;                                                      // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootstepEffectType                                FootstepType;                                              // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CDRI[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_Footstep");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_FireProjectile
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_FireProjectile : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_FireProjectile");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_DisallowCancel
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_DisallowCancel : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_DisallowCancel");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_CheckPendingAmmo
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_CheckPendingAmmo : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_CheckPendingAmmo");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_ChangeBipodState
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_ChangeBipodState : public UAnimNotifyWeapon
{
public:
	EBipodState                                        DesiredState;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F2MH[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_ChangeBipodState");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_ChangeBipodLegsState
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_ChangeBipodLegsState : public UAnimNotifyWeapon
{
public:
	EBipodState                                        DesiredState;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PE52[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_ChangeBipodLegsState");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_ChamberRound
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_ChamberRound : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_ChamberRound");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_BoltCycled
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_BoltCycled : public UAnimNotifyWeapon
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_BoltCycled");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimNotify_BipodSurfaceReaction
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UAnimNotify_BipodSurfaceReaction : public UAnimNotifyWeapon
{
public:
	float                                              SurfaceTraceLength;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZIH3[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USurfaceReaction*                            SurfaceReaction;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                           BloodMaterial;                                             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                           WaterMaterial;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimNotify_BipodSurfaceReaction");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnimationStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAnimationStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnimationStatics");
		return ptr;
	}



	float GetWeaponReadyTimeFromSequence(class UAnimSequenceBase* Sequence);
	float GetWeaponReadyTimeFromMontageSection(class UAnimMontage* Montage, int SectionIndex);
	class UAnimSequence* GetRandomSequenceStrengthPair(struct FMultiAnimationStrengthPair* MultiAnimPair, int* OutChosenIndex);
	class UAnimSequence* GetRandomSequence(struct FAnimSequenceRandom* AnimSequenceRandom, int* OutChosenIndex, bool bNoRepeats);
	int GetLODLevelForMesh(class USkeletalMeshComponent* SkelMeshComp);
	void GetAnimBoneTransformFromSkeletalMesh(class UAnimSequence* Sequence, class USkeletalMesh* SkelMesh, const struct FName& BoneName, float Time, struct FTransform* OutTransform, bool ReturnInParentBoneSpace);
	void GetAnimBoneTransform(class UAnimSequence* Sequence, class USkeletalMeshComponent* SkelMeshComp, const struct FName& BoneName, float Time, struct FTransform* OutTransform, bool ReturnInParentBoneSpace);
	class UAnimNotify* FindAnimNotifyTimeMontageByName(class UAnimMontage* Montage, const struct FName& NotifyName, bool bScaleByPlayRate, float* OutTime, int SectionIndex);
	class UAnimNotify* FindAnimNotifyTimeMontageByClass(class UAnimMontage* Montage, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime, int SectionIndex);
	class UAnimNotify* FindAnimNotifyTimeMontage(class UAnimMontage* Montage, const struct FName& NotifyName, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime, int SectionIndex);
	class UAnimNotify* FindAnimNotifyTimeByName(class UAnimSequenceBase* Sequence, const struct FName& NotifyName, bool bScaleByPlayRate, float* OutTime);
	class UAnimNotify* FindAnimNotifyTimeByClass(class UAnimSequenceBase* Sequence, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime);
	class UAnimNotify* FindAnimNotifyTime(class UAnimSequenceBase* Sequence, const struct FName& NotifyName, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AnalyticsSubsystem
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UAnalyticsSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_A9JB[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AnalyticsSubsystem");
		return ptr;
	}



	void RecordAnnouncementPopupDismissed(bool bClickedLink, float TimeOnScreen);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AmmoType
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UAmmoType : public UObject
{
public:
	float                                              RoundWeight;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoundVolume;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DamageTypeClass;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       PrintName;                                                 // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bIsModifiedAmmo;                                           // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CGP9[0x7];                                     // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       AmmoModifierPrintName;                                     // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UClass*                                      BrassEjectionClass;                                        // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AmmoType");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AmmoTypeBallistic
// 0x0250 (FullSize[0x02C8] - InheritedSize[0x0078])
class UAmmoTypeBallistic : public UAmmoType
{
public:
	struct FRuntimeFloatCurve                          DamageCurve;                                               // 0x0078(0x0088) (Edit, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FBoneDamageMod>          BoneDamageModifiers;                                       // 0x0100(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            SurfaceReaction;                                           // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          PenetrationPowerCurve;                                     // 0x0158(0x0088) (Edit, NativeAccessSpecifierPublic)
	float                                              PenetrationPowerModifier;                                  // 0x01E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionIncrement;                                      // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuppressionRadius;                                         // 0x01E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PelletCount;                                               // 0x01EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C9AX[0x3];                                     // 0x01ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpreadModifier;                                            // 0x01F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XP14[0x4];                                     // 0x01F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          VelocityDecelerationCurve;                                 // 0x01F8(0x0088) (Edit, NativeAccessSpecifierPublic)
	float                                              BulletVelocityDeceleration;                                // 0x0280(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDecelerationVelocitySq;                                 // 0x0284(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDecelerationVelocitySq;                                 // 0x0288(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gravity;                                                   // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxProjectileDistance;                                     // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaxSurfacePenetrations;                                    // 0x0294(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UKEW[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBulletPenetrationSettings*                  BulletPenetrationOverride;                                 // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollImpulseModifier;                                    // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathRagdollImpulse;                                       // 0x02A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhizzDistanceSq;                                           // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhizzSupersonicDistanceSq;                                 // 0x02AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             TracerParticle;                                            // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TracerFrequency;                                           // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LowAmmoTracerThreshold;                                    // 0x02BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             PenetrationParticle;                                       // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AmmoTypeBallistic");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AmmoContainer
// 0x0148 (FullSize[0x0170] - InheritedSize[0x0028])
class UAmmoContainer : public UObject
{
public:
	TArray<class UClass*>                              AcceptedAmmo;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Capacity;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxCarry;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DefaultAmmo;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2QV[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               Mesh1P;                                                    // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               Mesh3P;                                                    // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurfaceReaction*                            MagazineSurfaceReaction;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DroppedStaticMesh;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ShotEjectionClass;                                         // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShotEjectionEffectSocket;                                  // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAmmoContainerType                                 ContainerType;                                             // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2CVH[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      WeaponIndexMaterialOverride1P[0x50];                       // 0x0080(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      WeaponIndexMaterialOverride3P[0x50];                       // 0x00D0(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      WeaponIndexMaterialOverrideDropped[0x50];                  // 0x0120(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AmmoContainer");
		return ptr;
	}



	bool UsesMagazineReloads();
	bool IsAmmoSupported(class UClass* AmmoType);
	float GetFullWeight();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AmmoContainerMagazine
// 0x0008 (FullSize[0x0178] - InheritedSize[0x0170])
class UAmmoContainerMagazine : public UAmmoContainer
{
public:
	float                                              Weight;                                                    // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTranslucentMagazine;                                      // 0x0174(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FGC1[0x3];                                     // 0x0175(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AmmoContainerMagazine");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AlignedWrapBoxSlot
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UAlignedWrapBoxSlot : public UPanelSlot
{
public:
	struct FMargin                                     Padding;                                                   // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bFillEmptySpace;                                           // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2Q2D[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FillSpanWhenLessThan;                                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                       // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                         // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JOPC[0xE];                                     // 0x0052(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AlignedWrapBoxSlot");
		return ptr;
	}



	void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment);
	void SetFillSpanWhenLessThan(float InFillSpanWhenLessThan);
	void SetFillEmptySpace(bool InbFillEmptySpace);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AlignedWrapBox
// 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
class UAlignedWrapBox : public UPanelWidget
{
public:
	struct FVector2D                                   InnerSlotPadding;                                          // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                       // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                         // 0x0129(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LBV2[0x16];                                    // 0x012A(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AlignedWrapBox");
		return ptr;
	}



	void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment);
	void SetInnerSlotPadding(const struct FVector2D& InPadding);
	void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment);
	class UAlignedWrapBoxSlot* AddChildWrapBox(class UWidget* Content);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AlarmComponent
// 0x0020 (FullSize[0x0210] - InheritedSize[0x01F0])
class UAlarmComponent : public USceneComponent
{
public:
	class UINSAudioComponent*                          AudioComponent;                                            // 0x01F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AlarmStartEvent;                                           // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AlarmEndEvent;                                             // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I932[0x8];                                     // 0x0208(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AlarmComponent");
		return ptr;
	}



	void StartAlarm(float Duration);
	void MulticastStartAlarm(float Duration);
	void EndAlarm();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AISense_INSHearing
// 0x0068 (FullSize[0x00E8] - InheritedSize[0x0080])
class UAISense_INSHearing : public UAISense
{
public:
	TArray<struct FAIINSNoiseEvent>                    NoiseEvents;                                               // 0x0080(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedOfSoundSq;                                            // 0x0090(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SAUO[0x54];                                    // 0x0094(0x0054) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AISense_INSHearing");
		return ptr;
	}



	void ReportNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float Loudness, class AActor* Instigator, float MaxRange, const struct FName& Tag);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AISenseEvent_INSHearing
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UAISenseEvent_INSHearing : public UAISenseEvent
{
public:
	struct FAIINSNoiseEvent                            Event;                                                     // 0x0028(0x0030) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AISenseEvent_INSHearing");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AISenseConfig_INSHearing
// 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
class UAISenseConfig_INSHearing : public UAISenseConfig
{
public:
	class UBotSkillConfig*                             BotConfig;                                                 // 0x0048(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearingRange;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoSHearingRange;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bUseLoSHearing : 1;                                        // 0x0060(0x0001) BIT_FIELD  (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C89G[0x3];                                     // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAISenseAffiliationFilter                   DetectionByAffiliation;                                    // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AISenseConfig_INSHearing");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AircraftBase
// 0x00A8 (FullSize[0x02C8] - InheritedSize[0x0220])
class AAircraftBase : public AActor
{
public:
	unsigned char                                      UnknownData_HB4H[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             SceneComponent;                                            // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAircraftMovementComponent*                  MovementComponent;                                         // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UINSAudioComponent*                          AudioComponent;                                            // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventSpawn;                                           // 0x0250(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlyOverTime;                                               // 0x0258(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H9OW[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFireSupportBase*                            AssociatedFireSupport;                                     // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPayloadDroppedDelegate;                                  // 0x0268(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAllPayloadsDroppedDelegate;                              // 0x0278(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I3ZN[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAircraftPayload>                    Payloads;                                                  // 0x0290(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize10                       GroundTargetLocation;                                      // 0x02A0(0x000C) (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IIEO[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       AircraftName;                                              // 0x02B0(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AircraftBase");
		return ptr;
	}



	void SetGroundTarget(const struct FVector& InGroundTarget, float InMaxDiveAltitude);
	void BroadcastPayloadDrop(const struct FAircraftPayload& Payload);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AircraftStrafing
// 0x0058 (FullSize[0x0320] - InheritedSize[0x02C8])
class AAircraftStrafing : public AAircraftBase
{
public:
	struct FScriptMulticastDelegate                    OnStrafeBeginDelegate;                                     // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStrafeFinishDelegate;                                    // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	bool                                               bUseRealisticStrafing;                                     // 0x02E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z40Q[0x3];                                     // 0x02E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StrafeDistance;                                            // 0x02EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeMinFiringDistance;                                   // 0x02F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeDuration;                                            // 0x02F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeMinAngle;                                            // 0x02F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StrafeDirectionWeighting;                                  // 0x02FC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UQ6U[0x8];                                     // 0x0304(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastStrafeAttackLocation;                                  // 0x030C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFinishedStrafing;                                         // 0x0318(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QJQE[0x7];                                     // 0x0319(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AircraftStrafing");
		return ptr;
	}



	void MulticastBeginStrafe();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AircraftMovementComponent
// 0x0030 (FullSize[0x0120] - InheritedSize[0x00F0])
class UAircraftMovementComponent : public UMovementComponent
{
public:
	struct FVector                                     InitialLocation;                                           // 0x00F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSpeed;                                                 // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CruisingSpeed;                                             // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Acceleration;                                              // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SubstepTimer;                                              // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetLocation;                                            // 0x010C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AU3Y[0x8];                                     // 0x0118(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AircraftMovementComponent");
		return ptr;
	}



	void SetTargetLocation(const struct FVector& InTarget);
	struct FVector LimitVelocity(const struct FVector& NewVelocity);
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AimAssistTargetComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UAimAssistTargetComponent : public UActorComponent
{
public:
	class UCapsuleComponent*                           TargetCapsule;                                             // 0x00B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G411[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AimAssistTargetComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AimAssistComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UAimAssistComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_OEOP[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AimAssistComponent");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AIHelicopterController
// 0x01D0 (FullSize[0x04F8] - InheritedSize[0x0328])
class AAIHelicopterController : public AAIController
{
public:
	unsigned char                                      UnknownData_OSWG[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlackboardComponent*                        BlackboardComponent;                                       // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DestinationLocation;                                       // 0x0338(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SpawnLocation;                                             // 0x0344(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ExtractionPoint;                                           // 0x0350(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                                  CollisionSphereTrace;                                      // 0x035C(0x0088) (IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FHitResult                                  DownwardTrace;                                             // 0x03E4(0x0088) (IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FHitResult                                  LastValidDownwardTrace;                                    // 0x046C(0x0088) (IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_89KF[0x4];                                     // 0x04F4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AIHelicopterController");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.ActiveObjectiveDisplay
// 0x0068 (FullSize[0x0298] - InheritedSize[0x0230])
class UActiveObjectiveDisplay : public UUserWidget
{
public:
	class UCanvasPanel*                                RootCanvas;                                                // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextObjectiveDescription;                                  // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextObjectiveName;                                         // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             ObjectiveTypeSwitcher;                                     // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveIcon*                              BP_ObjectiveIcon;                                          // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveIcon*                              BP_ObjectiveSecondaryIcon;                                 // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextObjectivePlayers;                                      // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AObjectiveBase*                              PlayerActiveObjective;                                     // 0x0268(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AINSPlayerState*                             ViewedPlayerState;                                         // 0x0270(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AINSSoldier*                                 ViewedSoldier;                                             // 0x0278(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      MinPlayersToCapture;                                       // 0x0280(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2S7N[0x3];                                     // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumCapturers;                                              // 0x0284(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_89BS[0x10];                                    // 0x0288(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.ActiveObjectiveDisplay");
		return ptr;
	}



	void UpdatePlayersOnObjective(bool bObjectiveChanged);
	void OnSetViewTarget(class AActor* NewViewTarget);
	void OnRoundReset();
	void OnRoundOver(const struct FPlayerRoundOverData& UIData);
	void OnPlayerObjectiveStateChanged();
	void OnOwnerChanged(class AObjectiveBase* Objective, unsigned char NewOwners);
	void OnObjectiveChanged(class AObjectiveBase* NewObjective);
	void OnNumCapturersChanged();
	void OnCapturingTeamChanged(class AObjectiveBase* Objective, unsigned char NewOwners);
	void OnActiveObjectiveChanged(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective);
	void OnActiveChanged(bool bNewActiveState, class AObjectiveBase* Objective);
	struct FText GetObjectiveDescription();
	void AfterRead();
	void BeforeDelete();

};

// Class Insurgency.AchievementDataAsset
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAchievementDataAsset : public UPrimaryDataAsset
{
public:
	TArray<class UClass*>                              AchievementClasses;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Insurgency.AchievementDataAsset");
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
